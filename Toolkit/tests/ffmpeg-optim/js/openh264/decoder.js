// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function read(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return xhr.response;
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;



function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 33554432;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var lastChar, end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;






// === Body ===

var ASM_CONSTS = [function($0, $1, $2, $3, $4, $5, $6) { { frame_callback($0, $1, $2, $3, $4, $5, $6); } }];

function _emscripten_asm_const_iiiiiiii(code, a0, a1, a2, a3, a4, a5, a6) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6);
}



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 35104;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([0,0,0,0,0,0,0,0,10,0,13,0,10,0,13,0,13,0,16,0,13,0,16,0,11,0,14,0,11,0,14,0,14,0,18,0,14,0,18,0,13,0,16,0,13,0,16,0,16,0,20,0,16,0,20,0,14,0,18,0,14,0,18,0,18,0,23,0,18,0,23,0,16,0,20,0,16,0,20,0,20,0,25,0,20,0,25,0,18,0,23,0,18,0,23,0,23,0,29,0,23,0,29,0,20,0,26,0,20,0,26,0,26,0,32,0,26,0,32,0,22,0,28,0,22,0,28,0,28,0,36,0,28,0,36,0,26,0,32,0,26,0,32,0,32,0,40,0,32,0,40,0,28,0,36,0,28,0,36,0,36,0,46,0,36,0,46,0,32,0,40,0,32,0,40,0,40,0,50,0,40,0,50,0,36,0,46,0,36,0,46,0,46,0,58,0,46,0,58,0,40,0,52,0,40,0,52,0,52,0,64,0,52,0,64,0,44,0,56,0,44,0,56,0,56,0,72,0,56,0,72,0,52,0,64,0,52,0,64,0,64,0,80,0,64,0,80,0,56,0,72,0,56,0,72,0,72,0,92,0,72,0,92,0,64,0,80,0,64,0,80,0,80,0,100,0,80,0,100,0,72,0,92,0,72,0,92,0,92,0,116,0,92,0,116,0,80,0,104,0,80,0,104,0,104,0,128,0,104,0,128,0,88,0,112,0,88,0,112,0,112,0,144,0,112,0,144,0,104,0,128,0,104,0,128,0,128,0,160,0,128,0,160,0,112,0,144,0,112,0,144,0,144,0,184,0,144,0,184,0,128,0,160,0,128,0,160,0,160,0,200,0,160,0,200,0,144,0,184,0,144,0,184,0,184,0,232,0,184,0,232,0,160,0,208,0,160,0,208,0,208,0,0,1,208,0,0,1,176,0,224,0,176,0,224,0,224,0,32,1,224,0,32,1,208,0,0,1,208,0,0,1,0,1,64,1,0,1,64,1,224,0,32,1,224,0,32,1,32,1,112,1,32,1,112,1,0,1,64,1,0,1,64,1,64,1,144,1,64,1,144,1,32,1,112,1,32,1,112,1,112,1,208,1,112,1,208,1,64,1,160,1,64,1,160,1,160,1,0,2,160,1,0,2,96,1,192,1,96,1,192,1,192,1,64,2,192,1,64,2,160,1,0,2,160,1,0,2,0,2,128,2,0,2,128,2,192,1,64,2,192,1,64,2,64,2,224,2,64,2,224,2,0,2,128,2,0,2,128,2,128,2,32,3,128,2,32,3,64,2,224,2,64,2,224,2,224,2,160,3,224,2,160,3,128,2,64,3,128,2,64,3,64,3,0,4,64,3,0,4,192,2,128,3,192,2,128,3,128,3,128,4,128,3,128,4,64,3,0,4,64,3,0,4,0,4,0,5,0,4,0,5,128,3,128,4,128,3,128,4,128,4,192,5,128,4,192,5,0,4,0,5,0,4,0,5,0,5,64,6,0,5,64,6,128,4,192,5,128,4,192,5,192,5,64,7,192,5,64,7,0,5,128,6,0,5,128,6,128,6,0,8,128,6,0,8,128,5,0,7,128,5,0,7,0,7,0,9,0,7,0,9,128,6,0,8,128,6,0,8,0,8,0,10,0,8,0,10,0,7,0,9,0,7,0,9,0,9,128,11,0,9,128,11,0,8,0,10,0,8,0,10,0,10,128,12,0,10,128,12,0,9,128,11,0,9,128,11,128,11,128,14,128,11,128,14,0,10,0,13,0,10,0,13,0,13,0,16,0,13,0,16,0,11,0,14,0,11,0,14,0,14,0,18,0,14,0,18,0,13,0,16,0,13,0,16,0,16,0,20,0,16,0,20,0,14,0,18,0,14,0,18,0,18,0,23,0,18,0,23,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,0,2,224,1,128,2,224,1,0,2,224,1,128,2,224,1,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,128,2,96,2,48,3,96,2,128,2,96,2,48,3,96,2,224,1,192,1,96,2,192,1,224,1,192,1,96,2,192,1,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,2,32,2,224,2,32,2,64,2,32,2,224,2,32,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,224,2,176,2,160,3,176,2,224,2,176,2,160,3,176,2,32,2,0,2,176,2,0,2,32,2,0,2,176,2,0,2,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,64,1,48,1,144,1,48,1,64,1,48,1,144,1,48,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,144,1,128,1,0,2,128,1,144,1,128,1,0,2,128,1,48,1,32,1,128,1,32,1,48,1,32,1,128,1,32,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,96,1,80,1,192,1,80,1,96,1,80,1,192,1,80,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,80,1,48,1,160,1,48,1,80,1,48,1,160,1,48,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,160,1,128,1,16,2,128,1,160,1,128,1,16,2,128,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,16,2,240,1,160,2,240,1,16,2,240,1,160,2,240,1,128,1,112,1,240,1,112,1,128,1,112,1,240,1,112,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,192,1,160,1,48,2,160,1,192,1,160,1,48,2,160,1,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,48,2,16,2,208,2,16,2,48,2,16,2,208,2,16,2,160,1,144,1,16,2,144,1,160,1,144,1,16,2,144,1,88,40,0,0,178,60,0,0,128,40,0,0,134,120,0,0,104,29,0,0,0,0,0,0,88,40,0,0,159,120,0,0,128,40,0,0,161,130,0,0,128,29,0,0,0,0,0,0,128,40,0,0,78,130,0,0,144,29,0,0,0,0,0,0,88,40,0,0,111,130,0,0,128,40,0,0,124,130,0,0,112,29,0,0,0,0,0,0,1,0,0,0,205,5,0,0,99,0,0,0,140,1,0,0,64,0,0,0,175,0,0,0,0,255,255,0,2,0,255,127,2,0,0,0,205,5,0,0,99,0,0,0,140,1,0,0,128,0,0,0,94,1,0,0,0,255,255,0,2,0,255,127,3,0,0,0,184,11,0,0,140,1,0,0,132,3,0,0,192,0,0,0,244,1,0,0,0,254,255,1,2,0,255,127,4,0,0,0,112,23,0,0,140,1,0,0,72,9,0,0,128,1,0,0,232,3,0,0,0,254,255,1,2,0,255,127,5,0,0,0,104,46,0,0,140,1,0,0,72,9,0,0,0,3,0,0,208,7,0,0,0,254,255,1,2,0,255,127,6,0,0,0,104,46,0,0,140,1,0,0,72,9,0,0,208,7,0,0,208,7,0,0,0,254,255,1,2,0,255,127,7,0,0,0,88,77,0,0,24,3,0,0,144,18,0,0,160,15,0,0,160,15,0,0,0,252,255,3,2,0,255,127,8,0,0,0,26,79,0,0,84,6,0,0,164,31,0,0,160,15,0,0,160,15,0,0,0,252,255,3,2,0,255,127,9,0,0,0,52,158,0,0,84,6,0,0,164,31,0,0,16,39,0,0,16,39,0,0,0,252,255,3,2,0,32,0,10,0,0,0,224,165,1,0,16,14,0,0,80,70,0,0,176,54,0,0,176,54,0,0,0,248,255,7,4,0,16,0,11,0,0,0,192,75,3,0,0,20,0,0,0,80,0,0,32,78,0,0,32,78,0,0,0,248,255,7,4,0,16,0,12,0,0,0,0,192,3,0,0,32,0,0,0,128,0,0,32,78,0,0,168,97,0,0,0,248,255,7,4,0,16,0,13,0,0,0,0,192,3,0,0,32,0,0,0,128,0,0,80,195,0,0,36,244,0,0,0,248,255,7,2,0,16,0,14,0,0,0,0,248,7,0,0,34,0,0,0,136,0,0,80,195,0,0,36,244,0,0,0,248,255,7,2,0,16,0,15,0,0,0,0,0,9,0,64,86,0,0,64,175,1,0,88,15,2,0,88,15,2,0,0,248,255,7,2,0,16,0,16,0,0,0,0,0,15,0,0,144,0,0,0,208,2,0,128,169,3,0,128,169,3,0,0,248,255,7,2,0,16,0,17,0,0,0,0,164,31,0,0,144,0,0,0,208,2,0,128,169,3,0,128,169,3,0,0,248,255,7,2,0,16,0,1,0,0,0,3,0,0,0,3,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,11,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,17,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,0,0,0,0,80,29,0,0,1,0,0,0,2,0,0,0,0,0,0,0,88,29,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,1,74,0,0,5,74,0,0,9,74,0,0,8,0,0,0,1,4,0,0,16,0,0,0,2,4,0,0,32,0,0,0,2,2,0,0,64,0,0,0,4,4,0,0,128,0,0,0,4,4,0,0,1,0,0,0,1,2,0,0,2,0,0,0,2,2,0,0,4,0,0,0,2,1,0,0,8,0,0,0,4,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,24,133,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,37,0,0,88,39,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,4,0,0,0,32,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,29,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,7,0,0,0,17,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,152,29,0,0,5,0,0,0,9,0,0,0,7,0,0,0,8,0,0,0,7,0,0,0,18,0,0,0,2,0,0,0,2,0,0,0,255,255,0,0,10,0,20,0,30,0,39,0,0,0,30,0,30,0,39,0,39,0,255,255,15,0,14,0,15,0,3,0,14,0,63,0,3,0,3,0,14,0,14,0,255,255,4,0,4,0,4,0,3,0,4,0,4,0,3,0,3,0,4,0,4,0,255,255,0,0,15,0,29,0,44,0,47,0,0,0,44,0,44,0,47,0,47,0,255,255,0,0,4,0,8,0,12,0,16,0,0,0,12,0,12,0,16,0,16,0,0,0,1,0,2,0,3,0,3,0,3,0,3,0,3,0,111,112,101,110,104,50,54,52,32,116,114,97,99,101,32,37,100,32,37,115,10,0,67,114,101,97,116,101,32,68,101,99,111,100,101,114,32,102,97,105,108,101,100,10,0,67,114,101,97,116,101,32,68,101,99,111,100,101,114,32,102,97,105,108,101,100,32,40,110,111,32,104,97,110,100,108,101,41,10,0,83,101,116,79,112,116,105,111,110,32,102,97,105,108,101,100,10,0,105,110,105,116,105,97,108,105,122,101,32,102,97,105,108,101,100,10,0,123,32,102,114,97,109,101,95,99,97,108,108,98,97,99,107,40,36,48,44,32,36,49,44,32,36,50,44,32,36,51,44,32,36,52,44,32,36,53,44,32,36,54,41,59,32,125,0,44,70,114,97,109,101,80,101,110,100,105,110,103,0,44,82,101,102,76,111,115,116,0,44,66,105,116,115,116,114,101,97,109,69,114,114,111,114,0,44,68,101,112,76,97,121,101,114,76,111,115,116,0,44,78,111,80,97,114,97,109,83,101,116,115,0,44,68,97,116,97,69,114,114,111,114,67,111,110,99,101,97,108,101,100,0,44,73,110,118,97,108,105,100,65,114,103,117,109,101,110,116,0,44,73,110,105,116,105,97,108,79,112,116,69,120,99,112,101,99,116,101,100,0,44,79,117,116,79,102,77,101,109,111,114,121,0,44,68,115,116,66,117,102,78,101,101,100,69,120,112,97,110,0,68,101,99,111,100,101,32,102,97,105,108,101,100,58,32,37,35,120,32,45,32,37,115,10,0,91,79,112,101,110,72,50,54,52,93,32,116,104,105,115,32,61,32,48,120,37,112,44,32,69,114,114,111,114,58,0,91,79,112,101,110,72,50,54,52,93,32,116,104,105,115,32,61,32,48,120,37,112,44,32,87,97,114,110,105,110,103,58,0,91,79,112,101,110,72,50,54,52,93,32,116,104,105,115,32,61,32,48,120,37,112,44,32,73,110,102,111,58,0,91,79,112,101,110,72,50,54,52,93,32,116,104,105,115,32,61,32,48,120,37,112,44,32,68,101,98,117,103,58,0,91,79,112,101,110,72,50,54,52,93,32,116,104,105,115,32,61,32,48,120,37,112,44,32,68,101,116,97,105,108,58,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,29,30,31,32,32,33,34,34,35,35,36,36,37,37,37,38,38,38,39,39,39,39,0,1,4,5,2,3,6,7,8,9,12,13,10,11,14,15,16,17,20,21,18,19,22,23,7,8,13,14,9,10,15,16,19,20,25,26,21,22,27,28,9,10,17,18,11,12,19,20,25,26,33,34,27,28,35,36,14,15,22,23,38,39,46,47,20,241,20,241,20,241,20,241,2,54,2,54,2,54,2,54,3,74,3,74,3,74,3,74,20,241,20,241,20,241,20,241,2,54,2,54,2,54,2,54,3,74,3,74,3,74,3,74,228,127,228,127,228,127,228,127,233,104,233,104,233,104,233,104,250,53,250,53,250,53,250,53,255,54,255,54,255,54,255,54,7,51,7,51,7,51,7,51,0,0,23,33,22,25,29,16,0,0,23,2,34,0,25,0,0,0,21,0,16,0,14,0,0,0,1,9,254,9,246,51,0,0,0,49,4,41,253,62,0,0,219,118,227,118,229,99,0,0,5,57,2,65,26,16,0,0,243,78,250,71,252,85,0,0,245,65,243,79,232,102,0,0,1,62,5,52,5,57,0,0,12,49,9,50,6,57,0,0,252,73,253,70,239,73,0,0,17,50,10,54,14,57,0,0,18,64,26,34,20,40,0,0,9,43,19,22,20,10,0,0,29,0,40,0,29,0,0,0,26,67,57,2,54,0,0,0,16,90,41,36,37,42,0,0,9,104,26,69,12,97,0,0,210,127,211,127,224,127,0,0,236,104,241,101,234,117,0,0,1,67,252,76,254,74,0,0,243,78,250,71,252,85,0,0,245,65,243,79,232,102,0,0,1,62,5,52,5,57,0,0,250,86,6,69,250,93,0,0,239,95,243,90,242,88,0,0,250,61,0,52,250,44,0,0,9,45,8,43,4,55,0,0,253,69,254,69,245,89,0,0,250,81,251,82,241,103,0,0,245,96,246,96,235,116,0,0,6,55,2,59,19,57,0,0,7,67,2,75,20,58,0,0,251,86,253,87,4,84,0,0,2,88,253,100,6,96,0,0,0,58,1,56,1,63,0,0,253,76,253,74,251,85,0,0,246,94,250,85,243,106,0,0,5,54,0,59,5,63,0,0,4,69,253,81,6,75,0,0,253,81,249,86,253,90,0,0,0,88,251,95,255,101,0,0,249,67,255,66,3,55,0,0,251,74,255,77,252,79,0,0,252,74,1,70,254,75,0,0,251,80,254,86,244,97,0,0,249,72,251,72,249,50,0,0,1,58,0,61,1,60,0,41,0,41,0,41,0,41,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,247,83,247,83,247,83,247,83,4,86,4,86,4,86,4,86,0,97,0,97,0,97,0,97,249,72,249,72,249,72,249,72,13,41,13,41,13,41,13,41,3,62,3,62,3,62,3,62,0,11,0,45,13,15,7,34,1,55,252,78,7,51,247,88,0,69,253,96,2,80,236,127,239,127,229,126,217,127,220,127,243,102,228,98,238,91,239,91,0,82,231,101,239,96,242,95,249,74,233,67,230,81,231,84,235,107,228,82,221,98,231,86,229,127,236,94,232,102,244,89,225,127,240,83,233,97,239,91,232,127,234,110,229,119,225,127,238,95,235,91,232,99,242,76,229,127,238,102,235,110,238,103,235,114,243,93,238,102,243,90,226,127,227,127,220,127,219,127,239,123,249,92,0,80,11,80,244,115,251,89,251,89,5,76,240,122,249,96,249,94,2,84,245,115,243,108,252,92,5,78,244,63,253,46,0,39,250,55,254,68,255,65,0,65,4,61,241,84,255,57,241,84,242,83,243,104,247,93,221,127,219,127,253,70,253,74,254,73,251,79,248,93,247,92,244,104,245,104,246,90,248,87,247,91,245,91,226,127,233,126,225,127,226,127,255,74,5,54,3,55,0,65,250,97,6,60,7,56,254,79,249,91,6,59,7,55,0,72,236,127,6,69,8,61,252,92,252,56,255,48,253,53,250,56,251,82,0,68,0,68,3,68,249,76,252,69,249,74,248,71,234,125,248,88,247,88,243,98,249,93,254,85,243,103,252,86,245,87,250,78,243,91,244,88,253,77,255,75,247,89,251,82,251,71,249,77,242,92,253,72,252,63,2,54,248,76,252,67,252,68,5,50,244,87,248,72,244,84,253,68,233,110,240,89,249,62,1,50,232,105,247,69,249,65,6,42,246,78,255,59,8,61,252,81,236,112,5,66,5,56,1,63,239,99,4,57,254,66,252,70,178,127,252,71,1,64,0,67,186,127,254,71,0,61,2,57,206,127,2,58,254,78,254,76,210,127,255,74,1,50,11,35,252,66,252,44,7,52,4,64,251,78,255,69,10,35,1,61,252,71,0,62,0,44,11,35,248,72,249,51,11,38,18,25,2,59,252,47,1,45,12,24,255,55,250,42,0,46,13,29,249,70,253,41,5,44,13,36,250,75,250,53,31,17,246,93,248,89,8,76,1,51,249,73,222,119,247,78,7,50,254,73,253,75,245,83,28,19,13,46,32,20,9,52,16,33,9,49,30,22,0,67,14,62,249,100,212,127,251,90,243,108,9,53,0,54,1,67,241,100,2,53,251,61,241,72,243,101,5,53,0,58,251,75,243,91,254,61,255,60,248,80,244,94,0,56,253,61,235,83,246,88,0,56,248,67,235,64,240,84,243,63,231,84,243,31,246,86,251,60,242,74,231,64,249,83,255,62,251,65,227,94,243,87,4,57,5,52,9,75,237,94,250,69,2,57,17,63,1,70,4,57,0,61,248,74,0,72,14,39,247,69,251,35,251,74,4,51,245,70,254,27,18,59,13,68,18,55,13,91,248,102,3,64,252,71,3,65,241,100,1,61,0,58,249,69,0,95,9,63,7,61,8,77,252,75,7,50,9,41,246,66,2,72,16,39,18,25,3,62,245,75,5,44,9,32,253,68,253,71,4,52,5,43,236,81,15,46,11,48,9,47,0,30,243,69,251,60,0,44,1,7,0,62,255,59,0,51,253,23,0,65,0,59,2,46,235,74,21,37,22,33,19,38,16,66,241,72,5,44,252,66,233,124,9,57,14,43,15,38,17,37,16,54,255,78,12,42,44,238,0,62,0,60,9,34,50,222,12,72,9,69,0,89,234,127,24,0,11,28,4,45,4,39,15,9,2,40,10,28,0,42,8,25,3,44,10,31,7,34,13,18,0,49,33,245,11,29,15,9,0,46,52,213,8,31,13,19,2,44,18,15,6,37,10,37,2,51,28,0,7,42,12,18,0,47,35,234,3,40,6,29,4,39,38,231,8,33,20,33,2,62,34,0,13,43,15,30,6,46,39,238,13,36,4,45,0,54,32,244,4,47,1,58,3,54,102,162,3,55,0,62,2,58,0,0,2,58,7,61,4,63,56,241,6,60,12,38,6,51,33,252,8,44,11,45,6,57,29,10,11,44,15,39,7,53,37,251,14,42,11,42,6,52,51,227,7,48,13,44,6,55,39,247,4,56,16,45,11,45,52,222,4,52,12,41,14,36,69,198,13,37,10,49,8,53,67,193,9,49,30,34,255,82,44,251,19,58,18,42,7,55,32,7,10,48,10,55,253,78,55,227,12,45,17,51,15,46,32,1,0,69,17,46,22,31,0,0,20,33,0,89,255,84,27,36,8,63,26,237,25,7,33,231,35,238,22,239,30,249,34,226,33,231,26,239,28,3,36,228,28,253,30,231,28,4,38,228,24,10,28,236,32,0,38,229,27,0,33,233,34,255,34,238,34,242,37,229,30,6,35,240,52,212,33,233,30,6,34,242,39,232,40,228,32,9,32,248,19,17,38,239,31,19,37,250,31,25,33,245,26,27,35,0,36,29,40,241,26,30,30,10,24,33,41,250,37,20,28,18,34,15,38,1,28,34,26,25,30,20,41,17,17,70,29,41,22,73,30,250,1,67,0,75,20,34,27,3,5,59,2,72,19,31,26,22,9,67,8,77,27,44,37,240,16,30,14,35,19,16,35,252,18,32,18,31,15,36,38,248,18,35,17,35,15,36,38,253,22,29,21,30,21,28,37,3,24,31,17,45,25,21,38,5,23,38,20,42,30,20,42,0,18,43,18,45,31,12,35,16,20,41,27,26,27,16,39,22,11,63,16,54,24,42,14,48,9,59,7,66,0,93,27,37,9,64,16,56,14,56,21,60,255,94,11,73,15,57,12,68,254,89,10,67,26,38,2,97,247,108,246,116,232,127,253,71,250,76,233,112,232,115,250,42,254,44,241,71,234,82,251,50,0,45,249,61,247,62,253,54,0,52,0,53,0,53,254,62,253,64,251,66,0,59,0,58,254,59,245,77,242,85,1,63,252,70,247,80,243,89,254,72,252,75,247,84,243,94,255,74,248,82,246,87,245,92,247,91,239,102,222,127,227,127,251,67,247,77,235,101,235,100,251,27,3,24,253,39,242,57,253,39,0,42,251,53,244,67,254,44,0,48,249,61,245,71,0,46,0,55,245,75,246,77,240,64,250,59,241,77,235,85,248,68,249,71,239,91,240,88,246,78,244,83,231,107,233,104,250,77,245,87,231,111,241,98,246,86,226,119,228,122,219,127,244,92,1,58,245,76,246,82,241,55,253,29,246,44,248,48,246,60,255,36,246,52,248,61,250,62,1,38,246,57,248,66,252,65,2,43,247,58,249,70,244,73,250,55,240,72,242,75,248,76,0,58,249,69,246,79,249,80,0,64,252,69,247,83,247,88,253,74,251,74,244,92,239,110,246,90,247,86,238,108,245,97,0,70,2,66,252,79,236,84,252,29,247,34,234,69,245,79,5,31,1,32,240,75,250,73,7,42,11,31,254,58,252,74,1,59,5,52,1,58,243,86,254,58,254,55,243,78,243,96,253,72,254,67,247,83,245,97,253,81,0,73,252,81,237,117,245,97,248,89,243,99,248,78,0,58,3,52,243,81,251,33,8,5,7,4,250,38,252,48,10,14,10,8,243,62,254,53,14,18,17,8,250,58,253,62,13,27,16,19,254,59,243,71,2,40,3,37,240,73,246,79,0,58,255,61,246,76,244,86,253,70,251,73,243,86,243,90,250,79,255,70,247,83,242,97,248,85,252,78,246,87,0,0,0,0,0,0,0,0,250,93,243,106,235,126,234,127,250,84,240,106,233,124,231,127,248,79,246,87,236,110,231,120,0,66,235,114,230,126,229,127,255,71,238,110,231,124,237,114,0,62,242,98,239,105,233,117,254,60,234,110,229,121,231,118,254,59,235,106,229,117,230,117,251,75,238,103,239,102,232,113,253,62,235,107,230,117,228,118,252,58,233,108,229,116,225,120,247,66,230,112,223,122,219,124,255,79,246,96,246,95,246,94,0,71,244,95,242,100,241,102,3,68,251,91,248,95,246,99,10,44,247,93,239,111,243,106,249,62,234,94,228,114,206,127,15,36,251,86,250,89,251,92,14,40,9,67,254,80,17,57,16,27,252,80,252,82,251,86,12,29,246,85,247,85,243,94,1,44,255,70,248,81,244,91,20,36,7,60,255,72,254,77,18,32,9,58,5,64,0,71,5,42,5,61,1,67,255,73,1,48,12,50,9,56,4,64,10,62,15,50,0,69,249,81,17,46,18,49,1,69,5,64,9,64,17,54,7,69,15,57,244,104,10,41,249,69,1,67,245,97,7,46,250,67,0,68,240,96,255,51,240,77,246,67,249,88,7,49,254,64,1,68,248,85,8,52,2,61,0,77,249,85,9,41,250,67,2,64,247,85,6,47,253,64,0,68,243,88,2,55,2,57,251,78,4,66,13,41,253,65,7,55,253,77,10,44,253,66,5,59,253,76,6,50,0,62,2,65,250,76,5,53,9,51,14,54,10,58,13,49,255,66,15,44,255,76,4,63,254,71,5,60,255,83,6,64,254,75,2,70,249,99,254,69,255,70,254,76,242,95,254,59,247,72,238,86,2,95,6,70,14,60,12,70,0,76,10,44,16,37,5,64,251,74,9,31,0,47,244,70,0,70,12,43,18,35,11,55,245,75,3,53,11,37,5,56,1,68,14,34,12,41,0,69,0,65,10,38,10,41,2,65,242,73,253,52,2,48,250,74,3,62,13,40,12,41,5,54,4,62,17,32,13,41,7,54,255,68,7,44,0,59,250,76,243,75,7,38,3,50,245,82,11,55,13,50,19,40,254,77,5,64,10,57,3,66,254,77,12,70,26,43,18,50,25,42,15,6,14,11,19,250,17,243,6,19,11,14,18,250,16,247,7,16,9,11,14,0,17,244,12,14,18,11,26,244,27,235,18,13,21,9,31,240,37,226,13,11,23,254,33,231,41,216,13,15,32,241,33,234,42,215,15,16,32,241,37,228,48,209,12,23,34,235,39,226,39,224,13,23,39,233,42,226,46,216,15,20,42,223,47,214,52,205,14,26,41,225,45,220,46,215,14,44,46,228,49,222,52,217,17,40,38,244,41,239,43,237,17,47,21,29,32,9,32,11,24,17,45,232,69,185,61,201,21,21,53,211,63,193,56,210,25,22,48,230,66,192,62,206,31,27,65,213,77,182,81,189,22,29,43,237,54,217,45,236,19,35,39,246,52,221,35,254,14,50,30,9,41,246,28,15,10,57,18,26,36,0,34,1,7,63,20,27,40,255,39,1,254,77,0,57,30,14,30,17,252,82,242,82,28,26,20,38,253,94,251,75,23,37,18,45,9,69,237,97,12,55,15,54,244,109,221,125,11,65,0,79,36,221,27,0,37,223,36,240,36,222,28,0,39,220,37,242,32,230,31,252,40,219,37,239,37,226,27,6,38,226,32,1,44,224,34,8,46,223,34,15,34,238,30,10,42,226,29,15,34,241,24,22,40,232,24,25,40,241,33,19,49,227,34,22,33,249,22,32,38,244,31,16,35,251,26,31,40,246,35,18,33,0,21,41,38,253,31,28,38,2,26,44,46,251,33,41,33,13,23,47,31,20,36,28,23,35,16,65,29,30,27,47,13,58,14,71,25,44,21,62,29,253,8,60,12,48,18,31,26,0,6,63,11,49,19,26,22,30,17,65,26,45,36,24,31,249,21,24,22,22,24,23,35,241,23,20,23,22,27,16,34,253,26,23,27,21,24,30,34,3,27,32,33,20,31,29,36,255,28,23,26,28,22,41,34,5,28,24,30,24,22,42,32,11,23,40,27,34,16,60,35,5,24,32,18,42,15,52,34,12,28,29,25,39,14,60,39,11,23,42,18,50,3,78,30,29,19,57,12,70,240,123,34,26,22,53,21,54,21,53,29,39,22,61,14,71,22,56,19,66,11,86,11,83,25,61,31,21,12,40,25,32,21,33,31,31,11,51,21,49,19,50,25,50,14,59,21,54,17,61,239,120,252,79,251,85,253,78,236,112,249,71,250,81,248,74,238,114,251,69,246,77,247,72,245,85,247,70,249,81,246,72,241,92,248,66,239,80,238,75,242,89,246,68,238,73,244,71,230,71,237,73,252,74,245,63,241,81,244,69,246,83,251,70,242,80,240,70,247,71,239,75,0,68,241,67,247,67,242,72,242,70,236,62,255,61,240,67,232,56,237,70,248,66,248,53,233,68,240,66,242,66,242,59,232,50,234,65,0,59,247,52,245,74,236,63,2,59,245,68,23,243,9,254,17,246,9,254,26,243,26,247,32,243,30,246,40,241,33,247,42,247,31,252,49,242,39,249,49,251,33,255,44,3,41,254,53,0,33,7,45,6,45,3,64,3,31,12,44,34,49,9,68,10,37,23,33,54,45,27,66,27,31,38,19,82,36,59,47,57,20,64,253,75,250,66,251,71,247,71,255,23,249,35,0,24,249,37,1,34,249,42,255,36,248,44,1,43,248,45,254,42,245,49,0,54,251,48,254,52,246,56,254,55,244,56,247,57,244,59,0,61,250,60,250,63,248,63,1,64,251,62,252,65,247,67,0,68,248,66,252,67,250,68,247,92,248,76,249,82,246,79,242,106,251,85,253,81,253,78,243,97,250,81,253,76,248,74,241,90,246,77,249,72,247,72,244,90,249,81,250,78,246,72,238,88,239,80,244,72,238,75,246,73,238,73,242,68,244,71,247,79,252,74,253,70,245,63,242,86,246,83,250,76,251,70,246,73,247,71,251,66,239,75,246,70,247,67,251,62,242,72,246,69,255,61,0,57,240,67,251,66,248,66,252,61,248,53,247,64,242,66,247,60,242,59,251,58,0,59,1,54,247,52,2,59,2,59,2,58,245,68,21,246,21,243,17,246,9,254,24,245,33,242,32,243,30,246,28,248,39,249,42,247,31,252,28,255,46,254,49,251,33,255,29,3,51,2,53,0,33,7,29,9,60,6,64,3,31,12,35,20,61,17,68,10,37,23,29,36,55,34,66,27,31,38,14,67,42,62,47,57,20,64,128,176,208,240,128,167,197,227,128,158,187,216,123,150,178,205,116,142,169,195,111,135,160,185,105,128,152,175,100,122,144,166,95,116,137,158,90,110,130,150,85,104,123,142,81,99,117,135,77,94,111,128,73,89,105,122,69,85,100,116,66,80,95,110,62,76,90,104,59,72,86,99,56,69,81,94,53,65,77,89,51,62,73,85,48,59,69,80,46,56,66,76,43,53,63,72,41,50,59,69,39,48,56,65,37,45,54,62,35,43,51,59,33,41,48,56,32,39,46,53,30,37,43,50,29,35,41,48,27,33,39,45,26,31,37,43,24,30,35,41,23,28,33,39,22,27,32,37,21,26,30,35,20,24,29,33,19,23,27,31,18,22,26,30,17,21,25,28,16,20,23,27,15,19,22,25,14,18,21,24,14,17,20,23,13,16,19,22,12,15,18,21,12,14,17,20,11,14,16,19,11,13,15,18,10,12,15,17,10,12,14,16,9,11,13,15,9,11,12,14,8,10,12,14,8,9,11,13,7,9,11,12,7,9,10,12,7,8,10,11,6,8,9,11,6,7,9,10,6,7,8,9,2,2,2,2,0,1,0,2,1,3,2,4,2,5,4,6,4,7,5,8,6,9,7,10,8,11,9,12,9,13,11,14,11,15,12,16,13,17,13,18,15,19,15,20,16,21,16,22,18,23,18,24,19,25,19,26,21,27,21,28,22,29,22,30,23,31,24,32,24,33,25,34,26,35,26,36,27,37,27,38,28,39,29,40,29,41,30,42,30,43,30,44,31,45,32,46,32,47,33,48,33,49,33,50,34,51,34,52,35,53,35,54,35,55,36,56,36,57,36,58,37,59,37,60,37,61,38,62,38,62,63,63,64,0,0,0,56,8,0,0,48,16,0,0,40,24,0,0,32,32,0,0,24,40,0,0,16,48,0,0,8,56,0,0,56,0,8,0,49,7,7,1,42,14,6,2,35,21,5,3,28,28,4,4,21,35,3,5,14,42,2,6,7,49,1,7,48,0,16,0,42,6,14,2,36,12,12,4,30,18,10,6,24,24,8,8,18,30,6,10,12,36,4,12,6,42,2,14,40,0,24,0,35,5,21,3,30,10,18,6,25,15,15,9,20,20,12,12,15,25,9,15,10,30,6,18,5,35,3,21,32,0,32,0,28,4,28,4,24,8,24,8,20,12,20,12,16,16,16,16,12,20,12,20,8,24,8,24,4,28,4,28,24,0,40,0,21,3,35,5,18,6,30,10,15,9,25,15,12,12,20,20,9,15,15,25,6,18,10,30,3,21,5,35,16,0,48,0,14,2,42,6,12,4,36,12,10,6,30,18,8,8,24,24,6,10,18,30,4,12,12,36,2,14,6,42,8,0,56,0,7,1,49,7,6,2,42,14,5,3,35,21,4,4,28,28,3,5,21,35,2,6,14,42,1,7,7,49,109,95,110,77,101,109,111,114,121,85,115,97,103,101,73,110,66,121,116,101,115,32,61,61,32,48,0,99,111,100,101,99,47,99,111,109,109,111,110,47,115,114,99,47,109,101,109,111,114,121,95,97,108,105,103,110,46,99,112,112,0,126,67,77,101,109,111,114,121,65,108,105,103,110,0,78,49,48,87,101,108,115,67,111,109,109,111,110,49,50,67,77,101,109,111,114,121,65,108,105,103,110,69,0,0,1,4,5,2,3,6,7,8,9,12,13,10,11,14,15,9,10,17,18,11,12,19,20,25,26,33,34,27,28,35,36,14,15,22,23,38,39,46,47,41,42,43,9,10,17,18,11,12,19,20,25,26,33,34,27,28,35,36,14,15,22,23,38,39,46,47,0,16,32,128,48,64,80,96,144,160,176,192,112,208,224,240,0,16,32,48,47,31,15,0,23,27,29,30,7,11,13,14,39,43,45,46,16,3,5,10,12,19,21,26,28,35,37,42,44,1,2,4,8,17,18,20,24,6,9,22,25,32,33,34,36,40,38,41,15,0,7,11,13,14,3,5,10,12,1,2,4,8,6,9,0,16,1,2,4,8,32,3,5,10,12,15,47,7,11,13,14,6,9,31,35,37,42,44,33,34,36,40,39,43,45,46,17,18,20,24,19,21,26,28,23,27,29,30,22,25,38,41,0,1,2,4,8,3,5,10,12,15,7,11,13,14,6,9,8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,7,13,7,12,8,11,8,8,7,8,7,7,7,7,7,10,6,10,6,10,6,10,6,6,6,6,6,6,6,6,6,3,6,3,6,3,6,3,6,9,6,9,6,9,6,9,6,4,6,4,6,4,6,4,6,1,6,1,6,1,6,1,6,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,21,8,12,8,7,8,3,8,17,7,17,7,8,7,8,7,13,6,13,6,13,6,13,6,4,6,4,6,4,6,4,6,1,6,1,6,1,6,1,6,9,5,9,5,9,5,9,5,9,5,9,5,9,5,9,5,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,47,7,47,7,58,8,60,8,59,8,54,8,61,8,56,8,55,8,50,8,57,8,52,8,51,8,46,8,53,7,53,7,48,7,48,7,43,7,43,7,42,7,42,7,49,7,49,7,44,7,44,7,39,7,39,7,38,7,38,7,45,6,45,6,45,6,45,6,40,6,40,6,40,6,40,6,35,6,35,6,35,6,35,6,34,6,34,6,34,6,34,6,41,6,41,6,41,6,41,6,36,6,36,6,36,6,36,6,31,6,31,6,31,6,31,6,30,6,30,6,30,6,30,6,26,5,26,5,26,5,26,5,26,5,26,5,26,5,26,5,32,5,32,5,32,5,32,5,32,5,32,5,32,5,32,5,27,5,27,5,27,5,27,5,27,5,27,5,27,5,27,5,22,5,22,5,22,5,22,5,22,5,22,5,22,5,22,5,37,5,37,5,37,5,37,5,37,5,37,5,37,5,37,5,28,5,28,5,28,5,28,5,28,5,28,5,28,5,28,5,23,5,23,5,23,5,23,5,23,5,23,5,23,5,23,5,18,5,18,5,18,5,18,5,18,5,18,5,18,5,18,5,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,33,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,24,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,19,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,14,3,29,2,20,2,15,2,10,2,25,1,16,1,11,1,6,1,0,0,0,0,0,0,0,0,14,8,20,8,19,8,10,8,29,7,29,7,16,7,16,7,15,7,15,7,6,7,6,7,25,6,25,6,25,6,25,6,12,6,12,6,12,6,12,6,11,6,11,6,11,6,11,6,3,6,3,6,3,6,3,6,21,6,21,6,21,6,21,6,8,6,8,6,8,6,8,6,7,6,7,6,7,6,7,6,1,6,1,6,1,6,1,6,17,5,17,5,17,5,17,5,17,5,17,5,17,5,17,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,0,0,0,57,5,57,5,61,6,60,6,59,6,58,6,55,6,54,6,56,6,51,6,52,5,52,5,50,5,50,5,53,5,53,5,48,5,48,5,47,5,47,5,46,5,46,5,49,5,49,5,44,5,44,5,43,5,43,5,42,5,42,5,38,4,38,4,38,4,38,4,40,4,40,4,40,4,40,4,39,4,39,4,39,4,39,4,34,4,34,4,34,4,34,4,45,4,45,4,45,4,45,4,36,4,36,4,36,4,36,4,35,4,35,4,35,4,35,4,30,4,30,4,30,4,30,4,41,3,32,3,31,3,26,3,37,3,28,3,27,3,22,3,33,1,24,1,23,1,18,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,8,40,8,35,8,30,8,41,8,36,8,31,8,26,8,22,7,22,7,18,7,18,7,32,7,32,7,14,7,14,7,37,7,37,7,28,7,28,7,27,7,27,7,10,7,10,7,6,6,6,6,6,6,6,6,24,6,24,6,24,6,24,6,23,6,23,6,23,6,23,6,3,6,3,6,3,6,3,6,33,6,33,6,33,6,33,6,20,6,20,6,20,6,20,6,19,6,19,6,19,6,19,6,1,6,1,6,1,6,1,6,15,5,15,5,15,5,15,5,15,5,15,5,15,5,15,5,16,5,16,5,16,5,16,5,16,5,16,5,16,5,16,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,12,5,12,5,12,5,12,5,12,5,12,5,12,5,12,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,7,5,29,5,29,5,29,5,29,5,29,5,29,5,29,5,29,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,8,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,25,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,21,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,17,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,13,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,2,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,0,58,2,61,2,60,2,59,2,54,2,57,2,56,2,55,2,50,2,53,2,52,2,51,2,46,2,47,1,47,1,42,1,48,1,43,1,38,1,49,1,44,1,39,1,34,1,1,6,2,6,0,0,0,6,3,6,4,6,5,6,0,0,6,6,7,6,8,6,9,6,10,6,11,6,12,6,13,6,14,6,15,6,16,6,17,6,18,6,19,6,20,6,21,6,22,6,23,6,24,6,25,6,26,6,27,6,28,6,29,6,30,6,31,6,32,6,33,6,34,6,35,6,36,6,37,6,38,6,39,6,40,6,41,6,42,6,43,6,44,6,45,6,46,6,47,6,48,6,49,6,50,6,51,6,52,6,53,6,54,6,55,6,56,6,57,6,58,6,59,6,60,6,61,6,4,4,8,8,2,1,1,6,3,1,1,2,2,2,2,1,1,1,1,0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,3,0,0,0,1,1,1,0,2,1,2,2,2,0,3,1,3,2,3,3,3,0,4,1,4,2,4,3,4,0,5,1,5,2,5,3,5,0,6,1,6,2,6,3,6,0,7,1,7,2,7,3,7,0,8,1,8,2,8,3,8,0,9,1,9,2,9,3,9,0,10,1,10,2,10,3,10,0,11,1,11,2,11,3,11,0,12,1,12,2,12,3,12,0,13,1,13,2,13,3,13,0,14,1,14,2,14,3,14,0,15,1,15,2,15,3,15,0,16,1,16,2,16,3,16,0,0,15,9,14,9,13,9,12,8,12,8,11,8,11,8,10,7,10,7,10,7,10,7,9,7,9,7,9,7,9,7,8,6,8,6,8,6,8,6,8,6,8,6,8,6,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,14,6,13,6,12,6,11,6,10,5,10,5,9,5,9,5,8,4,8,4,8,4,8,4,7,4,7,4,7,4,7,4,6,4,6,4,6,4,6,4,5,4,5,4,5,4,5,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,13,6,11,6,12,5,12,5,10,5,10,5,9,5,9,5,8,4,8,4,8,4,8,4,5,4,5,4,5,4,5,4,4,4,4,4,4,4,4,4,0,4,0,4,0,4,0,4,7,3,7,3,7,3,7,3,7,3,7,3,7,3,7,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,12,5,11,5,10,5,0,5,9,4,9,4,7,4,7,4,3,4,3,4,2,4,2,4,8,3,8,3,8,3,8,3,6,3,6,3,6,3,6,3,5,3,5,3,5,3,5,3,4,3,4,3,4,3,4,3,1,3,1,3,1,3,1,3,11,5,9,5,10,4,10,4,8,4,8,4,2,4,2,4,1,4,1,4,0,4,0,4,7,3,7,3,7,3,7,3,6,3,6,3,6,3,6,3,5,3,5,3,5,3,5,3,4,3,4,3,4,3,4,3,3,3,3,3,3,3,3,3,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10263);
/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE+20503);
/* memory initializer */ allocate([103,80,97,114,97,109,0,101,86,105,100,101,111,84,121,112,101,58,32,37,100,0,67,87,101,108,115,68,101,99,111,100,101,114,58,58,105,110,105,116,95,100,101,99,111,100,101,114,40,41,44,32,111,112,101,110,104,50,54,52,32,99,111,100,101,99,32,118,101,114,115,105,111,110,32,61,32,37,115,0,112,67,116,120,45,62,115,83,97,118,101,100,68,97,116,97,46,112,72,101,97,100,0,78,55,87,101,108,115,68,101,99,49,50,67,87,101,108,115,68,101,99,111,100,101,114,69,0,49,49,73,83,86,67,68,101,99,111,100,101,114,0,37,115,10,0,67,87,101,108,115,68,101,99,111,100,101,114,58,58,67,87,101,108,115,68,101,99,111,100,101,114,40,41,32,101,110,116,114,121,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+30743);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_memset"] = _memset;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds
      return 0;
    }

  function _abort() {
      Module['abort']();
    }

  function ___lock() {}

  function ___unlock() {}

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___udivdi3"] = ___udivdi3;

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    } 
  Module["_sbrk"] = _sbrk;

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy; 
  Module["_memmove"] = _memmove;

  
  
  var _strlen=undefined;
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 3) === 0);
      var textIndex = format;
      var argIndex = varargs;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = HEAPF64[((argIndex)>>3)];
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[((argIndex)>>2)],
                 HEAP32[(((argIndex)+(4))>>2)]];
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[((argIndex)>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }
  
  
  
  function __emscripten_traverse_stack(args) {
      if (!args || !args.callee || !args.callee.name) {
        return [null, '', ''];
      }
  
      var funstr = args.callee.toString();
      var funcname = args.callee.name;
      var str = '(';
      var first = true;
      for(i in args) {
        var a = args[i];
        if (!first) {
          str += ", ";
        }
        first = false;
        if (typeof a === 'number' || typeof a === 'string') {
          str += a;
        } else {
          str += '(' + typeof a + ')';
        }
      }
      str += ')';
      var caller = args.callee.caller;
      args = caller ? caller.arguments : [];
      if (first)
        str = '';
      return [args, funcname, str];
    }function _emscripten_get_callstack_js(flags) {
      var callstack = jsStackTrace();
  
      // Find the symbols in the callstack that corresponds to the functions that report callstack information, and remove everyhing up to these from the output.
      var iThisFunc = callstack.lastIndexOf('_emscripten_log');
      var iThisFunc2 = callstack.lastIndexOf('_emscripten_get_callstack');
      var iNextLine = callstack.indexOf('\n', Math.max(iThisFunc, iThisFunc2))+1;
      callstack = callstack.slice(iNextLine);
  
      // If user requested to see the original source stack, but no source map information is available, just fall back to showing the JS stack.
      if (flags & 8/*EM_LOG_C_STACK*/ && typeof emscripten_source_map === 'undefined') {
        Runtime.warnOnce('Source map information is not available, emscripten_log with EM_LOG_C_STACK will be ignored. Build with "--pre-js $EMSCRIPTEN/src/emscripten-source-map.min.js" linker flag to add source map loading to code.');
        flags ^= 8/*EM_LOG_C_STACK*/;
        flags |= 16/*EM_LOG_JS_STACK*/;
      }
  
      var stack_args = null;
      if (flags & 128 /*EM_LOG_FUNC_PARAMS*/) {
        // To get the actual parameters to the functions, traverse the stack via the unfortunately deprecated 'arguments.callee' method, if it works:
        var stack_args = __emscripten_traverse_stack(arguments);
        while (stack_args[1].indexOf('_emscripten_') >= 0)
          stack_args = __emscripten_traverse_stack(stack_args[0]);
      }
      
      // Process all lines:
      lines = callstack.split('\n');
      callstack = '';
      var newFirefoxRe = new RegExp('\\s*(.*?)@(.*?):([0-9]+):([0-9]+)'); // New FF30 with column info: extract components of form '       Object._main@http://server.com:4324:12'
      var firefoxRe = new RegExp('\\s*(.*?)@(.*):(.*)(:(.*))?'); // Old FF without column info: extract components of form '       Object._main@http://server.com:4324'
      var chromeRe = new RegExp('\\s*at (.*?) \\\((.*):(.*):(.*)\\\)'); // Extract components of form '    at Object._main (http://server.com/file.html:4324:12)'
      
      for(l in lines) {
        var line = lines[l];
  
        var jsSymbolName = '';
        var file = '';
        var lineno = 0;
        var column = 0;
  
        var parts = chromeRe.exec(line);
        if (parts && parts.length == 5) {
          jsSymbolName = parts[1];
          file = parts[2];
          lineno = parts[3];
          column = parts[4];
        } else {
          parts = newFirefoxRe.exec(line);
          if (!parts) parts = firefoxRe.exec(line);
          if (parts && parts.length >= 4) {
            jsSymbolName = parts[1];
            file = parts[2];
            lineno = parts[3];
            column = parts[4]|0; // Old Firefox doesn't carry column information, but in new FF30, it is present. See https://bugzilla.mozilla.org/show_bug.cgi?id=762556
          } else {
            // Was not able to extract this line for demangling/sourcemapping purposes. Output it as-is.
            callstack += line + '\n';
            continue;
          }
        }
  
        // Try to demangle the symbol, but fall back to showing the original JS symbol name if not available.
        var cSymbolName = (flags & 32/*EM_LOG_DEMANGLE*/) ? demangle(jsSymbolName) : jsSymbolName;
        if (!cSymbolName) {
          cSymbolName = jsSymbolName;
        }
  
        var haveSourceMap = false;
  
        if (flags & 8/*EM_LOG_C_STACK*/) {
          var orig = emscripten_source_map.originalPositionFor({line: lineno, column: column});
          haveSourceMap = (orig && orig.source);
          if (haveSourceMap) {
            if (flags & 64/*EM_LOG_NO_PATHS*/) {
              orig.source = orig.source.substring(orig.source.replace(/\\/g, "/").lastIndexOf('/')+1);
            }
            callstack += '    at ' + cSymbolName + ' (' + orig.source + ':' + orig.line + ':' + orig.column + ')\n';
          }
        }
        if ((flags & 16/*EM_LOG_JS_STACK*/) || !haveSourceMap) {
          if (flags & 64/*EM_LOG_NO_PATHS*/) {
            file = file.substring(file.replace(/\\/g, "/").lastIndexOf('/')+1);
          }
          callstack += (haveSourceMap ? ('     = '+jsSymbolName) : ('    at '+cSymbolName)) + ' (' + file + ':' + lineno + ':' + column + ')\n';
        }
        
        // If we are still keeping track with the callstack by traversing via 'arguments.callee', print the function parameters as well.
        if (flags & 128 /*EM_LOG_FUNC_PARAMS*/ && stack_args[0]) {
          if (stack_args[1] == jsSymbolName && stack_args[2].length > 0) {
            callstack = callstack.replace(/\s+$/, '');
            callstack += ' with values: ' + stack_args[1] + stack_args[2] + '\n';
          }
          stack_args = __emscripten_traverse_stack(stack_args[0]);
        }
      }
      // Trim extra whitespace at the end of the output.
      callstack = callstack.replace(/\s+$/, '');
      return callstack;
    }function _emscripten_log_js(flags, str) {
      if (flags & 24/*EM_LOG_C_STACK | EM_LOG_JS_STACK*/) {
        str = str.replace(/\s+$/, ''); // Ensure the message and the callstack are joined cleanly with exactly one newline.
        str += (str.length > 0 ? '\n' : '') + _emscripten_get_callstack_js(flags);
      }
  
      if (flags & 1 /*EM_LOG_CONSOLE*/) {
        if (flags & 4 /*EM_LOG_ERROR*/) {
          console.error(str);
        } else if (flags & 2 /*EM_LOG_WARN*/) {
          console.warn(str);
        } else {
          console.log(str);
        }
      } else if (flags & 6 /*EM_LOG_ERROR|EM_LOG_WARN*/) {
        Module.printErr(str);
      } else {
        Module.print(str);
      }
    }function _emscripten_log(flags, varargs) {
      // Extract the (optionally-existing) printf format specifier field from varargs.
      var format = HEAP32[((varargs)>>2)];
      varargs += Math.max(Runtime.getNativeFieldSize('i32'), Runtime.getAlignSize('i32', null, true));
      var str = '';
      if (format) {
        var result = __formatString(format, varargs);
        for(var i = 0 ; i < result.length; ++i) {
          str += String.fromCharCode(result[i]);
        }
      }
      _emscripten_log_js(flags, str);
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((Runtime.setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((Runtime.setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((Runtime.setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((Runtime.setTempRet0(throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

   
  Module["___uremdi3"] = ___uremdi3;


  var _emscripten_asm_const_int=true;

   
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory



function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_emscripten_asm_const_iiiiiiii": _emscripten_asm_const_iiiiiiii, "___syscall6": ___syscall6, "_emscripten_get_callstack_js": _emscripten_get_callstack_js, "___gxx_personality_v0": ___gxx_personality_v0, "___assert_fail": ___assert_fail, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__reallyNegative": __reallyNegative, "___setErrNo": ___setErrNo, "_emscripten_log": _emscripten_log, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "__emscripten_traverse_stack": __emscripten_traverse_stack, "_emscripten_log_js": _emscripten_log_js, "___syscall54": ___syscall54, "___unlock": ___unlock, "___lock": ___lock, "_abort": _abort, "_gettimeofday": _gettimeofday, "__formatString": __formatString, "___syscall140": ___syscall140, "___syscall146": ___syscall146, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_iiiiiiiiii=env.invoke_iiiiiiiiii;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _emscripten_asm_const_iiiiiiii=env._emscripten_asm_const_iiiiiiii;
  var ___syscall6=env.___syscall6;
  var _emscripten_get_callstack_js=env._emscripten_get_callstack_js;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var __reallyNegative=env.__reallyNegative;
  var ___setErrNo=env.___setErrNo;
  var _emscripten_log=env._emscripten_log;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var __emscripten_traverse_stack=env.__emscripten_traverse_stack;
  var _emscripten_log_js=env._emscripten_log_js;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var ___lock=env.___lock;
  var _abort=env._abort;
  var _gettimeofday=env._gettimeofday;
  var __formatString=env.__formatString;
  var ___syscall140=env.___syscall140;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _openh264_log($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer>>2] = 10526;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $2;
 _emscripten_log(1,($vararg_buffer|0));
 STACKTOP = sp;return;
}
function _open_decoder() {
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = sp + 80|0;
 $1 = sp + 76|0;
 $2 = sp + 72|0;
 $3 = sp + 40|0;
 HEAP32[$0>>2] = 0;
 $4 = (_WelsCreateDecoder($0)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  HEAP32[$vararg_buffer>>2] = 10548;
  _emscripten_log(1,($vararg_buffer|0));
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  HEAP32[$vararg_buffer1>>2] = 10571;
  _emscripten_log(1,($vararg_buffer1|0));
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 HEAP32[$1>>2] = 1;
 HEAP32[$2>>2] = 3;
 $8 = HEAP32[$0>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_iiii[$11 & 15]($8,10,$1)|0);
 $13 = ($12|0)==(0);
 if (!($13)) {
  HEAP32[$vararg_buffer4>>2] = 10606;
  _emscripten_log(1,($vararg_buffer4|0));
 }
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (FUNCTION_TABLE_iiii[$17 & 15]($14,9,$2)|0);
 $19 = ($18|0)==(0);
 if (!($19)) {
  HEAP32[$vararg_buffer7>>2] = 10606;
  _emscripten_log(1,($vararg_buffer7|0));
 }
 ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;
 $20 = ((($3)) + 4|0);
 HEAP32[$20>>2] = 23;
 $21 = ((($3)) + 12|0);
 HEAP8[$21>>0] = -1;
 $22 = ((($3)) + 16|0);
 HEAP32[$22>>2] = 2;
 $23 = ((($3)) + 28|0);
 HEAP32[$23>>2] = 1;
 $24 = HEAP32[$0>>2]|0;
 $25 = HEAP32[$24>>2]|0;
 $26 = HEAP32[$25>>2]|0;
 $27 = (FUNCTION_TABLE_iii[$26 & 1]($24,$3)|0);
 $28 = ($27|0)==(0);
 if ($28) {
  $29 = HEAP32[$0>>2]|0;
  $$0 = $29;
 } else {
  HEAP32[$vararg_buffer10>>2] = 10624;
  _emscripten_log(1,($vararg_buffer10|0));
  $$0 = 0;
 }
 $$1 = $$0;
 STACKTOP = sp;return ($$1|0);
}
function _close_decoder($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_ii[$4 & 3]($0)|0);
 _WelsDestroyDecoder($0);
 return;
}
function _decode_nal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$022 = 0, $$023 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $endptr = 0, $endptr25 = 0, $endptr27 = 0, $endptr29 = 0, $endptr31 = 0, $endptr33 = 0, $endptr35 = 0, $endptr37 = 0, $endptr39 = 0;
 var $endptr41 = 0, $strlen = 0, $strlen24 = 0, $strlen26 = 0, $strlen28 = 0, $strlen30 = 0, $strlen32 = 0, $strlen34 = 0, $strlen36 = 0, $strlen38 = 0, $strlen40 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $vararg_buffer = sp + 48|0;
 $3 = sp + 160|0;
 $4 = sp;
 $5 = sp + 60|0;
 ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
 dest=$4; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $6 = ($2|0)==(0);
 if ($6) {
  HEAP32[$5>>2] = 1;
  $7 = HEAP32[$0>>2]|0;
  $8 = ((($7)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  (FUNCTION_TABLE_iiii[$9 & 15]($0,1,$5)|0);
  $$022 = 0;$$023 = 0;
 } else {
  $$022 = $1;$$023 = $2;
 }
 $10 = HEAP32[$0>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_iiiiii[$12 & 3]($0,$$022,$$023,$3,$4)|0);
 $cond = ($13|0)==(0);
 if ($cond) {
  $14 = HEAP32[$4>>2]|0;
  $15 = ($14|0)==(0);
  if ($15) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $16 = HEAP32[$3>>2]|0;
  $17 = ((($3)) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($3)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($4)) + 24|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($4)) + 28|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($4)) + 36|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($4)) + 40|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = _emscripten_asm_const_iiiiiiii(0, ($16|0), ($18|0), ($20|0), ($22|0), ($24|0), ($26|0), ($28|0))|0;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 dest=$5; stop=dest+100|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $30 = $13 & 1;
 $31 = ($30|0)==(0);
 if (!($31)) {
  $strlen40 = (_strlen($5)|0);
  $endptr41 = (($5) + ($strlen40)|0);
  dest=$endptr41; src=10691; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $32 = $13 & 2;
 $33 = ($32|0)==(0);
 if (!($33)) {
  $strlen38 = (_strlen($5)|0);
  $endptr39 = (($5) + ($strlen38)|0);
  dest=$endptr39; src=10705; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $34 = $13 & 4;
 $35 = ($34|0)==(0);
 if (!($35)) {
  $strlen36 = (_strlen($5)|0);
  $endptr37 = (($5) + ($strlen36)|0);
  dest=$endptr37; src=10714; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $36 = $13 & 8;
 $37 = ($36|0)==(0);
 if (!($37)) {
  $strlen34 = (_strlen($5)|0);
  $endptr35 = (($5) + ($strlen34)|0);
  dest=$endptr35; src=10730; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $38 = $13 & 16;
 $39 = ($38|0)==(0);
 if (!($39)) {
  $strlen32 = (_strlen($5)|0);
  $endptr33 = (($5) + ($strlen32)|0);
  dest=$endptr33; src=10744; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $40 = $13 & 32;
 $41 = ($40|0)==(0);
 if (!($41)) {
  $strlen30 = (_strlen($5)|0);
  $endptr31 = (($5) + ($strlen30)|0);
  dest=$endptr31; src=10757; stop=dest+20|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $42 = $13 & 4096;
 $43 = ($42|0)==(0);
 if (!($43)) {
  $strlen28 = (_strlen($5)|0);
  $endptr29 = (($5) + ($strlen28)|0);
  dest=$endptr29; src=10777; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $44 = $13 & 8192;
 $45 = ($44|0)==(0);
 if (!($45)) {
  $strlen26 = (_strlen($5)|0);
  $endptr27 = (($5) + ($strlen26)|0);
  dest=$endptr27; src=10794; stop=dest+21|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $46 = $13 & 16384;
 $47 = ($46|0)==(0);
 if (!($47)) {
  $strlen24 = (_strlen($5)|0);
  $endptr25 = (($5) + ($strlen24)|0);
  dest=$endptr25; src=10815; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $48 = $13 & 32768;
 $49 = ($48|0)==(0);
 if (!($49)) {
  $strlen = (_strlen($5)|0);
  $endptr = (($5) + ($strlen)|0);
  dest=$endptr; src=10828; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 HEAP32[$vararg_buffer>>2] = 10845;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $13;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $5;
 _emscripten_log(1,($vararg_buffer|0));
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function __Z6getnalPKhjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$017$lcssa = 0, $$01720 = 0, $$018 = 0, $$021 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($1) + 3)|0;
 $4 = ($1>>>0)<($2>>>0);
 if (!($4)) {
  $$018 = -1;
  return ($$018|0);
 }
 $5 = ($3>>>0)<($2>>>0);
 L4: do {
  if ($5) {
   $$01720 = $3;$$021 = 0;
   L5: while(1) {
    $6 = (($0) + ($$01720)|0);
    $7 = HEAP8[$6>>0]|0;
    switch ($7<<24>>24) {
    case 0:  {
     $8 = (($$021) + 1)|0;
     $$1 = $8;
     break;
    }
    case 1:  {
     $9 = ($$021|0)==(3);
     if ($9) {
      break L5;
     } else {
      $$1 = 0;
     }
     break;
    }
    default: {
     $$1 = 0;
    }
    }
    $12 = (($$01720) + 1)|0;
    $13 = ($12>>>0)<($2>>>0);
    if ($13) {
     $$01720 = $12;$$021 = $$1;
    } else {
     $$017$lcssa = $12;
     break L4;
    }
   }
   $10 = (-3 - ($1))|0;
   $11 = (($10) + ($$01720))|0;
   $$018 = $11;
   return ($$018|0);
  } else {
   $$017$lcssa = $3;
  }
 } while(0);
 $14 = (($$017$lcssa) - ($1))|0;
 $$018 = $14;
 return ($$018|0);
}
function _decode_h264buffer($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = 0;
 while(1) {
  $3 = (__Z6getnalPKhjj($1,$$0,$2)|0);
  $4 = (($1) + ($$0)|0);
  (_decode_nal($0,$4,$3)|0);
  $5 = (($3) + ($$0))|0;
  $6 = ($3|0)>(0);
  if ($6) {
   $$0 = $5;
  } else {
   break;
  }
 }
 return 0;
}
function __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$neg7 = 0, $$neg8 = 0, $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($1)) + -8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $$neg7 = (-7 - ($5))|0;
 $$neg8 = (($$neg7) - ($7))|0;
 $10 = (($$neg8) + ($9))|0;
 HEAP32[$8>>2] = $10;
 $11 = ((($1)) + -4|0);
 $12 = HEAP32[$11>>2]|0;
 _free($12);
 return;
}
function __Z7WelsLogP13TagLogContextiPKcz($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 40|0;
 $4 = sp + 56|0;
 switch ($1|0) {
 case 1:  {
  $5 = ((($0)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  HEAP32[$vararg_buffer>>2] = $6;
  (_WelsSnprintf($4,1024,10870,$vararg_buffer)|0);
  break;
 }
 case 2:  {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  HEAP32[$vararg_buffer1>>2] = $8;
  (_WelsSnprintf($4,1024,10901,$vararg_buffer1)|0);
  break;
 }
 case 4:  {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$vararg_buffer4>>2] = $10;
  (_WelsSnprintf($4,1024,10934,$vararg_buffer4)|0);
  break;
 }
 case 8:  {
  $11 = ((($0)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer7>>2] = $12;
  (_WelsSnprintf($4,1024,10964,$vararg_buffer7)|0);
  break;
 }
 default: {
  $13 = ((($0)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  HEAP32[$vararg_buffer10>>2] = $14;
  (_WelsSnprintf($4,1024,10995,$vararg_buffer10)|0);
 }
 }
 (_WelsStrcat($4,1024,$2)|0);
 HEAP32[$3>>2] = $varargs;
 $15 = HEAP32[$0>>2]|0;
 $16 = ((($0)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 FUNCTION_TABLE_viiii[$15 & 31]($17,$1,$4,$3);
 STACKTOP = sp;return;
}
function _WelsSnprintf($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_vsnprintf($0,$1,$2,$3)|0);
 STACKTOP = sp;return ($4|0);
}
function _WelsStrcat($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strlen($0)|0);
 $4 = (($0) + ($3)|0);
 $5 = (($1) - ($3))|0;
 (_strncpy($4,$2,$5)|0);
 $6 = (($5) + -1)|0;
 $7 = (($4) + ($6)|0);
 HEAP8[$7>>0] = 0;
 return ($4|0);
}
function __ZNK10WelsCommon12CMemoryAlign18WelsGetMemoryUsageEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + -1)|0;
 $6 = (($1) + 8)|0;
 $7 = (($6) + ($5))|0;
 $8 = (_malloc($7)|0);
 $9 = ($8|0)==(0|0);
 $10 = (($8) + ($5)|0);
 $11 = ((($10)) + 4|0);
 $12 = ((($11)) + 4|0);
 $13 = $12;
 $14 = $13 & $5;
 $15 = (0 - ($14))|0;
 $16 = (($12) + ($15)|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($16)) + -8|0);
 $18 = ((($16)) + -4|0);
 HEAP32[$18>>2] = $8;
 HEAP32[$17>>2] = $1;
 $19 = ((($0)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($1) + 7)|0;
 $22 = (($21) + ($4))|0;
 $23 = (($22) + ($20))|0;
 HEAP32[$19>>2] = $23;
 _memset(($16|0),0,($1|0))|0;
 $$0 = $16;
 return ($$0|0);
}
function _WelsCPUFeatureDetect($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN14welsCodecTraceD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZN14welsCodecTrace13SetTraceLevelEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(-1);
 if (!($2)) {
  return;
 }
 HEAP32[$0>>2] = $1;
 return;
}
function __ZN14welsCodecTrace16SetTraceCallbackEPFvPviPKcE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZN14welsCodecTrace23SetTraceCallbackContextEPv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _InitExpandPictureFunc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 3;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 4;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 4;
 return;
}
function __ZN10WelsCommon10InitMcFuncEP9TagMcFuncj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 9;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 3;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 11;
 $4 = ((($0)) + 20|0);
 HEAP32[$4>>2] = 1;
 $5 = ((($0)) + 12|0);
 HEAP32[$5>>2] = 2;
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = 3;
 return;
}
function _ExpandReferencingPicture($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$0>>2]|0;
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1 >> 1;
 $12 = $2 >> 1;
 $13 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_viiii[$4 & 31]($6,$13,$1,$2);
 $14 = ($11|0)>(15);
 $15 = ((($3)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 if ($14) {
  $17 = $11 & 15;
  $18 = ($17|0)==(0);
  $19 = $18&1;
  $20 = (($5) + ($19<<2)|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_viiii[$21 & 31]($8,$16,$11,$12);
  $22 = HEAP32[$20>>2]|0;
  $23 = ((($3)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  FUNCTION_TABLE_viiii[$22 & 31]($10,$24,$11,$12);
  return;
 } else {
  __ZL21ExpandPictureChroma_cPhiii($8,$16,$11,$12);
  $25 = ((($3)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  __ZL21ExpandPictureChroma_cPhiii($10,$26,$11,$12);
  return;
 }
}
function __ZL21ExpandPictureChroma_cPhiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($3) + -1)|0;
 $5 = Math_imul($4, $1)|0;
 $6 = (($0) + ($5)|0);
 $7 = HEAP8[$0>>0]|0;
 $8 = (($2) + -1)|0;
 $9 = (($0) + ($8)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = HEAP8[$6>>0]|0;
 $12 = (($6) + ($8)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = (0 - ($1))|0;
 $15 = (($0) + ($14)|0);
 $16 = (($6) + ($1)|0);
 _memcpy(($15|0),($0|0),($2|0))|0;
 _memcpy(($16|0),($6|0),($2|0))|0;
 $17 = ((($15)) + -16|0);
 _memset(($17|0),($7|0),16)|0;
 $18 = (($15) + ($2)|0);
 _memset(($18|0),($10|0),16)|0;
 $19 = ((($16)) + -16|0);
 _memset(($19|0),($11|0),16)|0;
 $20 = (($16) + ($2)|0);
 _memset(($20|0),($13|0),16)|0;
 $21 = $1 << 1;
 $22 = (0 - ($21))|0;
 $23 = (($0) + ($22)|0);
 $24 = (($6) + ($21)|0);
 _memcpy(($23|0),($0|0),($2|0))|0;
 _memcpy(($24|0),($6|0),($2|0))|0;
 $25 = ((($23)) + -16|0);
 _memset(($25|0),($7|0),16)|0;
 $26 = (($23) + ($2)|0);
 _memset(($26|0),($10|0),16)|0;
 $27 = ((($24)) + -16|0);
 _memset(($27|0),($11|0),16)|0;
 $28 = (($24) + ($2)|0);
 _memset(($28|0),($13|0),16)|0;
 $29 = ($1*3)|0;
 $30 = (0 - ($29))|0;
 $31 = (($0) + ($30)|0);
 $32 = (($6) + ($29)|0);
 _memcpy(($31|0),($0|0),($2|0))|0;
 _memcpy(($32|0),($6|0),($2|0))|0;
 $33 = ((($31)) + -16|0);
 _memset(($33|0),($7|0),16)|0;
 $34 = (($31) + ($2)|0);
 _memset(($34|0),($10|0),16)|0;
 $35 = ((($32)) + -16|0);
 _memset(($35|0),($11|0),16)|0;
 $36 = (($32) + ($2)|0);
 _memset(($36|0),($13|0),16)|0;
 $37 = $1 << 2;
 $38 = (0 - ($37))|0;
 $39 = (($0) + ($38)|0);
 $40 = (($6) + ($37)|0);
 _memcpy(($39|0),($0|0),($2|0))|0;
 _memcpy(($40|0),($6|0),($2|0))|0;
 $41 = ((($39)) + -16|0);
 _memset(($41|0),($7|0),16)|0;
 $42 = (($39) + ($2)|0);
 _memset(($42|0),($10|0),16)|0;
 $43 = ((($40)) + -16|0);
 _memset(($43|0),($11|0),16)|0;
 $44 = (($40) + ($2)|0);
 _memset(($44|0),($13|0),16)|0;
 $45 = ($1*5)|0;
 $46 = (0 - ($45))|0;
 $47 = (($0) + ($46)|0);
 $48 = (($6) + ($45)|0);
 _memcpy(($47|0),($0|0),($2|0))|0;
 _memcpy(($48|0),($6|0),($2|0))|0;
 $49 = ((($47)) + -16|0);
 _memset(($49|0),($7|0),16)|0;
 $50 = (($47) + ($2)|0);
 _memset(($50|0),($10|0),16)|0;
 $51 = ((($48)) + -16|0);
 _memset(($51|0),($11|0),16)|0;
 $52 = (($48) + ($2)|0);
 _memset(($52|0),($13|0),16)|0;
 $53 = ($1*6)|0;
 $54 = (0 - ($53))|0;
 $55 = (($0) + ($54)|0);
 $56 = (($6) + ($53)|0);
 _memcpy(($55|0),($0|0),($2|0))|0;
 _memcpy(($56|0),($6|0),($2|0))|0;
 $57 = ((($55)) + -16|0);
 _memset(($57|0),($7|0),16)|0;
 $58 = (($55) + ($2)|0);
 _memset(($58|0),($10|0),16)|0;
 $59 = ((($56)) + -16|0);
 _memset(($59|0),($11|0),16)|0;
 $60 = (($56) + ($2)|0);
 _memset(($60|0),($13|0),16)|0;
 $61 = ($1*7)|0;
 $62 = (0 - ($61))|0;
 $63 = (($0) + ($62)|0);
 $64 = (($6) + ($61)|0);
 _memcpy(($63|0),($0|0),($2|0))|0;
 _memcpy(($64|0),($6|0),($2|0))|0;
 $65 = ((($63)) + -16|0);
 _memset(($65|0),($7|0),16)|0;
 $66 = (($63) + ($2)|0);
 _memset(($66|0),($10|0),16)|0;
 $67 = ((($64)) + -16|0);
 _memset(($67|0),($11|0),16)|0;
 $68 = (($64) + ($2)|0);
 _memset(($68|0),($13|0),16)|0;
 $69 = $1 << 3;
 $70 = (0 - ($69))|0;
 $71 = (($0) + ($70)|0);
 $72 = (($6) + ($69)|0);
 _memcpy(($71|0),($0|0),($2|0))|0;
 _memcpy(($72|0),($6|0),($2|0))|0;
 $73 = ((($71)) + -16|0);
 _memset(($73|0),($7|0),16)|0;
 $74 = (($71) + ($2)|0);
 _memset(($74|0),($10|0),16)|0;
 $75 = ((($72)) + -16|0);
 _memset(($75|0),($11|0),16)|0;
 $76 = (($72) + ($2)|0);
 _memset(($76|0),($13|0),16)|0;
 $77 = ($1*9)|0;
 $78 = (0 - ($77))|0;
 $79 = (($0) + ($78)|0);
 $80 = (($6) + ($77)|0);
 _memcpy(($79|0),($0|0),($2|0))|0;
 _memcpy(($80|0),($6|0),($2|0))|0;
 $81 = ((($79)) + -16|0);
 _memset(($81|0),($7|0),16)|0;
 $82 = (($79) + ($2)|0);
 _memset(($82|0),($10|0),16)|0;
 $83 = ((($80)) + -16|0);
 _memset(($83|0),($11|0),16)|0;
 $84 = (($80) + ($2)|0);
 _memset(($84|0),($13|0),16)|0;
 $85 = ($1*10)|0;
 $86 = (0 - ($85))|0;
 $87 = (($0) + ($86)|0);
 $88 = (($6) + ($85)|0);
 _memcpy(($87|0),($0|0),($2|0))|0;
 _memcpy(($88|0),($6|0),($2|0))|0;
 $89 = ((($87)) + -16|0);
 _memset(($89|0),($7|0),16)|0;
 $90 = (($87) + ($2)|0);
 _memset(($90|0),($10|0),16)|0;
 $91 = ((($88)) + -16|0);
 _memset(($91|0),($11|0),16)|0;
 $92 = (($88) + ($2)|0);
 _memset(($92|0),($13|0),16)|0;
 $93 = ($1*11)|0;
 $94 = (0 - ($93))|0;
 $95 = (($0) + ($94)|0);
 $96 = (($6) + ($93)|0);
 _memcpy(($95|0),($0|0),($2|0))|0;
 _memcpy(($96|0),($6|0),($2|0))|0;
 $97 = ((($95)) + -16|0);
 _memset(($97|0),($7|0),16)|0;
 $98 = (($95) + ($2)|0);
 _memset(($98|0),($10|0),16)|0;
 $99 = ((($96)) + -16|0);
 _memset(($99|0),($11|0),16)|0;
 $100 = (($96) + ($2)|0);
 _memset(($100|0),($13|0),16)|0;
 $101 = ($1*12)|0;
 $102 = (0 - ($101))|0;
 $103 = (($0) + ($102)|0);
 $104 = (($6) + ($101)|0);
 _memcpy(($103|0),($0|0),($2|0))|0;
 _memcpy(($104|0),($6|0),($2|0))|0;
 $105 = ((($103)) + -16|0);
 _memset(($105|0),($7|0),16)|0;
 $106 = (($103) + ($2)|0);
 _memset(($106|0),($10|0),16)|0;
 $107 = ((($104)) + -16|0);
 _memset(($107|0),($11|0),16)|0;
 $108 = (($104) + ($2)|0);
 _memset(($108|0),($13|0),16)|0;
 $109 = ($1*13)|0;
 $110 = (0 - ($109))|0;
 $111 = (($0) + ($110)|0);
 $112 = (($6) + ($109)|0);
 _memcpy(($111|0),($0|0),($2|0))|0;
 _memcpy(($112|0),($6|0),($2|0))|0;
 $113 = ((($111)) + -16|0);
 _memset(($113|0),($7|0),16)|0;
 $114 = (($111) + ($2)|0);
 _memset(($114|0),($10|0),16)|0;
 $115 = ((($112)) + -16|0);
 _memset(($115|0),($11|0),16)|0;
 $116 = (($112) + ($2)|0);
 _memset(($116|0),($13|0),16)|0;
 $117 = ($1*14)|0;
 $118 = (0 - ($117))|0;
 $119 = (($0) + ($118)|0);
 $120 = (($6) + ($117)|0);
 _memcpy(($119|0),($0|0),($2|0))|0;
 _memcpy(($120|0),($6|0),($2|0))|0;
 $121 = ((($119)) + -16|0);
 _memset(($121|0),($7|0),16)|0;
 $122 = (($119) + ($2)|0);
 _memset(($122|0),($10|0),16)|0;
 $123 = ((($120)) + -16|0);
 _memset(($123|0),($11|0),16)|0;
 $124 = (($120) + ($2)|0);
 _memset(($124|0),($13|0),16)|0;
 $125 = ($1*15)|0;
 $126 = (0 - ($125))|0;
 $127 = (($0) + ($126)|0);
 $128 = (($6) + ($125)|0);
 _memcpy(($127|0),($0|0),($2|0))|0;
 _memcpy(($128|0),($6|0),($2|0))|0;
 $129 = ((($127)) + -16|0);
 _memset(($129|0),($7|0),16)|0;
 $130 = (($127) + ($2)|0);
 _memset(($130|0),($10|0),16)|0;
 $131 = ((($128)) + -16|0);
 _memset(($131|0),($11|0),16)|0;
 $132 = (($128) + ($2)|0);
 _memset(($132|0),($13|0),16)|0;
 $133 = $1 << 4;
 $134 = (0 - ($133))|0;
 $135 = (($0) + ($134)|0);
 $136 = (($6) + ($133)|0);
 _memcpy(($135|0),($0|0),($2|0))|0;
 _memcpy(($136|0),($6|0),($2|0))|0;
 $137 = ((($135)) + -16|0);
 _memset(($137|0),($7|0),16)|0;
 $138 = (($135) + ($2)|0);
 _memset(($138|0),($10|0),16)|0;
 $139 = ((($136)) + -16|0);
 _memset(($139|0),($11|0),16)|0;
 $140 = (($136) + ($2)|0);
 _memset(($140|0),($13|0),16)|0;
 $$0 = $0;$$1 = 0;
 while(1) {
  $141 = ((($$0)) + -16|0);
  $142 = HEAP8[$$0>>0]|0;
  _memset(($141|0),($142|0),16)|0;
  $143 = (($$0) + ($2)|0);
  $144 = (($$0) + ($8)|0);
  $145 = HEAP8[$144>>0]|0;
  _memset(($143|0),($145|0),16)|0;
  $146 = (($$0) + ($1)|0);
  $147 = (($$1) + 1)|0;
  $148 = ($147|0)<($3|0);
  if ($148) {
   $$0 = $146;$$1 = $147;
  } else {
   break;
  }
 }
 return;
}
function __Z18WelsNonZeroCount_cPa($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)!=(0);
 $3 = $2&1;
 HEAP8[$0>>0] = $3;
 $4 = ((($0)) + 1|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)!=(0);
 $7 = $6&1;
 HEAP8[$4>>0] = $7;
 $8 = ((($0)) + 2|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)!=(0);
 $11 = $10&1;
 HEAP8[$8>>0] = $11;
 $12 = ((($0)) + 3|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)!=(0);
 $15 = $14&1;
 HEAP8[$12>>0] = $15;
 $16 = ((($0)) + 4|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ($17<<24>>24)!=(0);
 $19 = $18&1;
 HEAP8[$16>>0] = $19;
 $20 = ((($0)) + 5|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = ($21<<24>>24)!=(0);
 $23 = $22&1;
 HEAP8[$20>>0] = $23;
 $24 = ((($0)) + 6|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = ($25<<24>>24)!=(0);
 $27 = $26&1;
 HEAP8[$24>>0] = $27;
 $28 = ((($0)) + 7|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = ($29<<24>>24)!=(0);
 $31 = $30&1;
 HEAP8[$28>>0] = $31;
 $32 = ((($0)) + 8|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = ($33<<24>>24)!=(0);
 $35 = $34&1;
 HEAP8[$32>>0] = $35;
 $36 = ((($0)) + 9|0);
 $37 = HEAP8[$36>>0]|0;
 $38 = ($37<<24>>24)!=(0);
 $39 = $38&1;
 HEAP8[$36>>0] = $39;
 $40 = ((($0)) + 10|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = ($41<<24>>24)!=(0);
 $43 = $42&1;
 HEAP8[$40>>0] = $43;
 $44 = ((($0)) + 11|0);
 $45 = HEAP8[$44>>0]|0;
 $46 = ($45<<24>>24)!=(0);
 $47 = $46&1;
 HEAP8[$44>>0] = $47;
 $48 = ((($0)) + 12|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = ($49<<24>>24)!=(0);
 $51 = $50&1;
 HEAP8[$48>>0] = $51;
 $52 = ((($0)) + 13|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = ($53<<24>>24)!=(0);
 $55 = $54&1;
 HEAP8[$52>>0] = $55;
 $56 = ((($0)) + 14|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = ($57<<24>>24)!=(0);
 $59 = $58&1;
 HEAP8[$56>>0] = $59;
 $60 = ((($0)) + 15|0);
 $61 = HEAP8[$60>>0]|0;
 $62 = ($61<<24>>24)!=(0);
 $63 = $62&1;
 HEAP8[$60>>0] = $63;
 $64 = ((($0)) + 16|0);
 $65 = HEAP8[$64>>0]|0;
 $66 = ($65<<24>>24)!=(0);
 $67 = $66&1;
 HEAP8[$64>>0] = $67;
 $68 = ((($0)) + 17|0);
 $69 = HEAP8[$68>>0]|0;
 $70 = ($69<<24>>24)!=(0);
 $71 = $70&1;
 HEAP8[$68>>0] = $71;
 $72 = ((($0)) + 18|0);
 $73 = HEAP8[$72>>0]|0;
 $74 = ($73<<24>>24)!=(0);
 $75 = $74&1;
 HEAP8[$72>>0] = $75;
 $76 = ((($0)) + 19|0);
 $77 = HEAP8[$76>>0]|0;
 $78 = ($77<<24>>24)!=(0);
 $79 = $78&1;
 HEAP8[$76>>0] = $79;
 $80 = ((($0)) + 20|0);
 $81 = HEAP8[$80>>0]|0;
 $82 = ($81<<24>>24)!=(0);
 $83 = $82&1;
 HEAP8[$80>>0] = $83;
 $84 = ((($0)) + 21|0);
 $85 = HEAP8[$84>>0]|0;
 $86 = ($85<<24>>24)!=(0);
 $87 = $86&1;
 HEAP8[$84>>0] = $87;
 $88 = ((($0)) + 22|0);
 $89 = HEAP8[$88>>0]|0;
 $90 = ($89<<24>>24)!=(0);
 $91 = $90&1;
 HEAP8[$88>>0] = $91;
 $92 = ((($0)) + 23|0);
 $93 = HEAP8[$92>>0]|0;
 $94 = ($93<<24>>24)!=(0);
 $95 = $94&1;
 HEAP8[$92>>0] = $95;
 return;
}
function __Z17DeblockLumaLt4V_cPhiiiPa($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z16DeblockLumaLt4_cPhiiiiPa($0,$1,1,$2,$3,$4);
 return;
}
function __Z17DeblockLumaEq4V_cPhiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z16DeblockLumaEq4_cPhiiii($0,$1,1,$2,$3);
 return;
}
function __Z17DeblockLumaLt4H_cPhiiiPa($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z16DeblockLumaLt4_cPhiiiiPa($0,1,$1,$2,$3,$4);
 return;
}
function __Z17DeblockLumaEq4H_cPhiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z16DeblockLumaEq4_cPhiiii($0,1,$1,$2,$3);
 return;
}
function __Z19DeblockChromaLt4V_cPhS_iiiPa($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z18DeblockChromaLt4_cPhS_iiiiPa($0,$1,$2,1,$3,$4,$5);
 return;
}
function __Z19DeblockChromaEq4V_cPhS_iii($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z18DeblockChromaEq4_cPhS_iiii($0,$1,$2,1,$3,$4);
 return;
}
function __Z19DeblockChromaLt4H_cPhS_iiiPa($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z18DeblockChromaLt4_cPhS_iiiiPa($0,$1,1,$2,$3,$4,$5);
 return;
}
function __Z19DeblockChromaEq4H_cPhS_iii($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z18DeblockChromaEq4_cPhS_iiii($0,$1,1,$2,$3,$4);
 return;
}
function __Z18DeblockChromaEq4_cPhS_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0102 = 0, $$094101 = 0, $$095100 = 0, $$not = 0, $$not96 = 0, $$not97 = 0, $$not98 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $9 = 0, $brmerge = 0, $brmerge99 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (0 - ($2))|0;
 $7 = Math_imul($2, -2)|0;
 $$0102 = 0;$$094101 = $0;$$095100 = $1;
 while(1) {
  $8 = (($$094101) + ($6)|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = $9&255;
  $11 = (($$094101) + ($7)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = HEAP8[$$094101>>0]|0;
  $15 = $14&255;
  $16 = (($$094101) + ($2)|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17&255;
  $19 = (($10) - ($15))|0;
  $20 = $19 >> 31;
  $21 = $20 ^ $19;
  $22 = (($21) - ($20))|0;
  $23 = ($22|0)<($4|0);
  $24 = (($13) - ($10))|0;
  $25 = $24 >> 31;
  $26 = (($18) - ($15))|0;
  $27 = $26 >> 31;
  if ($23) {
   $28 = $27 ^ $26;
   $29 = (($28) - ($27))|0;
   $30 = $25 ^ $24;
   $31 = (($30) - ($25))|0;
   $$not = ($31|0)>=($5|0);
   $$not96 = ($29|0)>=($5|0);
   $brmerge = $$not | $$not96;
   if (!($brmerge)) {
    $32 = $13 << 1;
    $33 = (($10) + 2)|0;
    $34 = (($33) + ($32))|0;
    $35 = (($34) + ($18))|0;
    $36 = $35 >>> 2;
    $37 = $36&255;
    HEAP8[$8>>0] = $37;
    $38 = $18 << 1;
    $39 = (($13) + 2)|0;
    $40 = (($39) + ($15))|0;
    $41 = (($40) + ($38))|0;
    $42 = $41 >>> 2;
    $43 = $42&255;
    HEAP8[$$094101>>0] = $43;
   }
  }
  $44 = (($$095100) + ($6)|0);
  $45 = HEAP8[$44>>0]|0;
  $46 = $45&255;
  $47 = (($$095100) + ($7)|0);
  $48 = HEAP8[$47>>0]|0;
  $49 = $48&255;
  $50 = HEAP8[$$095100>>0]|0;
  $51 = $50&255;
  $52 = (($$095100) + ($2)|0);
  $53 = HEAP8[$52>>0]|0;
  $54 = $53&255;
  $55 = (($46) - ($51))|0;
  $56 = $55 >> 31;
  $57 = $56 ^ $55;
  $58 = (($57) - ($56))|0;
  $59 = ($58|0)<($4|0);
  $60 = (($49) - ($46))|0;
  $61 = $60 >> 31;
  $62 = (($54) - ($51))|0;
  $63 = $62 >> 31;
  if ($59) {
   $64 = $63 ^ $62;
   $65 = (($64) - ($63))|0;
   $66 = $61 ^ $60;
   $67 = (($66) - ($61))|0;
   $$not97 = ($67|0)>=($5|0);
   $$not98 = ($65|0)>=($5|0);
   $brmerge99 = $$not97 | $$not98;
   if (!($brmerge99)) {
    $68 = $49 << 1;
    $69 = (($46) + 2)|0;
    $70 = (($69) + ($68))|0;
    $71 = (($70) + ($54))|0;
    $72 = $71 >>> 2;
    $73 = $72&255;
    HEAP8[$44>>0] = $73;
    $74 = $54 << 1;
    $75 = (($49) + 2)|0;
    $76 = (($75) + ($51))|0;
    $77 = (($76) + ($74))|0;
    $78 = $77 >>> 2;
    $79 = $78&255;
    HEAP8[$$095100>>0] = $79;
   }
  }
  $80 = (($$095100) + ($3)|0);
  $81 = (($$094101) + ($3)|0);
  $82 = (($$0102) + 1)|0;
  $exitcond = ($82|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$0102 = $82;$$094101 = $81;$$095100 = $80;
  }
 }
 return;
}
function __Z18DeblockChromaLt4_cPhS_iiiiPa($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$0129139 = 0, $$0130137 = 0, $$0140 = 0, $$135 = 0, $$not = 0, $$not131 = 0, $$not132 = 0, $$not133 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge134 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (0 - ($2))|0;
 $8 = Math_imul($2, -2)|0;
 $$0129139 = 0;$$0130137 = $1;$$0140 = $0;
 while(1) {
  $9 = $$0129139 >> 1;
  $10 = (($6) + ($9)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 << 24 >> 24;
  $13 = ($11<<24>>24)>(0);
  if ($13) {
   $14 = (($$0140) + ($7)|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15&255;
   $17 = (($$0140) + ($8)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = HEAP8[$$0140>>0]|0;
   $21 = $20&255;
   $22 = (($$0140) + ($2)|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23&255;
   $25 = (($16) - ($21))|0;
   $26 = $25 >> 31;
   $27 = $26 ^ $25;
   $28 = (($27) - ($26))|0;
   $29 = ($28|0)<($4|0);
   $30 = (($19) - ($16))|0;
   $31 = $30 >> 31;
   $32 = (($24) - ($21))|0;
   $33 = $32 >> 31;
   if ($29) {
    $34 = $33 ^ $32;
    $35 = (($34) - ($33))|0;
    $36 = $31 ^ $30;
    $37 = (($36) - ($31))|0;
    $$not = ($37|0)>=($5|0);
    $$not131 = ($35|0)>=($5|0);
    $brmerge = $$not | $$not131;
    if (!($brmerge)) {
     $38 = (($21) - ($16))|0;
     $39 = $38 << 2;
     $40 = (($19) + 4)|0;
     $41 = (($40) - ($24))|0;
     $42 = (($41) + ($39))|0;
     $43 = $42 >> 3;
     $44 = (0 - ($12))|0;
     $45 = ($43|0)<($44|0);
     $46 = ($43|0)>($12|0);
     $$ = $46 ? $12 : $43;
     $47 = $45 ? $44 : $$;
     $48 = (($47) + ($16))|0;
     $49 = ($48>>>0)>(255);
     $50 = (0 - ($48))|0;
     $51 = $50 >> 31;
     $52 = $49 ? $51 : $48;
     $53 = $52&255;
     HEAP8[$14>>0] = $53;
     $54 = (($21) - ($47))|0;
     $55 = ($54>>>0)>(255);
     $56 = (0 - ($54))|0;
     $57 = $56 >> 31;
     $58 = $55 ? $57 : $54;
     $59 = $58&255;
     HEAP8[$$0140>>0] = $59;
    }
   }
   $60 = (($$0130137) + ($7)|0);
   $61 = HEAP8[$60>>0]|0;
   $62 = $61&255;
   $63 = (($$0130137) + ($8)|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = $64&255;
   $66 = HEAP8[$$0130137>>0]|0;
   $67 = $66&255;
   $68 = (($$0130137) + ($2)|0);
   $69 = HEAP8[$68>>0]|0;
   $70 = $69&255;
   $71 = (($62) - ($67))|0;
   $72 = $71 >> 31;
   $73 = $72 ^ $71;
   $74 = (($73) - ($72))|0;
   $75 = ($74|0)<($4|0);
   $76 = (($65) - ($62))|0;
   $77 = $76 >> 31;
   $78 = (($70) - ($67))|0;
   $79 = $78 >> 31;
   if ($75) {
    $80 = $79 ^ $78;
    $81 = (($80) - ($79))|0;
    $82 = $77 ^ $76;
    $83 = (($82) - ($77))|0;
    $$not132 = ($83|0)>=($5|0);
    $$not133 = ($81|0)>=($5|0);
    $brmerge134 = $$not132 | $$not133;
    if (!($brmerge134)) {
     $84 = (($67) - ($62))|0;
     $85 = $84 << 2;
     $86 = (($65) + 4)|0;
     $87 = (($86) - ($70))|0;
     $88 = (($87) + ($85))|0;
     $89 = $88 >> 3;
     $90 = (0 - ($12))|0;
     $91 = ($89|0)<($90|0);
     $92 = ($89|0)>($12|0);
     $$135 = $92 ? $12 : $89;
     $93 = $91 ? $90 : $$135;
     $94 = (($93) + ($62))|0;
     $95 = ($94>>>0)>(255);
     $96 = (0 - ($94))|0;
     $97 = $96 >> 31;
     $98 = $95 ? $97 : $94;
     $99 = $98&255;
     HEAP8[$60>>0] = $99;
     $100 = (($67) - ($93))|0;
     $101 = ($100>>>0)>(255);
     $102 = (0 - ($100))|0;
     $103 = $102 >> 31;
     $104 = $101 ? $103 : $100;
     $105 = $104&255;
     HEAP8[$$0130137>>0] = $105;
    }
   }
  }
  $106 = (($$0140) + ($3)|0);
  $107 = (($$0130137) + ($3)|0);
  $108 = (($$0129139) + 1)|0;
  $exitcond = ($108|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$0129139 = $108;$$0130137 = $107;$$0140 = $106;
  }
 }
 return;
}
function __Z16DeblockLumaEq4_cPhiiii($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$sink = 0, $$0138160 = 0, $$0161 = 0, $$not = 0, $$not139 = 0, $$sink141 = 0, $$sink143 = 0, $$sink144 = 0, $$sink145 = 0, $$sink146 = 0, $$sink148 = 0, $$sink150 = 0, $$sink151 = 0, $$sink152 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, $tmp = 0, $tmp153 = 0, $tmp154 = 0, $tmp155 = 0, $tmp156 = 0, $tmp157 = 0, $tmp158 = 0, $tmp159 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (0 - ($1))|0;
 $6 = Math_imul($1, -2)|0;
 $7 = Math_imul($1, -3)|0;
 $8 = $1 << 1;
 $9 = $3 >> 2;
 $10 = (($9) + 2)|0;
 $11 = Math_imul($1, -4)|0;
 $12 = ($1*3)|0;
 $$0138160 = 0;$$0161 = $0;
 while(1) {
  $13 = (($$0161) + ($5)|0);
  $14 = HEAP8[$13>>0]|0;
  $15 = $14&255;
  $16 = (($$0161) + ($6)|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17&255;
  $19 = (($$0161) + ($7)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20&255;
  $22 = HEAP8[$$0161>>0]|0;
  $23 = $22&255;
  $24 = (($$0161) + ($1)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = (($$0161) + ($8)|0);
  $28 = HEAP8[$27>>0]|0;
  $29 = $28&255;
  $30 = (($15) - ($23))|0;
  $31 = $30 >> 31;
  $32 = $31 ^ $30;
  $33 = (($32) - ($31))|0;
  $34 = (($18) - ($15))|0;
  $35 = $34 >> 31;
  $36 = (($26) - ($23))|0;
  $37 = $36 >> 31;
  $38 = ($33|0)<($3|0);
  do {
   if ($38) {
    $39 = $37 ^ $36;
    $40 = (($39) - ($37))|0;
    $41 = $35 ^ $34;
    $42 = (($41) - ($35))|0;
    $$not = ($42|0)>=($4|0);
    $$not139 = ($40|0)>=($4|0);
    $brmerge = $$not | $$not139;
    if (!($brmerge)) {
     $43 = ($33|0)<($10|0);
     $44 = $18 << 1;
     if (!($43)) {
      $100 = (($15) + 2)|0;
      $101 = (($100) + ($44))|0;
      $102 = (($101) + ($26))|0;
      $103 = $102 >>> 2;
      $104 = $103&255;
      HEAP8[$13>>0] = $104;
      $105 = $26 << 1;
      $106 = (($18) + 2)|0;
      $107 = (($106) + ($23))|0;
      $108 = (($107) + ($105))|0;
      $109 = $108 >>> 2;
      $110 = $109&255;
      HEAP8[$$0161>>0] = $110;
      break;
     }
     $45 = (($21) - ($15))|0;
     $46 = $45 >> 31;
     $47 = $46 ^ $45;
     $48 = (($47) - ($46))|0;
     $49 = ($48|0)<($4|0);
     $50 = (($29) - ($23))|0;
     $51 = $50 >> 31;
     $52 = $51 ^ $50;
     $53 = (($52) - ($51))|0;
     $54 = ($53|0)<($4|0);
     if ($49) {
      $55 = (($$0161) + ($11)|0);
      $56 = HEAP8[$55>>0]|0;
      $57 = $56&255;
      $tmp = (($23) + ($15))|0;
      $tmp153 = $tmp << 1;
      $58 = (($44) + 4)|0;
      $59 = (($58) + ($21))|0;
      $60 = (($59) + ($26))|0;
      $61 = (($60) + ($tmp153))|0;
      $62 = $61 >>> 3;
      $63 = $62&255;
      HEAP8[$13>>0] = $63;
      $64 = (($15) + 2)|0;
      $65 = (($64) + ($18))|0;
      $66 = (($65) + ($21))|0;
      $67 = (($66) + ($23))|0;
      $68 = $67 >>> 2;
      $69 = $68&255;
      HEAP8[$16>>0] = $69;
      $tmp154 = (($57) + ($21))|0;
      $tmp155 = $tmp154 << 1;
      $70 = (($21) + ($18))|0;
      $71 = (($70) + ($tmp155))|0;
      $$sink146 = $19;$$sink148 = 3;$$sink150 = 4;$$sink151 = $23;$$sink152 = $71;
     } else {
      $$sink146 = $13;$$sink148 = 2;$$sink150 = 2;$$sink151 = $26;$$sink152 = $44;
     }
     $72 = (($$sink152) + ($15))|0;
     $73 = (($72) + ($$sink151))|0;
     $74 = (($73) + ($$sink150))|0;
     $75 = $74 >>> $$sink148;
     $76 = $75&255;
     HEAP8[$$sink146>>0] = $76;
     $77 = $26 << 1;
     if ($54) {
      $78 = (($$0161) + ($12)|0);
      $79 = HEAP8[$78>>0]|0;
      $80 = $79&255;
      $tmp156 = (($23) + ($15))|0;
      $tmp157 = $tmp156 << 1;
      $81 = (($18) + 4)|0;
      $82 = (($81) + ($77))|0;
      $83 = (($82) + ($29))|0;
      $84 = (($83) + ($tmp157))|0;
      $85 = $84 >>> 3;
      $86 = $85&255;
      HEAP8[$$0161>>0] = $86;
      $87 = (($15) + 2)|0;
      $88 = (($87) + ($23))|0;
      $89 = (($88) + ($26))|0;
      $90 = (($89) + ($29))|0;
      $91 = $90 >>> 2;
      $92 = $91&255;
      HEAP8[$24>>0] = $92;
      $tmp158 = (($80) + ($29))|0;
      $tmp159 = $tmp158 << 1;
      $93 = (($29) + ($26))|0;
      $94 = (($93) + ($tmp159))|0;
      $$0$sink = $27;$$sink141 = 3;$$sink143 = 4;$$sink144 = $15;$$sink145 = $94;
     } else {
      $$0$sink = $$0161;$$sink141 = 2;$$sink143 = 2;$$sink144 = $18;$$sink145 = $77;
     }
     $95 = (($$sink145) + ($23))|0;
     $96 = (($95) + ($$sink144))|0;
     $97 = (($96) + ($$sink143))|0;
     $98 = $97 >>> $$sink141;
     $99 = $98&255;
     HEAP8[$$0$sink>>0] = $99;
    }
   }
  } while(0);
  $111 = (($$0161) + ($2)|0);
  $112 = (($$0138160) + 1)|0;
  $exitcond = ($112|0)==(16);
  if ($exitcond) {
   break;
  } else {
   $$0138160 = $112;$$0161 = $111;
  }
 }
 return;
}
function __Z16DeblockLumaLt4_cPhiiiiPa($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0140146 = 0, $$0141 = 0, $$0147 = 0, $$1 = 0, $$1$ = 0, $$143 = 0, $$not = 0, $$not142 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (0 - ($1))|0;
 $7 = Math_imul($1, -2)|0;
 $8 = Math_imul($1, -3)|0;
 $9 = $1 << 1;
 $$0140146 = 0;$$0147 = $0;
 while(1) {
  $10 = $$0140146 >> 2;
  $11 = (($5) + ($10)|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  $14 = ($12<<24>>24)>(-1);
  if ($14) {
   $15 = (($$0147) + ($6)|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = $16&255;
   $18 = (($$0147) + ($7)|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19&255;
   $21 = (($$0147) + ($8)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22&255;
   $24 = HEAP8[$$0147>>0]|0;
   $25 = $24&255;
   $26 = (($$0147) + ($1)|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = $27&255;
   $29 = (($$0147) + ($9)|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = $30&255;
   $32 = (($17) - ($25))|0;
   $33 = $32 >> 31;
   $34 = $33 ^ $32;
   $35 = (($34) - ($33))|0;
   $36 = ($35|0)<($3|0);
   $37 = (($20) - ($17))|0;
   $38 = $37 >> 31;
   $39 = (($28) - ($25))|0;
   $40 = $39 >> 31;
   if ($36) {
    $41 = $40 ^ $39;
    $42 = (($41) - ($40))|0;
    $43 = $38 ^ $37;
    $44 = (($43) - ($38))|0;
    $$not = ($44|0)>=($4|0);
    $$not142 = ($42|0)>=($4|0);
    $brmerge = $$not | $$not142;
    if (!($brmerge)) {
     $45 = (($23) - ($17))|0;
     $46 = $45 >> 31;
     $47 = $46 ^ $45;
     $48 = (($47) - ($46))|0;
     $49 = ($48|0)<($4|0);
     $50 = (($31) - ($25))|0;
     $51 = $50 >> 31;
     $52 = $51 ^ $50;
     $53 = (($52) - ($51))|0;
     $54 = ($53|0)<($4|0);
     if ($49) {
      $55 = (($17) + 1)|0;
      $56 = (($55) + ($25))|0;
      $57 = $56 >>> 1;
      $58 = $20 << 1;
      $59 = (($23) - ($58))|0;
      $60 = (($59) + ($57))|0;
      $61 = $60 >> 1;
      $62 = (0 - ($13))|0;
      $63 = ($61|0)<($62|0);
      $64 = ($61|0)>($13|0);
      $$ = $64 ? $13 : $61;
      $65 = $63 ? $62 : $$;
      $66 = (($65) + ($20))|0;
      $67 = $66&255;
      HEAP8[$18>>0] = $67;
      $68 = (($13) + 1)|0;
      $$0141 = $68;
     } else {
      $$0141 = $13;
     }
     if ($54) {
      $69 = (($17) + 1)|0;
      $70 = (($69) + ($25))|0;
      $71 = $70 >>> 1;
      $72 = $28 << 1;
      $73 = (($31) - ($72))|0;
      $74 = (($73) + ($71))|0;
      $75 = $74 >> 1;
      $76 = (0 - ($13))|0;
      $77 = ($75|0)<($76|0);
      $78 = ($75|0)>($13|0);
      $$143 = $78 ? $13 : $75;
      $79 = $77 ? $76 : $$143;
      $80 = (($79) + ($28))|0;
      $81 = $80&255;
      HEAP8[$26>>0] = $81;
      $82 = (($$0141) + 1)|0;
      $$1 = $82;
     } else {
      $$1 = $$0141;
     }
     $83 = (($25) - ($17))|0;
     $84 = $83 << 2;
     $85 = (($20) + 4)|0;
     $86 = (($85) - ($28))|0;
     $87 = (($86) + ($84))|0;
     $88 = $87 >> 3;
     $89 = (0 - ($$1))|0;
     $90 = ($88|0)<($89|0);
     $91 = ($88|0)>($$1|0);
     $$1$ = $91 ? $$1 : $88;
     $92 = $90 ? $89 : $$1$;
     $93 = (($92) + ($17))|0;
     $94 = ($93>>>0)>(255);
     $95 = (0 - ($93))|0;
     $96 = $95 >> 31;
     $97 = $94 ? $96 : $93;
     $98 = $97&255;
     HEAP8[$15>>0] = $98;
     $99 = (($25) - ($92))|0;
     $100 = ($99>>>0)>(255);
     $101 = (0 - ($99))|0;
     $102 = $101 >> 31;
     $103 = $100 ? $102 : $99;
     $104 = $103&255;
     HEAP8[$$0147>>0] = $104;
    }
   }
  }
  $105 = (($$0147) + ($2)|0);
  $106 = (($$0140146) + 1)|0;
  $exitcond = ($106|0)==(16);
  if ($exitcond) {
   break;
  } else {
   $$0140146 = $106;$$0147 = $105;
  }
 }
 return;
}
function __Z13WelsCopy8x8_cPhiS_i($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $1 << 1;
 $5 = $3 << 1;
 $6 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 HEAP8[$0>>0]=$6&255;HEAP8[$0+1>>0]=($6>>8)&255;HEAP8[$0+2>>0]=($6>>16)&255;HEAP8[$0+3>>0]=$6>>24;
 $7 = ((($2)) + 4|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ((($0)) + 4|0);
 HEAP8[$9>>0]=$8&255;HEAP8[$9+1>>0]=($8>>8)&255;HEAP8[$9+2>>0]=($8>>16)&255;HEAP8[$9+3>>0]=$8>>24;
 $10 = (($2) + ($3)|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = (($0) + ($1)|0);
 HEAP8[$12>>0]=$11&255;HEAP8[$12+1>>0]=($11>>8)&255;HEAP8[$12+2>>0]=($11>>16)&255;HEAP8[$12+3>>0]=$11>>24;
 $13 = ((($10)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = ((($12)) + 4|0);
 HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
 $16 = (($0) + ($4)|0);
 $17 = (($2) + ($5)|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 HEAP8[$16>>0]=$18&255;HEAP8[$16+1>>0]=($18>>8)&255;HEAP8[$16+2>>0]=($18>>16)&255;HEAP8[$16+3>>0]=$18>>24;
 $19 = ((($17)) + 4|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $21 = ((($16)) + 4|0);
 HEAP8[$21>>0]=$20&255;HEAP8[$21+1>>0]=($20>>8)&255;HEAP8[$21+2>>0]=($20>>16)&255;HEAP8[$21+3>>0]=$20>>24;
 $22 = (($17) + ($3)|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = (($16) + ($1)|0);
 HEAP8[$24>>0]=$23&255;HEAP8[$24+1>>0]=($23>>8)&255;HEAP8[$24+2>>0]=($23>>16)&255;HEAP8[$24+3>>0]=$23>>24;
 $25 = ((($22)) + 4|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = ((($24)) + 4|0);
 HEAP8[$27>>0]=$26&255;HEAP8[$27+1>>0]=($26>>8)&255;HEAP8[$27+2>>0]=($26>>16)&255;HEAP8[$27+3>>0]=$26>>24;
 $28 = (($16) + ($4)|0);
 $29 = (($17) + ($5)|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 HEAP8[$28>>0]=$30&255;HEAP8[$28+1>>0]=($30>>8)&255;HEAP8[$28+2>>0]=($30>>16)&255;HEAP8[$28+3>>0]=$30>>24;
 $31 = ((($29)) + 4|0);
 $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
 $33 = ((($28)) + 4|0);
 HEAP8[$33>>0]=$32&255;HEAP8[$33+1>>0]=($32>>8)&255;HEAP8[$33+2>>0]=($32>>16)&255;HEAP8[$33+3>>0]=$32>>24;
 $34 = (($29) + ($3)|0);
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 $36 = (($28) + ($1)|0);
 HEAP8[$36>>0]=$35&255;HEAP8[$36+1>>0]=($35>>8)&255;HEAP8[$36+2>>0]=($35>>16)&255;HEAP8[$36+3>>0]=$35>>24;
 $37 = ((($34)) + 4|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = ((($36)) + 4|0);
 HEAP8[$39>>0]=$38&255;HEAP8[$39+1>>0]=($38>>8)&255;HEAP8[$39+2>>0]=($38>>16)&255;HEAP8[$39+3>>0]=$38>>24;
 $40 = (($28) + ($4)|0);
 $41 = (($29) + ($5)|0);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 HEAP8[$40>>0]=$42&255;HEAP8[$40+1>>0]=($42>>8)&255;HEAP8[$40+2>>0]=($42>>16)&255;HEAP8[$40+3>>0]=$42>>24;
 $43 = ((($41)) + 4|0);
 $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
 $45 = ((($40)) + 4|0);
 HEAP8[$45>>0]=$44&255;HEAP8[$45+1>>0]=($44>>8)&255;HEAP8[$45+2>>0]=($44>>16)&255;HEAP8[$45+3>>0]=$44>>24;
 $46 = (($41) + ($3)|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 $48 = (($40) + ($1)|0);
 HEAP8[$48>>0]=$47&255;HEAP8[$48+1>>0]=($47>>8)&255;HEAP8[$48+2>>0]=($47>>16)&255;HEAP8[$48+3>>0]=$47>>24;
 $49 = ((($46)) + 4|0);
 $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
 $51 = ((($48)) + 4|0);
 HEAP8[$51>>0]=$50&255;HEAP8[$51+1>>0]=($50>>8)&255;HEAP8[$51+2>>0]=($50>>16)&255;HEAP8[$51+3>>0]=$50>>24;
 return;
}
function __Z15WelsCopy16x16_cPhiS_i($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 HEAP8[$0>>0]=$4&255;HEAP8[$0+1>>0]=($4>>8)&255;HEAP8[$0+2>>0]=($4>>16)&255;HEAP8[$0+3>>0]=$4>>24;
 $5 = ((($2)) + 4|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ((($0)) + 4|0);
 HEAP8[$7>>0]=$6&255;HEAP8[$7+1>>0]=($6>>8)&255;HEAP8[$7+2>>0]=($6>>16)&255;HEAP8[$7+3>>0]=$6>>24;
 $8 = ((($2)) + 8|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($0)) + 8|0);
 HEAP8[$10>>0]=$9&255;HEAP8[$10+1>>0]=($9>>8)&255;HEAP8[$10+2>>0]=($9>>16)&255;HEAP8[$10+3>>0]=$9>>24;
 $11 = ((($2)) + 12|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ((($0)) + 12|0);
 HEAP8[$13>>0]=$12&255;HEAP8[$13+1>>0]=($12>>8)&255;HEAP8[$13+2>>0]=($12>>16)&255;HEAP8[$13+3>>0]=$12>>24;
 $14 = (($0) + ($1)|0);
 $15 = (($2) + ($3)|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 HEAP8[$14>>0]=$16&255;HEAP8[$14+1>>0]=($16>>8)&255;HEAP8[$14+2>>0]=($16>>16)&255;HEAP8[$14+3>>0]=$16>>24;
 $17 = ((($15)) + 4|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = ((($14)) + 4|0);
 HEAP8[$19>>0]=$18&255;HEAP8[$19+1>>0]=($18>>8)&255;HEAP8[$19+2>>0]=($18>>16)&255;HEAP8[$19+3>>0]=$18>>24;
 $20 = ((($15)) + 8|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ((($14)) + 8|0);
 HEAP8[$22>>0]=$21&255;HEAP8[$22+1>>0]=($21>>8)&255;HEAP8[$22+2>>0]=($21>>16)&255;HEAP8[$22+3>>0]=$21>>24;
 $23 = ((($15)) + 12|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ((($14)) + 12|0);
 HEAP8[$25>>0]=$24&255;HEAP8[$25+1>>0]=($24>>8)&255;HEAP8[$25+2>>0]=($24>>16)&255;HEAP8[$25+3>>0]=$24>>24;
 $26 = (($14) + ($1)|0);
 $27 = (($15) + ($3)|0);
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 HEAP8[$26>>0]=$28&255;HEAP8[$26+1>>0]=($28>>8)&255;HEAP8[$26+2>>0]=($28>>16)&255;HEAP8[$26+3>>0]=$28>>24;
 $29 = ((($27)) + 4|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = ((($26)) + 4|0);
 HEAP8[$31>>0]=$30&255;HEAP8[$31+1>>0]=($30>>8)&255;HEAP8[$31+2>>0]=($30>>16)&255;HEAP8[$31+3>>0]=$30>>24;
 $32 = ((($27)) + 8|0);
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = ((($26)) + 8|0);
 HEAP8[$34>>0]=$33&255;HEAP8[$34+1>>0]=($33>>8)&255;HEAP8[$34+2>>0]=($33>>16)&255;HEAP8[$34+3>>0]=$33>>24;
 $35 = ((($27)) + 12|0);
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ((($26)) + 12|0);
 HEAP8[$37>>0]=$36&255;HEAP8[$37+1>>0]=($36>>8)&255;HEAP8[$37+2>>0]=($36>>16)&255;HEAP8[$37+3>>0]=$36>>24;
 $38 = (($26) + ($1)|0);
 $39 = (($27) + ($3)|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 HEAP8[$38>>0]=$40&255;HEAP8[$38+1>>0]=($40>>8)&255;HEAP8[$38+2>>0]=($40>>16)&255;HEAP8[$38+3>>0]=$40>>24;
 $41 = ((($39)) + 4|0);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ((($38)) + 4|0);
 HEAP8[$43>>0]=$42&255;HEAP8[$43+1>>0]=($42>>8)&255;HEAP8[$43+2>>0]=($42>>16)&255;HEAP8[$43+3>>0]=$42>>24;
 $44 = ((($39)) + 8|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = ((($38)) + 8|0);
 HEAP8[$46>>0]=$45&255;HEAP8[$46+1>>0]=($45>>8)&255;HEAP8[$46+2>>0]=($45>>16)&255;HEAP8[$46+3>>0]=$45>>24;
 $47 = ((($39)) + 12|0);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = ((($38)) + 12|0);
 HEAP8[$49>>0]=$48&255;HEAP8[$49+1>>0]=($48>>8)&255;HEAP8[$49+2>>0]=($48>>16)&255;HEAP8[$49+3>>0]=$48>>24;
 $50 = (($38) + ($1)|0);
 $51 = (($39) + ($3)|0);
 $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
 HEAP8[$50>>0]=$52&255;HEAP8[$50+1>>0]=($52>>8)&255;HEAP8[$50+2>>0]=($52>>16)&255;HEAP8[$50+3>>0]=$52>>24;
 $53 = ((($51)) + 4|0);
 $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
 $55 = ((($50)) + 4|0);
 HEAP8[$55>>0]=$54&255;HEAP8[$55+1>>0]=($54>>8)&255;HEAP8[$55+2>>0]=($54>>16)&255;HEAP8[$55+3>>0]=$54>>24;
 $56 = ((($51)) + 8|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = ((($50)) + 8|0);
 HEAP8[$58>>0]=$57&255;HEAP8[$58+1>>0]=($57>>8)&255;HEAP8[$58+2>>0]=($57>>16)&255;HEAP8[$58+3>>0]=$57>>24;
 $59 = ((($51)) + 12|0);
 $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
 $61 = ((($50)) + 12|0);
 HEAP8[$61>>0]=$60&255;HEAP8[$61+1>>0]=($60>>8)&255;HEAP8[$61+2>>0]=($60>>16)&255;HEAP8[$61+3>>0]=$60>>24;
 $62 = (($50) + ($1)|0);
 $63 = (($51) + ($3)|0);
 $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
 HEAP8[$62>>0]=$64&255;HEAP8[$62+1>>0]=($64>>8)&255;HEAP8[$62+2>>0]=($64>>16)&255;HEAP8[$62+3>>0]=$64>>24;
 $65 = ((($63)) + 4|0);
 $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
 $67 = ((($62)) + 4|0);
 HEAP8[$67>>0]=$66&255;HEAP8[$67+1>>0]=($66>>8)&255;HEAP8[$67+2>>0]=($66>>16)&255;HEAP8[$67+3>>0]=$66>>24;
 $68 = ((($63)) + 8|0);
 $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
 $70 = ((($62)) + 8|0);
 HEAP8[$70>>0]=$69&255;HEAP8[$70+1>>0]=($69>>8)&255;HEAP8[$70+2>>0]=($69>>16)&255;HEAP8[$70+3>>0]=$69>>24;
 $71 = ((($63)) + 12|0);
 $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
 $73 = ((($62)) + 12|0);
 HEAP8[$73>>0]=$72&255;HEAP8[$73+1>>0]=($72>>8)&255;HEAP8[$73+2>>0]=($72>>16)&255;HEAP8[$73+3>>0]=$72>>24;
 $74 = (($62) + ($1)|0);
 $75 = (($63) + ($3)|0);
 $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
 HEAP8[$74>>0]=$76&255;HEAP8[$74+1>>0]=($76>>8)&255;HEAP8[$74+2>>0]=($76>>16)&255;HEAP8[$74+3>>0]=$76>>24;
 $77 = ((($75)) + 4|0);
 $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
 $79 = ((($74)) + 4|0);
 HEAP8[$79>>0]=$78&255;HEAP8[$79+1>>0]=($78>>8)&255;HEAP8[$79+2>>0]=($78>>16)&255;HEAP8[$79+3>>0]=$78>>24;
 $80 = ((($75)) + 8|0);
 $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
 $82 = ((($74)) + 8|0);
 HEAP8[$82>>0]=$81&255;HEAP8[$82+1>>0]=($81>>8)&255;HEAP8[$82+2>>0]=($81>>16)&255;HEAP8[$82+3>>0]=$81>>24;
 $83 = ((($75)) + 12|0);
 $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
 $85 = ((($74)) + 12|0);
 HEAP8[$85>>0]=$84&255;HEAP8[$85+1>>0]=($84>>8)&255;HEAP8[$85+2>>0]=($84>>16)&255;HEAP8[$85+3>>0]=$84>>24;
 $86 = (($74) + ($1)|0);
 $87 = (($75) + ($3)|0);
 $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
 HEAP8[$86>>0]=$88&255;HEAP8[$86+1>>0]=($88>>8)&255;HEAP8[$86+2>>0]=($88>>16)&255;HEAP8[$86+3>>0]=$88>>24;
 $89 = ((($87)) + 4|0);
 $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
 $91 = ((($86)) + 4|0);
 HEAP8[$91>>0]=$90&255;HEAP8[$91+1>>0]=($90>>8)&255;HEAP8[$91+2>>0]=($90>>16)&255;HEAP8[$91+3>>0]=$90>>24;
 $92 = ((($87)) + 8|0);
 $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
 $94 = ((($86)) + 8|0);
 HEAP8[$94>>0]=$93&255;HEAP8[$94+1>>0]=($93>>8)&255;HEAP8[$94+2>>0]=($93>>16)&255;HEAP8[$94+3>>0]=$93>>24;
 $95 = ((($87)) + 12|0);
 $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
 $97 = ((($86)) + 12|0);
 HEAP8[$97>>0]=$96&255;HEAP8[$97+1>>0]=($96>>8)&255;HEAP8[$97+2>>0]=($96>>16)&255;HEAP8[$97+3>>0]=$96>>24;
 $98 = (($86) + ($1)|0);
 $99 = (($87) + ($3)|0);
 $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
 HEAP8[$98>>0]=$100&255;HEAP8[$98+1>>0]=($100>>8)&255;HEAP8[$98+2>>0]=($100>>16)&255;HEAP8[$98+3>>0]=$100>>24;
 $101 = ((($99)) + 4|0);
 $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
 $103 = ((($98)) + 4|0);
 HEAP8[$103>>0]=$102&255;HEAP8[$103+1>>0]=($102>>8)&255;HEAP8[$103+2>>0]=($102>>16)&255;HEAP8[$103+3>>0]=$102>>24;
 $104 = ((($99)) + 8|0);
 $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
 $106 = ((($98)) + 8|0);
 HEAP8[$106>>0]=$105&255;HEAP8[$106+1>>0]=($105>>8)&255;HEAP8[$106+2>>0]=($105>>16)&255;HEAP8[$106+3>>0]=$105>>24;
 $107 = ((($99)) + 12|0);
 $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
 $109 = ((($98)) + 12|0);
 HEAP8[$109>>0]=$108&255;HEAP8[$109+1>>0]=($108>>8)&255;HEAP8[$109+2>>0]=($108>>16)&255;HEAP8[$109+3>>0]=$108>>24;
 $110 = (($98) + ($1)|0);
 $111 = (($99) + ($3)|0);
 $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
 HEAP8[$110>>0]=$112&255;HEAP8[$110+1>>0]=($112>>8)&255;HEAP8[$110+2>>0]=($112>>16)&255;HEAP8[$110+3>>0]=$112>>24;
 $113 = ((($111)) + 4|0);
 $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
 $115 = ((($110)) + 4|0);
 HEAP8[$115>>0]=$114&255;HEAP8[$115+1>>0]=($114>>8)&255;HEAP8[$115+2>>0]=($114>>16)&255;HEAP8[$115+3>>0]=$114>>24;
 $116 = ((($111)) + 8|0);
 $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
 $118 = ((($110)) + 8|0);
 HEAP8[$118>>0]=$117&255;HEAP8[$118+1>>0]=($117>>8)&255;HEAP8[$118+2>>0]=($117>>16)&255;HEAP8[$118+3>>0]=$117>>24;
 $119 = ((($111)) + 12|0);
 $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
 $121 = ((($110)) + 12|0);
 HEAP8[$121>>0]=$120&255;HEAP8[$121+1>>0]=($120>>8)&255;HEAP8[$121+2>>0]=($120>>16)&255;HEAP8[$121+3>>0]=$120>>24;
 $122 = (($110) + ($1)|0);
 $123 = (($111) + ($3)|0);
 $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
 HEAP8[$122>>0]=$124&255;HEAP8[$122+1>>0]=($124>>8)&255;HEAP8[$122+2>>0]=($124>>16)&255;HEAP8[$122+3>>0]=$124>>24;
 $125 = ((($123)) + 4|0);
 $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
 $127 = ((($122)) + 4|0);
 HEAP8[$127>>0]=$126&255;HEAP8[$127+1>>0]=($126>>8)&255;HEAP8[$127+2>>0]=($126>>16)&255;HEAP8[$127+3>>0]=$126>>24;
 $128 = ((($123)) + 8|0);
 $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
 $130 = ((($122)) + 8|0);
 HEAP8[$130>>0]=$129&255;HEAP8[$130+1>>0]=($129>>8)&255;HEAP8[$130+2>>0]=($129>>16)&255;HEAP8[$130+3>>0]=$129>>24;
 $131 = ((($123)) + 12|0);
 $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
 $133 = ((($122)) + 12|0);
 HEAP8[$133>>0]=$132&255;HEAP8[$133+1>>0]=($132>>8)&255;HEAP8[$133+2>>0]=($132>>16)&255;HEAP8[$133+3>>0]=$132>>24;
 $134 = (($122) + ($1)|0);
 $135 = (($123) + ($3)|0);
 $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
 HEAP8[$134>>0]=$136&255;HEAP8[$134+1>>0]=($136>>8)&255;HEAP8[$134+2>>0]=($136>>16)&255;HEAP8[$134+3>>0]=$136>>24;
 $137 = ((($135)) + 4|0);
 $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
 $139 = ((($134)) + 4|0);
 HEAP8[$139>>0]=$138&255;HEAP8[$139+1>>0]=($138>>8)&255;HEAP8[$139+2>>0]=($138>>16)&255;HEAP8[$139+3>>0]=$138>>24;
 $140 = ((($135)) + 8|0);
 $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
 $142 = ((($134)) + 8|0);
 HEAP8[$142>>0]=$141&255;HEAP8[$142+1>>0]=($141>>8)&255;HEAP8[$142+2>>0]=($141>>16)&255;HEAP8[$142+3>>0]=$141>>24;
 $143 = ((($135)) + 12|0);
 $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
 $145 = ((($134)) + 12|0);
 HEAP8[$145>>0]=$144&255;HEAP8[$145+1>>0]=($144>>8)&255;HEAP8[$145+2>>0]=($144>>16)&255;HEAP8[$145+3>>0]=$144>>24;
 $146 = (($134) + ($1)|0);
 $147 = (($135) + ($3)|0);
 $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
 HEAP8[$146>>0]=$148&255;HEAP8[$146+1>>0]=($148>>8)&255;HEAP8[$146+2>>0]=($148>>16)&255;HEAP8[$146+3>>0]=$148>>24;
 $149 = ((($147)) + 4|0);
 $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
 $151 = ((($146)) + 4|0);
 HEAP8[$151>>0]=$150&255;HEAP8[$151+1>>0]=($150>>8)&255;HEAP8[$151+2>>0]=($150>>16)&255;HEAP8[$151+3>>0]=$150>>24;
 $152 = ((($147)) + 8|0);
 $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
 $154 = ((($146)) + 8|0);
 HEAP8[$154>>0]=$153&255;HEAP8[$154+1>>0]=($153>>8)&255;HEAP8[$154+2>>0]=($153>>16)&255;HEAP8[$154+3>>0]=$153>>24;
 $155 = ((($147)) + 12|0);
 $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
 $157 = ((($146)) + 12|0);
 HEAP8[$157>>0]=$156&255;HEAP8[$157+1>>0]=($156>>8)&255;HEAP8[$157+2>>0]=($156>>16)&255;HEAP8[$157+3>>0]=$156>>24;
 $158 = (($146) + ($1)|0);
 $159 = (($147) + ($3)|0);
 $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
 HEAP8[$158>>0]=$160&255;HEAP8[$158+1>>0]=($160>>8)&255;HEAP8[$158+2>>0]=($160>>16)&255;HEAP8[$158+3>>0]=$160>>24;
 $161 = ((($159)) + 4|0);
 $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
 $163 = ((($158)) + 4|0);
 HEAP8[$163>>0]=$162&255;HEAP8[$163+1>>0]=($162>>8)&255;HEAP8[$163+2>>0]=($162>>16)&255;HEAP8[$163+3>>0]=$162>>24;
 $164 = ((($159)) + 8|0);
 $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
 $166 = ((($158)) + 8|0);
 HEAP8[$166>>0]=$165&255;HEAP8[$166+1>>0]=($165>>8)&255;HEAP8[$166+2>>0]=($165>>16)&255;HEAP8[$166+3>>0]=$165>>24;
 $167 = ((($159)) + 12|0);
 $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
 $169 = ((($158)) + 12|0);
 HEAP8[$169>>0]=$168&255;HEAP8[$169+1>>0]=($168>>8)&255;HEAP8[$169+2>>0]=($168>>16)&255;HEAP8[$169+3>>0]=$168>>24;
 $170 = (($158) + ($1)|0);
 $171 = (($159) + ($3)|0);
 $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
 HEAP8[$170>>0]=$172&255;HEAP8[$170+1>>0]=($172>>8)&255;HEAP8[$170+2>>0]=($172>>16)&255;HEAP8[$170+3>>0]=$172>>24;
 $173 = ((($171)) + 4|0);
 $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
 $175 = ((($170)) + 4|0);
 HEAP8[$175>>0]=$174&255;HEAP8[$175+1>>0]=($174>>8)&255;HEAP8[$175+2>>0]=($174>>16)&255;HEAP8[$175+3>>0]=$174>>24;
 $176 = ((($171)) + 8|0);
 $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
 $178 = ((($170)) + 8|0);
 HEAP8[$178>>0]=$177&255;HEAP8[$178+1>>0]=($177>>8)&255;HEAP8[$178+2>>0]=($177>>16)&255;HEAP8[$178+3>>0]=$177>>24;
 $179 = ((($171)) + 12|0);
 $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
 $181 = ((($170)) + 12|0);
 HEAP8[$181>>0]=$180&255;HEAP8[$181+1>>0]=($180>>8)&255;HEAP8[$181+2>>0]=($180>>16)&255;HEAP8[$181+3>>0]=$180>>24;
 $182 = (($170) + ($1)|0);
 $183 = (($171) + ($3)|0);
 $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
 HEAP8[$182>>0]=$184&255;HEAP8[$182+1>>0]=($184>>8)&255;HEAP8[$182+2>>0]=($184>>16)&255;HEAP8[$182+3>>0]=$184>>24;
 $185 = ((($183)) + 4|0);
 $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
 $187 = ((($182)) + 4|0);
 HEAP8[$187>>0]=$186&255;HEAP8[$187+1>>0]=($186>>8)&255;HEAP8[$187+2>>0]=($186>>16)&255;HEAP8[$187+3>>0]=$186>>24;
 $188 = ((($183)) + 8|0);
 $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
 $190 = ((($182)) + 8|0);
 HEAP8[$190>>0]=$189&255;HEAP8[$190+1>>0]=($189>>8)&255;HEAP8[$190+2>>0]=($189>>16)&255;HEAP8[$190+3>>0]=$189>>24;
 $191 = ((($183)) + 12|0);
 $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
 $193 = ((($182)) + 12|0);
 HEAP8[$193>>0]=$192&255;HEAP8[$193+1>>0]=($192>>8)&255;HEAP8[$193+2>>0]=($192>>16)&255;HEAP8[$193+3>>0]=$192>>24;
 return;
}
function __ZN10WelsCommonL12McHorVer20_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us = 0, $$01721$us = 0, $$01820$us = 0, $$019$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $exitcond = 0, $exitcond25 = 0, $or$cond = 0, $tmp30$i$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($5|0)>(0);
 $7 = ($4|0)>(0);
 $or$cond = $6 & $7;
 if ($or$cond) {
  $$01622$us = 0;$$01721$us = $0;$$01820$us = $2;
 } else {
  return;
 }
 while(1) {
  $$019$us = 0;
  while(1) {
   $8 = (($$01721$us) + ($$019$us)|0);
   $9 = ((($8)) + -2|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = ((($8)) + 3|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = $13&255;
   $15 = ((($8)) + -1|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = $16&255;
   $18 = ((($8)) + 2|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19&255;
   $21 = (($20) + ($17))|0;
   $22 = HEAP8[$8>>0]|0;
   $23 = $22&255;
   $24 = ((($8)) + 1|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = $25&255;
   $27 = (($26) + ($23))|0;
   $28 = Math_imul($21, -5)|0;
   $tmp30$i$us = ($27*20)|0;
   $29 = (($11) + 16)|0;
   $30 = (($29) + ($14))|0;
   $31 = (($30) + ($28))|0;
   $32 = (($31) + ($tmp30$i$us))|0;
   $33 = $32 >> 5;
   $34 = ($33>>>0)>(255);
   $35 = (0 - ($33))|0;
   $36 = $35 >> 31;
   $37 = $34 ? $36 : $33;
   $38 = $37&255;
   $39 = (($$01820$us) + ($$019$us)|0);
   HEAP8[$39>>0] = $38;
   $40 = (($$019$us) + 1)|0;
   $exitcond = ($40|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$019$us = $40;
   }
  }
  $41 = (($$01820$us) + ($3)|0);
  $42 = (($$01721$us) + ($1)|0);
  $43 = (($$01622$us) + 1)|0;
  $exitcond25 = ($43|0)==($5|0);
  if ($exitcond25) {
   break;
  } else {
   $$01622$us = $43;$$01721$us = $42;$$01820$us = $41;
  }
 }
 return;
}
function __ZN10WelsCommonL12McHorVer02_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01723$us = 0, $$01822$us = 0, $$01921$us = 0, $$020$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond26 = 0, $tmp30$i$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($5|0)>(0);
 if (!($6)) {
  return;
 }
 $7 = ($4|0)>(0);
 $8 = $1 << 1;
 $9 = ($1*3)|0;
 $10 = (0 - ($8))|0;
 $11 = (0 - ($1))|0;
 if ($7) {
  $$01723$us = 0;$$01822$us = $0;$$01921$us = $2;
 } else {
  return;
 }
 while(1) {
  $$020$us = 0;
  while(1) {
   $12 = (($$01822$us) + ($$020$us)|0);
   $13 = (($12) + ($10)|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = (($12) + ($9)|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = $17&255;
   $19 = (($12) + ($11)|0);
   $20 = HEAP8[$19>>0]|0;
   $21 = $20&255;
   $22 = (($12) + ($8)|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23&255;
   $25 = (($24) + ($21))|0;
   $26 = HEAP8[$12>>0]|0;
   $27 = $26&255;
   $28 = (($12) + ($1)|0);
   $29 = HEAP8[$28>>0]|0;
   $30 = $29&255;
   $31 = (($30) + ($27))|0;
   $32 = Math_imul($25, -5)|0;
   $tmp30$i$us = ($31*20)|0;
   $33 = (($15) + 16)|0;
   $34 = (($33) + ($18))|0;
   $35 = (($34) + ($32))|0;
   $36 = (($35) + ($tmp30$i$us))|0;
   $37 = $36 >> 5;
   $38 = ($37>>>0)>(255);
   $39 = (0 - ($37))|0;
   $40 = $39 >> 31;
   $41 = $38 ? $40 : $37;
   $42 = $41&255;
   $43 = (($$01921$us) + ($$020$us)|0);
   HEAP8[$43>>0] = $42;
   $44 = (($$020$us) + 1)|0;
   $exitcond = ($44|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$020$us = $44;
   }
  }
  $45 = (($$01921$us) + ($3)|0);
  $46 = (($$01822$us) + ($1)|0);
  $47 = (($$01723$us) + 1)|0;
  $exitcond26 = ($47|0)==($5|0);
  if ($exitcond26) {
   break;
  } else {
   $$01723$us = $47;$$01822$us = $46;$$01921$us = $45;
  }
 }
 return;
}
function __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$02429$us = 0, $$02534 = 0, $$02534$us = 0, $$02633$us = 0, $$02732 = 0, $$02732$us = 0, $$030 = 0, $$030$us = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;
 var $exitcond37 = 0, $exitcond38 = 0, $exitcond39 = 0, $tmp30$i$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $6 = sp;
 $7 = ($5|0)>(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ($4|0)>(-5);
 $9 = ($4|0)>(0);
 $10 = $1 << 1;
 $11 = ($1*3)|0;
 $12 = (0 - ($10))|0;
 $13 = (0 - ($1))|0;
 if (!($8)) {
  $$02534 = 0;$$02732 = $2;
  while(1) {
   if ($9) {
    $$030 = 0;
    while(1) {
     $81 = (($6) + ($$030<<1)|0);
     $82 = HEAP16[$81>>1]|0;
     $83 = $82 << 16 >> 16;
     $84 = ((($81)) + 10|0);
     $85 = HEAP16[$84>>1]|0;
     $86 = $85 << 16 >> 16;
     $87 = ((($81)) + 2|0);
     $88 = HEAP16[$87>>1]|0;
     $89 = $88 << 16 >> 16;
     $90 = ((($81)) + 8|0);
     $91 = HEAP16[$90>>1]|0;
     $92 = $91 << 16 >> 16;
     $93 = (($92) + ($89))|0;
     $94 = ((($81)) + 4|0);
     $95 = HEAP16[$94>>1]|0;
     $96 = $95 << 16 >> 16;
     $97 = ((($81)) + 6|0);
     $98 = HEAP16[$97>>1]|0;
     $99 = $98 << 16 >> 16;
     $100 = (($99) + ($96))|0;
     $101 = Math_imul($93, -5)|0;
     $102 = ($100*20)|0;
     $103 = (($83) + 512)|0;
     $104 = (($103) + ($86))|0;
     $105 = (($104) + ($101))|0;
     $106 = (($105) + ($102))|0;
     $107 = $106 >> 10;
     $108 = ($107>>>0)>(255);
     $109 = (0 - ($107))|0;
     $110 = $109 >> 31;
     $111 = $108 ? $110 : $107;
     $112 = $111&255;
     $113 = (($$02732) + ($$030)|0);
     HEAP8[$113>>0] = $112;
     $114 = (($$030) + 1)|0;
     $exitcond38 = ($114|0)==($4|0);
     if ($exitcond38) {
      break;
     } else {
      $$030 = $114;
     }
    }
   }
   $115 = (($$02732) + ($3)|0);
   $116 = (($$02534) + 1)|0;
   $exitcond39 = ($116|0)==($5|0);
   if ($exitcond39) {
    break;
   } else {
    $$02534 = $116;$$02732 = $115;
   }
  }
  STACKTOP = sp;return;
 }
 $14 = (($4) + 4)|0;
 $$02534$us = 0;$$02633$us = $0;$$02732$us = $2;
 while(1) {
  $15 = ((($$02633$us)) + -2|0);
  $$02429$us = 0;
  while(1) {
   $53 = (($15) + ($$02429$us)|0);
   $54 = (($53) + ($12)|0);
   $55 = HEAP8[$54>>0]|0;
   $56 = $55&255;
   $57 = (($53) + ($11)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = (($53) + ($13)|0);
   $61 = HEAP8[$60>>0]|0;
   $62 = $61&255;
   $63 = (($53) + ($10)|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = $64&255;
   $66 = (($65) + ($62))|0;
   $67 = HEAP8[$53>>0]|0;
   $68 = $67&255;
   $69 = (($53) + ($1)|0);
   $70 = HEAP8[$69>>0]|0;
   $71 = $70&255;
   $72 = (($71) + ($68))|0;
   $73 = Math_imul($66, -5)|0;
   $tmp30$i$us = ($72*20)|0;
   $74 = (($59) + ($56))|0;
   $75 = (($74) + ($73))|0;
   $76 = (($75) + ($tmp30$i$us))|0;
   $77 = $76&65535;
   $78 = (($6) + ($$02429$us<<1)|0);
   HEAP16[$78>>1] = $77;
   $79 = (($$02429$us) + 1)|0;
   $80 = ($$02429$us|0)<($14|0);
   if ($80) {
    $$02429$us = $79;
   } else {
    break;
   }
  }
  if ($9) {
   $$030$us = 0;
   while(1) {
    $19 = (($6) + ($$030$us<<1)|0);
    $20 = HEAP16[$19>>1]|0;
    $21 = $20 << 16 >> 16;
    $22 = ((($19)) + 10|0);
    $23 = HEAP16[$22>>1]|0;
    $24 = $23 << 16 >> 16;
    $25 = ((($19)) + 2|0);
    $26 = HEAP16[$25>>1]|0;
    $27 = $26 << 16 >> 16;
    $28 = ((($19)) + 8|0);
    $29 = HEAP16[$28>>1]|0;
    $30 = $29 << 16 >> 16;
    $31 = (($30) + ($27))|0;
    $32 = ((($19)) + 4|0);
    $33 = HEAP16[$32>>1]|0;
    $34 = $33 << 16 >> 16;
    $35 = ((($19)) + 6|0);
    $36 = HEAP16[$35>>1]|0;
    $37 = $36 << 16 >> 16;
    $38 = (($37) + ($34))|0;
    $39 = Math_imul($31, -5)|0;
    $40 = ($38*20)|0;
    $41 = (($21) + 512)|0;
    $42 = (($41) + ($24))|0;
    $43 = (($42) + ($39))|0;
    $44 = (($43) + ($40))|0;
    $45 = $44 >> 10;
    $46 = ($45>>>0)>(255);
    $47 = (0 - ($45))|0;
    $48 = $47 >> 31;
    $49 = $46 ? $48 : $45;
    $50 = $49&255;
    $51 = (($$02732$us) + ($$030$us)|0);
    HEAP8[$51>>0] = $50;
    $52 = (($$030$us) + 1)|0;
    $exitcond = ($52|0)==($4|0);
    if ($exitcond) {
     break;
    } else {
     $$030$us = $52;
    }
   }
  }
  $16 = (($$02633$us) + ($1)|0);
  $17 = (($$02732$us) + ($3)|0);
  $18 = (($$02534$us) + 1)|0;
  $exitcond37 = ($18|0)==($5|0);
  if ($exitcond37) {
   break;
  } else {
   $$02534$us = $18;$$02633$us = $16;$$02732$us = $17;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL10PixelAvg_cEPhiPKhiS2_iii($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$02028$us = 0, $$02127$us = 0, $$02226$us = 0, $$02325$us = 0, $$024$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond31 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = ($7|0)>(0);
 $9 = ($6|0)>(0);
 $or$cond = $8 & $9;
 if ($or$cond) {
  $$02028$us = 0;$$02127$us = $0;$$02226$us = $2;$$02325$us = $4;
 } else {
  return;
 }
 while(1) {
  $$024$us = 0;
  while(1) {
   $10 = (($$02226$us) + ($$024$us)|0);
   $11 = HEAP8[$10>>0]|0;
   $12 = $11&255;
   $13 = (($$02325$us) + ($$024$us)|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = (($12) + 1)|0;
   $17 = (($16) + ($15))|0;
   $18 = $17 >>> 1;
   $19 = $18&255;
   $20 = (($$02127$us) + ($$024$us)|0);
   HEAP8[$20>>0] = $19;
   $21 = (($$024$us) + 1)|0;
   $exitcond = ($21|0)==($6|0);
   if ($exitcond) {
    break;
   } else {
    $$024$us = $21;
   }
  }
  $22 = (($$02127$us) + ($1)|0);
  $23 = (($$02226$us) + ($3)|0);
  $24 = (($$02325$us) + ($5)|0);
  $25 = (($$02028$us) + 1)|0;
  $exitcond31 = ($25|0)==($7|0);
  if ($exitcond31) {
   break;
  } else {
   $$02028$us = $25;$$02127$us = $22;$$02226$us = $23;$$02325$us = $24;
  }
 }
 return;
}
function __ZN10WelsCommon10McChroma_cEPKhiPhissii($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$01011$i$i = 0, $$01011$i21$i = 0, $$01011$i26$i = 0, $$01114$i$i = 0, $$01213$i$i = 0, $$013$i$i = 0, $$013$i19$i = 0, $$013$i24$i = 0, $$015$i$i = 0, $$04756$us$i = 0, $$04756$us$pn$i = 0, $$04854$us$i = 0, $$04953$us$i = 0, $$05051$us$i = 0, $$0912$i$i = 0, $$0912$i20$i = 0, $$0912$i25$i = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond$i17$i = 0, $exitcond$i22$i = 0, $exitcond$i27$i = 0, $exitcond59$i = 0;
 var $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = $5 | $4;
 $9 = $8 & 7;
 $10 = ($9<<16>>16)==(0);
 if (!($10)) {
  $61 = $5 & 7;
  $62 = $61&65535;
  $63 = $4 & 7;
  $64 = $63&65535;
  $65 = ((15207 + ($62<<5)|0) + ($64<<2)|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66&255;
  $68 = ((((15207 + ($62<<5)|0) + ($64<<2)|0)) + 1|0);
  $69 = HEAP8[$68>>0]|0;
  $70 = $69&255;
  $71 = ((((15207 + ($62<<5)|0) + ($64<<2)|0)) + 2|0);
  $72 = HEAP8[$71>>0]|0;
  $73 = $72&255;
  $74 = ((((15207 + ($62<<5)|0) + ($64<<2)|0)) + 3|0);
  $75 = HEAP8[$74>>0]|0;
  $76 = $75&255;
  $77 = ($7|0)>(0);
  $78 = ($6|0)>(0);
  $or$cond$i = $78 & $77;
  if ($or$cond$i) {
   $$04756$us$pn$i = $0;$$04854$us$i = $2;$$04953$us$i = 0;
  } else {
   return;
  }
  while(1) {
   $$04756$us$i = (($$04756$us$pn$i) + ($1)|0);
   $$05051$us$i = 0;
   while(1) {
    $79 = (($$04756$us$pn$i) + ($$05051$us$i)|0);
    $80 = HEAP8[$79>>0]|0;
    $81 = $80&255;
    $82 = Math_imul($81, $67)|0;
    $83 = (($$05051$us$i) + 1)|0;
    $84 = (($$04756$us$pn$i) + ($83)|0);
    $85 = HEAP8[$84>>0]|0;
    $86 = $85&255;
    $87 = Math_imul($86, $70)|0;
    $88 = (($$04756$us$i) + ($$05051$us$i)|0);
    $89 = HEAP8[$88>>0]|0;
    $90 = $89&255;
    $91 = Math_imul($90, $73)|0;
    $92 = (($$04756$us$i) + ($83)|0);
    $93 = HEAP8[$92>>0]|0;
    $94 = $93&255;
    $95 = Math_imul($94, $76)|0;
    $96 = (($82) + 32)|0;
    $97 = (($96) + ($87))|0;
    $98 = (($97) + ($91))|0;
    $99 = (($98) + ($95))|0;
    $100 = $99 >>> 6;
    $101 = $100&255;
    $102 = (($$04854$us$i) + ($$05051$us$i)|0);
    HEAP8[$102>>0] = $101;
    $exitcond$i = ($83|0)==($6|0);
    if ($exitcond$i) {
     break;
    } else {
     $$05051$us$i = $83;
    }
   }
   $103 = (($$04854$us$i) + ($3)|0);
   $104 = (($$04953$us$i) + 1)|0;
   $exitcond59$i = ($104|0)==($7|0);
   if ($exitcond59$i) {
    break;
   } else {
    $$04756$us$pn$i = $$04756$us$i;$$04854$us$i = $103;$$04953$us$i = $104;
   }
  }
  return;
 }
 switch ($6|0) {
 case 16:  {
  $11 = ($7|0)>(0);
  if ($11) {
   $$01114$i$i = $0;$$01213$i$i = $2;$$015$i$i = 0;
  } else {
   return;
  }
  while(1) {
   $12 = $$01114$i$i;
   $13 = $12;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = (($12) + 4)|0;
   $16 = $15;
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = $$01213$i$i;
   $19 = $18;
   HEAP32[$19>>2] = $14;
   $20 = (($18) + 4)|0;
   $21 = $20;
   HEAP32[$21>>2] = $17;
   $22 = ((($$01114$i$i)) + 8|0);
   $23 = $22;
   $24 = $23;
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = (($23) + 4)|0;
   $27 = $26;
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = ((($$01213$i$i)) + 8|0);
   $30 = $29;
   $31 = $30;
   HEAP32[$31>>2] = $25;
   $32 = (($30) + 4)|0;
   $33 = $32;
   HEAP32[$33>>2] = $28;
   $34 = (($$01213$i$i) + ($3)|0);
   $35 = (($$01114$i$i) + ($1)|0);
   $36 = (($$015$i$i) + 1)|0;
   $exitcond$i$i = ($36|0)==($7|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$01114$i$i = $35;$$01213$i$i = $34;$$015$i$i = $36;
   }
  }
  return;
  break;
 }
 case 8:  {
  $37 = ($7|0)>(0);
  if ($37) {
   $$01011$i26$i = $2;$$013$i24$i = 0;$$0912$i25$i = $0;
  } else {
   return;
  }
  while(1) {
   $38 = $$0912$i25$i;
   $39 = $38;
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = (($38) + 4)|0;
   $42 = $41;
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   $44 = $$01011$i26$i;
   $45 = $44;
   HEAP32[$45>>2] = $40;
   $46 = (($44) + 4)|0;
   $47 = $46;
   HEAP32[$47>>2] = $43;
   $48 = (($$01011$i26$i) + ($3)|0);
   $49 = (($$0912$i25$i) + ($1)|0);
   $50 = (($$013$i24$i) + 1)|0;
   $exitcond$i27$i = ($50|0)==($7|0);
   if ($exitcond$i27$i) {
    break;
   } else {
    $$01011$i26$i = $48;$$013$i24$i = $50;$$0912$i25$i = $49;
   }
  }
  return;
  break;
 }
 case 4:  {
  $51 = ($7|0)>(0);
  if ($51) {
   $$01011$i21$i = $2;$$013$i19$i = 0;$$0912$i20$i = $0;
  } else {
   return;
  }
  while(1) {
   $52 = HEAPU8[$$0912$i20$i>>0]|(HEAPU8[$$0912$i20$i+1>>0]<<8)|(HEAPU8[$$0912$i20$i+2>>0]<<16)|(HEAPU8[$$0912$i20$i+3>>0]<<24);
   HEAP32[$$01011$i21$i>>2] = $52;
   $53 = (($$01011$i21$i) + ($3)|0);
   $54 = (($$0912$i20$i) + ($1)|0);
   $55 = (($$013$i19$i) + 1)|0;
   $exitcond$i22$i = ($55|0)==($7|0);
   if ($exitcond$i22$i) {
    break;
   } else {
    $$01011$i21$i = $53;$$013$i19$i = $55;$$0912$i20$i = $54;
   }
  }
  return;
  break;
 }
 default: {
  $56 = ($7|0)>(0);
  if ($56) {
   $$01011$i$i = $2;$$013$i$i = 0;$$0912$i$i = $0;
  } else {
   return;
  }
  while(1) {
   $57 = HEAPU8[$$0912$i$i>>0]|(HEAPU8[$$0912$i$i+1>>0]<<8);
   HEAP16[$$01011$i$i>>1] = $57;
   $58 = (($$01011$i$i) + ($3)|0);
   $59 = (($$0912$i$i) + ($1)|0);
   $60 = (($$013$i$i) + 1)|0;
   $exitcond$i17$i = ($60|0)==($7|0);
   if ($exitcond$i17$i) {
    break;
   } else {
    $$01011$i$i = $58;$$013$i$i = $60;$$0912$i$i = $59;
   }
  }
  return;
 }
 }
}
function __ZN10WelsCommon8McLuma_cEPKhiPhissii($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = $4 & 3;
 $9 = $8&65535;
 $10 = $5 & 3;
 $11 = $10&65535;
 $12 = ((9160 + ($9<<4)|0) + ($11<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 FUNCTION_TABLE_viiiiii[$13 & 31]($0,$1,$2,$3,$6,$7);
 return;
}
function __ZN10WelsCommonL8McCopy_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01011$i = 0, $$01011$i21 = 0, $$01011$i26 = 0, $$01114$i = 0, $$01213$i = 0, $$013$i = 0, $$013$i19 = 0, $$013$i24 = 0, $$015$i = 0, $$0912$i = 0, $$0912$i20 = 0, $$0912$i25 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i17 = 0, $exitcond$i22 = 0, $exitcond$i27 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($4|0) {
 case 16:  {
  $6 = ($5|0)>(0);
  if ($6) {
   $$01114$i = $0;$$01213$i = $2;$$015$i = 0;
  } else {
   return;
  }
  while(1) {
   $7 = $$01114$i;
   $8 = $7;
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = $$01213$i;
   $14 = $13;
   HEAP32[$14>>2] = $9;
   $15 = (($13) + 4)|0;
   $16 = $15;
   HEAP32[$16>>2] = $12;
   $17 = ((($$01114$i)) + 8|0);
   $18 = $17;
   $19 = $18;
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = (($18) + 4)|0;
   $22 = $21;
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ((($$01213$i)) + 8|0);
   $25 = $24;
   $26 = $25;
   HEAP32[$26>>2] = $20;
   $27 = (($25) + 4)|0;
   $28 = $27;
   HEAP32[$28>>2] = $23;
   $29 = (($$01213$i) + ($3)|0);
   $30 = (($$01114$i) + ($1)|0);
   $31 = (($$015$i) + 1)|0;
   $exitcond$i = ($31|0)==($5|0);
   if ($exitcond$i) {
    break;
   } else {
    $$01114$i = $30;$$01213$i = $29;$$015$i = $31;
   }
  }
  return;
  break;
 }
 case 8:  {
  $32 = ($5|0)>(0);
  if ($32) {
   $$01011$i26 = $2;$$013$i24 = 0;$$0912$i25 = $0;
  } else {
   return;
  }
  while(1) {
   $33 = $$0912$i25;
   $34 = $33;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = (($33) + 4)|0;
   $37 = $36;
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = $$01011$i26;
   $40 = $39;
   HEAP32[$40>>2] = $35;
   $41 = (($39) + 4)|0;
   $42 = $41;
   HEAP32[$42>>2] = $38;
   $43 = (($$01011$i26) + ($3)|0);
   $44 = (($$0912$i25) + ($1)|0);
   $45 = (($$013$i24) + 1)|0;
   $exitcond$i27 = ($45|0)==($5|0);
   if ($exitcond$i27) {
    break;
   } else {
    $$01011$i26 = $43;$$013$i24 = $45;$$0912$i25 = $44;
   }
  }
  return;
  break;
 }
 case 4:  {
  $46 = ($5|0)>(0);
  if ($46) {
   $$01011$i21 = $2;$$013$i19 = 0;$$0912$i20 = $0;
  } else {
   return;
  }
  while(1) {
   $47 = HEAPU8[$$0912$i20>>0]|(HEAPU8[$$0912$i20+1>>0]<<8)|(HEAPU8[$$0912$i20+2>>0]<<16)|(HEAPU8[$$0912$i20+3>>0]<<24);
   HEAP32[$$01011$i21>>2] = $47;
   $48 = (($$01011$i21) + ($3)|0);
   $49 = (($$0912$i20) + ($1)|0);
   $50 = (($$013$i19) + 1)|0;
   $exitcond$i22 = ($50|0)==($5|0);
   if ($exitcond$i22) {
    break;
   } else {
    $$01011$i21 = $48;$$013$i19 = $50;$$0912$i20 = $49;
   }
  }
  return;
  break;
 }
 default: {
  $51 = ($5|0)>(0);
  if ($51) {
   $$01011$i = $2;$$013$i = 0;$$0912$i = $0;
  } else {
   return;
  }
  while(1) {
   $52 = HEAPU8[$$0912$i>>0]|(HEAPU8[$$0912$i+1>>0]<<8);
   HEAP16[$$01011$i>>1] = $52;
   $53 = (($$01011$i) + ($3)|0);
   $54 = (($$0912$i) + ($1)|0);
   $55 = (($$013$i) + 1)|0;
   $exitcond$i17 = ($55|0)==($5|0);
   if ($exitcond$i17) {
    break;
   } else {
    $$01011$i = $53;$$013$i = $55;$$0912$i = $54;
   }
  }
  return;
 }
 }
}
function __ZN10WelsCommonL12McHorVer01_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01723$us$i = 0, $$01822$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i10 = 0, $exitcond26$i = 0, $exitcond31$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $6 = sp;
 $7 = ($5|0)>(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ($4|0)>(0);
 $9 = $1 << 1;
 $10 = ($1*3)|0;
 $11 = (0 - ($9))|0;
 $12 = (0 - ($1))|0;
 if ($8) {
  $$01723$us$i = 0;$$01822$us$i = $0;$$01921$us$i = $6;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$020$us$i = 0;
  while(1) {
   $13 = (($$01822$us$i) + ($$020$us$i)|0);
   $14 = (($13) + ($11)|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15&255;
   $17 = (($13) + ($10)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = (($13) + ($12)|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21&255;
   $23 = (($13) + ($9)|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = $24&255;
   $26 = (($25) + ($22))|0;
   $27 = HEAP8[$13>>0]|0;
   $28 = $27&255;
   $29 = (($13) + ($1)|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = $30&255;
   $32 = (($31) + ($28))|0;
   $33 = Math_imul($26, -5)|0;
   $tmp30$i$us$i = ($32*20)|0;
   $34 = (($16) + 16)|0;
   $35 = (($34) + ($19))|0;
   $36 = (($35) + ($33))|0;
   $37 = (($36) + ($tmp30$i$us$i))|0;
   $38 = $37 >> 5;
   $39 = ($38>>>0)>(255);
   $40 = (0 - ($38))|0;
   $41 = $40 >> 31;
   $42 = $39 ? $41 : $38;
   $43 = $42&255;
   $44 = (($$01921$us$i) + ($$020$us$i)|0);
   HEAP8[$44>>0] = $43;
   $45 = (($$020$us$i) + 1)|0;
   $exitcond$i = ($45|0)==($4|0);
   if ($exitcond$i) {
    break;
   } else {
    $$020$us$i = $45;
   }
  }
  $46 = ((($$01921$us$i)) + 16|0);
  $47 = (($$01822$us$i) + ($1)|0);
  $48 = (($$01723$us$i) + 1)|0;
  $exitcond26$i = ($48|0)==($5|0);
  if ($exitcond26$i) {
   $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $0;$$02325$us$i = $6;
   break;
  } else {
   $$01723$us$i = $48;$$01822$us$i = $47;$$01921$us$i = $46;
  }
 }
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $49 = (($$02226$us$i) + ($$024$us$i)|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = (($$02325$us$i) + ($$024$us$i)|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = $53&255;
   $55 = (($51) + 1)|0;
   $56 = (($55) + ($54))|0;
   $57 = $56 >>> 1;
   $58 = $57&255;
   $59 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$59>>0] = $58;
   $60 = (($$024$us$i) + 1)|0;
   $exitcond$i10 = ($60|0)==($4|0);
   if ($exitcond$i10) {
    break;
   } else {
    $$024$us$i = $60;
   }
  }
  $61 = (($$02127$us$i) + ($3)|0);
  $62 = (($$02226$us$i) + ($1)|0);
  $63 = ((($$02325$us$i)) + 16|0);
  $64 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($64|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $64;$$02127$us$i = $61;$$02226$us$i = $62;$$02325$us$i = $63;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer03_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01723$us$i = 0, $$01822$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02226$us$i$pn = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i11 = 0, $exitcond26$i = 0, $exitcond31$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $6 = sp;
 $7 = ($5|0)>(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ($4|0)>(0);
 $9 = $1 << 1;
 $10 = ($1*3)|0;
 $11 = (0 - ($9))|0;
 $12 = (0 - ($1))|0;
 if ($8) {
  $$01723$us$i = 0;$$01822$us$i = $0;$$01921$us$i = $6;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$020$us$i = 0;
  while(1) {
   $13 = (($$01822$us$i) + ($$020$us$i)|0);
   $14 = (($13) + ($11)|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15&255;
   $17 = (($13) + ($10)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = (($13) + ($12)|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21&255;
   $23 = (($13) + ($9)|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = $24&255;
   $26 = (($25) + ($22))|0;
   $27 = HEAP8[$13>>0]|0;
   $28 = $27&255;
   $29 = (($13) + ($1)|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = $30&255;
   $32 = (($31) + ($28))|0;
   $33 = Math_imul($26, -5)|0;
   $tmp30$i$us$i = ($32*20)|0;
   $34 = (($16) + 16)|0;
   $35 = (($34) + ($19))|0;
   $36 = (($35) + ($33))|0;
   $37 = (($36) + ($tmp30$i$us$i))|0;
   $38 = $37 >> 5;
   $39 = ($38>>>0)>(255);
   $40 = (0 - ($38))|0;
   $41 = $40 >> 31;
   $42 = $39 ? $41 : $38;
   $43 = $42&255;
   $44 = (($$01921$us$i) + ($$020$us$i)|0);
   HEAP8[$44>>0] = $43;
   $45 = (($$020$us$i) + 1)|0;
   $exitcond$i = ($45|0)==($4|0);
   if ($exitcond$i) {
    break;
   } else {
    $$020$us$i = $45;
   }
  }
  $46 = ((($$01921$us$i)) + 16|0);
  $47 = (($$01822$us$i) + ($1)|0);
  $48 = (($$01723$us$i) + 1)|0;
  $exitcond26$i = ($48|0)==($5|0);
  if ($exitcond26$i) {
   $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i$pn = $0;$$02325$us$i = $6;
   break;
  } else {
   $$01723$us$i = $48;$$01822$us$i = $47;$$01921$us$i = $46;
  }
 }
 while(1) {
  $$02226$us$i = (($$02226$us$i$pn) + ($1)|0);
  $$024$us$i = 0;
  while(1) {
   $49 = (($$02226$us$i) + ($$024$us$i)|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = (($$02325$us$i) + ($$024$us$i)|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = $53&255;
   $55 = (($51) + 1)|0;
   $56 = (($55) + ($54))|0;
   $57 = $56 >>> 1;
   $58 = $57&255;
   $59 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$59>>0] = $58;
   $60 = (($$024$us$i) + 1)|0;
   $exitcond$i11 = ($60|0)==($4|0);
   if ($exitcond$i11) {
    break;
   } else {
    $$024$us$i = $60;
   }
  }
  $61 = (($$02127$us$i) + ($3)|0);
  $62 = ((($$02325$us$i)) + 16|0);
  $63 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($63|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $63;$$02127$us$i = $61;$$02226$us$i$pn = $$02226$us$i;$$02325$us$i = $62;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer10_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01820$us$i = 0, $$019$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i11 = 0, $exitcond25$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $6 = sp;
 $7 = ($5|0)>(0);
 $8 = ($4|0)>(0);
 $or$cond$i = $8 & $7;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i = $0;$$01820$us$i = $6;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$019$us$i = 0;
  while(1) {
   $9 = (($$01721$us$i) + ($$019$us$i)|0);
   $10 = ((($9)) + -2|0);
   $11 = HEAP8[$10>>0]|0;
   $12 = $11&255;
   $13 = ((($9)) + 3|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = ((($9)) + -1|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = $17&255;
   $19 = ((($9)) + 2|0);
   $20 = HEAP8[$19>>0]|0;
   $21 = $20&255;
   $22 = (($21) + ($18))|0;
   $23 = HEAP8[$9>>0]|0;
   $24 = $23&255;
   $25 = ((($9)) + 1|0);
   $26 = HEAP8[$25>>0]|0;
   $27 = $26&255;
   $28 = (($27) + ($24))|0;
   $29 = Math_imul($22, -5)|0;
   $tmp30$i$us$i = ($28*20)|0;
   $30 = (($12) + 16)|0;
   $31 = (($30) + ($15))|0;
   $32 = (($31) + ($29))|0;
   $33 = (($32) + ($tmp30$i$us$i))|0;
   $34 = $33 >> 5;
   $35 = ($34>>>0)>(255);
   $36 = (0 - ($34))|0;
   $37 = $36 >> 31;
   $38 = $35 ? $37 : $34;
   $39 = $38&255;
   $40 = (($$01820$us$i) + ($$019$us$i)|0);
   HEAP8[$40>>0] = $39;
   $41 = (($$019$us$i) + 1)|0;
   $exitcond$i = ($41|0)==($4|0);
   if ($exitcond$i) {
    break;
   } else {
    $$019$us$i = $41;
   }
  }
  $42 = ((($$01820$us$i)) + 16|0);
  $43 = (($$01721$us$i) + ($1)|0);
  $44 = (($$01622$us$i) + 1)|0;
  $exitcond25$i = ($44|0)==($5|0);
  if ($exitcond25$i) {
   $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $0;$$02325$us$i = $6;
   break;
  } else {
   $$01622$us$i = $44;$$01721$us$i = $43;$$01820$us$i = $42;
  }
 }
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $45 = (($$02226$us$i) + ($$024$us$i)|0);
   $46 = HEAP8[$45>>0]|0;
   $47 = $46&255;
   $48 = (($$02325$us$i) + ($$024$us$i)|0);
   $49 = HEAP8[$48>>0]|0;
   $50 = $49&255;
   $51 = (($47) + 1)|0;
   $52 = (($51) + ($50))|0;
   $53 = $52 >>> 1;
   $54 = $53&255;
   $55 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$55>>0] = $54;
   $56 = (($$024$us$i) + 1)|0;
   $exitcond$i11 = ($56|0)==($4|0);
   if ($exitcond$i11) {
    break;
   } else {
    $$024$us$i = $56;
   }
  }
  $57 = (($$02127$us$i) + ($3)|0);
  $58 = (($$02226$us$i) + ($1)|0);
  $59 = ((($$02325$us$i)) + 16|0);
  $60 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($60|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $60;$$02127$us$i = $57;$$02226$us$i = $58;$$02325$us$i = $59;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer11_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01723$us$i = 0, $$01820$us$i = 0, $$01822$us$i = 0, $$019$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i13 = 0, $exitcond$i17 = 0, $exitcond25$i = 0, $exitcond26$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, $tmp30$i$us$i16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 $9 = ($4|0)>(0);
 $or$cond$i = $9 & $8;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i = $0;$$01820$us$i = $6;
  while(1) {
   $$019$us$i = 0;
   while(1) {
    $10 = (($$01721$us$i) + ($$019$us$i)|0);
    $11 = ((($10)) + -2|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = ((($10)) + 3|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15&255;
    $17 = ((($10)) + -1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = ((($10)) + 2|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = $21&255;
    $23 = (($22) + ($19))|0;
    $24 = HEAP8[$10>>0]|0;
    $25 = $24&255;
    $26 = ((($10)) + 1|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27&255;
    $29 = (($28) + ($25))|0;
    $30 = Math_imul($23, -5)|0;
    $tmp30$i$us$i = ($29*20)|0;
    $31 = (($13) + 16)|0;
    $32 = (($31) + ($16))|0;
    $33 = (($32) + ($30))|0;
    $34 = (($33) + ($tmp30$i$us$i))|0;
    $35 = $34 >> 5;
    $36 = ($35>>>0)>(255);
    $37 = (0 - ($35))|0;
    $38 = $37 >> 31;
    $39 = $36 ? $38 : $35;
    $40 = $39&255;
    $41 = (($$01820$us$i) + ($$019$us$i)|0);
    HEAP8[$41>>0] = $40;
    $42 = (($$019$us$i) + 1)|0;
    $exitcond$i = ($42|0)==($4|0);
    if ($exitcond$i) {
     break;
    } else {
     $$019$us$i = $42;
    }
   }
   $43 = ((($$01820$us$i)) + 16|0);
   $44 = (($$01721$us$i) + ($1)|0);
   $45 = (($$01622$us$i) + 1)|0;
   $exitcond25$i = ($45|0)==($5|0);
   if ($exitcond25$i) {
    break;
   } else {
    $$01622$us$i = $45;$$01721$us$i = $44;$$01820$us$i = $43;
   }
  }
 }
 if ($8) {
  $46 = $1 << 1;
  $47 = ($1*3)|0;
  $48 = (0 - ($46))|0;
  $49 = (0 - ($1))|0;
  if ($9) {
   $$01723$us$i = 0;$$01822$us$i = $0;$$01921$us$i = $7;
   while(1) {
    $$020$us$i = 0;
    while(1) {
     $50 = (($$01822$us$i) + ($$020$us$i)|0);
     $51 = (($50) + ($48)|0);
     $52 = HEAP8[$51>>0]|0;
     $53 = $52&255;
     $54 = (($50) + ($47)|0);
     $55 = HEAP8[$54>>0]|0;
     $56 = $55&255;
     $57 = (($50) + ($49)|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58&255;
     $60 = (($50) + ($46)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = (($62) + ($59))|0;
     $64 = HEAP8[$50>>0]|0;
     $65 = $64&255;
     $66 = (($50) + ($1)|0);
     $67 = HEAP8[$66>>0]|0;
     $68 = $67&255;
     $69 = (($68) + ($65))|0;
     $70 = Math_imul($63, -5)|0;
     $tmp30$i$us$i16 = ($69*20)|0;
     $71 = (($53) + 16)|0;
     $72 = (($71) + ($56))|0;
     $73 = (($72) + ($70))|0;
     $74 = (($73) + ($tmp30$i$us$i16))|0;
     $75 = $74 >> 5;
     $76 = ($75>>>0)>(255);
     $77 = (0 - ($75))|0;
     $78 = $77 >> 31;
     $79 = $76 ? $78 : $75;
     $80 = $79&255;
     $81 = (($$01921$us$i) + ($$020$us$i)|0);
     HEAP8[$81>>0] = $80;
     $82 = (($$020$us$i) + 1)|0;
     $exitcond$i17 = ($82|0)==($4|0);
     if ($exitcond$i17) {
      break;
     } else {
      $$020$us$i = $82;
     }
    }
    $83 = ((($$01921$us$i)) + 16|0);
    $84 = (($$01822$us$i) + ($1)|0);
    $85 = (($$01723$us$i) + 1)|0;
    $exitcond26$i = ($85|0)==($5|0);
    if ($exitcond26$i) {
     break;
    } else {
     $$01723$us$i = $85;$$01822$us$i = $84;$$01921$us$i = $83;
    }
   }
  }
 }
 if ($or$cond$i) {
  $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $86 = (($$02226$us$i) + ($$024$us$i)|0);
   $87 = HEAP8[$86>>0]|0;
   $88 = $87&255;
   $89 = (($$02325$us$i) + ($$024$us$i)|0);
   $90 = HEAP8[$89>>0]|0;
   $91 = $90&255;
   $92 = (($88) + 1)|0;
   $93 = (($92) + ($91))|0;
   $94 = $93 >>> 1;
   $95 = $94&255;
   $96 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$96>>0] = $95;
   $97 = (($$024$us$i) + 1)|0;
   $exitcond$i13 = ($97|0)==($4|0);
   if ($exitcond$i13) {
    break;
   } else {
    $$024$us$i = $97;
   }
  }
  $98 = (($$02127$us$i) + ($3)|0);
  $99 = ((($$02226$us$i)) + 16|0);
  $100 = ((($$02325$us$i)) + 16|0);
  $101 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($101|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $101;$$02127$us$i = $98;$$02226$us$i = $99;$$02325$us$i = $100;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer12_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01723$us$i = 0, $$01822$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i12 = 0, $exitcond26$i = 0, $exitcond31$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 if ($8) {
  $9 = ($4|0)>(0);
  $10 = $1 << 1;
  $11 = ($1*3)|0;
  $12 = (0 - ($10))|0;
  $13 = (0 - ($1))|0;
  if ($9) {
   $$01723$us$i = 0;$$01822$us$i = $0;$$01921$us$i = $6;
   while(1) {
    $$020$us$i = 0;
    while(1) {
     $14 = (($$01822$us$i) + ($$020$us$i)|0);
     $15 = (($14) + ($12)|0);
     $16 = HEAP8[$15>>0]|0;
     $17 = $16&255;
     $18 = (($14) + ($11)|0);
     $19 = HEAP8[$18>>0]|0;
     $20 = $19&255;
     $21 = (($14) + ($13)|0);
     $22 = HEAP8[$21>>0]|0;
     $23 = $22&255;
     $24 = (($14) + ($10)|0);
     $25 = HEAP8[$24>>0]|0;
     $26 = $25&255;
     $27 = (($26) + ($23))|0;
     $28 = HEAP8[$14>>0]|0;
     $29 = $28&255;
     $30 = (($14) + ($1)|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = $31&255;
     $33 = (($32) + ($29))|0;
     $34 = Math_imul($27, -5)|0;
     $tmp30$i$us$i = ($33*20)|0;
     $35 = (($17) + 16)|0;
     $36 = (($35) + ($20))|0;
     $37 = (($36) + ($34))|0;
     $38 = (($37) + ($tmp30$i$us$i))|0;
     $39 = $38 >> 5;
     $40 = ($39>>>0)>(255);
     $41 = (0 - ($39))|0;
     $42 = $41 >> 31;
     $43 = $40 ? $42 : $39;
     $44 = $43&255;
     $45 = (($$01921$us$i) + ($$020$us$i)|0);
     HEAP8[$45>>0] = $44;
     $46 = (($$020$us$i) + 1)|0;
     $exitcond$i = ($46|0)==($4|0);
     if ($exitcond$i) {
      break;
     } else {
      $$020$us$i = $46;
     }
    }
    $47 = ((($$01921$us$i)) + 16|0);
    $48 = (($$01822$us$i) + ($1)|0);
    $49 = (($$01723$us$i) + 1)|0;
    $exitcond26$i = ($49|0)==($5|0);
    if ($exitcond26$i) {
     break;
    } else {
     $$01723$us$i = $49;$$01822$us$i = $48;$$01921$us$i = $47;
    }
   }
   __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
   $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
   while(1) {
    $$024$us$i = 0;
    while(1) {
     $50 = (($$02226$us$i) + ($$024$us$i)|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = $51&255;
     $53 = (($$02325$us$i) + ($$024$us$i)|0);
     $54 = HEAP8[$53>>0]|0;
     $55 = $54&255;
     $56 = (($52) + 1)|0;
     $57 = (($56) + ($55))|0;
     $58 = $57 >>> 1;
     $59 = $58&255;
     $60 = (($$02127$us$i) + ($$024$us$i)|0);
     HEAP8[$60>>0] = $59;
     $61 = (($$024$us$i) + 1)|0;
     $exitcond$i12 = ($61|0)==($4|0);
     if ($exitcond$i12) {
      break;
     } else {
      $$024$us$i = $61;
     }
    }
    $62 = (($$02127$us$i) + ($3)|0);
    $63 = ((($$02226$us$i)) + 16|0);
    $64 = ((($$02325$us$i)) + 16|0);
    $65 = (($$02028$us$i) + 1)|0;
    $exitcond31$i = ($65|0)==($5|0);
    if ($exitcond31$i) {
     break;
    } else {
     $$02028$us$i = $65;$$02127$us$i = $62;$$02226$us$i = $63;$$02325$us$i = $64;
    }
   }
   STACKTOP = sp;return;
  }
 }
 __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer13_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01721$us$i$pn = 0, $$01723$us$i = 0, $$01820$us$i = 0, $$01822$us$i = 0, $$019$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i14 = 0, $exitcond$i18 = 0, $exitcond25$i = 0, $exitcond26$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, $tmp30$i$us$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 $9 = ($4|0)>(0);
 $or$cond$i = $9 & $8;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i$pn = $0;$$01820$us$i = $6;
  while(1) {
   $$01721$us$i = (($$01721$us$i$pn) + ($1)|0);
   $$019$us$i = 0;
   while(1) {
    $10 = (($$01721$us$i) + ($$019$us$i)|0);
    $11 = ((($10)) + -2|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = ((($10)) + 3|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15&255;
    $17 = ((($10)) + -1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = ((($10)) + 2|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = $21&255;
    $23 = (($22) + ($19))|0;
    $24 = HEAP8[$10>>0]|0;
    $25 = $24&255;
    $26 = ((($10)) + 1|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27&255;
    $29 = (($28) + ($25))|0;
    $30 = Math_imul($23, -5)|0;
    $tmp30$i$us$i = ($29*20)|0;
    $31 = (($13) + 16)|0;
    $32 = (($31) + ($16))|0;
    $33 = (($32) + ($30))|0;
    $34 = (($33) + ($tmp30$i$us$i))|0;
    $35 = $34 >> 5;
    $36 = ($35>>>0)>(255);
    $37 = (0 - ($35))|0;
    $38 = $37 >> 31;
    $39 = $36 ? $38 : $35;
    $40 = $39&255;
    $41 = (($$01820$us$i) + ($$019$us$i)|0);
    HEAP8[$41>>0] = $40;
    $42 = (($$019$us$i) + 1)|0;
    $exitcond$i = ($42|0)==($4|0);
    if ($exitcond$i) {
     break;
    } else {
     $$019$us$i = $42;
    }
   }
   $43 = ((($$01820$us$i)) + 16|0);
   $44 = (($$01622$us$i) + 1)|0;
   $exitcond25$i = ($44|0)==($5|0);
   if ($exitcond25$i) {
    break;
   } else {
    $$01622$us$i = $44;$$01721$us$i$pn = $$01721$us$i;$$01820$us$i = $43;
   }
  }
 }
 if ($8) {
  $45 = $1 << 1;
  $46 = ($1*3)|0;
  $47 = (0 - ($45))|0;
  $48 = (0 - ($1))|0;
  if ($9) {
   $$01723$us$i = 0;$$01822$us$i = $0;$$01921$us$i = $7;
   while(1) {
    $$020$us$i = 0;
    while(1) {
     $49 = (($$01822$us$i) + ($$020$us$i)|0);
     $50 = (($49) + ($47)|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = $51&255;
     $53 = (($49) + ($46)|0);
     $54 = HEAP8[$53>>0]|0;
     $55 = $54&255;
     $56 = (($49) + ($48)|0);
     $57 = HEAP8[$56>>0]|0;
     $58 = $57&255;
     $59 = (($49) + ($45)|0);
     $60 = HEAP8[$59>>0]|0;
     $61 = $60&255;
     $62 = (($61) + ($58))|0;
     $63 = HEAP8[$49>>0]|0;
     $64 = $63&255;
     $65 = (($49) + ($1)|0);
     $66 = HEAP8[$65>>0]|0;
     $67 = $66&255;
     $68 = (($67) + ($64))|0;
     $69 = Math_imul($62, -5)|0;
     $tmp30$i$us$i17 = ($68*20)|0;
     $70 = (($52) + 16)|0;
     $71 = (($70) + ($55))|0;
     $72 = (($71) + ($69))|0;
     $73 = (($72) + ($tmp30$i$us$i17))|0;
     $74 = $73 >> 5;
     $75 = ($74>>>0)>(255);
     $76 = (0 - ($74))|0;
     $77 = $76 >> 31;
     $78 = $75 ? $77 : $74;
     $79 = $78&255;
     $80 = (($$01921$us$i) + ($$020$us$i)|0);
     HEAP8[$80>>0] = $79;
     $81 = (($$020$us$i) + 1)|0;
     $exitcond$i18 = ($81|0)==($4|0);
     if ($exitcond$i18) {
      break;
     } else {
      $$020$us$i = $81;
     }
    }
    $82 = ((($$01921$us$i)) + 16|0);
    $83 = (($$01822$us$i) + ($1)|0);
    $84 = (($$01723$us$i) + 1)|0;
    $exitcond26$i = ($84|0)==($5|0);
    if ($exitcond26$i) {
     break;
    } else {
     $$01723$us$i = $84;$$01822$us$i = $83;$$01921$us$i = $82;
    }
   }
  }
 }
 if ($or$cond$i) {
  $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $85 = (($$02226$us$i) + ($$024$us$i)|0);
   $86 = HEAP8[$85>>0]|0;
   $87 = $86&255;
   $88 = (($$02325$us$i) + ($$024$us$i)|0);
   $89 = HEAP8[$88>>0]|0;
   $90 = $89&255;
   $91 = (($87) + 1)|0;
   $92 = (($91) + ($90))|0;
   $93 = $92 >>> 1;
   $94 = $93&255;
   $95 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$95>>0] = $94;
   $96 = (($$024$us$i) + 1)|0;
   $exitcond$i14 = ($96|0)==($4|0);
   if ($exitcond$i14) {
    break;
   } else {
    $$024$us$i = $96;
   }
  }
  $97 = (($$02127$us$i) + ($3)|0);
  $98 = ((($$02226$us$i)) + 16|0);
  $99 = ((($$02325$us$i)) + 16|0);
  $100 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($100|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $100;$$02127$us$i = $97;$$02226$us$i = $98;$$02325$us$i = $99;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer21_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01820$us$i = 0, $$019$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i13 = 0, $exitcond25$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 $9 = ($4|0)>(0);
 $or$cond$i = $9 & $8;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i = $0;$$01820$us$i = $6;
 } else {
  __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
  STACKTOP = sp;return;
 }
 while(1) {
  $$019$us$i = 0;
  while(1) {
   $10 = (($$01721$us$i) + ($$019$us$i)|0);
   $11 = ((($10)) + -2|0);
   $12 = HEAP8[$11>>0]|0;
   $13 = $12&255;
   $14 = ((($10)) + 3|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15&255;
   $17 = ((($10)) + -1|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = ((($10)) + 2|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21&255;
   $23 = (($22) + ($19))|0;
   $24 = HEAP8[$10>>0]|0;
   $25 = $24&255;
   $26 = ((($10)) + 1|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = $27&255;
   $29 = (($28) + ($25))|0;
   $30 = Math_imul($23, -5)|0;
   $tmp30$i$us$i = ($29*20)|0;
   $31 = (($13) + 16)|0;
   $32 = (($31) + ($16))|0;
   $33 = (($32) + ($30))|0;
   $34 = (($33) + ($tmp30$i$us$i))|0;
   $35 = $34 >> 5;
   $36 = ($35>>>0)>(255);
   $37 = (0 - ($35))|0;
   $38 = $37 >> 31;
   $39 = $36 ? $38 : $35;
   $40 = $39&255;
   $41 = (($$01820$us$i) + ($$019$us$i)|0);
   HEAP8[$41>>0] = $40;
   $42 = (($$019$us$i) + 1)|0;
   $exitcond$i = ($42|0)==($4|0);
   if ($exitcond$i) {
    break;
   } else {
    $$019$us$i = $42;
   }
  }
  $43 = ((($$01820$us$i)) + 16|0);
  $44 = (($$01721$us$i) + ($1)|0);
  $45 = (($$01622$us$i) + 1)|0;
  $exitcond25$i = ($45|0)==($5|0);
  if ($exitcond25$i) {
   break;
  } else {
   $$01622$us$i = $45;$$01721$us$i = $44;$$01820$us$i = $43;
  }
 }
 __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
 $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $46 = (($$02226$us$i) + ($$024$us$i)|0);
   $47 = HEAP8[$46>>0]|0;
   $48 = $47&255;
   $49 = (($$02325$us$i) + ($$024$us$i)|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = (($48) + 1)|0;
   $53 = (($52) + ($51))|0;
   $54 = $53 >>> 1;
   $55 = $54&255;
   $56 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$56>>0] = $55;
   $57 = (($$024$us$i) + 1)|0;
   $exitcond$i13 = ($57|0)==($4|0);
   if ($exitcond$i13) {
    break;
   } else {
    $$024$us$i = $57;
   }
  }
  $58 = (($$02127$us$i) + ($3)|0);
  $59 = ((($$02226$us$i)) + 16|0);
  $60 = ((($$02325$us$i)) + 16|0);
  $61 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($61|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $61;$$02127$us$i = $58;$$02226$us$i = $59;$$02325$us$i = $60;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer23_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01721$us$i$pn = 0, $$01820$us$i = 0, $$019$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i14 = 0, $exitcond25$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 $9 = ($4|0)>(0);
 $or$cond$i = $9 & $8;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i$pn = $0;$$01820$us$i = $6;
 } else {
  __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
  STACKTOP = sp;return;
 }
 while(1) {
  $$01721$us$i = (($$01721$us$i$pn) + ($1)|0);
  $$019$us$i = 0;
  while(1) {
   $10 = (($$01721$us$i) + ($$019$us$i)|0);
   $11 = ((($10)) + -2|0);
   $12 = HEAP8[$11>>0]|0;
   $13 = $12&255;
   $14 = ((($10)) + 3|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15&255;
   $17 = ((($10)) + -1|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = ((($10)) + 2|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21&255;
   $23 = (($22) + ($19))|0;
   $24 = HEAP8[$10>>0]|0;
   $25 = $24&255;
   $26 = ((($10)) + 1|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = $27&255;
   $29 = (($28) + ($25))|0;
   $30 = Math_imul($23, -5)|0;
   $tmp30$i$us$i = ($29*20)|0;
   $31 = (($13) + 16)|0;
   $32 = (($31) + ($16))|0;
   $33 = (($32) + ($30))|0;
   $34 = (($33) + ($tmp30$i$us$i))|0;
   $35 = $34 >> 5;
   $36 = ($35>>>0)>(255);
   $37 = (0 - ($35))|0;
   $38 = $37 >> 31;
   $39 = $36 ? $38 : $35;
   $40 = $39&255;
   $41 = (($$01820$us$i) + ($$019$us$i)|0);
   HEAP8[$41>>0] = $40;
   $42 = (($$019$us$i) + 1)|0;
   $exitcond$i = ($42|0)==($4|0);
   if ($exitcond$i) {
    break;
   } else {
    $$019$us$i = $42;
   }
  }
  $43 = ((($$01820$us$i)) + 16|0);
  $44 = (($$01622$us$i) + 1)|0;
  $exitcond25$i = ($44|0)==($5|0);
  if ($exitcond25$i) {
   break;
  } else {
   $$01622$us$i = $44;$$01721$us$i$pn = $$01721$us$i;$$01820$us$i = $43;
  }
 }
 __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
 $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $45 = (($$02226$us$i) + ($$024$us$i)|0);
   $46 = HEAP8[$45>>0]|0;
   $47 = $46&255;
   $48 = (($$02325$us$i) + ($$024$us$i)|0);
   $49 = HEAP8[$48>>0]|0;
   $50 = $49&255;
   $51 = (($47) + 1)|0;
   $52 = (($51) + ($50))|0;
   $53 = $52 >>> 1;
   $54 = $53&255;
   $55 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$55>>0] = $54;
   $56 = (($$024$us$i) + 1)|0;
   $exitcond$i14 = ($56|0)==($4|0);
   if ($exitcond$i14) {
    break;
   } else {
    $$024$us$i = $56;
   }
  }
  $57 = (($$02127$us$i) + ($3)|0);
  $58 = ((($$02226$us$i)) + 16|0);
  $59 = ((($$02325$us$i)) + 16|0);
  $60 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($60|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $60;$$02127$us$i = $57;$$02226$us$i = $58;$$02325$us$i = $59;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer30_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01820$us$i = 0, $$019$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i11 = 0, $exitcond25$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $6 = sp;
 $7 = ($5|0)>(0);
 $8 = ($4|0)>(0);
 $or$cond$i = $8 & $7;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i = $0;$$01820$us$i = $6;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$019$us$i = 0;
  while(1) {
   $9 = (($$01721$us$i) + ($$019$us$i)|0);
   $10 = ((($9)) + -2|0);
   $11 = HEAP8[$10>>0]|0;
   $12 = $11&255;
   $13 = ((($9)) + 3|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = ((($9)) + -1|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = $17&255;
   $19 = ((($9)) + 2|0);
   $20 = HEAP8[$19>>0]|0;
   $21 = $20&255;
   $22 = (($21) + ($18))|0;
   $23 = HEAP8[$9>>0]|0;
   $24 = $23&255;
   $25 = ((($9)) + 1|0);
   $26 = HEAP8[$25>>0]|0;
   $27 = $26&255;
   $28 = (($27) + ($24))|0;
   $29 = Math_imul($22, -5)|0;
   $tmp30$i$us$i = ($28*20)|0;
   $30 = (($12) + 16)|0;
   $31 = (($30) + ($15))|0;
   $32 = (($31) + ($29))|0;
   $33 = (($32) + ($tmp30$i$us$i))|0;
   $34 = $33 >> 5;
   $35 = ($34>>>0)>(255);
   $36 = (0 - ($34))|0;
   $37 = $36 >> 31;
   $38 = $35 ? $37 : $34;
   $39 = $38&255;
   $40 = (($$01820$us$i) + ($$019$us$i)|0);
   HEAP8[$40>>0] = $39;
   $41 = (($$019$us$i) + 1)|0;
   $exitcond$i = ($41|0)==($4|0);
   if ($exitcond$i) {
    break;
   } else {
    $$019$us$i = $41;
   }
  }
  $42 = ((($$01820$us$i)) + 16|0);
  $43 = (($$01721$us$i) + ($1)|0);
  $44 = (($$01622$us$i) + 1)|0;
  $exitcond25$i = ($44|0)==($5|0);
  if ($exitcond25$i) {
   break;
  } else {
   $$01622$us$i = $44;$$01721$us$i = $43;$$01820$us$i = $42;
  }
 }
 $45 = ((($0)) + 1|0);
 $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $45;$$02325$us$i = $6;
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $46 = (($$02226$us$i) + ($$024$us$i)|0);
   $47 = HEAP8[$46>>0]|0;
   $48 = $47&255;
   $49 = (($$02325$us$i) + ($$024$us$i)|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = (($48) + 1)|0;
   $53 = (($52) + ($51))|0;
   $54 = $53 >>> 1;
   $55 = $54&255;
   $56 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$56>>0] = $55;
   $57 = (($$024$us$i) + 1)|0;
   $exitcond$i11 = ($57|0)==($4|0);
   if ($exitcond$i11) {
    break;
   } else {
    $$024$us$i = $57;
   }
  }
  $58 = (($$02127$us$i) + ($3)|0);
  $59 = (($$02226$us$i) + ($1)|0);
  $60 = ((($$02325$us$i)) + 16|0);
  $61 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($61|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $61;$$02127$us$i = $58;$$02226$us$i = $59;$$02325$us$i = $60;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer31_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01723$us$i = 0, $$01820$us$i = 0, $$01822$us$i = 0, $$019$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i13 = 0, $exitcond$i17 = 0, $exitcond25$i = 0, $exitcond26$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, $tmp30$i$us$i16 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 $9 = ($4|0)>(0);
 $or$cond$i = $9 & $8;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i = $0;$$01820$us$i = $6;
  while(1) {
   $$019$us$i = 0;
   while(1) {
    $10 = (($$01721$us$i) + ($$019$us$i)|0);
    $11 = ((($10)) + -2|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = ((($10)) + 3|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15&255;
    $17 = ((($10)) + -1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = ((($10)) + 2|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = $21&255;
    $23 = (($22) + ($19))|0;
    $24 = HEAP8[$10>>0]|0;
    $25 = $24&255;
    $26 = ((($10)) + 1|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27&255;
    $29 = (($28) + ($25))|0;
    $30 = Math_imul($23, -5)|0;
    $tmp30$i$us$i = ($29*20)|0;
    $31 = (($13) + 16)|0;
    $32 = (($31) + ($16))|0;
    $33 = (($32) + ($30))|0;
    $34 = (($33) + ($tmp30$i$us$i))|0;
    $35 = $34 >> 5;
    $36 = ($35>>>0)>(255);
    $37 = (0 - ($35))|0;
    $38 = $37 >> 31;
    $39 = $36 ? $38 : $35;
    $40 = $39&255;
    $41 = (($$01820$us$i) + ($$019$us$i)|0);
    HEAP8[$41>>0] = $40;
    $42 = (($$019$us$i) + 1)|0;
    $exitcond$i = ($42|0)==($4|0);
    if ($exitcond$i) {
     break;
    } else {
     $$019$us$i = $42;
    }
   }
   $43 = ((($$01820$us$i)) + 16|0);
   $44 = (($$01721$us$i) + ($1)|0);
   $45 = (($$01622$us$i) + 1)|0;
   $exitcond25$i = ($45|0)==($5|0);
   if ($exitcond25$i) {
    break;
   } else {
    $$01622$us$i = $45;$$01721$us$i = $44;$$01820$us$i = $43;
   }
  }
 }
 if ($8) {
  $46 = $1 << 1;
  $47 = ($1*3)|0;
  $48 = (0 - ($46))|0;
  $49 = (0 - ($1))|0;
  if ($9) {
   $50 = ((($0)) + 1|0);
   $$01723$us$i = 0;$$01822$us$i = $50;$$01921$us$i = $7;
   while(1) {
    $$020$us$i = 0;
    while(1) {
     $51 = (($$01822$us$i) + ($$020$us$i)|0);
     $52 = (($51) + ($48)|0);
     $53 = HEAP8[$52>>0]|0;
     $54 = $53&255;
     $55 = (($51) + ($47)|0);
     $56 = HEAP8[$55>>0]|0;
     $57 = $56&255;
     $58 = (($51) + ($49)|0);
     $59 = HEAP8[$58>>0]|0;
     $60 = $59&255;
     $61 = (($51) + ($46)|0);
     $62 = HEAP8[$61>>0]|0;
     $63 = $62&255;
     $64 = (($63) + ($60))|0;
     $65 = HEAP8[$51>>0]|0;
     $66 = $65&255;
     $67 = (($51) + ($1)|0);
     $68 = HEAP8[$67>>0]|0;
     $69 = $68&255;
     $70 = (($69) + ($66))|0;
     $71 = Math_imul($64, -5)|0;
     $tmp30$i$us$i16 = ($70*20)|0;
     $72 = (($54) + 16)|0;
     $73 = (($72) + ($57))|0;
     $74 = (($73) + ($71))|0;
     $75 = (($74) + ($tmp30$i$us$i16))|0;
     $76 = $75 >> 5;
     $77 = ($76>>>0)>(255);
     $78 = (0 - ($76))|0;
     $79 = $78 >> 31;
     $80 = $77 ? $79 : $76;
     $81 = $80&255;
     $82 = (($$01921$us$i) + ($$020$us$i)|0);
     HEAP8[$82>>0] = $81;
     $83 = (($$020$us$i) + 1)|0;
     $exitcond$i17 = ($83|0)==($4|0);
     if ($exitcond$i17) {
      break;
     } else {
      $$020$us$i = $83;
     }
    }
    $84 = ((($$01921$us$i)) + 16|0);
    $85 = (($$01822$us$i) + ($1)|0);
    $86 = (($$01723$us$i) + 1)|0;
    $exitcond26$i = ($86|0)==($5|0);
    if ($exitcond26$i) {
     break;
    } else {
     $$01723$us$i = $86;$$01822$us$i = $85;$$01921$us$i = $84;
    }
   }
  }
 }
 if ($or$cond$i) {
  $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $87 = (($$02226$us$i) + ($$024$us$i)|0);
   $88 = HEAP8[$87>>0]|0;
   $89 = $88&255;
   $90 = (($$02325$us$i) + ($$024$us$i)|0);
   $91 = HEAP8[$90>>0]|0;
   $92 = $91&255;
   $93 = (($89) + 1)|0;
   $94 = (($93) + ($92))|0;
   $95 = $94 >>> 1;
   $96 = $95&255;
   $97 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$97>>0] = $96;
   $98 = (($$024$us$i) + 1)|0;
   $exitcond$i13 = ($98|0)==($4|0);
   if ($exitcond$i13) {
    break;
   } else {
    $$024$us$i = $98;
   }
  }
  $99 = (($$02127$us$i) + ($3)|0);
  $100 = ((($$02226$us$i)) + 16|0);
  $101 = ((($$02325$us$i)) + 16|0);
  $102 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($102|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $102;$$02127$us$i = $99;$$02226$us$i = $100;$$02325$us$i = $101;
  }
 }
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer32_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01723$us$i = 0, $$01822$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i12 = 0, $exitcond26$i = 0, $exitcond31$i = 0, $tmp30$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 if ($8) {
  $9 = ($4|0)>(0);
  $10 = $1 << 1;
  $11 = ($1*3)|0;
  $12 = (0 - ($10))|0;
  $13 = (0 - ($1))|0;
  if ($9) {
   $14 = ((($0)) + 1|0);
   $$01723$us$i = 0;$$01822$us$i = $14;$$01921$us$i = $6;
   while(1) {
    $$020$us$i = 0;
    while(1) {
     $15 = (($$01822$us$i) + ($$020$us$i)|0);
     $16 = (($15) + ($12)|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (($15) + ($11)|0);
     $20 = HEAP8[$19>>0]|0;
     $21 = $20&255;
     $22 = (($15) + ($13)|0);
     $23 = HEAP8[$22>>0]|0;
     $24 = $23&255;
     $25 = (($15) + ($10)|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = $26&255;
     $28 = (($27) + ($24))|0;
     $29 = HEAP8[$15>>0]|0;
     $30 = $29&255;
     $31 = (($15) + ($1)|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32&255;
     $34 = (($33) + ($30))|0;
     $35 = Math_imul($28, -5)|0;
     $tmp30$i$us$i = ($34*20)|0;
     $36 = (($18) + 16)|0;
     $37 = (($36) + ($21))|0;
     $38 = (($37) + ($35))|0;
     $39 = (($38) + ($tmp30$i$us$i))|0;
     $40 = $39 >> 5;
     $41 = ($40>>>0)>(255);
     $42 = (0 - ($40))|0;
     $43 = $42 >> 31;
     $44 = $41 ? $43 : $40;
     $45 = $44&255;
     $46 = (($$01921$us$i) + ($$020$us$i)|0);
     HEAP8[$46>>0] = $45;
     $47 = (($$020$us$i) + 1)|0;
     $exitcond$i = ($47|0)==($4|0);
     if ($exitcond$i) {
      break;
     } else {
      $$020$us$i = $47;
     }
    }
    $48 = ((($$01921$us$i)) + 16|0);
    $49 = (($$01822$us$i) + ($1)|0);
    $50 = (($$01723$us$i) + 1)|0;
    $exitcond26$i = ($50|0)==($5|0);
    if ($exitcond26$i) {
     break;
    } else {
     $$01723$us$i = $50;$$01822$us$i = $49;$$01921$us$i = $48;
    }
   }
   __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
   $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
   while(1) {
    $$024$us$i = 0;
    while(1) {
     $51 = (($$02226$us$i) + ($$024$us$i)|0);
     $52 = HEAP8[$51>>0]|0;
     $53 = $52&255;
     $54 = (($$02325$us$i) + ($$024$us$i)|0);
     $55 = HEAP8[$54>>0]|0;
     $56 = $55&255;
     $57 = (($53) + 1)|0;
     $58 = (($57) + ($56))|0;
     $59 = $58 >>> 1;
     $60 = $59&255;
     $61 = (($$02127$us$i) + ($$024$us$i)|0);
     HEAP8[$61>>0] = $60;
     $62 = (($$024$us$i) + 1)|0;
     $exitcond$i12 = ($62|0)==($4|0);
     if ($exitcond$i12) {
      break;
     } else {
      $$024$us$i = $62;
     }
    }
    $63 = (($$02127$us$i) + ($3)|0);
    $64 = ((($$02226$us$i)) + 16|0);
    $65 = ((($$02325$us$i)) + 16|0);
    $66 = (($$02028$us$i) + 1)|0;
    $exitcond31$i = ($66|0)==($5|0);
    if ($exitcond31$i) {
     break;
    } else {
     $$02028$us$i = $66;$$02127$us$i = $63;$$02226$us$i = $64;$$02325$us$i = $65;
    }
   }
   STACKTOP = sp;return;
  }
 }
 __ZN10WelsCommonL12McHorVer22_cEPKhiPhiii($0,$1,$7,16,$4,$5);
 STACKTOP = sp;return;
}
function __ZN10WelsCommonL12McHorVer33_cEPKhiPhiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$01622$us$i = 0, $$01721$us$i = 0, $$01721$us$i$pn = 0, $$01723$us$i = 0, $$01820$us$i = 0, $$01822$us$i = 0, $$019$us$i = 0, $$01921$us$i = 0, $$020$us$i = 0, $$02028$us$i = 0, $$02127$us$i = 0, $$02226$us$i = 0, $$02325$us$i = 0, $$024$us$i = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i14 = 0, $exitcond$i18 = 0, $exitcond25$i = 0, $exitcond26$i = 0, $exitcond31$i = 0, $or$cond$i = 0, $tmp30$i$us$i = 0, $tmp30$i$us$i17 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp + 256|0;
 $7 = sp;
 $8 = ($5|0)>(0);
 $9 = ($4|0)>(0);
 $or$cond$i = $9 & $8;
 if ($or$cond$i) {
  $$01622$us$i = 0;$$01721$us$i$pn = $0;$$01820$us$i = $6;
  while(1) {
   $$01721$us$i = (($$01721$us$i$pn) + ($1)|0);
   $$019$us$i = 0;
   while(1) {
    $10 = (($$01721$us$i) + ($$019$us$i)|0);
    $11 = ((($10)) + -2|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = ((($10)) + 3|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15&255;
    $17 = ((($10)) + -1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = ((($10)) + 2|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = $21&255;
    $23 = (($22) + ($19))|0;
    $24 = HEAP8[$10>>0]|0;
    $25 = $24&255;
    $26 = ((($10)) + 1|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27&255;
    $29 = (($28) + ($25))|0;
    $30 = Math_imul($23, -5)|0;
    $tmp30$i$us$i = ($29*20)|0;
    $31 = (($13) + 16)|0;
    $32 = (($31) + ($16))|0;
    $33 = (($32) + ($30))|0;
    $34 = (($33) + ($tmp30$i$us$i))|0;
    $35 = $34 >> 5;
    $36 = ($35>>>0)>(255);
    $37 = (0 - ($35))|0;
    $38 = $37 >> 31;
    $39 = $36 ? $38 : $35;
    $40 = $39&255;
    $41 = (($$01820$us$i) + ($$019$us$i)|0);
    HEAP8[$41>>0] = $40;
    $42 = (($$019$us$i) + 1)|0;
    $exitcond$i = ($42|0)==($4|0);
    if ($exitcond$i) {
     break;
    } else {
     $$019$us$i = $42;
    }
   }
   $43 = ((($$01820$us$i)) + 16|0);
   $44 = (($$01622$us$i) + 1)|0;
   $exitcond25$i = ($44|0)==($5|0);
   if ($exitcond25$i) {
    break;
   } else {
    $$01622$us$i = $44;$$01721$us$i$pn = $$01721$us$i;$$01820$us$i = $43;
   }
  }
 }
 if ($8) {
  $45 = $1 << 1;
  $46 = ($1*3)|0;
  $47 = (0 - ($45))|0;
  $48 = (0 - ($1))|0;
  if ($9) {
   $49 = ((($0)) + 1|0);
   $$01723$us$i = 0;$$01822$us$i = $49;$$01921$us$i = $7;
   while(1) {
    $$020$us$i = 0;
    while(1) {
     $50 = (($$01822$us$i) + ($$020$us$i)|0);
     $51 = (($50) + ($47)|0);
     $52 = HEAP8[$51>>0]|0;
     $53 = $52&255;
     $54 = (($50) + ($46)|0);
     $55 = HEAP8[$54>>0]|0;
     $56 = $55&255;
     $57 = (($50) + ($48)|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58&255;
     $60 = (($50) + ($45)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = (($62) + ($59))|0;
     $64 = HEAP8[$50>>0]|0;
     $65 = $64&255;
     $66 = (($50) + ($1)|0);
     $67 = HEAP8[$66>>0]|0;
     $68 = $67&255;
     $69 = (($68) + ($65))|0;
     $70 = Math_imul($63, -5)|0;
     $tmp30$i$us$i17 = ($69*20)|0;
     $71 = (($53) + 16)|0;
     $72 = (($71) + ($56))|0;
     $73 = (($72) + ($70))|0;
     $74 = (($73) + ($tmp30$i$us$i17))|0;
     $75 = $74 >> 5;
     $76 = ($75>>>0)>(255);
     $77 = (0 - ($75))|0;
     $78 = $77 >> 31;
     $79 = $76 ? $78 : $75;
     $80 = $79&255;
     $81 = (($$01921$us$i) + ($$020$us$i)|0);
     HEAP8[$81>>0] = $80;
     $82 = (($$020$us$i) + 1)|0;
     $exitcond$i18 = ($82|0)==($4|0);
     if ($exitcond$i18) {
      break;
     } else {
      $$020$us$i = $82;
     }
    }
    $83 = ((($$01921$us$i)) + 16|0);
    $84 = (($$01822$us$i) + ($1)|0);
    $85 = (($$01723$us$i) + 1)|0;
    $exitcond26$i = ($85|0)==($5|0);
    if ($exitcond26$i) {
     break;
    } else {
     $$01723$us$i = $85;$$01822$us$i = $84;$$01921$us$i = $83;
    }
   }
  }
 }
 if ($or$cond$i) {
  $$02028$us$i = 0;$$02127$us$i = $2;$$02226$us$i = $6;$$02325$us$i = $7;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $$024$us$i = 0;
  while(1) {
   $86 = (($$02226$us$i) + ($$024$us$i)|0);
   $87 = HEAP8[$86>>0]|0;
   $88 = $87&255;
   $89 = (($$02325$us$i) + ($$024$us$i)|0);
   $90 = HEAP8[$89>>0]|0;
   $91 = $90&255;
   $92 = (($88) + 1)|0;
   $93 = (($92) + ($91))|0;
   $94 = $93 >>> 1;
   $95 = $94&255;
   $96 = (($$02127$us$i) + ($$024$us$i)|0);
   HEAP8[$96>>0] = $95;
   $97 = (($$024$us$i) + 1)|0;
   $exitcond$i14 = ($97|0)==($4|0);
   if ($exitcond$i14) {
    break;
   } else {
    $$024$us$i = $97;
   }
  }
  $98 = (($$02127$us$i) + ($3)|0);
  $99 = ((($$02226$us$i)) + 16|0);
  $100 = ((($$02325$us$i)) + 16|0);
  $101 = (($$02028$us$i) + 1)|0;
  $exitcond31$i = ($101|0)==($5|0);
  if ($exitcond31$i) {
   break;
  } else {
   $$02028$us$i = $101;$$02127$us$i = $98;$$02226$us$i = $99;$$02325$us$i = $100;
  }
 }
 STACKTOP = sp;return;
}
function __ZL19ExpandPictureLuma_cPhiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$057 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($3) + -1)|0;
 $5 = Math_imul($4, $1)|0;
 $6 = (($0) + ($5)|0);
 $7 = HEAP8[$0>>0]|0;
 $8 = (($2) + -1)|0;
 $9 = (($0) + ($8)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = HEAP8[$6>>0]|0;
 $12 = (($6) + ($8)|0);
 $13 = HEAP8[$12>>0]|0;
 $$057 = 0;
 while(1) {
  $14 = (($$057) + 1)|0;
  $15 = Math_imul($14, $1)|0;
  $16 = (0 - ($15))|0;
  $17 = (($0) + ($16)|0);
  $18 = (($6) + ($15)|0);
  _memcpy(($17|0),($0|0),($2|0))|0;
  _memcpy(($18|0),($6|0),($2|0))|0;
  $19 = ((($17)) + -32|0);
  _memset(($19|0),($7|0),32)|0;
  $20 = (($17) + ($2)|0);
  _memset(($20|0),($10|0),32)|0;
  $21 = ((($18)) + -32|0);
  _memset(($21|0),($11|0),32)|0;
  $22 = (($18) + ($2)|0);
  _memset(($22|0),($13|0),32)|0;
  $exitcond = ($14|0)==(32);
  if ($exitcond) {
   $$0 = $0;$$1 = 0;
   break;
  } else {
   $$057 = $14;
  }
 }
 while(1) {
  $23 = ((($$0)) + -32|0);
  $24 = HEAP8[$$0>>0]|0;
  _memset(($23|0),($24|0),32)|0;
  $25 = (($$0) + ($2)|0);
  $26 = (($$0) + ($8)|0);
  $27 = HEAP8[$26>>0]|0;
  _memset(($25|0),($27|0),32)|0;
  $28 = (($$0) + ($1)|0);
  $29 = (($$1) + 1)|0;
  $30 = ($29|0)<($3|0);
  if ($30) {
   $$0 = $28;$$1 = $29;
  } else {
   break;
  }
 }
 return;
}
function __ZN10WelsCommon12CMemoryAlignC2Ej($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$ = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (9232);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = ($1|0)==(0);
 $4 = $1 & 15;
 $5 = ($4|0)!=(0);
 $6 = $3 | $5;
 $$$ = $6 ? 16 : $1;
 $7 = ((($0)) + 4|0);
 HEAP32[$7>>2] = $$$;
 return;
}
function __ZN10WelsCommon12CMemoryAlignD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (9232);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 } else {
  ___assert_fail((15463|0),(15490|0),60,(15524|0));
  // unreachable;
 }
}
function __ZN10WelsCommon12CMemoryAlignD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (9232);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  __ZdlPv($0);
  return;
 } else {
  ___assert_fail((15463|0),(15490|0),60,(15524|0));
  // unreachable;
 }
}
function __ZN7WelsDec12CWelsDecoder10InitializeEPK19TagSVCDecodingParam($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 do {
  if ($4) {
   $$0 = 3;
  } else {
   $5 = ($1|0)==(0|0);
   if ($5) {
    $6 = ((($3)) + 12|0);
    __Z7WelsLogP13TagLogContextiPKcz($6,1,30691,$vararg_buffer);
    $$0 = 1;
    break;
   }
   $7 = ((($1)) + 20|0);
   $8 = HEAP8[$7>>0]|0;
   $9 = ($8<<24>>24)!=(0);
   $10 = (__ZN7WelsDec12CWelsDecoder11InitDecoderEb($0,$9)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = ((($0)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (_DecoderConfigParam($13,$1)|0);
    $$0 = $14;
   } else {
    $$0 = $10;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec12CWelsDecoder12UninitializeEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN7WelsDec12CWelsDecoder13UninitDecoderEv($0);
 return 0;
}
function __ZN7WelsDec12CWelsDecoder11DecodeFrameEPKhiPPhPiRiS6_($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $7 = sp;
 dest=$7; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $8 = HEAP32[$4>>2]|0;
 $9 = ((($7)) + 36|0);
 HEAP32[$9>>2] = $8;
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($7)) + 40|0);
 HEAP32[$12>>2] = $11;
 $13 = HEAP32[$5>>2]|0;
 $14 = ((($7)) + 24|0);
 HEAP32[$14>>2] = $13;
 $15 = HEAP32[$6>>2]|0;
 $16 = ((($7)) + 28|0);
 HEAP32[$16>>2] = $15;
 $17 = HEAP32[$0>>2]|0;
 $18 = ((($17)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (FUNCTION_TABLE_iiiiii[$19 & 3]($0,$1,$2,$3,$7)|0);
 $21 = ($20|0)==(0);
 if (!($21)) {
  STACKTOP = sp;return ($20|0);
 }
 $22 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $22;
 $23 = HEAP32[$12>>2]|0;
 HEAP32[$10>>2] = $23;
 $24 = HEAP32[$14>>2]|0;
 HEAP32[$5>>2] = $24;
 $25 = HEAP32[$16>>2]|0;
 HEAP32[$6>>2] = $25;
 STACKTOP = sp;return ($20|0);
}
function __ZN7WelsDec12CWelsDecoder18DecodeFrameNoDelayEPKhiPPhP13TagBufferInfo($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiiiii[$7 & 3]($0,$1,$2,$3,$4)|0);
 $9 = HEAP32[$0>>2]|0;
 $10 = ((($9)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_iiiiii[$11 & 3]($0,0,0,$3,$4)|0);
 $13 = $12 | $8;
 return ($13|0);
}
function __ZN7WelsDec12CWelsDecoder12DecodeFrame2EPKhiPPhP13TagBufferInfo($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$1 = 0, $$pre = 0, $$pre$phi69Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre59 = 0, $$pre63 = 0, $$pre64 = 0, $$pre66 = 0, $$pre68 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0.0, $225 = 0.0, $226 = 0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0.0, $281 = 0.0, $282 = 0, $283 = 0, $284 = 0.0, $285 = 0.0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = sp + 16|0;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN7WelsDec13CheckBsBufferEPNS_21TagWelsDecoderContextEi($7,$2)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  $$1 = 16384;
  STACKTOP = sp;return ($$1|0);
 }
 $10 = ($2|0)>(0);
 $11 = ($1|0)!=(0|0);
 $or$cond = $11 & $10;
 $12 = HEAP32[$6>>2]|0;
 $13 = ((($12)) + 241950|0);
 if ($or$cond) {
  HEAP8[$13>>0] = 0;
 } else {
  HEAP8[$13>>0] = 1;
  $14 = HEAP32[$6>>2]|0;
  $15 = ((($14)) + 241951|0);
  HEAP8[$15>>0] = 1;
 }
 (_gettimeofday(($5|0),(0|0))|0);
 $16 = HEAP32[$5>>2]|0;
 $17 = ($16|0)<(0);
 $18 = $17 << 31 >> 31;
 $19 = (___muldi3(($16|0),($18|0),1000000,0)|0);
 $20 = tempRet0;
 $21 = ((($5)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)<(0);
 $24 = $23 << 31 >> 31;
 $25 = (_i64Add(($19|0),($20|0),($22|0),($24|0))|0);
 $26 = tempRet0;
 $27 = ((($3)) + 8|0);
 HEAP32[$27>>2] = 0;
 $28 = ((($3)) + 4|0);
 HEAP32[$28>>2] = 0;
 HEAP32[$3>>2] = 0;
 $29 = HEAP32[$6>>2]|0;
 $30 = ((($29)) + 116|0);
 HEAP32[$30>>2] = 0;
 $31 = HEAP32[$6>>2]|0;
 $32 = ((($31)) + 317160|0);
 HEAP32[$32>>2] = 2;
 $33 = ((($4)) + 8|0);
 $34 = $33;
 $35 = $34;
 $36 = HEAP32[$35>>2]|0;
 $37 = (($34) + 4)|0;
 $38 = $37;
 $39 = HEAP32[$38>>2]|0;
 dest=$4; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $40 = $33;
 $41 = $40;
 HEAP32[$41>>2] = $36;
 $42 = (($40) + 4)|0;
 $43 = $42;
 HEAP32[$43>>2] = $39;
 $44 = HEAP32[$6>>2]|0;
 $45 = ((($44)) + 242316|0);
 HEAP8[$45>>0] = 0;
 $46 = HEAP32[$6>>2]|0;
 $47 = ((($46)) + 242325|0);
 HEAP8[$47>>0] = 0;
 $48 = HEAP32[$6>>2]|0;
 $49 = ((($48)) + 242328|0);
 HEAP32[$49>>2] = 0;
 $50 = HEAP32[$6>>2]|0;
 $51 = ((($50)) + 104|0);
 HEAP32[$51>>2] = -1;
 $52 = HEAP32[$6>>2]|0;
 $53 = ((($52)) + 317164|0);
 HEAP32[$53>>2] = -1;
 $54 = ($4|0)==(0|0);
 if ($54) {
  $70 = 0;$73 = 0;
 } else {
  $55 = ((($4)) + 16|0);
  $56 = $55;
  $57 = $56;
  HEAP32[$57>>2] = 0;
  $58 = (($56) + 4)|0;
  $59 = $58;
  HEAP32[$59>>2] = 0;
  $60 = $33;
  $61 = $60;
  $62 = HEAP32[$61>>2]|0;
  $63 = (($60) + 4)|0;
  $64 = $63;
  $65 = HEAP32[$64>>2]|0;
  $70 = $62;$73 = $65;
 }
 $66 = HEAP32[$6>>2]|0;
 $67 = ((($66)) + 512544|0);
 $68 = $67;
 $69 = $68;
 HEAP32[$69>>2] = $70;
 $71 = (($68) + 4)|0;
 $72 = $71;
 HEAP32[$72>>2] = $73;
 $74 = HEAP32[$6>>2]|0;
 (_WelsDecodeBs($74,$1,$2,$3,$4,0)|0);
 $75 = HEAP32[$6>>2]|0;
 $76 = ((($75)) + 241951|0);
 HEAP8[$76>>0] = 0;
 $77 = HEAP32[$6>>2]|0;
 $78 = ((($77)) + 116|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = ($79|0)==(0);
 if ($80) {
  $233 = HEAP32[$4>>2]|0;
  $234 = ($233|0)==(1);
  do {
   if ($234) {
    $235 = ((($77)) + 512264|0);
    $236 = HEAP32[$235>>2]|0;
    $237 = (($236) + 1)|0;
    HEAP32[$235>>2] = $237;
    $238 = HEAP32[$6>>2]|0;
    $239 = ((($238)) + 512264|0);
    $240 = HEAP32[$239>>2]|0;
    $241 = ($240|0)==(0);
    if ($241) {
     $242 = ((($238)) + 512248|0);
     _ResetDecStatNums($242);
     $243 = HEAP32[$6>>2]|0;
     $244 = ((($243)) + 512264|0);
     $245 = HEAP32[$244>>2]|0;
     $246 = (($245) + 1)|0;
     HEAP32[$244>>2] = $246;
     $$pre59 = HEAP32[$6>>2]|0;
     $248 = $$pre59;
    } else {
     $248 = $238;
    }
    $247 = ((($248)) + 512248|0);
    $249 = HEAP32[$247>>2]|0;
    $250 = ((($4)) + 24|0);
    $251 = HEAP32[$250>>2]|0;
    $252 = ($249|0)==($251|0);
    if ($252) {
     $253 = ((($248)) + 512252|0);
     $254 = HEAP32[$253>>2]|0;
     $255 = ((($4)) + 28|0);
     $256 = HEAP32[$255>>2]|0;
     $257 = ($254|0)==($256|0);
     if ($257) {
      break;
     } else {
      $$pre$phiZ2D = $255;
     }
    } else {
     $$pre63 = ((($4)) + 28|0);
     $$pre$phiZ2D = $$pre63;
    }
    $258 = ((($248)) + 512268|0);
    $259 = HEAP32[$258>>2]|0;
    $260 = (($259) + 1)|0;
    HEAP32[$258>>2] = $260;
    $261 = HEAP32[$250>>2]|0;
    $262 = HEAP32[$6>>2]|0;
    $263 = ((($262)) + 512248|0);
    HEAP32[$263>>2] = $261;
    $264 = HEAP32[$$pre$phiZ2D>>2]|0;
    $265 = HEAP32[$6>>2]|0;
    $266 = ((($265)) + 512252|0);
    HEAP32[$266>>2] = $264;
   }
  } while(0);
  (_gettimeofday(($5|0),(0|0))|0);
  $267 = HEAP32[$5>>2]|0;
  $268 = ($267|0)<(0);
  $269 = $268 << 31 >> 31;
  $270 = (___muldi3(($267|0),($269|0),1000000,0)|0);
  $271 = tempRet0;
  $272 = ((($5)) + 4|0);
  $273 = HEAP32[$272>>2]|0;
  $274 = ($273|0)<(0);
  $275 = $274 << 31 >> 31;
  $276 = (_i64Subtract(($273|0),($275|0),($25|0),($26|0))|0);
  $277 = tempRet0;
  $278 = (_i64Add(($276|0),($277|0),($270|0),($271|0))|0);
  $279 = tempRet0;
  $280 = (+($278>>>0)) + (4294967296.0*(+($279|0)));
  $281 = $280 / 1000.0;
  $282 = HEAP32[$6>>2]|0;
  $283 = ((($282)) + 512240|0);
  $284 = +HEAPF64[$283>>3];
  $285 = $284 + $281;
  HEAPF64[$283>>3] = $285;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $81 = ((($77)) + 92|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = $79 & 16384;
 $84 = ($83|0)==(0);
 if (!($84)) {
  __ZN7WelsDec32ForceResetParaSetStatusAndAUListEPNS_21TagWelsDecoderContextE($77);
 }
 switch ($82|0) {
 case 5: case 7: case 8: case 15:  {
  label = 12;
  break;
 }
 default: {
  $85 = HEAP32[$6>>2]|0;
  $86 = ((($85)) + 60|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($87|0)==(0);
  if ($88) {
   label = 12;
  } else {
   $95 = $85;
  }
 }
 }
 if ((label|0) == 12) {
  $89 = HEAP32[$6>>2]|0;
  $90 = ((($89)) + 242340|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = ($91|0)==(0);
  if ($92) {
   $93 = ((($89)) + 242324|0);
   HEAP8[$93>>0] = 1;
   $$pre = HEAP32[$6>>2]|0;
   $95 = $$pre;
  } else {
   $95 = $89;
  }
 }
 $94 = ((($95)) + 317169|0);
 $96 = HEAP8[$94>>0]|0;
 $97 = ($96<<24>>24)==(0);
 if ($97) {
  $105 = ((($95)) + 317172|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($106) + 1)|0;
  HEAP32[$105>>2] = $107;
  $108 = HEAP32[$6>>2]|0;
  $109 = ((($108)) + 317172|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = ($110|0)==(2147483647);
  if ($111) {
   $112 = ((($0)) + 8|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ((($113)) + 12|0);
   __Z7WelsLogP13TagLogContextiPKcz($114,2,30643,$vararg_buffer1);
   $115 = HEAP32[$6>>2]|0;
   $116 = ((($115)) + 317172|0);
   HEAP32[$116>>2] = 0;
  }
 } else {
  $98 = ((($0)) + 8|0);
  $99 = HEAP32[$98>>2]|0;
  $100 = ((($99)) + 12|0);
  $101 = ((($95)) + 116|0);
  $102 = HEAP32[$101>>2]|0;
  HEAP32[$vararg_buffer>>2] = $102;
  __Z7WelsLogP13TagLogContextiPKcz($100,4,30610,$vararg_buffer);
  $103 = HEAP32[$6>>2]|0;
  $104 = ((($103)) + 317169|0);
  HEAP8[$104>>0] = 0;
 }
 $117 = HEAP32[$6>>2]|0;
 $118 = ((($117)) + 242340|0);
 $119 = HEAP32[$118>>2]|0;
 $120 = ($119|0)==(0);
 if (!($120)) {
  $121 = HEAP32[$4>>2]|0;
  $122 = ($121|0)==(1);
  if ($122) {
   $123 = ((($117)) + 116|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = $124 | 32;
   HEAP32[$123>>2] = $125;
   $126 = HEAP32[$6>>2]|0;
   $127 = ((($126)) + 512248|0);
   $128 = HEAP32[$127>>2]|0;
   $129 = ((($4)) + 24|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ($128|0)==($130|0);
   if ($131) {
    $132 = ((($126)) + 512252|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = ((($4)) + 28|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = ($133|0)==($135|0);
    if ($136) {
     $147 = $126;
    } else {
     $$pre$phi69Z2D = $134;
     label = 23;
    }
   } else {
    $$pre68 = ((($4)) + 28|0);
    $$pre$phi69Z2D = $$pre68;
    label = 23;
   }
   if ((label|0) == 23) {
    $137 = ((($126)) + 512268|0);
    $138 = HEAP32[$137>>2]|0;
    $139 = (($138) + 1)|0;
    HEAP32[$137>>2] = $139;
    $140 = HEAP32[$129>>2]|0;
    $141 = HEAP32[$6>>2]|0;
    $142 = ((($141)) + 512248|0);
    HEAP32[$142>>2] = $140;
    $143 = HEAP32[$$pre$phi69Z2D>>2]|0;
    $144 = HEAP32[$6>>2]|0;
    $145 = ((($144)) + 512252|0);
    HEAP32[$145>>2] = $143;
    $$pre57 = HEAP32[$6>>2]|0;
    $147 = $$pre57;
   }
   $146 = ((($147)) + 512264|0);
   $148 = HEAP32[$146>>2]|0;
   $149 = (($148) + 1)|0;
   HEAP32[$146>>2] = $149;
   $150 = HEAP32[$6>>2]|0;
   $151 = ((($150)) + 512264|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = ($152|0)==(0);
   if ($153) {
    $154 = ((($150)) + 512248|0);
    _ResetDecStatNums($154);
    $155 = HEAP32[$6>>2]|0;
    $156 = ((($155)) + 512264|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = (($157) + 1)|0;
    HEAP32[$156>>2] = $158;
    $$pre58 = HEAP32[$6>>2]|0;
    $160 = $$pre58;
   } else {
    $160 = $150;
   }
   $159 = ((($160)) + 512332|0);
   $161 = HEAP32[$159>>2]|0;
   $162 = ((($160)) + 512336|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (($163) + ($161))|0;
   $165 = ((($160)) + 512340|0);
   $166 = HEAP32[$165>>2]|0;
   $167 = ($166|0)==(0);
   $168 = ((($160)) + 512276|0);
   $169 = HEAP32[$168>>2]|0;
   $170 = ((($160)) + 512288|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = Math_imul($171, $169)|0;
   if ($167) {
    $176 = $172;
   } else {
    $173 = ($164*100)|0;
    $174 = (($173|0) / ($166|0))&-1;
    $175 = (($174) + ($172))|0;
    $176 = $175;
   }
   HEAP32[$168>>2] = $176;
   $177 = HEAP32[$6>>2]|0;
   $178 = ((($177)) + 512340|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = ($179|0)==(0);
   $181 = ((($177)) + 512280|0);
   $182 = HEAP32[$181>>2]|0;
   $183 = ((($177)) + 512288|0);
   $184 = HEAP32[$183>>2]|0;
   $185 = Math_imul($184, $182)|0;
   if ($180) {
    $191 = $185;
   } else {
    $186 = ((($177)) + 512336|0);
    $187 = HEAP32[$186>>2]|0;
    $188 = ($187*100)|0;
    $189 = (($188|0) / ($179|0))&-1;
    $190 = (($189) + ($185))|0;
    $191 = $190;
   }
   HEAP32[$181>>2] = $191;
   $not$ = ($164|0)!=(0);
   $192 = $not$&1;
   $193 = HEAP32[$6>>2]|0;
   $194 = ((($193)) + 512288|0);
   $195 = HEAP32[$194>>2]|0;
   $196 = (($195) + ($192))|0;
   HEAP32[$194>>2] = $196;
   $197 = HEAP32[$6>>2]|0;
   $198 = ((($197)) + 512288|0);
   $199 = HEAP32[$198>>2]|0;
   $200 = ($199|0)==(0);
   $$pre64 = ((($197)) + 512276|0);
   if ($200) {
    $203 = 0;
   } else {
    $201 = HEAP32[$$pre64>>2]|0;
    $202 = (($201>>>0) / ($199>>>0))&-1;
    $203 = $202;
   }
   HEAP32[$$pre64>>2] = $203;
   $204 = HEAP32[$6>>2]|0;
   $205 = ((($204)) + 512288|0);
   $206 = HEAP32[$205>>2]|0;
   $207 = ($206|0)==(0);
   $$pre66 = ((($204)) + 512280|0);
   if ($207) {
    $210 = 0;
   } else {
    $208 = HEAP32[$$pre66>>2]|0;
    $209 = (($208>>>0) / ($206>>>0))&-1;
    $210 = $209;
   }
   HEAP32[$$pre66>>2] = $210;
  }
 }
 (_gettimeofday(($5|0),(0|0))|0);
 $211 = HEAP32[$5>>2]|0;
 $212 = ($211|0)<(0);
 $213 = $212 << 31 >> 31;
 $214 = (___muldi3(($211|0),($213|0),1000000,0)|0);
 $215 = tempRet0;
 $216 = ((($5)) + 4|0);
 $217 = HEAP32[$216>>2]|0;
 $218 = ($217|0)<(0);
 $219 = $218 << 31 >> 31;
 $220 = (_i64Subtract(($217|0),($219|0),($25|0),($26|0))|0);
 $221 = tempRet0;
 $222 = (_i64Add(($220|0),($221|0),($214|0),($215|0))|0);
 $223 = tempRet0;
 $224 = (+($222>>>0)) + (4294967296.0*(+($223|0)));
 $225 = $224 / 1000.0;
 $226 = HEAP32[$6>>2]|0;
 $227 = ((($226)) + 512240|0);
 $228 = +HEAPF64[$227>>3];
 $229 = $228 + $225;
 HEAPF64[$227>>3] = $229;
 $230 = HEAP32[$6>>2]|0;
 $231 = ((($230)) + 116|0);
 $232 = HEAP32[$231>>2]|0;
 $$1 = $232;
 STACKTOP = sp;return ($$1|0);
}
function __ZN7WelsDec12CWelsDecoder12DecodeParserEPKhiP15TagParserBsInfo($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$pre = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN7WelsDec13CheckBsBufferEPNS_21TagWelsDecoderContextEi($5,$2)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  $$0 = 16384;
  return ($$0|0);
 }
 $8 = ($2|0)>(0);
 $9 = ($1|0)!=(0|0);
 $or$cond = $9 & $8;
 $10 = HEAP32[$4>>2]|0;
 $11 = ((($10)) + 241950|0);
 if ($or$cond) {
  HEAP8[$11>>0] = 0;
 } else {
  HEAP8[$11>>0] = 1;
  $12 = HEAP32[$4>>2]|0;
  $13 = ((($12)) + 241951|0);
  HEAP8[$13>>0] = 1;
 }
 $14 = HEAP32[$4>>2]|0;
 $15 = ((($14)) + 116|0);
 HEAP32[$15>>2] = 0;
 $16 = HEAP32[$4>>2]|0;
 $17 = ((($16)) + 242340|0);
 HEAP32[$17>>2] = 0;
 $18 = HEAP32[$4>>2]|0;
 $19 = ((($18)) + 242345|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)==(0);
 if ($21) {
  $22 = ((($18)) + 316848|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$23>>2] = 0;
  $24 = HEAP32[$4>>2]|0;
  $25 = ((($24)) + 316848|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  dest=$27; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 }
 HEAP32[$3>>2] = 0;
 $28 = ((($3)) + 524|0);
 HEAP32[$28>>2] = 0;
 $29 = ((($3)) + 520|0);
 HEAP32[$29>>2] = 0;
 $30 = ($3|0)==(0|0);
 if ($30) {
  $45 = HEAP32[$4>>2]|0;
  $46 = ((($45)) + 512544|0);
  $$sink = $46;
 } else {
  $31 = ((($3)) + 528|0);
  $32 = $31;
  $33 = $32;
  $34 = HEAP32[$33>>2]|0;
  $35 = (($32) + 4)|0;
  $36 = $35;
  $37 = HEAP32[$36>>2]|0;
  $38 = HEAP32[$4>>2]|0;
  $39 = ((($38)) + 512544|0);
  $40 = $39;
  $41 = $40;
  HEAP32[$41>>2] = $34;
  $42 = (($40) + 4)|0;
  $43 = $42;
  HEAP32[$43>>2] = $37;
  $44 = ((($3)) + 536|0);
  $$sink = $44;
 }
 $47 = $$sink;
 $48 = $47;
 HEAP32[$48>>2] = 0;
 $49 = (($47) + 4)|0;
 $50 = $49;
 HEAP32[$50>>2] = 0;
 $51 = HEAP32[$4>>2]|0;
 (_WelsDecodeBs($51,$1,$2,0,0,$3)|0);
 $52 = HEAP32[$4>>2]|0;
 $53 = ((($52)) + 242345|0);
 $54 = HEAP8[$53>>0]|0;
 $55 = ($54<<24>>24)==(0);
 if ($55) {
  $56 = ((($52)) + 316848|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = HEAP32[$57>>2]|0;
  $59 = ($58|0)==(0);
  if ($59) {
   $61 = $52;
  } else {
   _memcpy(($3|0),($57|0),544)|0;
   $$pre = HEAP32[$4>>2]|0;
   $61 = $$pre;
  }
 } else {
  $61 = $52;
 }
 $60 = ((($61)) + 241951|0);
 HEAP8[$60>>0] = 0;
 $62 = HEAP32[$4>>2]|0;
 $63 = ((($62)) + 116|0);
 $64 = HEAP32[$63>>2]|0;
 $$0 = $64;
 return ($$0|0);
}
function __ZN7WelsDec12CWelsDecoder13DecodeFrameExEPKhiPhiRiS4_S4_S4_($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN7WelsDec12CWelsDecoder9SetOptionE14DECODER_OPTIONPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if ($5) {
   switch ($1|0) {
   case 9:  {
    label = 15;
    break;
   }
   case 10:  {
    label = 17;
    break;
   }
   case 11:  {
    label = 19;
    break;
   }
   default: {
    $$0 = 8192;
   }
   }
  } else {
   switch ($1|0) {
   case 9:  {
    label = 15;
    break L1;
    break;
   }
   case 10:  {
    label = 17;
    break L1;
    break;
   }
   case 11:  {
    label = 19;
    break L1;
    break;
   }
   case 0:  {
    $6 = ((($4)) + 242344|0);
    $7 = HEAP8[$6>>0]|0;
    $8 = ($7<<24>>24)==(0);
    if (!($8)) {
     $9 = ((($0)) + 8|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = ((($10)) + 12|0);
     __Z7WelsLogP13TagLogContextiPKcz($11,2,22316,$vararg_buffer);
     $$0 = 0;
     break L1;
    }
    $12 = ($2|0)==(0|0);
    if ($12) {
     $$0 = 1;
     break L1;
    }
    $13 = HEAP32[$2>>2]|0;
    $14 = (_DecoderSetCsp($4,$13)|0);
    $$0 = $14;
    break L1;
    break;
   }
   case 1:  {
    $15 = ($2|0)==(0|0);
    if ($15) {
     $$0 = 1;
     break L1;
    }
    $16 = ((($4)) + 241950|0);
    $17 = HEAP32[$2>>2]|0;
    $18 = ($17|0)!=(0);
    $19 = $18&1;
    HEAP8[$16>>0] = $19;
    $$0 = 0;
    break L1;
    break;
   }
   case 8:  {
    $20 = ($2|0)==(0|0);
    if ($20) {
     $$0 = 1;
     break L1;
    }
    $21 = HEAP32[$2>>2]|0;
    $22 = ($21|0)<(0);
    $23 = ($21|0)<(7);
    $24 = $23 ? $21 : 7;
    $25 = $22 ? 0 : $24;
    $26 = ((($4)) + 242340|0);
    HEAP32[$26>>2] = $25;
    $27 = HEAP32[$3>>2]|0;
    $28 = ((($27)) + 242344|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = ($29<<24>>24)==(0);
    if (!($30)) {
     $31 = ((($27)) + 242340|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==(0);
     if (!($33)) {
      $34 = ((($0)) + 8|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ((($35)) + 12|0);
      HEAP32[$vararg_buffer1>>2] = $25;
      __Z7WelsLogP13TagLogContextiPKcz($36,4,22383,$vararg_buffer1);
      $$0 = 1;
      break L1;
     }
    }
    __ZN7WelsDec12InitErrorConEPNS_21TagWelsDecoderContextE($27);
    $37 = ((($0)) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = ((($38)) + 12|0);
    HEAP32[$vararg_buffer3>>2] = $25;
    __Z7WelsLogP13TagLogContextiPKcz($39,4,22458,$vararg_buffer3);
    $$0 = 0;
    break L1;
    break;
   }
   case 12:  {
    $54 = ((($0)) + 8|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 12|0);
    __Z7WelsLogP13TagLogContextiPKcz($56,2,22562,$vararg_buffer9);
    $$0 = 1;
    break L1;
    break;
   }
   default: {
    $$0 = 1;
    break L1;
   }
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $40 = ((($0)) + 8|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ($41|0)==(0|0);
  if ($42) {
   $$0 = 0;
  } else {
   $43 = HEAP32[$2>>2]|0;
   __ZN14welsCodecTrace13SetTraceLevelEi($41,$43);
   $$0 = 0;
  }
 }
 else if ((label|0) == 17) {
  $44 = ((($0)) + 8|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($45|0)==(0|0);
  if ($46) {
   $$0 = 0;
  } else {
   $47 = HEAP32[$2>>2]|0;
   __ZN14welsCodecTrace16SetTraceCallbackEPFvPviPKcE($45,$47);
   $48 = HEAP32[$44>>2]|0;
   $49 = ((($48)) + 12|0);
   HEAP32[$vararg_buffer6>>2] = 21414;
   __Z7WelsLogP13TagLogContextiPKcz($49,4,22506,$vararg_buffer6);
   $$0 = 0;
  }
 }
 else if ((label|0) == 19) {
  $50 = ((($0)) + 8|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ($51|0)==(0|0);
  if ($52) {
   $$0 = 0;
  } else {
   $53 = HEAP32[$2>>2]|0;
   __ZN14welsCodecTrace23SetTraceCallbackContextEPv($51,$53);
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec12CWelsDecoder9GetOptionE14DECODER_OPTIONPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 4;
  return ($$0|0);
 }
 $6 = ($2|0)==(0|0);
 if ($6) {
  $$0 = 1;
  return ($$0|0);
 }
 do {
  switch ($1|0) {
  case 0:  {
   $7 = ((($4)) + 56|0);
   $8 = HEAP32[$7>>2]|0;
   HEAP32[$2>>2] = $8;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 1:  {
   $9 = ((($4)) + 241950|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   HEAP32[$2>>2] = $11;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 5:  {
   $12 = ((($4)) + 242332|0);
   $13 = HEAP16[$12>>1]|0;
   $14 = $13&65535;
   HEAP32[$2>>2] = $14;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 4:  {
   $15 = ((($4)) + 104|0);
   $16 = HEAP32[$15>>2]|0;
   HEAP32[$2>>2] = $16;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 6:  {
   $17 = ((($4)) + 242325|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   HEAP32[$2>>2] = $19;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 7:  {
   $20 = ((($4)) + 242328|0);
   $21 = HEAP32[$20>>2]|0;
   HEAP32[$2>>2] = $21;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 2:  {
   $22 = ((($4)) + 317160|0);
   $23 = HEAP32[$22>>2]|0;
   HEAP32[$2>>2] = $23;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 3:  {
   $24 = ((($4)) + 317164|0);
   $25 = HEAP32[$24>>2]|0;
   HEAP32[$2>>2] = $25;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 8:  {
   $26 = ((($4)) + 242340|0);
   $27 = HEAP32[$26>>2]|0;
   HEAP32[$2>>2] = $27;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  case 12:  {
   $28 = ((($4)) + 512248|0);
   dest=$2; src=$28; stop=dest+84|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $29 = HEAP32[$3>>2]|0;
   $30 = ((($29)) + 512240|0);
   $31 = +HEAPF64[$30>>3];
   $32 = $31;
   $33 = ((($29)) + 512264|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (+($34>>>0));
   $36 = $32 / $35;
   $37 = ((($2)) + 8|0);
   HEAPF32[$37>>2] = $36;
   $38 = HEAP32[$3>>2]|0;
   $39 = ((($38)) + 512240|0);
   $40 = +HEAPF64[$39>>3];
   $41 = $40;
   $42 = ((($38)) + 512264|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ((($38)) + 512296|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = (($45) + ($43))|0;
   $47 = ((($38)) + 512300|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = (($46) + ($48))|0;
   $50 = (+($49>>>0));
   $51 = $41 / $50;
   $52 = ((($2)) + 12|0);
   HEAPF32[$52>>2] = $51;
   $$0 = 0;
   return ($$0|0);
   break;
  }
  default: {
   $$0 = 1;
   return ($$0|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __ZN7WelsDec12CWelsDecoderD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 HEAP32[$0>>2] = (9248);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($2)) + 12|0);
  __Z7WelsLogP13TagLogContextiPKcz($4,4,21324,$vararg_buffer);
 }
 __ZN7WelsDec12CWelsDecoder13UninitDecoderEv($0);
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 __ZN14welsCodecTraceD2Ev($5);
 __ZdlPv($5);
 HEAP32[$1>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN7WelsDec12CWelsDecoderD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 HEAP32[$0>>2] = (9248);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($2)) + 12|0);
  __Z7WelsLogP13TagLogContextiPKcz($4,4,21324,$vararg_buffer);
 }
 __ZN7WelsDec12CWelsDecoder13UninitDecoderEv($0);
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  __ZdlPv($0);
  STACKTOP = sp;return;
 }
 __ZN14welsCodecTraceD2Ev($5);
 __ZdlPv($5);
 __ZdlPv($0);
 STACKTOP = sp;return;
}
function __ZN7WelsDec12CWelsDecoder13UninitDecoderEv($0) {
 $0 = $0|0;
 var $$pr = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  STACKTOP = sp;return;
 }
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 HEAP32[$vararg_buffer>>2] = 21414;
 __Z7WelsLogP13TagLogContextiPKcz($6,4,21354,$vararg_buffer);
 $7 = HEAP32[$1>>2]|0;
 _WelsEndDecoder($7);
 $8 = HEAP32[$1>>2]|0;
 $9 = ((($8)) + 562528|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $24 = $8;
 } else {
  $12 = HEAP32[$4>>2]|0;
  $13 = ((($12)) + 12|0);
  $14 = (__ZNK10WelsCommon12CMemoryAlign18WelsGetMemoryUsageEv($10)|0);
  HEAP32[$vararg_buffer1>>2] = $14;
  __Z7WelsLogP13TagLogContextiPKcz($13,4,21422,$vararg_buffer1);
  $15 = HEAP32[$1>>2]|0;
  $16 = ((($15)) + 562528|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(0|0);
  if ($18) {
   $23 = $15;
  } else {
   $19 = HEAP32[$17>>2]|0;
   $20 = ((($19)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   FUNCTION_TABLE_vi[$21 & 15]($17);
   $$pre = HEAP32[$1>>2]|0;
   $23 = $$pre;
  }
  $22 = ((($23)) + 562528|0);
  HEAP32[$22>>2] = 0;
  $$pr = HEAP32[$1>>2]|0;
  $24 = $$pr;
 }
 $25 = ($24|0)==(0|0);
 if ($25) {
  STACKTOP = sp;return;
 }
 __ZN10WelsCommon8WelsFreeEPvPKc($24,21497);
 HEAP32[$1>>2] = 0;
 STACKTOP = sp;return;
}
function _WelsEndDecoder($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _WelsFreeMem($0);
 __ZN7WelsDec14WelsFreeMemoryEPNS_21TagWelsDecoderContextE($0);
 __ZN7WelsDec24UninitialDqLayersContextEPNS_21TagWelsDecoderContextE($0);
 $1 = ((($0)) + 242324|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($0)) + 242334|0);
 HEAP8[$2>>0] = 0;
 $3 = ((($0)) + 317169|0);
 HEAP8[$3>>0] = 0;
 return;
}
function __ZN10WelsCommon8WelsFreeEPvPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  return;
 }
 $3 = ((($0)) + -4|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 return;
}
function _WelsFreeMem($0) {
 $0 = $0|0;
 var $$025$i = 0, $$025$i$1 = 0, $$lcssa$i = 0, $$lcssa$i$1 = 0, $$pre$i = 0, $$pre$i$1 = 0, $$pre28$i = 0, $$pre28$i$1 = 0, $$pre29$i = 0, $$pre29$i$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 562528|0);
 $2 = HEAP32[$1>>2]|0;
 (__ZN7WelsDec12ResetFmoListEPNS_21TagWelsDecoderContextE($0)|0);
 __ZN7WelsDec15WelsResetRefPicEPNS_21TagWelsDecoderContextE($0);
 $3 = ((($0)) + 209440|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = HEAP32[$4>>2]|0;
  $7 = ($6|0)==(0|0);
  $$pre29$i = ((($4)) + 4|0);
  if (!($7)) {
   $8 = HEAP32[$$pre29$i>>2]|0;
   $9 = ($8|0)>(0);
   if ($9) {
    $$025$i = 0;$11 = $6;$38 = $8;
    while(1) {
     $10 = (($11) + ($$025$i<<2)|0);
     $12 = HEAP32[$10>>2]|0;
     $13 = ($12|0)==(0|0);
     if ($13) {
      $16 = $38;$39 = $11;
     } else {
      __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($12,$2);
      $$pre$i = HEAP32[$$pre29$i>>2]|0;
      $$pre28$i = HEAP32[$4>>2]|0;
      $16 = $$pre$i;$39 = $$pre28$i;
     }
     $14 = (($$025$i) + 1)|0;
     $15 = ($14|0)<($16|0);
     if ($15) {
      $$025$i = $14;$11 = $39;$38 = $16;
     } else {
      $$lcssa$i = $39;
      break;
     }
    }
   } else {
    $$lcssa$i = $6;
   }
   __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$$lcssa$i,22230);
   HEAP32[$4>>2] = 0;
  }
  HEAP32[$$pre29$i>>2] = 0;
  $17 = ((($4)) + 8|0);
  HEAP32[$17>>2] = 0;
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$4,22245);
  HEAP32[$3>>2] = 0;
 }
 $18 = ((($0)) + 209444|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $33 = ((($0)) + 68|0);
  $34 = ((($0)) + 84|0);
  ;HEAP32[$33>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;HEAP32[$33+12>>2]=0|0;
  HEAP8[$34>>0] = 1;
  $35 = ((($0)) + 64|0);
  HEAP8[$35>>0] = 0;
  $36 = ((($0)) + 512232|0);
  $37 = HEAP32[$36>>2]|0;
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$37,22253);
  return;
 }
 $21 = HEAP32[$19>>2]|0;
 $22 = ($21|0)==(0|0);
 $$pre29$i$1 = ((($19)) + 4|0);
 if (!($22)) {
  $23 = HEAP32[$$pre29$i$1>>2]|0;
  $24 = ($23|0)>(0);
  if ($24) {
   $$025$i$1 = 0;$26 = $21;$40 = $23;
   while(1) {
    $25 = (($26) + ($$025$i$1<<2)|0);
    $27 = HEAP32[$25>>2]|0;
    $28 = ($27|0)==(0|0);
    if ($28) {
     $31 = $40;$41 = $26;
    } else {
     __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($27,$2);
     $$pre$i$1 = HEAP32[$$pre29$i$1>>2]|0;
     $$pre28$i$1 = HEAP32[$19>>2]|0;
     $31 = $$pre$i$1;$41 = $$pre28$i$1;
    }
    $29 = (($$025$i$1) + 1)|0;
    $30 = ($29|0)<($31|0);
    if ($30) {
     $$025$i$1 = $29;$26 = $41;$40 = $31;
    } else {
     $$lcssa$i$1 = $41;
     break;
    }
   }
  } else {
   $$lcssa$i$1 = $21;
  }
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$$lcssa$i$1,22230);
  HEAP32[$19>>2] = 0;
 }
 HEAP32[$$pre29$i$1>>2] = 0;
 $32 = ((($19)) + 8|0);
 HEAP32[$32>>2] = 0;
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$19,22245);
 HEAP32[$18>>2] = 0;
 $33 = ((($0)) + 68|0);
 $34 = ((($0)) + 84|0);
 ;HEAP32[$33>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;HEAP32[$33+12>>2]=0|0;
 HEAP8[$34>>0] = 1;
 $35 = ((($0)) + 64|0);
 HEAP8[$35>>0] = 0;
 $36 = ((($0)) + 512232|0);
 $37 = HEAP32[$36>>2]|0;
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$37,22253);
 return;
}
function __ZN7WelsDec14WelsFreeMemoryEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + 562528|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$5,22109);
  HEAP32[$4>>2] = 0;
 }
 $7 = ((($0)) + 241888|0);
 (__ZN7WelsDec14MemFreeNalListEPPNS_14TagAccessUnitsEPN10WelsCommon12CMemoryAlignE($7,$3)|0);
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$9,22122);
 }
 $11 = ((($0)) + 242344|0);
 ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;HEAP32[$8+12>>2]=0|0;
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)==(0);
 if ($13) {
  return;
 }
 $14 = ((($0)) + 32|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$15,22144);
 }
 $17 = ((($0)) + 316848|0);
 ;HEAP32[$14>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;HEAP32[$14+12>>2]=0|0;
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  return;
 }
 $20 = ((($18)) + 516|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0|0);
 if ($22) {
  $25 = $18;
 } else {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$21,22168);
  $23 = HEAP32[$17>>2]|0;
  $24 = ((($23)) + 516|0);
  HEAP32[$24>>2] = 0;
  $$pre = HEAP32[$17>>2]|0;
  $25 = $$pre;
 }
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$25,22198);
 HEAP32[$17>>2] = 0;
 return;
}
function __ZN7WelsDec24UninitialDqLayersContextEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 562528|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 241936|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $75 = ((($0)) + 241940|0);
  HEAP32[$75>>2] = 0;
  $76 = ((($0)) + 241944|0);
  HEAP32[$76>>2] = 0;
  $77 = ((($0)) + 241952|0);
  HEAP8[$77>>0] = 0;
  return;
 }
 $6 = ((($0)) + 5344|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$7,21511);
  HEAP32[$6>>2] = 0;
 }
 $9 = ((($0)) + 5348|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$10,21531);
  HEAP32[$9>>2] = 0;
 }
 $12 = ((($0)) + 5356|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$13,21549);
  HEAP32[$12>>2] = 0;
 }
 $15 = ((($0)) + 5364|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if (!($17)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$16,21573);
  HEAP32[$15>>2] = 0;
 }
 $18 = ((($0)) + 5368|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if (!($20)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$19,21617);
  HEAP32[$18>>2] = 0;
 }
 $21 = ((($0)) + 5372|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 if (!($23)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$22,21651);
  HEAP32[$21>>2] = 0;
 }
 $24 = ((($0)) + 5376|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ($25|0)==(0|0);
 if (!($26)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$25,21671);
  HEAP32[$24>>2] = 0;
 }
 $27 = ((($0)) + 5380|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$28,21693);
  HEAP32[$27>>2] = 0;
 }
 $30 = ((($0)) + 5388|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0|0);
 if (!($32)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$31,21712);
  HEAP32[$30>>2] = 0;
 }
 $33 = ((($0)) + 5392|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0|0);
 if (!($35)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$34,21731);
  HEAP32[$33>>2] = 0;
 }
 $36 = ((($0)) + 5396|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0|0);
 if (!($38)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$37,21748);
  HEAP32[$36>>2] = 0;
 }
 $39 = ((($0)) + 5400|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($40|0)==(0|0);
 if (!($41)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$40,21767);
  HEAP32[$39>>2] = 0;
 }
 $42 = ((($0)) + 5404|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ($43|0)==(0|0);
 if (!($44)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$43,21793);
  HEAP32[$42>>2] = 0;
 }
 $45 = ((($0)) + 5408|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = ($46|0)==(0|0);
 if (!($47)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$46,21820);
  HEAP32[$45>>2] = 0;
 }
 $48 = ((($0)) + 5412|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0|0);
 if (!($50)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$49,21851);
  HEAP32[$48>>2] = 0;
 }
 $51 = ((($0)) + 5416|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ($52|0)==(0|0);
 if (!($53)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$52,21880);
  HEAP32[$51>>2] = 0;
 }
 $54 = ((($0)) + 5420|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = ($55|0)==(0|0);
 if (!($56)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$55,21908);
  HEAP32[$54>>2] = 0;
 }
 $57 = ((($0)) + 5432|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = ($58|0)==(0|0);
 if (!($59)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$58,21925);
  HEAP32[$57>>2] = 0;
 }
 $60 = ((($0)) + 5436|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ($61|0)==(0|0);
 if (!($62)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$61,21948);
  HEAP32[$60>>2] = 0;
 }
 $63 = ((($0)) + 5440|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)==(0|0);
 if (!($65)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$64,21970);
  HEAP32[$63>>2] = 0;
 }
 $66 = ((($0)) + 5444|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = ($67|0)==(0|0);
 if (!($68)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$67,22000);
  HEAP32[$66>>2] = 0;
 }
 $69 = ((($0)) + 5448|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = ($70|0)==(0|0);
 if (!($71)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$70,22037);
  HEAP32[$69>>2] = 0;
 }
 $72 = ((($0)) + 5452|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = ($73|0)==(0|0);
 if (!($74)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$73,22073);
  HEAP32[$72>>2] = 0;
 }
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$4,22105);
 HEAP32[$3>>2] = 0;
 $75 = ((($0)) + 241940|0);
 HEAP32[$75>>2] = 0;
 $76 = ((($0)) + 241944|0);
 HEAP32[$76>>2] = 0;
 $77 = ((($0)) + 241952|0);
 HEAP8[$77>>0] = 0;
 return;
}
function __ZN7WelsDec14MemFreeNalListEPPNS_14TagAccessUnitsEPN10WelsCommon12CMemoryAlignE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  return 0;
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  return 0;
 }
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($1,$3,22218);
 HEAP32[$0>>2] = 0;
 return 0;
}
function __ZN7WelsDec12ResetFmoListEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 0;
  return ($$0|0);
 }
 $2 = ((($0)) + 120|0);
 $3 = ((($0)) + 5244|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 562528|0);
 $6 = HEAP32[$5>>2]|0;
 __ZN7WelsDec13UninitFmoListEPNS_6TagFmoEiiPN10WelsCommon12CMemoryAlignE($2,256,$4,$6);
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$3>>2] = 0;
 $$0 = $7;
 return ($$0|0);
}
function __ZN7WelsDec15WelsResetRefPicEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$024 = 0, $$123 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $exitcond = 0, $exitcond25 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 5854|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($0)) + 5856|0);
 HEAP8[$2>>0] = 0;
 $3 = ((($0)) + 5852|0);
 HEAP8[$3>>0] = 0;
 $$024 = 0;
 while(1) {
  $4 = (((($0)) + 5596|0) + ($$024<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0|0);
  if (!($6)) {
   $7 = ((($5)) + 68|0);
   HEAP8[$7>>0] = 0;
   $8 = ((($5)) + 69|0);
   HEAP8[$8>>0] = 0;
   $9 = ((($5)) + 73|0);
   $10 = ((($5)) + 72|0);
   dest=$9; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$10>>0] = 0;
   HEAP32[$4>>2] = 0;
  }
  $11 = (($$024) + 1)|0;
  $exitcond25 = ($11|0)==(16);
  if ($exitcond25) {
   break;
  } else {
   $$024 = $11;
  }
 }
 HEAP8[$1>>0] = 0;
 $$123 = 0;
 while(1) {
  $12 = (((($0)) + 5724|0) + ($$123<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if (!($14)) {
   $15 = ((($13)) + 68|0);
   HEAP8[$15>>0] = 0;
   $16 = ((($13)) + 69|0);
   HEAP8[$16>>0] = 0;
   $17 = ((($13)) + 73|0);
   $18 = ((($13)) + 72|0);
   dest=$17; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$18>>0] = 0;
   HEAP32[$12>>2] = 0;
  }
  $19 = (($$123) + 1)|0;
  $exitcond = ($19|0)==(16);
  if ($exitcond) {
   break;
  } else {
   $$123 = $19;
  }
 }
 HEAP8[$2>>0] = 0;
 return;
}
function __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  return;
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($1,$3,22275);
 }
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($1,$0,22292);
 return;
}
function __ZN7WelsDec13UninitFmoListEPNS_6TagFmoEiiPN10WelsCommon12CMemoryAlignE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$02731 = 0, $$02830 = 0, $$032 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $or$cond29 = 0, $or$cond29$not = 0, $or$cond34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 $5 = ($2|0)<(1);
 $or$cond = $4 | $5;
 $6 = ($1|0)<($2|0);
 $or$cond29 = $6 | $or$cond;
 $or$cond29$not = $or$cond29 ^ 1;
 $7 = ($1|0)>(0);
 $or$cond34 = $7 & $or$cond29$not;
 if ($or$cond34) {
  $$02731 = 0;$$02830 = $0;$$032 = 0;
 } else {
  return;
 }
 while(1) {
  $8 = ($$02830|0)==(0|0);
  if ($8) {
   $$1 = $$032;
  } else {
   $9 = ((($$02830)) + 16|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = ($10<<24>>24)==(0);
   if ($11) {
    $$1 = $$032;
   } else {
    $12 = HEAP32[$$02830>>2]|0;
    $13 = ($12|0)==(0|0);
    if (!($13)) {
     __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$12,22297);
     HEAP32[$$02830>>2] = 0;
    }
    $14 = ((($$02830)) + 8|0);
    HEAP32[$14>>2] = 0;
    $15 = ((($$02830)) + 12|0);
    HEAP32[$15>>2] = -1;
    $16 = ((($$02830)) + 4|0);
    HEAP32[$16>>2] = 0;
    HEAP8[$9>>0] = 0;
    $17 = (($$032) + 1)|0;
    $18 = ($17|0)<($2|0);
    if ($18) {
     $$1 = $17;
    } else {
     label = 8;
     break;
    }
   }
  }
  $19 = ((($$02830)) + 20|0);
  $20 = (($$02731) + 1)|0;
  $21 = ($20|0)<($1|0);
  if ($21) {
   $$02731 = $20;$$02830 = $19;$$032 = $$1;
  } else {
   label = 8;
   break;
  }
 }
 if ((label|0) == 8) {
  return;
 }
}
function _DecoderSetCsp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 L1: do {
  if ($2) {
   $$0 = 1;
  } else {
   $3 = ((($0)) + 56|0);
   HEAP32[$3>>2] = $1;
   $4 = ((($0)) + 48|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($5|0)==(0|0);
   if (!($6)) {
    $7 = ((($5)) + 4|0);
    HEAP32[$7>>2] = $1;
   }
   switch ($1|0) {
   case 23:  {
    $$0 = 0;
    break L1;
    break;
   }
   case 25:  {
    HEAP32[$3>>2] = 23;
    $8 = HEAP32[$4>>2]|0;
    $9 = ((($8)) + 4|0);
    HEAP32[$9>>2] = 23;
    $$0 = 0;
    break L1;
    break;
   }
   default: {
    __Z7WelsLogP13TagLogContextiPKcz($0,2,22644,$vararg_buffer);
    HEAP32[$3>>2] = 23;
    $10 = HEAP32[$4>>2]|0;
    $11 = ((($10)) + 4|0);
    HEAP32[$11>>2] = 23;
    $$0 = 5;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec12InitErrorConEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 242340|0);
 $2 = HEAP32[$1>>2]|0;
 switch ($2|0) {
 case 5: case 7:  {
  break;
 }
 case 6: case 4: case 2:  {
  $3 = ((($0)) + 84|0);
  HEAP8[$3>>0] = 0;
  break;
 }
 default: {
  return;
 }
 }
 $4 = ((($0)) + 317056|0);
 HEAP32[$4>>2] = 5;
 $5 = ((($0)) + 317060|0);
 HEAP32[$5>>2] = 6;
 return;
}
function __ZN7WelsDec13CheckBsBufferEPNS_21TagWelsDecoderContextEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($1|0)>(7077888);
 if ($2) {
  HEAP32[$vararg_buffer>>2] = 7077888;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $1;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,30530,$vararg_buffer);
  $3 = ((($0)) + 116|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4 | 4;
  HEAP32[$3>>2] = $5;
  $$0 = 2;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = ((($0)) + 6172|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7|0) / 3)&-1;
 $9 = ($8|0)<($1|0);
 if ($9) {
  $10 = (__ZN7WelsDec14ExpandBsBufferEPNS_21TagWelsDecoderContextEi($0,$1)|0);
  $11 = ($10|0)==(0);
  if (!($11)) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _WelsDecodeBs($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0$ph = 0, $$0175$ph$lcssa193 = 0, $$0175$ph213 = 0, $$0177$ph$lcssa195 = 0, $$0177$ph212 = 0, $$0181$be = 0, $$0181$lcssa = 0, $$0181200 = 0, $$0182$ph210 = 0, $$0182199 = 0, $$0183$be = 0, $$0183$lcssa = 0, $$0183198 = 0, $$1179 = 0, $$2 = 0, $$2180 = 0, $$3 = 0, $$4 = 0, $$in = 0, $$pre = 0;
 var $$pre237 = 0, $$sink219 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = ((($0)) + 241950|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)==(0);
 if (!($10)) {
  $139 = ((($0)) + 241888|0);
  $140 = HEAP32[$139>>2]|0;
  $141 = ((($140)) + 4|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = ($142|0)==(0);
  if ($143) {
   $144 = ((($0)) + 116|0);
   $$pre = HEAP32[$144>>2]|0;
   $$2 = $$pre;
   STACKTOP = sp;return ($$2|0);
  }
  $145 = (($142) + -1)|0;
  $146 = ((($140)) + 20|0);
  HEAP32[$146>>2] = $145;
  (__ZN7WelsDec19ConstructAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$3,$4)|0);
  __ZN7WelsDec18DecodeFinishUpdateEPNS_21TagWelsDecoderContextE($0);
  $147 = ((($0)) + 116|0);
  $148 = HEAP32[$147>>2]|0;
  $149 = $148 & 16400;
  $150 = ($149|0)==(0);
  if ($150) {
   $$2 = $148;
   STACKTOP = sp;return ($$2|0);
  }
  $151 = ((($0)) + 242324|0);
  HEAP8[$151>>0] = 1;
  $$2 = $148;
  STACKTOP = sp;return ($$2|0);
 }
 $11 = ((($0)) + 16|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$7>>2] = 0;
 $12 = (__ZN7WelsDec21DetectStartCodePrefixEPKhPii($1,$7,$2)|0);
 $13 = ($12|0)==(0|0);
 L12: do {
  if ($13) {
   $14 = ((($0)) + 116|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $15 | 4;
   HEAP32[$14>>2] = $16;
   $$0$ph = 4;
  } else {
   $17 = HEAP32[$7>>2]|0;
   $18 = (($1) + ($17)|0);
   $19 = (($2) - ($17))|0;
   $20 = (($2) + 4)|0;
   $21 = ((($0)) + 20|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($0)) + 28|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($22) - ($24))|0;
   $26 = ($20|0)>($25|0);
   if ($26) {
    $27 = HEAP32[$11>>2]|0;
    HEAP32[$23>>2] = $27;
    $$in = $27;
   } else {
    $$in = $24;
   }
   $28 = $$in;
   $29 = ((($0)) + 242344|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = ($30<<24>>24)==(0);
   if (!($31)) {
    $32 = ((($0)) + 36|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($0)) + 44|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (($33) - ($35))|0;
    $37 = ($20|0)>($36|0);
    if ($37) {
     $38 = ((($0)) + 32|0);
     $39 = HEAP32[$38>>2]|0;
     HEAP32[$34>>2] = $39;
    }
   }
   $40 = ($19|0)>(0);
   $41 = ((($0)) + 88|0);
   L22: do {
    if ($40) {
     $42 = ((($0)) + 116|0);
     $43 = (($19) + 4)|0;
     $44 = ((($0)) + 242324|0);
     $45 = ((($0)) + 92|0);
     $46 = ((($0)) + 317168|0);
     $47 = ((($0)) + 241888|0);
     $$0175$ph213 = $28;$$0177$ph212 = $18;$$0182$ph210 = 0;
     while(1) {
      $$0181200 = 0;$$0182199 = $$0182$ph210;$$0183198 = 0;
      L26: while(1) {
       $48 = (($$0182199) + 2)|0;
       $49 = ($48|0)<($19|0);
       $50 = (($$0177$ph212) + ($$0183198)|0);
       L28: do {
        if ($49) {
         $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8);
         $52 = ($51<<16>>16)==(0);
         $53 = $51&255;
         if ($52) {
          $54 = (($$0183198) + 2)|0;
          $55 = (($$0177$ph212) + ($54)|0);
          $56 = HEAP8[$55>>0]|0;
          switch ($56<<24>>24) {
          case 1: case 3:  {
           break;
          }
          default: {
           $102 = $53;
           label = 32;
           break L28;
          }
          }
          $57 = ($56<<24>>24)==(3);
          $58 = (($$0181200) + 2)|0;
          $59 = (($$0183198) + 3)|0;
          if (!($57)) {
           break L26;
          }
          $60 = (($$0175$ph213) + ($$0181200)|0);
          HEAP8[$60>>0]=0&255;HEAP8[$60+1>>0]=0>>8;
          $$0181$be = $58;$$0183$be = $59;$$sink219 = 3;
         } else {
          $102 = $53;
          label = 32;
         }
        } else {
         $$pre237 = HEAP8[$50>>0]|0;
         $102 = $$pre237;
         label = 32;
        }
       } while(0);
       if ((label|0) == 32) {
        label = 0;
        $99 = (($$0183198) + 1)|0;
        $100 = (($$0181200) + 1)|0;
        $101 = (($$0175$ph213) + ($$0181200)|0);
        HEAP8[$101>>0] = $102;
        $$0181$be = $100;$$0183$be = $99;$$sink219 = 1;
       }
       $103 = (($$0182199) + ($$sink219))|0;
       $104 = ($19|0)>($103|0);
       if ($104) {
        $$0181200 = $$0181$be;$$0182199 = $103;$$0183198 = $$0183$be;
       } else {
        $$0175$ph$lcssa193 = $$0175$ph213;$$0177$ph$lcssa195 = $$0177$ph212;$$0181$lcssa = $$0181$be;$$0183$lcssa = $$0183$be;
        break L22;
       }
      }
      HEAP32[$6>>2] = 0;
      $61 = (($$0181200) + 3)|0;
      $62 = (($$0175$ph213) + ($61)|0);
      HEAP8[$62>>0] = 0;
      $63 = (($$0175$ph213) + ($58)|0);
      HEAP8[$63>>0] = 0;
      $64 = (($$0181200) + 1)|0;
      $65 = (($$0175$ph213) + ($64)|0);
      HEAP8[$65>>0] = 0;
      $66 = (($$0175$ph213) + ($$0181200)|0);
      HEAP8[$66>>0] = 0;
      $67 = ((($$0177$ph212)) + -3|0);
      $68 = (__ZN7WelsDec14ParseNalHeaderEPNS_21TagWelsDecoderContextEPN10WelsCommon16TagNalUnitHeaderEPhiS5_iPi($0,$41,$$0175$ph213,$$0181200,$67,$59,$6)|0);
      $69 = ($68|0)==(0|0);
      if ($69) {
       $$2180 = 0;
      } else {
       $70 = HEAP32[$45>>2]|0;
       switch ($70|0) {
       case 15: case 8: case 7:  {
        $71 = HEAP32[$6>>2]|0;
        $72 = (($$0181200) - ($71))|0;
        $73 = (__ZN7WelsDec14ParseNonVclNalEPNS_21TagWelsDecoderContextEPhiS2_i($0,$68,$72,$67,$59)|0);
        $$1179 = $73;
        break;
       }
       default: {
        $$1179 = 0;
       }
       }
       (__ZN7WelsDec21CheckAndFinishLastPicEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$3,$4)|0);
       $74 = HEAP8[$46>>0]|0;
       $75 = ($74<<24>>24)==(0);
       if ($75) {
        $$2180 = $$1179;
       } else {
        $76 = HEAP32[$47>>2]|0;
        $77 = ((($76)) + 4|0);
        $78 = HEAP32[$77>>2]|0;
        $79 = ($78|0)==(0);
        if ($79) {
         $$2180 = $$1179;
        } else {
         (__ZN7WelsDec19ConstructAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$3,$4)|0);
         $$2180 = $$1179;
        }
       }
      }
      __ZN7WelsDec18DecodeFinishUpdateEPNS_21TagWelsDecoderContextE($0);
      $80 = HEAP32[$42>>2]|0;
      $81 = $80 & 16400;
      $82 = ($81|0)==(0);
      if (!($82)) {
       HEAP8[$44>>0] = 1;
       $83 = $80 & 16384;
       $84 = ($83|0)==(0);
       if (!($84)) {
        $$0$ph = $80;
        break L12;
       }
      }
      $85 = ($$2180|0)==(0);
      if (!($85)) {
       break;
      }
      $88 = (($$0181200) + 4)|0;
      $89 = (($$0175$ph213) + ($88)|0);
      $90 = (($43) - ($$0182199))|0;
      $91 = HEAP32[$21>>2]|0;
      $92 = $89;
      $93 = (($91) - ($92))|0;
      $94 = ($90|0)>($93|0);
      if ($94) {
       $95 = HEAP32[$11>>2]|0;
       $storemerge = $95;
      } else {
       $storemerge = $89;
      }
      HEAP32[$23>>2] = $storemerge;
      $96 = (($$0177$ph212) + ($59)|0);
      $97 = (($$0182199) + 3)|0;
      $98 = ($19|0)>($97|0);
      if ($98) {
       $$0175$ph213 = $storemerge;$$0177$ph212 = $96;$$0182$ph210 = $97;
      } else {
       $$0175$ph$lcssa193 = $storemerge;$$0177$ph$lcssa195 = $96;$$0181$lcssa = 0;$$0183$lcssa = 0;
       break L22;
      }
     }
     $86 = $80 & 16;
     $87 = ($86|0)==(0);
     if ($87) {
      $$0$ph = $80;
      break L12;
     }
     HEAP8[$44>>0] = 1;
     $$0$ph = $80;
     break L12;
    } else {
     $$0175$ph$lcssa193 = $28;$$0177$ph$lcssa195 = $18;$$0181$lcssa = 0;$$0183$lcssa = 0;
    }
   } while(0);
   HEAP32[$6>>2] = 0;
   $105 = (($$0181$lcssa) + 3)|0;
   $106 = (($$0175$ph$lcssa193) + ($105)|0);
   HEAP8[$106>>0] = 0;
   $107 = (($$0181$lcssa) + 2)|0;
   $108 = (($$0175$ph$lcssa193) + ($107)|0);
   HEAP8[$108>>0] = 0;
   $109 = (($$0181$lcssa) + 1)|0;
   $110 = (($$0175$ph$lcssa193) + ($109)|0);
   HEAP8[$110>>0] = 0;
   $111 = (($$0175$ph$lcssa193) + ($$0181$lcssa)|0);
   HEAP8[$111>>0] = 0;
   $112 = ((($111)) + 4|0);
   HEAP32[$23>>2] = $112;
   $113 = ((($$0177$ph$lcssa195)) + -3|0);
   $114 = (($$0183$lcssa) + 3)|0;
   $115 = (__ZN7WelsDec14ParseNalHeaderEPNS_21TagWelsDecoderContextEPN10WelsCommon16TagNalUnitHeaderEPhiS5_iPi($0,$41,$$0175$ph$lcssa193,$$0181$lcssa,$113,$114,$6)|0);
   $116 = ($115|0)==(0|0);
   if ($116) {
    $$4 = 0;
   } else {
    $117 = ((($0)) + 92|0);
    $118 = HEAP32[$117>>2]|0;
    switch ($118|0) {
    case 15: case 8: case 7:  {
     $119 = HEAP32[$6>>2]|0;
     $120 = (($$0181$lcssa) - ($119))|0;
     $121 = (__ZN7WelsDec14ParseNonVclNalEPNS_21TagWelsDecoderContextEPhiS2_i($0,$115,$120,$113,$114)|0);
     $$3 = $121;
     break;
    }
    default: {
     $$3 = 0;
    }
    }
    (__ZN7WelsDec21CheckAndFinishLastPicEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$3,$4)|0);
    $122 = ((($0)) + 317168|0);
    $123 = HEAP8[$122>>0]|0;
    $124 = ($123<<24>>24)==(0);
    if ($124) {
     $$4 = $$3;
    } else {
     $125 = ((($0)) + 241888|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($126)) + 4|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ($128|0)==(0);
     if ($129) {
      $$4 = $$3;
     } else {
      (__ZN7WelsDec19ConstructAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$3,$4)|0);
      $$4 = $$3;
     }
    }
   }
   __ZN7WelsDec18DecodeFinishUpdateEPNS_21TagWelsDecoderContextE($0);
   $130 = ((($0)) + 116|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = $131 & 16400;
   $133 = ($132|0)==(0);
   if (!($133)) {
    $134 = ((($0)) + 242324|0);
    HEAP8[$134>>0] = 1;
    $$0$ph = $131;
    break;
   }
   $135 = ($$4|0)==(0);
   if ($135) {
    $$2 = $131;
    STACKTOP = sp;return ($$2|0);
   } else {
    $136 = $131 & 16;
    $137 = ($136|0)==(0);
    if ($137) {
     $$0$ph = $131;
     break;
    }
    $138 = ((($0)) + 242324|0);
    HEAP8[$138>>0] = 1;
    $$0$ph = $131;
    break;
   }
  }
 } while(0);
 $$2 = $$0$ph;
 STACKTOP = sp;return ($$2|0);
}
function __ZN7WelsDec21DetectStartCodePrefixEPKhPii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$02234 = 0, $$02337 = 0, $$02436 = 0, $$133 = 0, $$228 = 0, $$neg = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)>(0);
 if ($3) {
  $$02337 = $0;$$02436 = $2;
 } else {
  $$228 = 0;
  return ($$228|0);
 }
 L3: while(1) {
  $$02234 = 0;$$133 = $$02337;
  while(1) {
   $4 = HEAP8[$$133>>0]|0;
   $5 = ($4<<24>>24)==(0);
   $6 = ((($$133)) + 1|0);
   if (!($5)) {
    break;
   }
   $7 = (($$02234) + 1)|0;
   $8 = ($7|0)<($$02436|0);
   if ($8) {
    $$02234 = $7;$$133 = $6;
   } else {
    $$228 = 0;
    label = 8;
    break L3;
   }
  }
  $9 = ($$02234|0)>(1);
  $10 = ($4<<24>>24)==(1);
  $or$cond = $9 & $10;
  if ($or$cond) {
   label = 6;
   break;
  }
  $$neg = (($$02436) + -1)|0;
  $14 = (($$neg) - ($$02234))|0;
  $15 = ($14|0)>(0);
  if ($15) {
   $$02337 = $6;$$02436 = $14;
  } else {
   $$228 = 0;
   label = 8;
   break;
  }
 }
 if ((label|0) == 6) {
  $11 = $6;
  $12 = $0;
  $13 = (($11) - ($12))|0;
  HEAP32[$1>>2] = $13;
  $$228 = $6;
  return ($$228|0);
 }
 else if ((label|0) == 8) {
  return ($$228|0);
 }
 return (0)|0;
}
function __ZN7WelsDec14ParseNalHeaderEPNS_21TagWelsDecoderContextEPN10WelsCommon16TagNalUnitHeaderEPhiS5_iPi($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$$i = 0, $$$i347 = 0, $$0 = 0, $$0$i = 0, $$0331 = 0, $$0332 = 0, $$0333 = 0, $$0335 = 0, $$0336$lcssa = 0, $$0338$off0 = 0, $$0340361 = 0, $$0340361$in = 0, $$1 = 0, $$1337 = 0, $$mask$i = 0, $$mask$i346 = 0, $$pre = 0, $$pre366 = 0, $$sink = 0, $$val = 0;
 var $$val344 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $not$$i350 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i349 = 0, $or$cond341 = 0, $or$cond342 = 0, $scevgep$i = 0, $scevgep$i353 = 0, $switch = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_ptr10 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer21 = sp + 64|0;
 $vararg_buffer18 = sp + 56|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $7 = ((($1)) + 4|0);
 HEAP32[$7>>2] = 0;
 $8 = ($3|0)>(0);
 L1: do {
  if ($8) {
   $$0340361$in = $3;
   while(1) {
    $$0340361 = (($$0340361$in) + -1)|0;
    $9 = (($2) + ($$0340361)|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     $$0336$lcssa = $$0340361$in;
     break L1;
    }
    $12 = HEAP32[$6>>2]|0;
    $13 = (($12) + 1)|0;
    HEAP32[$6>>2] = $13;
    $14 = ($$0340361$in|0)>(1);
    if ($14) {
     $$0340361$in = $$0340361;
    } else {
     $$0336$lcssa = $$0340361;
     break;
    }
   }
  } else {
   $$0336$lcssa = $3;
  }
 } while(0);
 $15 = HEAP8[$2>>0]|0;
 $16 = ($15&255) >>> 7;
 HEAP8[$1>>0] = $16;
 $17 = ($16<<24>>24)==(0);
 if (!($17)) {
  $18 = ((($0)) + 116|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = $19 | 4;
  HEAP32[$18>>2] = $20;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $21 = HEAP8[$2>>0]|0;
 $22 = ($21&255) >>> 5;
 $23 = ((($1)) + 1|0);
 HEAP8[$23>>0] = $22;
 $24 = HEAP8[$2>>0]|0;
 $25 = $24 & 31;
 $26 = $25&255;
 HEAP32[$7>>2] = $26;
 $27 = ((($2)) + 1|0);
 $28 = (($$0336$lcssa) + -1)|0;
 $29 = HEAP32[$6>>2]|0;
 $30 = (($29) + 1)|0;
 HEAP32[$6>>2] = $30;
 $31 = HEAP32[$7>>2]|0;
 $32 = $31 & -2;
 $switch = ($32|0)==(6);
 if (!($switch)) {
  $33 = ((($0)) + 241954|0);
  $34 = HEAP8[$33>>0]|0;
  $35 = ($34<<24>>24)==(0);
  if ($35) {
   $36 = ((($0)) + 317169|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = ($37<<24>>24)!=(0);
   $39 = ((($0)) + 241960|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($40|0)==(0);
   $or$cond = $38 & $41;
   if ($or$cond) {
    HEAP32[$vararg_buffer>>2] = $31;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28458,$vararg_buffer);
   } else {
    $42 = (($40) + 1)|0;
    HEAP32[$39>>2] = $42;
   }
   $43 = ((($0)) + 512320|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (($44) + 1)|0;
   HEAP32[$43>>2] = $45;
   $46 = ((($0)) + 116|0);
   HEAP32[$46>>2] = 16;
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  }
 }
 $47 = ((($0)) + 241960|0);
 HEAP32[$47>>2] = 0;
 $48 = HEAP32[$7>>2]|0;
 switch ($48|0) {
 case 15: case 8: case 7: case 6:  {
  break;
 }
 default: {
  $49 = ((($0)) + 241956|0);
  $50 = HEAP8[$49>>0]|0;
  $51 = ($50<<24>>24)==(0);
  if ($51) {
   $52 = ((($0)) + 317169|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = ($53<<24>>24)!=(0);
   $55 = ((($0)) + 241968|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($56|0)==(0);
   $or$cond341 = $54 & $57;
   if ($or$cond341) {
    HEAP32[$vararg_buffer1>>2] = $48;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28555,$vararg_buffer1);
   } else {
    $58 = (($56) + 1)|0;
    HEAP32[$55>>2] = $58;
   }
   $59 = ((($0)) + 512328|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = (($60) + 1)|0;
   HEAP32[$59>>2] = $61;
   $62 = ((($0)) + 116|0);
   HEAP32[$62>>2] = 16;
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  }
 }
 }
 $63 = ((($0)) + 241968|0);
 HEAP32[$63>>2] = 0;
 $64 = HEAP32[$7>>2]|0;
 switch ($64|0) {
 case 5: case 1:  {
  $65 = ((($0)) + 241954|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = ($66<<24>>24)==(0);
  if ($67) {
   $68 = ((($0)) + 241956|0);
   $69 = HEAP8[$68>>0]|0;
   $70 = ($69<<24>>24)==(0);
   if ($70) {
    label = 24;
   }
  }
  break;
 }
 case 20: case 14:  {
  $71 = ((($0)) + 241954|0);
  $72 = HEAP8[$71>>0]|0;
  $73 = ($72<<24>>24)==(0);
  if ($73) {
   $74 = ((($0)) + 241955|0);
   $75 = HEAP8[$74>>0]|0;
   $76 = ($75<<24>>24)==(0);
   if ($76) {
    $77 = ((($0)) + 241956|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = ($78<<24>>24)==(0);
    if ($79) {
     label = 24;
    }
   }
  }
  break;
 }
 default: {
 }
 }
 if ((label|0) == 24) {
  $80 = ((($0)) + 317169|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = ($81<<24>>24)!=(0);
  $83 = ((($0)) + 241964|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($84|0)==(0);
  $or$cond342 = $82 & $85;
  if ($or$cond342) {
   HEAP32[$vararg_buffer4>>2] = $64;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,28651,$vararg_buffer4);
  } else {
   $86 = (($84) + 1)|0;
   HEAP32[$83>>2] = $86;
  }
  $87 = ((($0)) + 512324|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = (($88) + 1)|0;
  HEAP32[$87>>2] = $89;
  $90 = ((($0)) + 116|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = $91 | 16;
  HEAP32[$90>>2] = $92;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $93 = ((($0)) + 241964|0);
 HEAP32[$93>>2] = 0;
 $94 = HEAP32[$7>>2]|0;
 switch ($94|0) {
 case 6: case 9:  {
  $95 = ((($0)) + 241888|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = ((($96)) + 4|0);
  $98 = HEAP32[$97>>2]|0;
  $99 = ($98|0)==(0);
  if ($99) {
   $$1 = $27;
   STACKTOP = sp;return ($$1|0);
  }
  $100 = ((($0)) + 317168|0);
  $101 = ((($96)) + 20|0);
  $102 = (($98) + -1)|0;
  HEAP32[$101>>2] = $102;
  HEAP8[$100>>0] = 1;
  $$1 = $27;
  STACKTOP = sp;return ($$1|0);
  break;
 }
 case 14:  {
  $103 = ((($0)) + 237968|0);
  $104 = ((($0)) + 512544|0);
  $105 = $104;
  $106 = $105;
  $107 = HEAP32[$106>>2]|0;
  $108 = (($105) + 4)|0;
  $109 = $108;
  $110 = HEAP32[$109>>2]|0;
  $111 = ((($0)) + 241880|0);
  $112 = $111;
  $113 = $112;
  HEAP32[$113>>2] = $107;
  $114 = (($112) + 4)|0;
  $115 = $114;
  HEAP32[$115>>2] = $110;
  $116 = ($$0336$lcssa|0)<(4);
  if ($116) {
   $117 = ((($0)) + 241888|0);
   $118 = HEAP32[$117>>2]|0;
   $119 = ((($118)) + 4|0);
   $120 = HEAP32[$119>>2]|0;
   $121 = ($120|0)==(0);
   if (!($121)) {
    $122 = (($120) + -1)|0;
    $123 = ((($118)) + 20|0);
    HEAP32[$123>>2] = $122;
    $124 = ((($0)) + 242340|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = ($125|0)==(0);
    if ($126) {
     $127 = ((($0)) + 317168|0);
     HEAP8[$127>>0] = 1;
    }
   }
   $128 = ((($0)) + 237992|0);
   $129 = ((($128)) + 1063|0);
   HEAP8[$129>>0] = 0;
   $130 = ((($0)) + 116|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = $131 | 4;
   HEAP32[$130>>2] = $132;
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  }
  __ZN7WelsDec18DecodeNalHeaderExtEPNS_10TagNalUnitEPh($103,$27);
  $133 = ((($0)) + 237984|0);
  $134 = HEAP8[$133>>0]|0;
  $135 = ((($0)) + 237986|0);
  $136 = HEAP8[$135>>0]|0;
  $137 = $136 | $134;
  $138 = ($137<<24>>24)==(0);
  if (!($138)) {
   $139 = $136&255;
   $140 = $134&255;
   HEAP32[$vararg_buffer7>>2] = $140;
   $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
   HEAP32[$vararg_ptr10>>2] = $139;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,28746,$vararg_buffer7);
   $141 = ((($0)) + 241888|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($142)) + 4|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($144|0)==(0);
   if (!($145)) {
    $146 = (($144) + -1)|0;
    $147 = ((($142)) + 20|0);
    HEAP32[$147>>2] = $146;
    $148 = ((($0)) + 242340|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0);
    if ($150) {
     $151 = ((($0)) + 317168|0);
     HEAP8[$151>>0] = 1;
    }
   }
   $152 = ((($0)) + 237992|0);
   $153 = ((($152)) + 1063|0);
   HEAP8[$153>>0] = 0;
   $154 = ((($0)) + 116|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = $155 | 4;
   HEAP32[$154>>2] = $156;
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  }
  $157 = ((($2)) + 4|0);
  $158 = (($$0336$lcssa) + -4)|0;
  $159 = HEAP32[$6>>2]|0;
  $160 = (($159) + 3)|0;
  HEAP32[$6>>2] = $160;
  $161 = HEAP8[$1>>0]|0;
  HEAP8[$103>>0] = $161;
  $162 = HEAP8[$23>>0]|0;
  $163 = ((($0)) + 237969|0);
  HEAP8[$163>>0] = $162;
  $164 = HEAP32[$7>>2]|0;
  $165 = ((($0)) + 237972|0);
  HEAP32[$165>>2] = $164;
  $166 = HEAP8[$23>>0]|0;
  $167 = ($166<<24>>24)==(0);
  do {
   if (!($167)) {
    $168 = ((($0)) + 6144|0);
    $169 = $158 << 3;
    $170 = (($157) + ($158)|0);
    $171 = ((($170)) + -1|0);
    $$val344 = HEAP8[$171>>0]|0;
    $172 = $$val344&255;
    $173 = $172 & 1;
    $174 = ($173|0)==(0);
    if ($174) {
     $175 = $172 & 2;
     $176 = ($175|0)==(0);
     if ($176) {
      $177 = $172 & 4;
      $178 = ($177|0)==(0);
      if ($178) {
       $179 = $172 & 8;
       $180 = ($179|0)==(0);
       if ($180) {
        $181 = $172 & 16;
        $182 = ($181|0)==(0);
        if ($182) {
         $183 = $172 & 32;
         $184 = ($183|0)==(0);
         if ($184) {
          $185 = $172 & 64;
          $186 = ($185|0)==(0);
          if ($186) {
           $$mask$i = $172 & 128;
           $187 = ($$mask$i|0)==(0);
           $$$i = $187 ? 0 : 7;
           $189 = $$$i;
          } else {
           $189 = 6;
          }
         } else {
          $189 = 5;
         }
        } else {
         $189 = 4;
        }
       } else {
        $189 = 3;
       }
      } else {
       $189 = 2;
      }
     } else {
      $189 = 1;
     }
    } else {
     $189 = 0;
    }
    $188 = (($169) - ($189))|0;
    $190 = (__ZN7WelsDec11DecInitBitsEPN10WelsCommon15TagBitStringAuxEPKhi($168,$157,$188)|0);
    $191 = ($190|0)==(0);
    if ($191) {
     (__ZN7WelsDec18ParsePrefixNalUnitEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxE($0,$168)|0);
     break;
    }
    __Z7WelsLogP13TagLogContextiPKcz($0,1,28850,$vararg_buffer11);
    $192 = ((($0)) + 116|0);
    $193 = HEAP32[$192>>2]|0;
    $194 = $193 | 4;
    HEAP32[$192>>2] = $194;
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
  } while(0);
  $195 = ((($0)) + 237992|0);
  $196 = ((($195)) + 1063|0);
  HEAP8[$196>>0] = 1;
  $$1 = $157;
  STACKTOP = sp;return ($$1|0);
  break;
 }
 case 20:  {
  $$0338$off0 = 1;
  break;
 }
 case 5: case 1:  {
  $$0338$off0 = 0;
  break;
 }
 default: {
  $$1 = $27;
  STACKTOP = sp;return ($$1|0);
 }
 }
 $197 = ((($0)) + 241888|0);
 $198 = ((($0)) + 562528|0);
 $199 = HEAP32[$198>>2]|0;
 $200 = (__ZN7WelsDec13MemGetNextNalEPPNS_14TagAccessUnitsEPN10WelsCommon12CMemoryAlignE($197,$199)|0);
 $201 = ($200|0)==(0|0);
 if ($201) {
  __Z7WelsLogP13TagLogContextiPKcz($0,1,28906,$vararg_buffer13);
  $202 = ((($0)) + 116|0);
  $203 = HEAP32[$202>>2]|0;
  $204 = $203 | 16384;
  HEAP32[$202>>2] = $204;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $205 = ((($0)) + 512544|0);
 $206 = $205;
 $207 = $206;
 $208 = HEAP32[$207>>2]|0;
 $209 = (($206) + 4)|0;
 $210 = $209;
 $211 = HEAP32[$210>>2]|0;
 $212 = ((($200)) + 3912|0);
 $213 = $212;
 $214 = $213;
 HEAP32[$214>>2] = $208;
 $215 = (($213) + 4)|0;
 $216 = $215;
 HEAP32[$216>>2] = $211;
 $217 = HEAP8[$1>>0]|0;
 HEAP8[$200>>0] = $217;
 $218 = HEAP8[$23>>0]|0;
 $219 = ((($200)) + 1|0);
 HEAP8[$219>>0] = $218;
 $220 = HEAP32[$7>>2]|0;
 $221 = ((($200)) + 4|0);
 HEAP32[$221>>2] = $220;
 $222 = HEAP32[$197>>2]|0;
 $223 = ((($222)) + 4|0);
 $224 = HEAP32[$223>>2]|0;
 $225 = HEAP32[$7>>2]|0;
 $226 = ($225|0)==(20);
 do {
  if ($226) {
   $227 = ($$0336$lcssa|0)<(4);
   if ($227) {
    __ZN7WelsDec20ForceClearCurrentNalEPNS_14TagAccessUnitsE($222);
    $228 = ($224>>>0)>(1);
    if ($228) {
     $229 = (($224) + -2)|0;
     $230 = ((($222)) + 20|0);
     HEAP32[$230>>2] = $229;
     $231 = ((($0)) + 242340|0);
     $232 = HEAP32[$231>>2]|0;
     $233 = ($232|0)==(0);
     if ($233) {
      $234 = ((($0)) + 317168|0);
      HEAP8[$234>>0] = 1;
     }
    }
    $235 = ((($0)) + 116|0);
    $236 = HEAP32[$235>>2]|0;
    $237 = $236 | 4;
    HEAP32[$235>>2] = $237;
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   __ZN7WelsDec18DecodeNalHeaderExtEPNS_10TagNalUnitEPh($200,$27);
   $238 = ((($200)) + 16|0);
   $239 = HEAP8[$238>>0]|0;
   $240 = ($239<<24>>24)==(0);
   if ($240) {
    $241 = ((($200)) + 18|0);
    $242 = HEAP8[$241>>0]|0;
    $243 = ($242<<24>>24)==(0);
    if ($243) {
     $256 = ((($2)) + 4|0);
     $257 = (($$0336$lcssa) + -4)|0;
     $258 = HEAP32[$6>>2]|0;
     $259 = (($258) + 3)|0;
     HEAP32[$6>>2] = $259;
     $260 = ((($0)) + 242344|0);
     $261 = HEAP8[$260>>0]|0;
     $262 = ($261<<24>>24)==(0);
     if ($262) {
      $$0333 = $256;$$1337 = $257;
      break;
     }
     $263 = ((($0)) + 44|0);
     $264 = HEAP32[$263>>2]|0;
     $265 = ((($200)) + 3896|0);
     HEAP32[$265>>2] = $264;
     $$0335 = 0;
     while(1) {
      $266 = (($5) - ($$0335))|0;
      $267 = (($266) + -1)|0;
      $268 = (($4) + ($267)|0);
      $269 = HEAP8[$268>>0]|0;
      $270 = ($269<<24>>24)==(0);
      $271 = (($$0335) + 1)|0;
      if ($270) {
       $$0335 = $271;
      } else {
       break;
      }
     }
     $272 = (($266) + -3)|0;
     $273 = ((($200)) + 3900|0);
     HEAP32[$273>>2] = $272;
     $274 = HEAP8[$4>>0]|0;
     $275 = ($274<<24>>24)==(0);
     if ($275) {
      $276 = ((($4)) + 1|0);
      $277 = HEAP8[$276>>0]|0;
      $278 = ($277<<24>>24)==(0);
      if ($278) {
       $279 = ((($4)) + 2|0);
       $280 = HEAP8[$279>>0]|0;
       $281 = ($280<<24>>24)==(1);
       if ($281) {
        $282 = (($266) + -2)|0;
        HEAP32[$273>>2] = $282;
        $$0332 = 3;
       } else {
        $$0332 = 4;
       }
      } else {
       $$0332 = 4;
      }
     } else {
      $$0332 = 4;
     }
     $283 = ((($200)) + 12|0);
     $284 = HEAP8[$283>>0]|0;
     $285 = ($284<<24>>24)!=(0);
     $286 = (($4) + ($$0332)|0);
     $287 = HEAP8[$286>>0]|0;
     $288 = $287 & -32;
     $289 = $288&255;
     $$sink = $285 ? 5 : 1;
     $290 = $289 | $$sink;
     $291 = $290&255;
     HEAP8[$286>>0] = $291;
     $292 = HEAP32[$263>>2]|0;
     $293 = ((($292)) + 2|0);
     HEAP8[$293>>0] = 0;
     $294 = HEAP32[$263>>2]|0;
     $295 = ((($294)) + 1|0);
     HEAP8[$295>>0] = 0;
     $296 = HEAP32[$263>>2]|0;
     HEAP8[$296>>0] = 0;
     $297 = HEAP32[$263>>2]|0;
     $298 = ((($297)) + 3|0);
     HEAP8[$298>>0] = 1;
     $299 = HEAP8[$286>>0]|0;
     $300 = HEAP32[$263>>2]|0;
     $301 = ((($300)) + 4|0);
     HEAP8[$301>>0] = $299;
     $302 = HEAP32[$263>>2]|0;
     $303 = ((($302)) + 5|0);
     HEAP32[$263>>2] = $303;
     $304 = (($$0332) + 4)|0;
     $305 = (($4) + ($304)|0);
     $306 = (($266) - ($304))|0;
     _memcpy(($303|0),($305|0),($306|0))|0;
     $307 = HEAP32[$263>>2]|0;
     $308 = (($307) + ($306)|0);
     HEAP32[$263>>2] = $308;
     $$0333 = $256;$$1337 = $257;
     break;
    } else {
     label = 66;
    }
   } else {
    $244 = $239&255;
    $$pre366 = ((($200)) + 18|0);
    HEAP32[$vararg_buffer15>>2] = $244;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28946,$vararg_buffer15);
    $$pre = HEAP8[$$pre366>>0]|0;
    $245 = ($$pre<<24>>24)==(0);
    if (!($245)) {
     label = 66;
    }
   }
   if ((label|0) == 66) {
    HEAP32[$vararg_buffer18>>2] = 1;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,29005,$vararg_buffer18);
   }
   __ZN7WelsDec20ForceClearCurrentNalEPNS_14TagAccessUnitsE($222);
   $246 = ($224>>>0)>(1);
   if ($246) {
    $247 = (($224) + -2)|0;
    $248 = ((($222)) + 20|0);
    HEAP32[$248>>2] = $247;
    $249 = ((($0)) + 242340|0);
    $250 = HEAP32[$249>>2]|0;
    $251 = ($250|0)==(0);
    if ($251) {
     $252 = ((($0)) + 317168|0);
     HEAP8[$252>>0] = 1;
    }
   }
   $253 = ((($0)) + 116|0);
   $254 = HEAP32[$253>>2]|0;
   $255 = $254 | 4;
   HEAP32[$253>>2] = $255;
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  } else {
   $309 = ((($0)) + 242344|0);
   $310 = HEAP8[$309>>0]|0;
   $311 = ($310<<24>>24)==(0);
   if (!($311)) {
    $312 = ((($0)) + 44|0);
    $313 = HEAP32[$312>>2]|0;
    $314 = ((($200)) + 3896|0);
    HEAP32[$314>>2] = $313;
    $$0331 = 0;
    while(1) {
     $315 = (($5) - ($$0331))|0;
     $316 = (($315) + -1)|0;
     $317 = (($4) + ($316)|0);
     $318 = HEAP8[$317>>0]|0;
     $319 = ($318<<24>>24)==(0);
     $320 = (($$0331) + 1)|0;
     if ($319) {
      $$0331 = $320;
     } else {
      break;
     }
    }
    $321 = ((($200)) + 3900|0);
    HEAP32[$321>>2] = $315;
    $322 = HEAP8[$4>>0]|0;
    $323 = ($322<<24>>24)==(0);
    if ($323) {
     $324 = ((($4)) + 1|0);
     $325 = HEAP8[$324>>0]|0;
     $326 = ($325<<24>>24)==(0);
     if ($326) {
      $327 = ((($4)) + 2|0);
      $328 = HEAP8[$327>>0]|0;
      $329 = ($328<<24>>24)==(1);
      if ($329) {
       $330 = HEAP32[$312>>2]|0;
       HEAP8[$330>>0] = 0;
       $331 = HEAP32[$321>>2]|0;
       $332 = (($331) + 1)|0;
       HEAP32[$321>>2] = $332;
       $$0 = 1;
      } else {
       $$0 = 0;
      }
     } else {
      $$0 = 0;
     }
    } else {
     $$0 = 0;
    }
    $333 = HEAP32[$312>>2]|0;
    $334 = (($333) + ($$0)|0);
    _memcpy(($334|0),($4|0),($315|0))|0;
    $335 = (($$0) + ($315))|0;
    $336 = HEAP32[$312>>2]|0;
    $337 = (($336) + ($335)|0);
    HEAP32[$312>>2] = $337;
   }
   $338 = ((($0)) + 237968|0);
   $339 = ((($0)) + 237972|0);
   $340 = HEAP32[$339>>2]|0;
   $341 = ($340|0)==(14);
   if ($341) {
    $342 = ((($0)) + 237992|0);
    $343 = ((($342)) + 1063|0);
    $344 = HEAP8[$343>>0]|0;
    $345 = ($344<<24>>24)==(0);
    if (!($345)) {
     (__ZN7WelsDec26PrefetchNalHeaderExtSyntaxEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitES3_($0,$200,$338)|0);
    }
   }
   $346 = HEAP32[$7>>2]|0;
   $347 = ($346|0)==(5);
   $348 = ((($200)) + 12|0);
   $349 = $347&1;
   HEAP8[$348>>0] = $349;
   $350 = ((($200)) + 14|0);
   HEAP8[$350>>0] = 1;
   $$0333 = $27;$$1337 = $28;
  }
 } while(0);
 $351 = HEAP32[$222>>2]|0;
 $352 = (($224) + -1)|0;
 $353 = (($351) + ($352<<2)|0);
 $354 = HEAP32[$353>>2]|0;
 $355 = ((($354)) + 3868|0);
 $356 = $$1337 << 3;
 $357 = (($$0333) + ($$1337)|0);
 $358 = ((($357)) + -1|0);
 $$val = HEAP8[$358>>0]|0;
 $359 = $$val&255;
 $360 = $359 & 1;
 $361 = ($360|0)==(0);
 if ($361) {
  $362 = $359 & 2;
  $363 = ($362|0)==(0);
  if ($363) {
   $364 = $359 & 4;
   $365 = ($364|0)==(0);
   if ($365) {
    $366 = $359 & 8;
    $367 = ($366|0)==(0);
    if ($367) {
     $368 = $359 & 16;
     $369 = ($368|0)==(0);
     if ($369) {
      $370 = $359 & 32;
      $371 = ($370|0)==(0);
      if ($371) {
       $372 = $359 & 64;
       $373 = ($372|0)==(0);
       if ($373) {
        $$mask$i346 = $359 & 128;
        $374 = ($$mask$i346|0)==(0);
        $$$i347 = $374 ? 0 : 7;
        $376 = $$$i347;
       } else {
        $376 = 6;
       }
      } else {
       $376 = 5;
      }
     } else {
      $376 = 4;
     }
    } else {
     $376 = 3;
    }
   } else {
    $376 = 2;
   }
  } else {
   $376 = 1;
  }
 } else {
  $376 = 0;
 }
 $375 = (($356) - ($376))|0;
 $377 = (__ZN7WelsDec11DecInitBitsEPN10WelsCommon15TagBitStringAuxEPKhi($355,$$0333,$375)|0);
 $378 = ($377|0)==(0);
 if (!($378)) {
  __ZN7WelsDec20ForceClearCurrentNalEPNS_14TagAccessUnitsE($222);
  $379 = ($224>>>0)>(1);
  if ($379) {
   $380 = (($224) + -2)|0;
   $381 = ((($222)) + 20|0);
   HEAP32[$381>>2] = $380;
   $382 = ((($0)) + 242340|0);
   $383 = HEAP32[$382>>2]|0;
   $384 = ($383|0)==(0);
   if ($384) {
    $385 = ((($0)) + 317168|0);
    HEAP8[$385>>0] = 1;
   }
  }
  __Z7WelsLogP13TagLogContextiPKcz($0,1,29071,$vararg_buffer21);
  $386 = ((($0)) + 116|0);
  $387 = HEAP32[$386>>2]|0;
  $388 = $387 | 4;
  HEAP32[$386>>2] = $388;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $389 = (__ZN7WelsDec23ParseSliceHeaderSyntaxsEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxEb($0,$355,$$0338$off0)|0);
 $390 = ($389|0)==(0);
 $391 = ($224|0)==(1);
 if (!($390)) {
  if ($391) {
   $392 = ((($200)) + 12|0);
   $393 = HEAP8[$392>>0]|0;
   $394 = ($393<<24>>24)==(0);
   if (!($394)) {
    $395 = ((($0)) + 242320|0);
    $396 = HEAP32[$395>>2]|0;
    $397 = ($396|0)==(0);
    if ($397) {
     $scevgep$i353 = ((($0)) + 241892|0);
     ;HEAP32[$scevgep$i353>>2]=0|0;HEAP32[$scevgep$i353+4>>2]=0|0;HEAP32[$scevgep$i353+8>>2]=0|0;HEAP32[$scevgep$i353+12>>2]=0|0;HEAP32[$scevgep$i353+16>>2]=0|0;HEAP32[$scevgep$i353+20>>2]=0|0;HEAP32[$scevgep$i353+24>>2]=0|0;HEAP32[$scevgep$i353+28>>2]=0|0;
    }
   }
   __ZN7WelsDec20ForceClearCurrentNalEPNS_14TagAccessUnitsE($222);
  } else {
   __ZN7WelsDec20ForceClearCurrentNalEPNS_14TagAccessUnitsE($222);
   $398 = ($224|0)==(0);
   if (!($398)) {
    $399 = (($224) + -2)|0;
    $400 = ((($222)) + 20|0);
    HEAP32[$400>>2] = $399;
    $401 = ((($0)) + 242340|0);
    $402 = HEAP32[$401>>2]|0;
    $403 = ($402|0)==(0);
    if ($403) {
     $404 = ((($0)) + 317168|0);
     HEAP8[$404>>0] = 1;
    }
   }
  }
  $405 = ((($0)) + 116|0);
  $406 = HEAP32[$405>>2]|0;
  $407 = $406 | 4;
  HEAP32[$405>>2] = $407;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 if ($391) {
  $408 = ((($200)) + 88|0);
  $409 = HEAP32[$408>>2]|0;
  $410 = ((($200)) + 15|0);
  $411 = HEAP8[$410>>0]|0;
  $412 = $411&255;
  $413 = (((($0)) + 241892|0) + ($412<<2)|0);
  $414 = HEAP32[$413>>2]|0;
  $415 = ($414|0)==(0|0);
  $416 = ($414|0)==($409|0);
  $or$cond$i349 = $415 | $416;
  if ($or$cond$i349) {
   $417 = ((($200)) + 12|0);
   $418 = HEAP8[$417>>0]|0;
   $not$$i350 = ($418<<24>>24)==(0);
   if ($not$$i350) {
    $$1 = $$0333;
    STACKTOP = sp;return ($$1|0);
   }
  }
  $419 = ((($0)) + 242320|0);
  $420 = HEAP32[$419>>2]|0;
  $421 = ($420|0)==(0);
  if (!($421)) {
   $$1 = $$0333;
   STACKTOP = sp;return ($$1|0);
  }
  $scevgep$i = ((($0)) + 241892|0);
  ;HEAP32[$scevgep$i>>2]=0|0;HEAP32[$scevgep$i+4>>2]=0|0;HEAP32[$scevgep$i+8>>2]=0|0;HEAP32[$scevgep$i+12>>2]=0|0;HEAP32[$scevgep$i+16>>2]=0|0;HEAP32[$scevgep$i+20>>2]=0|0;HEAP32[$scevgep$i+24>>2]=0|0;HEAP32[$scevgep$i+28>>2]=0|0;
  $$1 = $$0333;
  STACKTOP = sp;return ($$1|0);
 }
 $422 = ($224|0)==(0);
 if ($422) {
  $$1 = $$0333;
  STACKTOP = sp;return ($$1|0);
 }
 $423 = HEAP32[$222>>2]|0;
 $424 = (($423) + ($352<<2)|0);
 $425 = HEAP32[$424>>2]|0;
 $426 = (($224) + -2)|0;
 $427 = (($423) + ($426<<2)|0);
 $428 = HEAP32[$427>>2]|0;
 $429 = ((($425)) + 88|0);
 $430 = HEAP32[$429>>2]|0;
 $431 = (__ZN7WelsDec23CheckAccessUnitBoundaryEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitES3_PNS_6TagSpsE($0,$425,$428,$430)|0);
 if (!($431)) {
  $$1 = $$0333;
  STACKTOP = sp;return ($$1|0);
 }
 $432 = ((($222)) + 20|0);
 HEAP32[$432>>2] = $426;
 $433 = ((($0)) + 317168|0);
 HEAP8[$433>>0] = 1;
 $434 = ((($200)) + 88|0);
 $435 = HEAP32[$434>>2]|0;
 $436 = ((($200)) + 15|0);
 $437 = HEAP8[$436>>0]|0;
 $438 = $437&255;
 $439 = (((($0)) + 241892|0) + ($438<<2)|0);
 $440 = HEAP32[$439>>2]|0;
 $441 = ($440|0)==(0|0);
 $442 = ($440|0)==($435|0);
 $or$cond$i = $441 | $442;
 if ($or$cond$i) {
  $443 = ((($200)) + 12|0);
  $444 = HEAP8[$443>>0]|0;
  $$0$i = $444;
 } else {
  $$0$i = 1;
 }
 $445 = ((($0)) + 242335|0);
 HEAP8[$445>>0] = $$0$i;
 $$1 = $$0333;
 STACKTOP = sp;return ($$1|0);
}
function __ZN7WelsDec14ParseNonVclNalEPNS_21TagWelsDecoderContextEPhiS2_i($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i = 0, $$053 = 0, $$mask$i = 0, $$sink1 = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0, $$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp + 4|0;
 $6 = sp;
 HEAP32[$5>>2] = 0;
 HEAP32[$6>>2] = 0;
 $7 = ($2|0)<(1);
 if ($7) {
  $$053 = 0;
  STACKTOP = sp;return ($$053|0);
 }
 $8 = ((($0)) + 6144|0);
 $9 = $2 << 3;
 $10 = (($1) + ($2)|0);
 $11 = ((($10)) + -1|0);
 $$val = HEAP8[$11>>0]|0;
 $12 = $$val&255;
 $13 = $12 & 1;
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = $12 & 2;
  $16 = ($15|0)==(0);
  if ($16) {
   $17 = $12 & 4;
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = $12 & 8;
    $20 = ($19|0)==(0);
    if ($20) {
     $21 = $12 & 16;
     $22 = ($21|0)==(0);
     if ($22) {
      $23 = $12 & 32;
      $24 = ($23|0)==(0);
      if ($24) {
       $25 = $12 & 64;
       $26 = ($25|0)==(0);
       if ($26) {
        $$mask$i = $12 & 128;
        $27 = ($$mask$i|0)==(0);
        $$$i = $27 ? 0 : 7;
        $29 = $$$i;
       } else {
        $29 = 6;
       }
      } else {
       $29 = 5;
      }
     } else {
      $29 = 4;
     }
    } else {
     $29 = 3;
    }
   } else {
    $29 = 2;
   }
  } else {
   $29 = 1;
  }
 } else {
  $29 = 0;
 }
 $28 = (($9) - ($29))|0;
 $30 = ((($0)) + 92|0);
 $31 = HEAP32[$30>>2]|0;
 switch ($31|0) {
 case 15: case 7:  {
  $32 = ($28|0)>(0);
  if ($32) {
   $33 = (__ZN7WelsDec11DecInitBitsEPN10WelsCommon15TagBitStringAuxEPKhi($8,$1,$28)|0);
   $34 = ($33|0)==(0);
   if (!($34)) {
    $35 = ((($0)) + 242340|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($36|0)==(0);
    $38 = ((($0)) + 116|0);
    $39 = HEAP32[$38>>2]|0;
    $$sink1 = $37 ? 16 : 4;
    $40 = $$sink1 | $39;
    HEAP32[$38>>2] = $40;
    $$053 = $33;
    STACKTOP = sp;return ($$053|0);
   }
  }
  $41 = (__ZN7WelsDec8ParseSpsEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxEPiS5_Phi($0,$8,$5,$6,$3,$4)|0);
  $42 = ($41|0)==(0);
  if ($42) {
   $$053 = 0;
   STACKTOP = sp;return ($$053|0);
  }
  $43 = ((($0)) + 242340|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)==(0);
  $46 = ((($0)) + 116|0);
  $47 = HEAP32[$46>>2]|0;
  $$sink2 = $45 ? 16 : 4;
  $48 = $$sink2 | $47;
  HEAP32[$46>>2] = $48;
  $$053 = $41;
  STACKTOP = sp;return ($$053|0);
  break;
 }
 case 8:  {
  $49 = ($28|0)>(0);
  if ($49) {
   $50 = (__ZN7WelsDec11DecInitBitsEPN10WelsCommon15TagBitStringAuxEPKhi($8,$1,$28)|0);
   $51 = ($50|0)==(0);
   if (!($51)) {
    $52 = ((($0)) + 242340|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==(0);
    $55 = ((($0)) + 116|0);
    $56 = HEAP32[$55>>2]|0;
    $$sink3 = $54 ? 16 : 4;
    $57 = $$sink3 | $56;
    HEAP32[$55>>2] = $57;
    $$053 = $50;
    STACKTOP = sp;return ($$053|0);
   }
  }
  $58 = (__ZN7WelsDec8ParsePpsEPNS_21TagWelsDecoderContextEPNS_6TagPpsEPN10WelsCommon15TagBitStringAuxEPhi($0,0,$8,$3,$4)|0);
  $59 = ($58|0)==(0);
  if ($59) {
   $66 = ((($0)) + 241956|0);
   HEAP8[$66>>0] = 1;
   $$053 = 0;
   STACKTOP = sp;return ($$053|0);
  } else {
   $60 = ((($0)) + 242340|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($61|0)==(0);
   $63 = ((($0)) + 116|0);
   $64 = HEAP32[$63>>2]|0;
   $$sink4 = $62 ? 16 : 4;
   $65 = $$sink4 | $64;
   HEAP32[$63>>2] = $65;
   $$053 = $58;
   STACKTOP = sp;return ($$053|0);
  }
  break;
 }
 default: {
  $$053 = 0;
  STACKTOP = sp;return ($$053|0);
 }
 }
 return (0)|0;
}
function __ZN7WelsDec21CheckAndFinishLastPicEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 241888|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 92|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (((9440 + ($6<<3)|0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(1);
 if ($9) {
  $10 = HEAP32[$4>>2]|0;
  $11 = ((($4)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($10) + ($12<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 242320|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0);
  if ($17) {
   return 0;
  }
  $33 = ((($0)) + 317180|0);
  $34 = ((($0)) + 317204|0);
  $35 = ((($14)) + 24|0);
  $36 = (__ZN7WelsDec26CheckAccessUnitBoundaryExtEPN10WelsCommon19TagNalUnitHeaderExtES2_PNS_15TagSliceHeadersES4_($33,$14,$34,$35)|0);
  if (!($36)) {
   return 0;
  }
 } else {
  switch ($6|0) {
  case 6: case 9:  {
   break;
  }
  case 7:  {
   $18 = ((($0)) + 242336|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = $19 & 2;
   $21 = ($20|0)==(0);
   if ($21) {
    return 0;
   }
   break;
  }
  case 15:  {
   $22 = ((($0)) + 242336|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = $23 & 4;
   $25 = ($24|0)==(0);
   if ($25) {
    return 0;
   }
   break;
  }
  case 8:  {
   $26 = ((($0)) + 242336|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = $27 & 1;
   $29 = ($28|0)==(0);
   if ($29) {
    return 0;
   }
   break;
  }
  default: {
   return 0;
  }
  }
  $30 = ((($4)) + 4|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($31|0)==(0);
  if (!($32)) {
   (__ZN7WelsDec19ConstructAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2)|0);
  }
 }
 $37 = ((($0)) + 242320|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)==(0);
 if ($39) {
  return 0;
 }
 $40 = (__ZN7WelsDec12NeedErrorConEPNS_21TagWelsDecoderContextE($0)|0);
 if (!($40)) {
  return 0;
 }
 $41 = ((($0)) + 242340|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ($42|0)==(0);
 do {
  if ($43) {
   $66 = ((($0)) + 242344|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = ($67<<24>>24)==(0);
   if (!($68)) {
    $69 = ((($0)) + 316848|0);
    $70 = HEAP32[$69>>2]|0;
    HEAP32[$70>>2] = 0;
    $71 = ((($0)) + 242346|0);
    HEAP8[$71>>0] = 1;
    break;
   }
   $72 = (__ZN7WelsDecL23DecodeFrameConstructionEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2)|0);
   $73 = ($72|0)==(0);
   if (!($73)) {
    $74 = ((($0)) + 317181|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = ($75<<24>>24)==(0);
    if (!($76)) {
     $77 = ((($0)) + 116|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = $78 | 16;
     HEAP32[$77>>2] = $79;
    }
    $80 = ((($0)) + 5464|0);
    HEAP32[$80>>2] = 0;
    return 0;
   }
  } else {
   __ZN7WelsDec17ImplementErrorConEPNS_21TagWelsDecoderContextE($0);
   $44 = ((($0)) + 241924|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 4|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ((($45)) + 8|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = Math_imul($49, $47)|0;
   HEAP32[$37>>2] = $50;
   $51 = HEAP32[$45>>2]|0;
   $52 = ((($0)) + 5464|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ((($53)) + 84|0);
   HEAP32[$54>>2] = $51;
   $55 = ((($0)) + 241928|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($56)) + 4|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = HEAP32[$52>>2]|0;
   $60 = ((($59)) + 88|0);
   HEAP32[$60>>2] = $58;
   (__ZN7WelsDecL23DecodeFrameConstructionEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2)|0);
   $61 = HEAP32[$52>>2]|0;
   $62 = ((($0)) + 316852|0);
   HEAP32[$62>>2] = $61;
   $63 = ((($0)) + 317181|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = ($64<<24>>24)==(0);
   if (!($65)) {
    (__ZN7WelsDec16MarkECFrameAsRefEPNS_21TagWelsDecoderContextE($0)|0);
   }
  }
 } while(0);
 $81 = ((($0)) + 5464|0);
 HEAP32[$81>>2] = 0;
 $82 = HEAP32[$4>>2]|0;
 $83 = ((($4)) + 16|0);
 $84 = HEAP32[$83>>2]|0;
 $85 = (($82) + ($84<<2)|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ((($86)) + 1|0);
 $88 = HEAP8[$87>>0]|0;
 $89 = ($88<<24>>24)==(0);
 if (!($89)) {
  $90 = ((($0)) + 108|0);
  $91 = ((($0)) + 317208|0);
  $92 = HEAP32[$91>>2]|0;
  HEAP32[$90>>2] = $92;
 }
 $93 = ((($0)) + 112|0);
 $94 = HEAP8[$93>>0]|0;
 $95 = ($94<<24>>24)==(0);
 if ($95) {
  return 0;
 }
 $96 = ((($0)) + 108|0);
 HEAP32[$96>>2] = 0;
 return 0;
}
function __ZN7WelsDec19ConstructAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i = 0, $$0 = 0, $$0$i = 0, $$02630$i = 0, $$029$i = 0, $$031$i = 0, $$036$i$i = 0, $$058$i = 0, $$059$i = 0, $$060$off0$lcssa$i = 0, $$060$off072$i = 0, $$06171$i = 0, $$1$off0$i = 0, $$2$off065$i = 0, $$lcssa$i = 0, $$neg27$i = 0, $$not$i = 0, $$not82$i = 0, $$pre$i = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$i = 0, $brmerge83$i = 0, $exitcond$i$i = 0, $not$$i = 0, $scevgep$i = 0, $storemerge$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 241888|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 317168|0);
 HEAP8[$6>>0] = 0;
 $7 = ((($0)) + 112|0);
 HEAP8[$7>>0] = 0;
 ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;
 $8 = ((($5)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($5)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($9>>>0)>($11>>>0);
 if ($12) {
  $$060$off0$lcssa$i = 0;
 } else {
  $13 = HEAP32[$5>>2]|0;
  $$060$off072$i = 0;$$06171$i = $9;
  while(1) {
   $17 = (($13) + ($$06171$i<<2)|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($18)) + 15|0);
   $20 = HEAP8[$19>>0]|0;
   $21 = $20&255;
   $22 = ((($18)) + 88|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (($3) + ($21<<2)|0);
   HEAP32[$24>>2] = $23;
   $25 = ((($18)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ($26|0)==(5);
   if ($27) {
    label = 6;
   } else {
    $28 = ((($18)) + 12|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = ($29<<24>>24)==(0);
    if ($30) {
     $$1$off0$i = $$060$off072$i;
    } else {
     label = 6;
    }
   }
   if ((label|0) == 6) {
    label = 0;
    $$1$off0$i = 1;
   }
   $31 = (($$06171$i) + 1)|0;
   $32 = ($31>>>0)>($11>>>0);
   if ($32) {
    $$060$off0$lcssa$i = $$1$off0$i;
    break;
   } else {
    $$060$off072$i = $$1$off0$i;$$06171$i = $31;
   }
  }
 }
 $14 = ((($0)) + 241920|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $33 = ((($0)) + 241916|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ($34|0)==(0|0);
  if ($35) {
   $102 = ((($0)) + 241912|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ($103|0)==(0|0);
   if ($104) {
    $105 = ((($0)) + 241908|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ($106|0)==(0|0);
    if ($107) {
     $108 = ((($0)) + 241904|0);
     $109 = HEAP32[$108>>2]|0;
     $110 = ($109|0)==(0|0);
     if ($110) {
      $111 = ((($0)) + 241900|0);
      $112 = HEAP32[$111>>2]|0;
      $113 = ($112|0)==(0|0);
      if ($113) {
       $114 = ((($0)) + 241896|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = ($115|0)==(0|0);
       if ($116) {
        $117 = ((($0)) + 241892|0);
        $118 = HEAP32[$117>>2]|0;
        $$059$i = 0;$45 = $118;
       } else {
        $$059$i = 1;$45 = $115;
       }
      } else {
       $$059$i = 2;$45 = $112;
      }
     } else {
      $$059$i = 3;$45 = $109;
     }
    } else {
     $$059$i = 4;$45 = $106;
    }
   } else {
    $$059$i = 5;$45 = $103;
   }
  } else {
   $$059$i = 6;$45 = $34;
  }
 } else {
  $$059$i = 7;$45 = $15;
 }
 $36 = ((($3)) + 28|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0|0);
 if ($38) {
  $39 = ((($3)) + 24|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($40|0)==(0|0);
  if ($41) {
   $88 = ((($3)) + 20|0);
   $89 = HEAP32[$88>>2]|0;
   $90 = ($89|0)==(0|0);
   if ($90) {
    $91 = ((($3)) + 16|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==(0|0);
    if ($93) {
     $94 = ((($3)) + 12|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = ((($3)) + 8|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = ($98|0)==(0|0);
      if ($99) {
       $100 = ((($3)) + 4|0);
       $101 = HEAP32[$100>>2]|0;
       $not$$i = ($101|0)!=(0|0);
       $$$i = $not$$i&1;
       $$058$i = $$$i;
      } else {
       $$058$i = 2;
      }
     } else {
      $$058$i = 3;
     }
    } else {
     $$058$i = 4;
    }
   } else {
    $$058$i = 5;
   }
  } else {
   $$058$i = 6;
  }
 } else {
  $$058$i = 7;
 }
 $42 = ($$058$i|0)==($$059$i|0);
 if ($42) {
  $43 = (($3) + ($$059$i<<2)|0);
  $44 = HEAP32[$43>>2]|0;
  $$not$i = ($44|0)!=($45|0);
  $brmerge$i = $$060$off0$lcssa$i | $$not$i;
  if ($brmerge$i) {
   label = 17;
  } else {
   $46 = ((($0)) + 241892|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ($47|0)==(0|0);
   if ($48) {
    $49 = HEAP32[$3>>2]|0;
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     HEAP32[$46>>2] = $49;
    }
   }
   $51 = ((($0)) + 241896|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($52|0)==(0|0);
   if ($53) {
    $55 = ((($3)) + 4|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = ($56|0)==(0|0);
    if (!($57)) {
     HEAP32[$51>>2] = $56;
    }
   }
   $58 = ((($0)) + 241900|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ($59|0)==(0|0);
   if ($60) {
    $61 = ((($3)) + 8|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = ($62|0)==(0|0);
    if (!($63)) {
     HEAP32[$58>>2] = $62;
    }
   }
   $64 = ((($0)) + 241904|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($65|0)==(0|0);
   if ($66) {
    $67 = ((($3)) + 12|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ($68|0)==(0|0);
    if (!($69)) {
     HEAP32[$64>>2] = $68;
    }
   }
   $70 = ((($0)) + 241908|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ($71|0)==(0|0);
   if ($72) {
    $73 = ((($3)) + 16|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($74|0)==(0|0);
    if (!($75)) {
     HEAP32[$70>>2] = $74;
    }
   }
   $76 = ((($0)) + 241912|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ($77|0)==(0|0);
   if ($78) {
    $79 = ((($3)) + 20|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ($80|0)==(0|0);
    if (!($81)) {
     HEAP32[$76>>2] = $80;
    }
   }
   $82 = ((($0)) + 241916|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = ($83|0)==(0|0);
   if ($84) {
    $85 = ((($3)) + 24|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = ($86|0)==(0|0);
    if (!($87)) {
     HEAP32[$82>>2] = $86;
    }
   }
   $$not82$i = $16 ^ 1;
   $brmerge83$i = $38 | $$not82$i;
   if ($brmerge83$i) {
    $$2$off065$i = 0;
   } else {
    HEAP32[$14>>2] = $37;
    $$2$off065$i = 0;
   }
  }
 } else {
  label = 17;
 }
 if ((label|0) == 17) {
  $54 = ((($0)) + 241892|0);
  ;HEAP32[$54>>2]=HEAP32[$3>>2]|0;HEAP32[$54+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$54+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$54+12>>2]=HEAP32[$3+12>>2]|0;HEAP32[$54+16>>2]=HEAP32[$3+16>>2]|0;HEAP32[$54+20>>2]=HEAP32[$3+20>>2]|0;HEAP32[$54+24>>2]=HEAP32[$3+24>>2]|0;HEAP32[$54+28>>2]=HEAP32[$3+28>>2]|0;
  $$2$off065$i = 1;
 }
 $119 = ((($0)) + 242334|0);
 $120 = HEAP8[$119>>0]|0;
 $121 = ($120<<24>>24)!=(0);
 $122 = $$2$off065$i | $121;
 $123 = $122&1;
 HEAP8[$119>>0] = $123;
 $124 = (__ZN7WelsDec25WelsDecodeAccessUnitStartEPNS_21TagWelsDecoderContextE($0)|0);
 _GetVclNalTemporalId($0);
 $125 = ($124|0)==(0);
 if ($125) {
  $160 = HEAP32[$5>>2]|0;
  $161 = HEAP32[$8>>2]|0;
  $162 = (($160) + ($161<<2)|0);
  $163 = HEAP32[$162>>2]|0;
  $164 = ((($163)) + 88|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = ((($0)) + 241924|0);
  HEAP32[$166>>2] = $165;
  $167 = HEAP32[$5>>2]|0;
  $168 = HEAP32[$8>>2]|0;
  $169 = (($167) + ($168<<2)|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = ((($170)) + 92|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = ((($0)) + 241928|0);
  HEAP32[$173>>2] = $172;
  $174 = HEAP8[$119>>0]|0;
  $175 = ($174<<24>>24)==(0);
  if (!($175)) {
   __ZN7WelsDec15WelsResetRefPicEPNS_21TagWelsDecoderContextE($0);
   $176 = HEAP32[$166>>2]|0;
   $177 = ((($176)) + 4|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = ((($176)) + 8|0);
   $180 = HEAP32[$179>>2]|0;
   $181 = (_SyncPictureResolutionExt($0,$178,$180)|0);
   $182 = ($181|0)==(0);
   if (!($182)) {
    HEAP32[$vararg_buffer>>2] = $181;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,22696,$vararg_buffer);
    $$0 = $181;
    STACKTOP = sp;return ($$0|0);
   }
  }
  $183 = (__ZN7WelsDec23DecodeCurrentAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2)|0);
  $184 = HEAP32[$4>>2]|0;
  $185 = HEAP32[$184>>2]|0;
  $186 = ((($184)) + 20|0);
  $187 = HEAP32[$186>>2]|0;
  $188 = (($185) + ($187<<2)|0);
  $189 = HEAP32[$188>>2]|0;
  $190 = ((($0)) + 317180|0);
  ;HEAP32[$190>>2]=HEAP32[$189>>2]|0;HEAP32[$190+4>>2]=HEAP32[$189+4>>2]|0;HEAP32[$190+8>>2]=HEAP32[$189+8>>2]|0;HEAP32[$190+12>>2]=HEAP32[$189+12>>2]|0;HEAP32[$190+16>>2]=HEAP32[$189+16>>2]|0;HEAP32[$190+20>>2]=HEAP32[$189+20>>2]|0;
  $191 = ((($0)) + 317204|0);
  $192 = ((($189)) + 24|0);
  _memcpy(($191|0),($192|0),2744)|0;
  $193 = ((($184)) + 16|0);
  HEAP32[$193>>2] = 0;
  HEAP32[$186>>2] = 0;
  $194 = ((($184)) + 24|0);
  HEAP8[$194>>0] = 0;
  $195 = ((($184)) + 8|0);
  $196 = HEAP32[$195>>2]|0;
  $197 = ($196|0)==(0);
  if (!($197)) {
   $198 = ((($184)) + 4|0);
   $199 = HEAP32[$198>>2]|0;
   $200 = (($199) - ($196))|0;
   $201 = ($200|0)==(0);
   if (!($201)) {
    $$036$i$i = 0;
    while(1) {
     $202 = HEAP32[$184>>2]|0;
     $203 = (($$036$i$i) + ($196))|0;
     $204 = (($202) + ($203<<2)|0);
     $205 = HEAP32[$204>>2]|0;
     $206 = (($202) + ($$036$i$i<<2)|0);
     $207 = HEAP32[$206>>2]|0;
     HEAP32[$204>>2] = $207;
     $208 = HEAP32[$184>>2]|0;
     $209 = (($208) + ($$036$i$i<<2)|0);
     HEAP32[$209>>2] = $205;
     $210 = (($$036$i$i) + 1)|0;
     $exitcond$i$i = ($210|0)==($200|0);
     if ($exitcond$i$i) {
      break;
     } else {
      $$036$i$i = $210;
     }
    }
   }
   HEAP32[$198>>2] = $200;
   HEAP32[$195>>2] = $200;
  }
  $211 = ($183|0)==(0);
  if ($211) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  HEAP32[$vararg_buffer1>>2] = $183;
  __Z7WelsLogP13TagLogContextiPKcz($0,8,22749,$vararg_buffer1);
  $$0 = $183;
  STACKTOP = sp;return ($$0|0);
 }
 $126 = HEAP32[$4>>2]|0;
 $127 = ((($126)) + 20|0);
 $128 = HEAP32[$127>>2]|0;
 $$029$i = (($128) + 1)|0;
 $129 = ((($126)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = ($$029$i>>>0)<($130>>>0);
 if ($131) {
  $$02630$i = 0;$$031$i = $$029$i;
  while(1) {
   $132 = HEAP32[$126>>2]|0;
   $133 = (($132) + ($$031$i<<2)|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (($132) + ($$02630$i<<2)|0);
   $136 = HEAP32[$135>>2]|0;
   HEAP32[$133>>2] = $136;
   $137 = HEAP32[$126>>2]|0;
   $138 = (($137) + ($$02630$i<<2)|0);
   HEAP32[$138>>2] = $134;
   $139 = (($$02630$i) + 1)|0;
   $$0$i = (($$031$i) + 1)|0;
   $140 = HEAP32[$129>>2]|0;
   $141 = ($$0$i>>>0)<($140>>>0);
   if ($141) {
    $$02630$i = $139;$$031$i = $$0$i;
   } else {
    break;
   }
  }
  $$pre$i = HEAP32[$127>>2]|0;
  $$lcssa$i = $140;$143 = $$pre$i;
 } else {
  $$lcssa$i = $130;$143 = $128;
 }
 $142 = ($$lcssa$i>>>0)>($143>>>0);
 $$neg27$i = $143 ^ -1;
 $144 = (($$lcssa$i) + ($$neg27$i))|0;
 $storemerge$i = $142 ? $144 : 0;
 HEAP32[$129>>2] = $storemerge$i;
 $145 = ((($126)) + 8|0);
 HEAP32[$145>>2] = 0;
 $146 = ((($126)) + 16|0);
 HEAP32[$146>>2] = 0;
 HEAP32[$127>>2] = 0;
 $147 = ((($126)) + 24|0);
 HEAP8[$147>>0] = 0;
 $148 = ((($0)) + 242344|0);
 $149 = HEAP8[$148>>0]|0;
 $150 = ($149<<24>>24)==(0);
 if ($150) {
  HEAP32[$2>>2] = 0;
 }
 $151 = HEAP8[$119>>0]|0;
 $152 = ($151<<24>>24)==(0);
 if ($152) {
  $154 = ((($0)) + 242335|0);
  $155 = HEAP8[$154>>0]|0;
  HEAP8[$119>>0] = $155;
  HEAP8[$154>>0] = 0;
  $156 = ($155<<24>>24)==(0);
  if ($156) {
   $$0 = $124;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  HEAP8[$119>>0] = 1;
  $153 = ((($0)) + 242335|0);
  HEAP8[$153>>0] = 0;
 }
 $157 = ((($0)) + 242320|0);
 $158 = HEAP32[$157>>2]|0;
 $159 = ($158|0)==(0);
 if (!($159)) {
  $$0 = $124;
  STACKTOP = sp;return ($$0|0);
 }
 $scevgep$i = ((($0)) + 241892|0);
 ;HEAP32[$scevgep$i>>2]=0|0;HEAP32[$scevgep$i+4>>2]=0|0;HEAP32[$scevgep$i+8>>2]=0|0;HEAP32[$scevgep$i+12>>2]=0|0;HEAP32[$scevgep$i+16>>2]=0|0;HEAP32[$scevgep$i+20>>2]=0|0;HEAP32[$scevgep$i+24>>2]=0|0;HEAP32[$scevgep$i+28>>2]=0|0;
 $$0 = $124;
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec18DecodeFinishUpdateEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$i = 0, $$pre15$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $scevgep$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 242334|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($0)) + 242336|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $11 = $3;
 } else {
  $6 = ((($0)) + 208752|0);
  $7 = ((($0)) + 208756|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (((($0)) + 33648|0) + (($8*684)|0)|0);
  _memcpy(($9|0),($6|0),684)|0;
  $$pre$i = HEAP32[$2>>2]|0;
  $11 = $$pre$i;
 }
 $10 = $11 & 2;
 $12 = ($10|0)==(0);
 if ($12) {
  $17 = $11;
 } else {
  $13 = ((($0)) + 32816|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (((($0)) + 6192|0) + (($14*832)|0)|0);
  _memcpy(($15|0),($13|0),832)|0;
  HEAP8[$1>>0] = 1;
  $$pre15$i = HEAP32[$2>>2]|0;
  $17 = $$pre15$i;
 }
 $16 = $17 & 4;
 $18 = ($16|0)==(0);
 if ($18) {
  $$pre = HEAP8[$1>>0]|0;
  $phitmp = ($$pre<<24>>24)==(0);
  HEAP32[$2>>2] = 0;
  if ($phitmp) {
   $23 = ((($0)) + 242335|0);
   $24 = HEAP8[$23>>0]|0;
   HEAP8[$1>>0] = $24;
   HEAP8[$23>>0] = 0;
   $25 = ($24<<24>>24)==(0);
   if ($25) {
    return;
   }
  } else {
   label = 8;
  }
 } else {
  $19 = ((($0)) + 237100|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (((($0)) + 209452|0) + (($20*864)|0)|0);
  _memcpy(($21|0),($19|0),864)|0;
  HEAP8[$1>>0] = 1;
  HEAP32[$2>>2] = 0;
  label = 8;
 }
 if ((label|0) == 8) {
  HEAP8[$1>>0] = 1;
  $22 = ((($0)) + 242335|0);
  HEAP8[$22>>0] = 0;
 }
 $26 = ((($0)) + 242320|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)==(0);
 if (!($28)) {
  return;
 }
 $scevgep$i = ((($0)) + 241892|0);
 ;HEAP32[$scevgep$i>>2]=0|0;HEAP32[$scevgep$i+4>>2]=0|0;HEAP32[$scevgep$i+8>>2]=0|0;HEAP32[$scevgep$i+12>>2]=0|0;HEAP32[$scevgep$i+16>>2]=0|0;HEAP32[$scevgep$i+20>>2]=0|0;HEAP32[$scevgep$i+24>>2]=0|0;HEAP32[$scevgep$i+28>>2]=0|0;
 return;
}
function __ZN7WelsDec25WelsDecodeAccessUnitStartEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$$035$i = 0, $$0 = 0, $$0$i = 0, $$0$in$i = 0, $$035$i = 0, $$2$i = 0, $$pr = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 241888|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 $6 = (($5) + ($4<<2)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 22|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ((($0)) + 241948|0);
 HEAP8[$10>>0] = $9;
 $11 = (($4) + 1)|0;
 $12 = ((($2)) + 8|0);
 HEAP32[$12>>2] = $11;
 $13 = ((($2)) + 24|0);
 HEAP8[$13>>0] = 1;
 $14 = ((($0)) + 242324|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $17 = ((($0)) + 242334|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = ($18<<24>>24)==(0);
  if (!($19)) {
   $$035$i = 0;
   label = 3;
  }
 } else {
  $$035$i = 0;
  label = 3;
 }
 if ((label|0) == 3) {
  while(1) {
   label = 0;
   $20 = ($$035$i>>>0)<($11>>>0);
   if (!($20)) {
    $$2$i = $$035$i;
    break;
   }
   $21 = HEAP32[$2>>2]|0;
   $22 = (($21) + ($$035$i<<2)|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($23)) + 4|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(5);
   if ($26) {
    $$2$i = $$035$i;
    break;
   }
   $27 = ((($23)) + 12|0);
   $28 = HEAP8[$27>>0]|0;
   $29 = ($28<<24>>24)==(0);
   $30 = $28 ^ 1;
   $31 = $30&255;
   $$$035$i = (($31) + ($$035$i))|0;
   if ($29) {
    $$035$i = $$$035$i;
    label = 3;
   } else {
    $$2$i = $$$035$i;
    break;
   }
  }
  $32 = ($$2$i|0)==($11|0);
  if ($32) {
   $33 = ((($0)) + 512292|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (($34) + 1)|0;
   HEAP32[$33>>2] = $35;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,26649,$vararg_buffer);
   $36 = ((($0)) + 116|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 | 2;
   HEAP32[$36>>2] = $38;
   $39 = ((($0)) + 242340|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($40|0)==(0);
   if ($41) {
    $42 = $37 | 18;
    HEAP32[$36>>2] = $42;
    $$0 = 16;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $43 = HEAP32[$1>>2]|0;
 $44 = ((($43)) + 16|0);
 HEAP32[$44>>2] = 0;
 $45 = ((($0)) + 241949|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $48 = (__ZN7WelsDec26CheckIntegrityNalUnitsListEPNS_21TagWelsDecoderContextE($0)|0);
 if (!($48)) {
  $49 = ((($0)) + 116|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = $50 | 4;
  HEAP32[$49>>2] = $51;
  $$0 = 4;
  STACKTOP = sp;return ($$0|0);
 }
 $$pr = HEAP8[$45>>0]|0;
 $52 = ($$pr<<24>>24)==(0);
 if (!($52)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $53 = HEAP32[$1>>2]|0;
 $54 = ((($53)) + 20|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = ((($53)) + 16|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = HEAP32[$53>>2]|0;
 $59 = (($58) + ($57<<2)|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 15|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = ((($60)) + 16|0);
 $64 = HEAP8[$63>>0]|0;
 $65 = ((($60)) + 17|0);
 $66 = HEAP8[$65>>0]|0;
 $67 = ((($0)) + 241953|0);
 HEAP8[$67>>0] = 1;
 $68 = ($55|0)==($57|0);
 if ($68) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $$0$in$i = $57;
 }
 while(1) {
  $$0$i = (($$0$in$i) + 1)|0;
  $69 = ($$0$in$i|0)<($55|0);
  if (!($69)) {
   $$0 = 0;
   label = 18;
   break;
  }
  $70 = HEAP32[$53>>2]|0;
  $71 = (($70) + ($$0$i<<2)|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($72)) + 15|0);
  $74 = HEAP8[$73>>0]|0;
  $75 = ($62<<24>>24)==($74<<24>>24);
  if (!($75)) {
   break;
  }
  $76 = ((($72)) + 17|0);
  $77 = HEAP8[$76>>0]|0;
  $78 = ((($72)) + 16|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = ($64<<24>>24)==($79<<24>>24);
  $81 = ($66<<24>>24)==($77<<24>>24);
  $or$cond$i = $81 & $80;
  if ($or$cond$i) {
   $$0$in$i = $$0$i;
  } else {
   break;
  }
 }
 if ((label|0) == 18) {
  STACKTOP = sp;return ($$0|0);
 }
 HEAP8[$67>>0] = 0;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _GetVclNalTemporalId($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241888|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 317160|0);
 HEAP32[$5>>2] = 1;
 $6 = HEAP32[$2>>2]|0;
 $7 = (($6) + ($4<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 17|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&255;
 $12 = ((($0)) + 317164|0);
 HEAP32[$12>>2] = $11;
 return;
}
function _SyncPictureResolutionExt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_WelsRequestMem($0,$1,$2)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,26023,$vararg_buffer);
  $5 = ((($0)) + 116|0);
  HEAP32[$5>>2] = 16384;
  $$0 = $3;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = $2 << 4;
 $7 = $1 << 4;
 $8 = (__ZN7WelsDec22InitialDqLayersContextEPNS_21TagWelsDecoderContextEii($0,$7,$6)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,26093,$vararg_buffer1);
  $10 = ((($0)) + 116|0);
  HEAP32[$10>>2] = 16384;
 }
 $11 = ((($0)) + 562528|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (__ZNK10WelsCommon12CMemoryAlign18WelsGetMemoryUsageEv($12)|0);
 $14 = (($13) + 562536)|0;
 $15 = $vararg_buffer3;
 $16 = $15;
 HEAP32[$16>>2] = $14;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = 0;
 __Z7WelsLogP13TagLogContextiPKcz($0,4,26171,$vararg_buffer3);
 $$0 = $8;
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec23DecodeCurrentAccessUnitEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0249420 = 0, $$0259 = 0, $$0261419 = 0, $$0266418 = 0, $$0270417 = 0, $$0275416 = 0, $$0280$off0415 = 0, $$1250 = 0, $$1260 = 0, $$1262 = 0, $$1267 = 0, $$1271 = 0, $$1276 = 0, $$1281$off0 = 0, $$2268 = 0, $$3264 = 0, $$3273 = 0, $$3278 = 0, $$355 = 0;
 var $$4253 = 0, $$4284$off0 = 0, $$5285$off0 = 0, $$6286$off0 = 0, $$7$ph = 0, $$7287$off0 = 0, $$8 = 0, $$9$off0 = 0, $$not = 0, $$not318 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre435 = 0, $$pre436 = 0, $$sink2$in = 0, $$sink2$in$in = 0, $$sroa$0 = 0, $$sroa$0$24$$sroa_idx = 0, $$sroa$0$24$sroa_idx = 0, $$sroa$10$0$$sroa_idx = 0;
 var $$sroa$12$0$$sroa_idx = 0, $$sroa$6$0$$sroa_idx = 0, $$sroa$7$0$$sroa_idx = 0, $$sroa$7328$0$$sroa_idx = 0, $$sroa$8$0$$sroa_idx = 0, $$sroa$9 = 0, $$sroa$9$0$$sroa_idx = 0, $$sroa$9332$0$$sroa_idx = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $not$ = 0, $or$cond = 0, $switch$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, $vararg_ptr14 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 3936|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer8 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $$sroa$0 = sp + 48|0;
 $$sroa$9 = sp + 3916|0;
 $3 = ((($0)) + 241888|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 241948|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ((($0)) + 48|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $16 = -1;
 } else {
  $14 = ((($12)) + 12|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15;
 }
 $17 = ($16&255)>($10&255);
 $18 = $17 ? $10 : $16;
 $19 = $18&255;
 $20 = $19 >>> 4;
 $21 = $20 & 7;
 $22 = ((($0)) + 241952|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = ($23<<24>>24)==(0);
 $$phi$trans$insert = ((($0)) + 241932|0);
 if ($24) {
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $28 = $$pre;
 } else {
  $25 = ((($0)) + 241936|0);
  $26 = HEAP32[$25>>2]|0;
  HEAP32[$$phi$trans$insert>>2] = $26;
  $27 = $26;
  $28 = $27;
 }
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = ((($0)) + 5344|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($28)) + 3908|0);
  HEAP32[$32>>2] = $31;
  $33 = ((($0)) + 5436|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($28)) + 3912|0);
  HEAP32[$35>>2] = $34;
  $36 = ((($0)) + 5348|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($28)) + 3916|0);
  HEAP32[$38>>2] = $37;
  $39 = ((($0)) + 5356|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($28)) + 3932|0);
  HEAP32[$41>>2] = $40;
  $42 = ((($0)) + 5364|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($28)) + 3940|0);
  HEAP32[$44>>2] = $43;
  $45 = ((($0)) + 5368|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ((($28)) + 3944|0);
  HEAP32[$47>>2] = $46;
  $48 = ((($0)) + 5372|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ((($28)) + 3948|0);
  HEAP32[$50>>2] = $49;
  $51 = ((($0)) + 5376|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($28)) + 3952|0);
  HEAP32[$53>>2] = $52;
  $54 = ((($0)) + 5380|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($28)) + 3924|0);
  HEAP32[$56>>2] = $55;
  $57 = ((($0)) + 5388|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($28)) + 3960|0);
  HEAP32[$59>>2] = $58;
  $60 = ((($0)) + 5392|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($28)) + 3964|0);
  HEAP32[$62>>2] = $61;
  $63 = ((($0)) + 5396|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = ((($28)) + 3968|0);
  HEAP32[$65>>2] = $64;
  $66 = ((($0)) + 5400|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($28)) + 3988|0);
  HEAP32[$68>>2] = $67;
  $69 = ((($0)) + 5404|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = ((($28)) + 3992|0);
  HEAP32[$71>>2] = $70;
  $72 = ((($0)) + 5408|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ((($28)) + 3996|0);
  HEAP32[$74>>2] = $73;
  $75 = ((($0)) + 5412|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($28)) + 4000|0);
  HEAP32[$77>>2] = $76;
  $78 = ((($0)) + 5416|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = ((($28)) + 4004|0);
  HEAP32[$80>>2] = $79;
  $81 = ((($0)) + 5420|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = ((($28)) + 3956|0);
  HEAP32[$83>>2] = $82;
  $84 = ((($0)) + 5432|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = ((($28)) + 4008|0);
  HEAP32[$86>>2] = $85;
  $87 = ((($0)) + 5444|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = ((($28)) + 3976|0);
  HEAP32[$89>>2] = $88;
  $90 = ((($0)) + 5440|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = ((($28)) + 3972|0);
  HEAP32[$92>>2] = $91;
  $93 = ((($0)) + 5448|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($28)) + 3980|0);
  HEAP32[$95>>2] = $94;
  $96 = ((($0)) + 5452|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ((($28)) + 3984|0);
  HEAP32[$98>>2] = $97;
 }
 $99 = ($6|0)>($8|0);
 if ($99) {
  $$8 = 0;
  STACKTOP = sp;return ($$8|0);
 }
 $100 = HEAP32[$4>>2]|0;
 $101 = (($100) + ($6<<2)|0);
 $102 = HEAP32[$101>>2]|0;
 $103 = ((($0)) + 5464|0);
 $104 = ((($0)) + 209440|0);
 $105 = ((($0)) + 242320|0);
 $$sink2$in$in = ((($0)) + 242334|0);
 $106 = ((($0)) + 512345|0);
 $107 = ((($0)) + 5248|0);
 $$sroa$0$24$sroa_idx = ((($$sroa$0)) + 24|0);
 $108 = ((($0)) + 5240|0);
 $109 = ((($0)) + 5244|0);
 $110 = ((($0)) + 562528|0);
 $111 = ((($0)) + 100|0);
 $112 = ((($0)) + 209436|0);
 $113 = ((($0)) + 104|0);
 $114 = ((($0)) + 108|0);
 $115 = ((($0)) + 116|0);
 $116 = ((($0)) + 242340|0);
 $117 = ((($0)) + 5852|0);
 $118 = ((($0)) + 242316|0);
 $119 = ((($0)) + 241951|0);
 $120 = ((($0)) + 242344|0);
 $121 = ((($0)) + 241924|0);
 $122 = ((($0)) + 241928|0);
 $123 = ((($0)) + 316852|0);
 $124 = ((($0)) + 317112|0);
 $125 = ((($0)) + 317116|0);
 $126 = ((($0)) + 112|0);
 $127 = ((($0)) + 5456|0);
 $128 = ((($0)) + 5460|0);
 $$pre435 = HEAP32[$103>>2]|0;
 $129 = ((($0)) + 5436|0);
 $$0249420 = $102;$$0261419 = $6;$$0266418 = 0;$$0270417 = -1;$$0275416 = -1;$$0280$off0415 = 1;$131 = $$pre435;
 L14: while(1) {
  $130 = HEAP32[$$phi$trans$insert>>2]|0;
  $132 = ($131|0)==(0|0);
  if ($132) {
   $133 = HEAP32[$104>>2]|0;
   $134 = (__ZN7WelsDec11PrefetchPicEPNS_10TagPicBuffE($133)|0);
   HEAP32[$103>>2] = $134;
   $135 = HEAP32[$105>>2]|0;
   $136 = ($135|0)==(0);
   if (!($136)) {
    HEAP32[$105>>2] = 0;
   }
   $137 = ($134|0)==(0|0);
   if ($137) {
    label = 14;
    break;
   } else {
    $146 = $134;
    label = 16;
   }
  } else {
   $143 = HEAP32[$105>>2]|0;
   $144 = ($143|0)==(0);
   if ($144) {
    $146 = $131;
    label = 16;
   } else {
    $155 = $131;
   }
  }
  if ((label|0) == 16) {
   label = 0;
   $$sink2$in = HEAP8[$$sink2$in$in>>0]|0;
   $145 = ((($146)) + 104|0);
   HEAP8[$145>>0] = $$sink2$in;
   $$pre436 = HEAP32[$103>>2]|0;
   $155 = $$pre436;
  }
  $147 = ((($$0249420)) + 3912|0);
  $148 = $147;
  $149 = $148;
  $150 = HEAP32[$149>>2]|0;
  $151 = (($148) + 4)|0;
  $152 = $151;
  $153 = HEAP32[$152>>2]|0;
  $154 = ((($155)) + 96|0);
  $156 = $154;
  $157 = $156;
  HEAP32[$157>>2] = $150;
  $158 = (($156) + 4)|0;
  $159 = $158;
  HEAP32[$159>>2] = $153;
  $160 = HEAP32[$105>>2]|0;
  $161 = ($160|0)==(0);
  if ($161) {
   $162 = HEAP32[$129>>2]|0;
   $163 = HEAP32[$127>>2]|0;
   $164 = HEAP32[$128>>2]|0;
   $165 = $163 << 2;
   $166 = Math_imul($165, $164)|0;
   _memset(($162|0),-1,($166|0))|0;
   $167 = HEAP32[$$phi$trans$insert>>2]|0;
   $168 = ((($167)) + 3980|0);
   $169 = HEAP32[$168>>2]|0;
   $170 = HEAP32[$121>>2]|0;
   $171 = ((($170)) + 4|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ((($170)) + 8|0);
   $174 = HEAP32[$173>>2]|0;
   $175 = Math_imul($174, $172)|0;
   _memset(($169|0),0,($175|0))|0;
   $176 = HEAP32[$$phi$trans$insert>>2]|0;
   $177 = ((($176)) + 3984|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = HEAP32[$121>>2]|0;
   $180 = ((($179)) + 4|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ((($179)) + 8|0);
   $183 = HEAP32[$182>>2]|0;
   $184 = Math_imul($183, $181)|0;
   _memset(($178|0),0,($184|0))|0;
   $185 = HEAP32[$121>>2]|0;
   $186 = ((($185)) + 4|0);
   $187 = HEAP32[$186>>2]|0;
   $188 = ((($185)) + 8|0);
   $189 = HEAP32[$188>>2]|0;
   $190 = Math_imul($189, $187)|0;
   $191 = HEAP32[$103>>2]|0;
   $192 = ((($191)) + 116|0);
   HEAP32[$192>>2] = $190;
   $193 = HEAP32[$103>>2]|0;
   $194 = ((($193)) + 108|0);
   HEAP32[$194>>2] = 0;
   $195 = HEAP32[$103>>2]|0;
   $196 = ((($195)) + 112|0);
   HEAP32[$196>>2] = 0;
  }
  HEAP8[$106>>0] = 0;
  $197 = HEAP32[$103>>2]|0;
  $198 = ((($197)) + 32|0);
  $199 = HEAP32[$198>>2]|0;
  $200 = ((($197)) + 36|0);
  $201 = HEAP32[$200>>2]|0;
  __ZN7WelsDec25GetI4LumaIChromaAddrTableEPiii($107,$199,$201);
  $202 = ((($$0249420)) + 22|0);
  $203 = HEAP8[$202>>0]|0;
  $204 = ($203&255)>($18&255);
  if ($204) {
   label = 20;
   break;
  }
  _memset(($$sroa$0|0),0,3868)|0;
  ;HEAP16[$$sroa$9>>1]=0|0;HEAP16[$$sroa$9+2>>1]=0|0;HEAP16[$$sroa$9+4>>1]=0|0;
  $205 = ((($130)) + 3900|0);
  $$sroa$6$0$$sroa_idx = ((($130)) + 3868|0);
  $$sroa$7$0$$sroa_idx = ((($130)) + 3872|0);
  $$sroa$7328$0$$sroa_idx = ((($130)) + 3880|0);
  $$sroa$8$0$$sroa_idx = ((($130)) + 3881|0);
  $$sroa$9$0$$sroa_idx = ((($130)) + 3882|0);
  $$sroa$9332$0$$sroa_idx = ((($130)) + 3888|0);
  $$sroa$10$0$$sroa_idx = ((($130)) + 3892|0);
  $$sroa$12$0$$sroa_idx = ((($130)) + 3896|0);
  $206 = ((($130)) + 4100|0);
  $207 = ((($130)) + 4044|0);
  $208 = ((($130)) + 4048|0);
  $209 = ((($130)) + 4052|0);
  $210 = ((($130)) + 4060|0);
  $211 = ((($130)) + 4064|0);
  $212 = ((($130)) + 4068|0);
  $213 = ((($130)) + 4072|0);
  $214 = ((($130)) + 4076|0);
  $215 = ((($130)) + 4105|0);
  $216 = ((($130)) + 4106|0);
  $217 = ((($130)) + 4107|0);
  $218 = ((($130)) + 4108|0);
  $219 = ((($130)) + 4109|0);
  $220 = ((($130)) + 4110|0);
  $221 = ((($130)) + 4080|0);
  $222 = ((($130)) + 4088|0);
  $223 = ((($130)) + 4104|0);
  $224 = ((($130)) + 4092|0);
  $225 = ((($130)) + 4084|0);
  $226 = ((($130)) + 4111|0);
  $227 = ((($130)) + 4112|0);
  $228 = ((($130)) + 12|0);
  $229 = ((($130)) + 4|0);
  $$0259 = 0;$$1250 = $$0249420;$$1262 = $$0261419;$$1267 = $$0266418;$$1271 = $$0270417;$$1276 = $$0275416;$$1281$off0 = $$0280$off0415;
  while(1) {
   $230 = ($$1262|0)>($8|0);
   if ($230) {
    $$1260 = $$0259;$$2268 = $$1267;$$3264 = $$1262;$$3273 = $$1271;$$3278 = $$1276;$$4253 = $$1250;$$9$off0 = $$1281$off0;
    break;
   }
   $231 = ((($$1250)) + 16|0);
   $232 = HEAP8[$231>>0]|0;
   $233 = $232&255;
   $234 = ((($$1250)) + 15|0);
   $235 = HEAP8[$234>>0]|0;
   $236 = $235&255;
   $237 = ((($$1250)) + 24|0);
   HEAP8[$106>>0] = 0;
   $238 = ((($$1250)) + 22|0);
   $239 = HEAP8[$238>>0]|0;
   $240 = ($239<<24>>24)==($18<<24>>24);
   ;HEAP32[$$sroa$0>>2]=HEAP32[$$1250>>2]|0;HEAP32[$$sroa$0+4>>2]=HEAP32[$$1250+4>>2]|0;HEAP32[$$sroa$0+8>>2]=HEAP32[$$1250+8>>2]|0;HEAP32[$$sroa$0+12>>2]=HEAP32[$$1250+12>>2]|0;HEAP32[$$sroa$0+16>>2]=HEAP32[$$1250+16>>2]|0;HEAP32[$$sroa$0+20>>2]=HEAP32[$$1250+20>>2]|0;
   $241 = ((($$1250)) + 28|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = HEAP32[$103>>2]|0;
   $244 = ((($243)) + 76|0);
   HEAP32[$244>>2] = $242;
   $245 = ((($$1250)) + 32|0);
   $246 = HEAP32[$245>>2]|0;
   $247 = HEAP32[$103>>2]|0;
   $248 = ((($247)) + 64|0);
   HEAP32[$248>>2] = $246;
   $249 = ((($$1250)) + 12|0);
   $250 = HEAP8[$249>>0]|0;
   $251 = HEAP32[$103>>2]|0;
   $252 = ((($251)) + 52|0);
   HEAP8[$252>>0] = $250;
   $$sroa$0$24$$sroa_idx = ((($$1250)) + 24|0);
   _memcpy(($$sroa$0$24$sroa_idx|0),($$sroa$0$24$$sroa_idx|0),3844)|0;
   $253 = ((($$1250)) + 3904|0);
   $254 = HEAP8[$253>>0]|0;
   $255 = ((($$1250)) + 2756|0);
   $256 = HEAP32[$255>>2]|0;
   $257 = $256&255;
   $258 = ((($$1250)) + 64|0);
   $259 = HEAP32[$258>>2]|0;
   $260 = ((($$1250)) + 3868|0);
   HEAP32[$205>>2] = $260;
   $261 = ((($$1250)) + 1|0);
   $262 = HEAP8[$261>>0]|0;
   $263 = ((($$1250)) + 100|0);
   $264 = HEAP32[$263>>2]|0;
   $265 = ((($$1250)) + 92|0);
   $266 = HEAP32[$265>>2]|0;
   $267 = ((($$1250)) + 88|0);
   $268 = HEAP32[$267>>2]|0;
   $269 = ((($$1250)) + 2768|0);
   $270 = HEAP32[$269>>2]|0;
   $271 = (((($0)) + 120|0) + (($264*20)|0)|0);
   HEAP32[$108>>2] = $271;
   $272 = $268;
   $273 = $266;
   $274 = HEAP32[$110>>2]|0;
   $275 = (__ZN7WelsDec14FmoParamUpdateEPNS_6TagFmoEPNS_6TagSpsEPNS_6TagPpsEPiPN10WelsCommon12CMemoryAlignE($271,$272,$273,$109,$274)|0);
   if (!($275)) {
    label = 24;
    break L14;
   }
   $279 = $235&255;
   $280 = $$1276 << 16 >> 16;
   $281 = ($279|0)==($280|0);
   $282 = $232&255;
   $283 = $$1271 << 16 >> 16;
   $284 = ($282|0)!=($283|0);
   $not$ = $281 ^ 1;
   $$355 = $284 | $not$;
   $285 = HEAP32[$255>>2]|0;
   HEAP32[$111>>2] = $285;
   HEAP32[$112>>2] = $237;
   $286 = HEAP32[$241>>2]|0;
   HEAP32[$113>>2] = $286;
   $287 = ($$1276<<16>>16)<(0);
   $or$cond = $287 | $281;
   do {
    if ($or$cond) {
     $288 = HEAP32[$103>>2]|0;
     $289 = HEAP8[$231>>0]|0;
     _memcpy(($130|0),($$sroa$0|0),3868)|0;
     HEAP32[$$sroa$6$0$$sroa_idx>>2] = $259;
     $290 = $$sroa$7$0$$sroa_idx;
     $291 = $290;
     HEAP32[$291>>2] = 0;
     $292 = (($290) + 4)|0;
     $293 = $292;
     HEAP32[$293>>2] = 0;
     HEAP8[$$sroa$7328$0$$sroa_idx>>0] = $254;
     HEAP8[$$sroa$8$0$$sroa_idx>>0] = $257;
     ;HEAP16[$$sroa$9$0$$sroa_idx>>1]=HEAP16[$$sroa$9>>1]|0;HEAP16[$$sroa$9$0$$sroa_idx+2>>1]=HEAP16[$$sroa$9+2>>1]|0;HEAP16[$$sroa$9$0$$sroa_idx+4>>1]=HEAP16[$$sroa$9+4>>1]|0;
     HEAP32[$$sroa$9332$0$$sroa_idx>>2] = $270;
     HEAP32[$$sroa$10$0$$sroa_idx>>2] = $268;
     HEAP32[$$sroa$12$0$$sroa_idx>>2] = $266;
     HEAP32[$206>>2] = $288;
     $294 = ((($$1250)) + 1156|0);
     $295 = HEAP32[$294>>2]|0;
     HEAP32[$207>>2] = $295;
     $296 = ((($$1250)) + 1160|0);
     $297 = HEAP32[$296>>2]|0;
     HEAP32[$208>>2] = $297;
     $298 = ((($$1250)) + 24|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = $299 << 7;
     $301 = HEAP8[$234>>0]|0;
     $302 = $301&255;
     $303 = $302 << 4;
     $304 = $303 | $300;
     $305 = HEAP8[$231>>0]|0;
     $306 = $305&255;
     $307 = $304 | $306;
     HEAP32[$209>>2] = $307;
     $308 = ((($273)) + 4|0);
     $309 = HEAP32[$308>>2]|0;
     HEAP32[$210>>2] = $309;
     $310 = ((($$1250)) + 2772|0);
     $311 = HEAP32[$310>>2]|0;
     HEAP32[$211>>2] = $311;
     $312 = ((($$1250)) + 2776|0);
     $313 = HEAP32[$312>>2]|0;
     HEAP32[$212>>2] = $313;
     $314 = ((($$1250)) + 2780|0);
     $315 = HEAP32[$314>>2]|0;
     HEAP32[$213>>2] = $315;
     $316 = ((($$1250)) + 84|0);
     $317 = HEAP32[$316>>2]|0;
     HEAP32[$214>>2] = $317;
     $318 = ((($$1250)) + 3853|0);
     $319 = HEAP8[$318>>0]|0;
     HEAP8[$215>>0] = $319;
     $320 = ((($$1250)) + 3862|0);
     $321 = HEAP8[$320>>0]|0;
     HEAP8[$216>>0] = $321;
     $322 = ((($$1250)) + 3854|0);
     $323 = HEAP8[$322>>0]|0;
     HEAP8[$217>>0] = $323;
     $324 = ((($$1250)) + 3865|0);
     $325 = HEAP8[$324>>0]|0;
     HEAP8[$218>>0] = $325;
     $326 = ((($$1250)) + 3863|0);
     $327 = HEAP8[$326>>0]|0;
     HEAP8[$219>>0] = $327;
     $328 = ((($$1250)) + 3864|0);
     $329 = HEAP8[$328>>0]|0;
     HEAP8[$220>>0] = $329;
     $330 = ($289<<24>>24)==(0);
     if ($330) {
      $331 = ((($$1250)) + 108|0);
      HEAP32[$221>>2] = $331;
      $332 = ((($$1250)) + 1164|0);
      HEAP32[$222>>2] = $332;
      $333 = HEAP32[$265>>2]|0;
      $334 = ((($333)) + 182|0);
      $335 = HEAP8[$334>>0]|0;
      $336 = ($335<<24>>24)==(0);
      if ($336) {
       HEAP8[$223>>0] = 0;
      } else {
       HEAP8[$223>>0] = 1;
       $337 = ((($$1250)) + 368|0);
       HEAP32[$225>>2] = $337;
      }
      $338 = ((($$1250)) + 2792|0);
      HEAP32[$224>>2] = $338;
     }
     $339 = HEAP8[$238>>0]|0;
     HEAP8[$226>>0] = $339;
     $340 = ((($$1250)) + 18|0);
     $341 = HEAP8[$340>>0]|0;
     HEAP8[$227>>0] = $341;
     $342 = ((($272)) + 323|0);
     $343 = HEAP8[$342>>0]|0;
     $344 = ($343<<24>>24)==(0);
     if ($344) {
      $345 = HEAP8[$228>>0]|0;
      $346 = ($345<<24>>24)==(0);
      if ($346) {
       $347 = HEAP32[$229>>2]|0;
       $348 = ($347|0)==(5);
       if ($348) {
        $$4284$off0 = $$1281$off0;
       } else {
        $349 = HEAP32[$241>>2]|0;
        $350 = HEAP32[$114>>2]|0;
        $351 = ($349|0)==($350|0);
        if ($351) {
         $$4284$off0 = $$1281$off0;
        } else {
         $352 = (($350) + 1)|0;
         $353 = ((($272)) + 16|0);
         $354 = HEAP32[$353>>2]|0;
         $355 = 1 << $354;
         $356 = (($355) + -1)|0;
         $357 = $356 & $352;
         $358 = ($349|0)==($357|0);
         if ($358) {
          $$4284$off0 = $$1281$off0;
         } else {
          HEAP32[$vararg_buffer4>>2] = $350;
          $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
          HEAP32[$vararg_ptr7>>2] = $349;
          __Z7WelsLogP13TagLogContextiPKcz($0,2,22925,$vararg_buffer4);
          $359 = HEAP32[$115>>2]|0;
          $360 = $359 | 2;
          HEAP32[$115>>2] = $360;
          $361 = HEAP32[$116>>2]|0;
          $362 = ($361|0)==(0);
          if ($362) {
           label = 37;
           break L14;
          } else {
           $$4284$off0 = 0;
          }
         }
        }
       }
      } else {
       $$4284$off0 = $$1281$off0;
      }
     } else {
      $$4284$off0 = $$1281$off0;
     }
     $$not = ($279|0)!=($21|0);
     $$not318 = ($232<<24>>24)!=(0);
     $brmerge = $$not318 | $$not;
     if ($brmerge) {
      $$5285$off0 = $$4284$off0;
     } else {
      $364 = HEAP32[$245>>2]|0;
      $365 = (__ZN7WelsDec15WelsInitRefListEPNS_21TagWelsDecoderContextEi($0,$364)|0);
      $366 = HEAP32[$111>>2]|0;
      switch ($366|0) {
      case 4: case 2:  {
       $$0$i = $365;
       break;
      }
      default: {
       $367 = (__ZN7WelsDec18WelsReorderRefListEPNS_21TagWelsDecoderContextE($0)|0);
       $$0$i = $367;
      }
      }
      $368 = ($$0$i|0)==(0);
      if ($368) {
       $$5285$off0 = $$4284$off0;
      } else {
       HEAP8[$106>>0] = 1;
       $369 = ((($$1250)) + 17|0);
       $370 = HEAP8[$369>>0]|0;
       $switch$i = ($370&255)<(2);
       if ($switch$i) {
        HEAP8[$118>>0] = 1;
       }
       $371 = HEAP32[$115>>2]|0;
       $372 = $371 | 2;
       HEAP32[$115>>2] = $372;
       $373 = HEAP8[$369>>0]|0;
       $374 = $373&255;
       HEAP32[$vararg_buffer8>>2] = $374;
       __Z7WelsLogP13TagLogContextiPKcz($0,8,23012,$vararg_buffer8);
       $375 = HEAP32[$116>>2]|0;
       $376 = ($375|0)==(0);
       if ($376) {
        label = 45;
        break L14;
       } else {
        $$5285$off0 = 0;
       }
      }
     }
     $379 = (__ZN7WelsDec15WelsDecodeSliceEPNS_21TagWelsDecoderContextEbPNS_10TagNalUnitE($0,$$355,$$1250)|0);
     $380 = ($379|0)==(0);
     if ($380) {
      $$6286$off0 = $$5285$off0;
     } else {
      $381 = HEAP32[$241>>2]|0;
      HEAP32[$vararg_buffer11>>2] = $379;
      $vararg_ptr14 = ((($vararg_buffer11)) + 4|0);
      HEAP32[$vararg_ptr14>>2] = $381;
      $vararg_ptr15 = ((($vararg_buffer11)) + 8|0);
      HEAP32[$vararg_ptr15>>2] = $279;
      $vararg_ptr16 = ((($vararg_buffer11)) + 12|0);
      HEAP32[$vararg_ptr16>>2] = $282;
      __Z7WelsLogP13TagLogContextiPKcz($0,2,23094,$vararg_buffer11);
      $382 = ((($$1250)) + 17|0);
      $383 = HEAP8[$382>>0]|0;
      $384 = ($383<<24>>24)==(0);
      if ($384) {
       HEAP8[$118>>0] = 1;
      }
      $385 = HEAP32[$115>>2]|0;
      $386 = $385 | 4;
      HEAP32[$115>>2] = $386;
      $387 = HEAP32[$116>>2]|0;
      $388 = ($387|0)==(0);
      if ($388) {
       label = 51;
       break L14;
      } else {
       $$6286$off0 = 0;
      }
     }
     if ($240) {
      $391 = (__ZN7WelsDec27WelsTargetSliceConstructionEPNS_21TagWelsDecoderContextE($0)|0);
      $392 = ($391|0)==(0);
      if (!($392)) {
       label = 55;
       break L14;
      }
     }
     if ($$6286$off0) {
      $400 = HEAP32[$111>>2]|0;
      $401 = ($400|0)==(2);
      if ($401) {
       $$7287$off0 = 1;
      } else {
       $402 = HEAP8[$117>>0]|0;
       $403 = ($402<<24>>24)==(0);
       if ($403) {
        $$7287$off0 = 0;
        break;
       }
       $404 = (__ZN7WelsDec24CheckRefPicturesCompleteEPNS_21TagWelsDecoderContextE($0)|0);
       $$7287$off0 = $404;
      }
     } else {
      $$7287$off0 = 0;
     }
    } else {
     $$7287$off0 = $$1281$off0;
    }
   } while(0);
   $405 = (($$1262) + 1)|0;
   $406 = ($$1262|0)<($8|0);
   if (!($406)) {
    $$1260 = $237;$$2268 = $262;$$3264 = $405;$$3273 = $233;$$3278 = $236;$$4253 = 0;$$9$off0 = $$7287$off0;
    break;
   }
   $407 = HEAP32[$4>>2]|0;
   $408 = (($407) + ($405<<2)|0);
   $409 = HEAP32[$408>>2]|0;
   $410 = ($409|0)==(0|0);
   if ($410) {
    $$1260 = $237;$$2268 = $262;$$3264 = $405;$$3273 = $233;$$3278 = $236;$$4253 = 0;$$9$off0 = $$7287$off0;
    break;
   }
   $411 = ((($409)) + 15|0);
   $412 = HEAP8[$411>>0]|0;
   $413 = ($235<<24>>24)==($412<<24>>24);
   if (!($413)) {
    $$1260 = $237;$$2268 = $262;$$3264 = $405;$$3273 = $233;$$3278 = $236;$$4253 = $409;$$9$off0 = $$7287$off0;
    break;
   }
   $414 = ((($409)) + 16|0);
   $415 = HEAP8[$414>>0]|0;
   $416 = ($232<<24>>24)==($415<<24>>24);
   if ($416) {
    $$0259 = $237;$$1250 = $409;$$1262 = $405;$$1267 = $262;$$1271 = $233;$$1276 = $236;$$1281$off0 = $$7287$off0;
   } else {
    $$1260 = $237;$$2268 = $262;$$3264 = $405;$$3273 = $233;$$3278 = $236;$$4253 = $409;$$9$off0 = $$7287$off0;
    break;
   }
  }
  $417 = HEAP32[$103>>2]|0;
  $418 = ((($417)) + 72|0);
  $419 = $$9$off0&1;
  HEAP8[$418>>0] = $419;
  $420 = HEAP32[$103>>2]|0;
  $421 = ((($420)) + 72|0);
  $422 = HEAP8[$421>>0]|0;
  $423 = ($422<<24>>24)==(0);
  if ($423) {
   $424 = HEAP32[$115>>2]|0;
   $425 = $424 | 32;
   HEAP32[$115>>2] = $425;
  }
  $426 = HEAP8[$226>>0]|0;
  $427 = ($426<<24>>24)==($18<<24>>24);
  if ($427) {
   $428 = HEAP8[$119>>0]|0;
   $429 = ($428<<24>>24)==(0);
   if ($429) {
    $430 = HEAP8[$120>>0]|0;
    $431 = ($430<<24>>24)==(0);
    if ($431) {
     $432 = (__ZN7WelsDec12NeedErrorConEPNS_21TagWelsDecoderContextE($0)|0);
     if ($432) {
      $433 = HEAP32[$116>>2]|0;
      $434 = ($433|0)==(0);
      if (!($434)) {
       __ZN7WelsDec17ImplementErrorConEPNS_21TagWelsDecoderContextE($0);
       $435 = HEAP32[$121>>2]|0;
       $436 = ((($435)) + 4|0);
       $437 = HEAP32[$436>>2]|0;
       $438 = ((($435)) + 8|0);
       $439 = HEAP32[$438>>2]|0;
       $440 = Math_imul($439, $437)|0;
       HEAP32[$105>>2] = $440;
       $441 = HEAP32[$435>>2]|0;
       $442 = HEAP32[$103>>2]|0;
       $443 = ((($442)) + 84|0);
       HEAP32[$443>>2] = $441;
       $444 = HEAP32[$122>>2]|0;
       $445 = ((($444)) + 4|0);
       $446 = HEAP32[$445>>2]|0;
       $447 = HEAP32[$103>>2]|0;
       $448 = ((($447)) + 88|0);
       HEAP32[$448>>2] = $446;
      }
     }
    }
   }
   $449 = (__ZN7WelsDecL23DecodeFrameConstructionEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2)|0);
   $450 = ($449|0)==(0);
   if (!($450)) {
    $$7$ph = $449;
    break;
   }
   $451 = HEAP32[$103>>2]|0;
   HEAP32[$123>>2] = $451;
   $452 = ($$2268<<24>>24)==(0);
   if (!($452)) {
    $453 = (__ZN7WelsDec13WelsMarkAsRefEPNS_21TagWelsDecoderContextE($0)|0);
    $454 = ($453|0)==(0);
    if (!($454)) {
     $455 = HEAP32[$116>>2]|0;
     $456 = ($455|0)==(0);
     if ($456) {
      label = 78;
      break;
     }
    }
    $457 = HEAP8[$120>>0]|0;
    $458 = ($457<<24>>24)==(0);
    if ($458) {
     $459 = HEAP32[$103>>2]|0;
     $460 = ((($459)) + 16|0);
     $461 = ((($459)) + 56|0);
     $462 = HEAP32[$461>>2]|0;
     $463 = ((($459)) + 60|0);
     $464 = HEAP32[$463>>2]|0;
     $465 = ((($459)) + 32|0);
     $466 = HEAP32[$124>>2]|0;
     _ExpandReferencingPicture($460,$462,$464,$465,$466,$125);
    }
   }
   HEAP32[$103>>2] = 0;
   $479 = 0;
  } else {
   $479 = $420;
  }
  $467 = HEAP32[$4>>2]|0;
  $468 = HEAP32[$5>>2]|0;
  $469 = (($467) + ($468<<2)|0);
  $470 = HEAP32[$469>>2]|0;
  $471 = ((($470)) + 1|0);
  $472 = HEAP8[$471>>0]|0;
  $473 = ($472<<24>>24)==(0);
  if (!($473)) {
   $474 = ((($$1260)) + 4|0);
   $475 = HEAP32[$474>>2]|0;
   HEAP32[$114>>2] = $475;
  }
  $476 = HEAP8[$126>>0]|0;
  $477 = ($476<<24>>24)==(0);
  if (!($477)) {
   HEAP32[$114>>2] = 0;
  }
  $478 = ($$3264|0)>($8|0);
  if ($478) {
   $$8 = 0;
   label = 88;
   break;
  } else {
   $$0249420 = $$4253;$$0261419 = $$3264;$$0266418 = $$2268;$$0270417 = $$3273;$$0275416 = $$3278;$$0280$off0415 = $$9$off0;$131 = $479;
  }
 }
 if ((label|0) == 14) {
  $138 = HEAP32[$121>>2]|0;
  $139 = ((($138)) + 296|0);
  $140 = HEAP32[$139>>2]|0;
  HEAP32[$vararg_buffer>>2] = $140;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,22785,$vararg_buffer);
  $141 = HEAP32[$115>>2]|0;
  $142 = $141 | 16384;
  HEAP32[$115>>2] = $142;
  $$7$ph = 1010;
 }
 else if ((label|0) == 20) {
  $$8 = 0;
  STACKTOP = sp;return ($$8|0);
 }
 else if ((label|0) == 24) {
  $276 = HEAP32[$115>>2]|0;
  $277 = $276 | 4;
  HEAP32[$115>>2] = $277;
  $278 = HEAP32[$255>>2]|0;
  HEAP32[$vararg_buffer1>>2] = $278;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,22859,$vararg_buffer1);
  $$7$ph = 328704;
 }
 else if ((label|0) == 37) {
  $363 = ((($0)) + 242324|0);
  HEAP8[$363>>0] = 1;
  $$7$ph = 1072;
 }
 else if ((label|0) == 45) {
  $377 = HEAP32[$105>>2]|0;
  $378 = ($377|0)==(0);
  if ($378) {
   HEAP32[$103>>2] = 0;
   $$7$ph = $$0$i;
  } else {
   $$7$ph = $$0$i;
  }
 }
 else if ((label|0) == 51) {
  $389 = HEAP32[$105>>2]|0;
  $390 = ($389|0)==(0);
  if ($390) {
   HEAP32[$103>>2] = 0;
   $$7$ph = $379;
  } else {
   $$7$ph = $379;
  }
 }
 else if ((label|0) == 55) {
  $393 = ((($$1250)) + 17|0);
  $394 = HEAP8[$393>>0]|0;
  $395 = ($394<<24>>24)==(0);
  if ($395) {
   HEAP8[$118>>0] = 1;
  }
  $396 = HEAP32[$115>>2]|0;
  $397 = $396 | 4;
  HEAP32[$115>>2] = $397;
  $398 = HEAP32[$103>>2]|0;
  $399 = ((($398)) + 72|0);
  HEAP8[$399>>0] = 0;
  $$7$ph = -1;
 }
 else if ((label|0) == 78) {
  HEAP32[$103>>2] = 0;
  $$7$ph = $453;
 }
 else if ((label|0) == 88) {
  STACKTOP = sp;return ($$8|0);
 }
 $$8 = $$7$ph;
 STACKTOP = sp;return ($$8|0);
}
function __ZN7WelsDec11PrefetchPicEPNS_10TagPicBuffE($0) {
 $0 = $0|0;
 var $$034 = 0, $$03444 = 0, $$03445 = 0, $$036 = 0, $$036$ph = 0, $$135$sink = 0, $$13540 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  $$036 = 0;
  return ($$036|0);
 }
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $$03444 = (($5) + 1)|0;
 $6 = ($$03444|0)<($2|0);
 L4: do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $$03445 = $$03444;
   while(1) {
    $10 = (($7) + ($$03445<<2)|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(0|0);
    if (!($12)) {
     $13 = ((($11)) + 71|0);
     $14 = HEAP8[$13>>0]|0;
     $15 = ($14<<24>>24)==(0);
     if (!($15)) {
      $16 = ((($11)) + 68|0);
      $17 = HEAP8[$16>>0]|0;
      $18 = ($17<<24>>24)==(0);
      if ($18) {
       $$036$ph = $11;$$135$sink = $$03445;
       break L4;
      }
     }
    }
    $$034 = (($$03445) + 1)|0;
    $19 = ($$034|0)<($2|0);
    if ($19) {
     $$03445 = $$034;
    } else {
     label = 4;
     break;
    }
   }
  } else {
   label = 4;
  }
 } while(0);
 L12: do {
  if ((label|0) == 4) {
   $8 = ($5|0)<(0);
   if ($8) {
    $$036$ph = 0;$$135$sink = 0;
   } else {
    $9 = HEAP32[$0>>2]|0;
    $$13540 = 0;
    while(1) {
     $20 = (($9) + ($$13540<<2)|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(0|0);
     if (!($22)) {
      $23 = ((($21)) + 71|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = ($24<<24>>24)==(0);
      if (!($25)) {
       $26 = ((($21)) + 68|0);
       $27 = HEAP8[$26>>0]|0;
       $28 = ($27<<24>>24)==(0);
       if ($28) {
        $$036$ph = $21;$$135$sink = $$13540;
        break L12;
       }
      }
     }
     $29 = (($$13540) + 1)|0;
     $30 = ($$13540|0)<($5|0);
     if ($30) {
      $$13540 = $29;
     } else {
      $$036$ph = 0;$$135$sink = $29;
      break;
     }
    }
   }
  }
 } while(0);
 HEAP32[$4>>2] = $$135$sink;
 $$036 = $$036$ph;
 return ($$036|0);
}
function __ZN7WelsDec25GetI4LumaIChromaAddrTableEPiii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP8[15610]|0;
 $4 = $3&255;
 $5 = $3&255;
 $6 = (($5) - ($4))|0;
 $7 = $6 & 7;
 $8 = $6 >>> 3;
 $9 = Math_imul($8, $1)|0;
 $10 = (($9) + ($7))|0;
 $11 = $10 << 2;
 HEAP32[$0>>2] = $11;
 $44 = 1;
 while(1) {
  $$phi$trans$insert = (15610 + ($44)|0);
  $$pre = HEAP8[$$phi$trans$insert>>0]|0;
  $45 = $$pre&255;
  $46 = (($45) - ($4))|0;
  $47 = $46 & 7;
  $48 = $46 >>> 3;
  $49 = Math_imul($48, $1)|0;
  $50 = (($49) + ($47))|0;
  $51 = $50 << 2;
  $52 = (($0) + ($44<<2)|0);
  HEAP32[$52>>2] = $51;
  $53 = (($44) + 1)|0;
  $exitcond = ($53|0)==(16);
  if ($exitcond) {
   break;
  } else {
   $44 = $53;
  }
 }
 $12 = ((($0)) + 80|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($0)) + 64|0);
 HEAP32[$13>>2] = 0;
 $14 = HEAP8[(15611)>>0]|0;
 $15 = $14&255;
 $16 = (($15) - ($4))|0;
 $17 = $16 & 7;
 $18 = $16 >>> 3;
 $19 = Math_imul($18, $2)|0;
 $20 = (($19) + ($17))|0;
 $21 = $20 << 2;
 $22 = ((($0)) + 84|0);
 HEAP32[$22>>2] = $21;
 $23 = ((($0)) + 68|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP8[(15612)>>0]|0;
 $25 = $24&255;
 $26 = (($25) - ($4))|0;
 $27 = $26 & 7;
 $28 = $26 >>> 3;
 $29 = Math_imul($28, $2)|0;
 $30 = (($29) + ($27))|0;
 $31 = $30 << 2;
 $32 = ((($0)) + 88|0);
 HEAP32[$32>>2] = $31;
 $33 = ((($0)) + 72|0);
 HEAP32[$33>>2] = $31;
 $34 = HEAP8[(15613)>>0]|0;
 $35 = $34&255;
 $36 = (($35) - ($4))|0;
 $37 = $36 & 7;
 $38 = $36 >>> 3;
 $39 = Math_imul($38, $2)|0;
 $40 = (($39) + ($37))|0;
 $41 = $40 << 2;
 $42 = ((($0)) + 92|0);
 HEAP32[$42>>2] = $41;
 $43 = ((($0)) + 76|0);
 HEAP32[$43>>2] = $41;
 return;
}
function __ZN7WelsDec14FmoParamUpdateEPNS_6TagFmoEPNS_6TagSpsEPNS_6TagPpsEPiPN10WelsCommon12CMemoryAlignE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = Math_imul($8, $6)|0;
 $10 = ((($2)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($0|0)==(0|0);
 if ($14) {
  $$0 = 1;
  return ($$0|0);
 }
 $15 = ((($0)) + 16|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)==(0);
 if (!($17)) {
  $18 = ((($0)) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)==($9|0);
  if ($20) {
   $21 = ((($0)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($22|0)==($11|0);
   if ($23) {
    $24 = ((($0)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($25|0)==($13|0);
    if ($26) {
     $$0 = 1;
     return ($$0|0);
    }
   }
  }
 }
 $27 = (__ZN7WelsDec7InitFmoEPNS_6TagFmoEPNS_6TagPpsEiiPN10WelsCommon12CMemoryAlignE($0,$2,$6,$8,$4)|0);
 $28 = ($27|0)==(0);
 if (!($28)) {
  $$0 = 0;
  return ($$0|0);
 }
 $29 = HEAP8[$15>>0]|0;
 $30 = ($29<<24>>24)==(0);
 if (!($30)) {
  $$0 = 1;
  return ($$0|0);
 }
 $31 = HEAP32[$3>>2]|0;
 $32 = ($31|0)<(256);
 if (!($32)) {
  $$0 = 1;
  return ($$0|0);
 }
 $33 = (($31) + 1)|0;
 HEAP32[$3>>2] = $33;
 HEAP8[$15>>0] = 1;
 $$0 = 1;
 return ($$0|0);
}
function __ZN7WelsDec15WelsInitRefListEPNS_21TagWelsDecoderContextEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$08897 = 0, $$091$lcssa = 0, $$1 = 0, $$18995 = 0, $$192$lcssa = 0, $$19294 = 0, $$off = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi103Z2D = 0, $$pre$phi104Z2D = 0, $$pre$phiZ2D = 0, $$pre1$i = 0, $$pre102$pre$phiZZ2D = 0, $$pre105 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i = 0, $switch = 0;
 var $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ((($0)) + 5468|0);
 $3 = ((($0)) + 5854|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = ((($0)) + 5856|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = (0 - ($8))|0;
 $10 = ($5|0)==($9|0);
 L1: do {
  if ($10) {
   $11 = ((($0)) + 100|0);
   $12 = HEAP32[$11>>2]|0;
   switch ($12|0) {
   case 4: case 2:  {
    $120 = $4;
    break L1;
    break;
   }
   default: {
   }
   }
   $13 = ((($0)) + 242340|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0);
   if ($15) {
    $120 = $4;
   } else {
    $16 = ((($0)) + 209440|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (__ZN7WelsDec11PrefetchPicEPNS_10TagPicBuffE($17)|0);
    $19 = ($18|0)==(0|0);
    if ($19) {
     __Z7WelsLogP13TagLogContextiPKcz($0,1,25959,$vararg_buffer);
     $117 = ((($0)) + 116|0);
     $118 = HEAP32[$117>>2]|0;
     $119 = $118 | 16384;
     HEAP32[$117>>2] = $119;
     $$1 = 1010;
     STACKTOP = sp;return ($$1|0);
    }
    $20 = ((($18)) + 72|0);
    HEAP8[$20>>0] = 0;
    $21 = ((($0)) + 241924|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($18)) + 84|0);
    HEAP32[$24>>2] = $23;
    $25 = ((($0)) + 241928|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ((($26)) + 4|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = ((($18)) + 88|0);
    HEAP32[$29>>2] = $28;
    $30 = ((($0)) + 116|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 32;
    HEAP32[$30>>2] = $32;
    $33 = HEAP32[$13>>2]|0;
    $$off = (($33) + -3)|0;
    $switch = ($$off>>>0)<(5);
    if ($switch) {
     $34 = ((($0)) + 316852|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = ($35|0)==(0|0);
     if ($36) {
      label = 8;
     } else {
      $37 = ((($18)) + 56|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = ((($35)) + 56|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if ($41) {
       $46 = ((($18)) + 60|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ((($35)) + 60|0);
       $49 = HEAP32[$48>>2]|0;
       $50 = ($47|0)==($49|0);
       $51 = ((($18)) + 16|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ((($18)) + 32|0);
       $54 = HEAP32[$53>>2]|0;
       if ($50) {
        $55 = ((($35)) + 16|0);
        $56 = HEAP32[$55>>2]|0;
        $57 = Math_imul($47, $54)|0;
        _memcpy(($52|0),($56|0),($57|0))|0;
        $58 = ((($18)) + 20|0);
        $59 = HEAP32[$58>>2]|0;
        $60 = HEAP32[$34>>2]|0;
        $61 = ((($60)) + 20|0);
        $62 = HEAP32[$61>>2]|0;
        $63 = ((($18)) + 36|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = HEAP32[$46>>2]|0;
        $66 = Math_imul($65, $64)|0;
        $67 = (($66|0) / 2)&-1;
        _memcpy(($59|0),($62|0),($67|0))|0;
        $68 = ((($18)) + 24|0);
        $69 = HEAP32[$68>>2]|0;
        $70 = HEAP32[$34>>2]|0;
        $71 = ((($70)) + 24|0);
        $72 = HEAP32[$71>>2]|0;
        $73 = ((($18)) + 40|0);
        $74 = HEAP32[$73>>2]|0;
        $75 = HEAP32[$46>>2]|0;
        $76 = Math_imul($75, $74)|0;
        $77 = (($76|0) / 2)&-1;
        _memcpy(($69|0),($72|0),($77|0))|0;
        $$pre$phi103Z2D = $37;$$pre$phi104Z2D = $46;$105 = $51;$106 = $53;
       } else {
        $$pre$phiZ2D = $46;$$pre102$pre$phiZZ2D = $37;$141 = $53;$142 = $51;$79 = $54;$80 = $47;$81 = $52;
        label = 11;
       }
      } else {
       label = 8;
      }
     }
    } else {
     label = 8;
    }
    if ((label|0) == 8) {
     $42 = ((($18)) + 16|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ((($18)) + 32|0);
     $45 = HEAP32[$44>>2]|0;
     $$phi$trans$insert = ((($18)) + 60|0);
     $$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $$pre105 = ((($18)) + 56|0);
     $$pre$phiZ2D = $$phi$trans$insert;$$pre102$pre$phiZZ2D = $$pre105;$141 = $44;$142 = $42;$79 = $45;$80 = $$pre;$81 = $43;
     label = 11;
    }
    if ((label|0) == 11) {
     $78 = Math_imul($80, $79)|0;
     _memset(($81|0),-128,($78|0))|0;
     $82 = ((($18)) + 20|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ((($18)) + 36|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = HEAP32[$$pre$phiZ2D>>2]|0;
     $87 = Math_imul($86, $85)|0;
     $88 = (($87|0) / 2)&-1;
     _memset(($83|0),-128,($88|0))|0;
     $89 = ((($18)) + 24|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($18)) + 40|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = HEAP32[$$pre$phiZ2D>>2]|0;
     $94 = Math_imul($93, $92)|0;
     $95 = (($94|0) / 2)&-1;
     _memset(($90|0),-128,($95|0))|0;
     $$pre$phi103Z2D = $$pre102$pre$phiZZ2D;$$pre$phi104Z2D = $$pre$phiZ2D;$105 = $142;$106 = $141;
    }
    $96 = ((($18)) + 76|0);
    HEAP32[$96>>2] = 0;
    $97 = ((($18)) + 64|0);
    HEAP32[$97>>2] = 0;
    $98 = ((($18)) + 75|0);
    HEAP8[$98>>0] = 0;
    $99 = ((($18)) + 73|0);
    HEAP8[$99>>0] = 0;
    $100 = HEAP32[$$pre$phi103Z2D>>2]|0;
    $101 = HEAP32[$$pre$phi104Z2D>>2]|0;
    $102 = ((($0)) + 317112|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ((($0)) + 317116|0);
    _ExpandReferencingPicture($105,$100,$101,$106,$103,$104);
    $107 = ((($18)) + 68|0);
    HEAP8[$107>>0] = 1;
    $108 = ((($18)) + 69|0);
    HEAP8[$108>>0] = 0;
    $109 = ((($18)) + 80|0);
    HEAP32[$109>>2] = -1;
    $110 = HEAP8[$3>>0]|0;
    $111 = ($110<<24>>24)==(0);
    if ($111) {
     $$pre1$i = ((($0)) + 5596|0);
     $$pre$phi$iZ2D = $$pre1$i;$116 = 1;
    } else {
     $112 = $110&255;
     $113 = $112 << 2;
     $114 = ((($0)) + 5596|0);
     $115 = ((($0)) + 5600|0);
     _memmove(($115|0),($114|0),($113|0))|0;
     $$pre$i = HEAP8[$3>>0]|0;
     $phitmp$i = (($$pre$i) + 1)<<24>>24;
     $$pre$phi$iZ2D = $114;$116 = $phitmp$i;
    }
    HEAP32[$$pre$phi$iZ2D>>2] = $18;
    HEAP8[$3>>0] = $116;
    $120 = $116;
   }
  } else {
   $120 = $4;
  }
 } while(0);
 dest=$2; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $121 = ($120<<24>>24)==(0);
 if ($121) {
  $$091$lcssa = 0;
 } else {
  $$08897 = 0;
  while(1) {
   $124 = (((($0)) + 5596|0) + ($$08897<<2)|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (($$08897) + 1)|0;
   $127 = (((($0)) + 5468|0) + ($$08897<<2)|0);
   HEAP32[$127>>2] = $125;
   $128 = HEAP8[$3>>0]|0;
   $129 = $128&255;
   $130 = ($126|0)<($129|0);
   if ($130) {
    $$08897 = $126;
   } else {
    $$091$lcssa = $126;
    break;
   }
  }
 }
 $122 = HEAP8[$6>>0]|0;
 $123 = ($122<<24>>24)==(0);
 if ($123) {
  $$192$lcssa = $$091$lcssa;
 } else {
  $$18995 = 0;$$19294 = $$091$lcssa;
  while(1) {
   $131 = (((($0)) + 5724|0) + ($$18995<<2)|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = (($$19294) + 1)|0;
   $134 = (((($0)) + 5468|0) + ($$19294<<2)|0);
   HEAP32[$134>>2] = $132;
   $135 = (($$18995) + 1)|0;
   $136 = HEAP8[$6>>0]|0;
   $137 = $136&255;
   $138 = ($135|0)<($137|0);
   if ($138) {
    $$18995 = $135;$$19294 = $133;
   } else {
    $$192$lcssa = $133;
    break;
   }
  }
 }
 $139 = $$192$lcssa&255;
 $140 = ((($0)) + 5852|0);
 HEAP8[$140>>0] = $139;
 $$1 = 0;
 STACKTOP = sp;return ($$1|0);
}
function __ZN7WelsDec18WelsReorderRefListEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0105135 = 0, $$0108131 = 0, $$0110130 = 0, $$1106 = 0, $$1106126 = 0, $$1106127 = 0, $$1111 = 0, $$1111$p = 0, $$2 = 0, $$2107 = 0, $$2107125 = 0, $$2112 = 0, $$3 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 241932|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4080|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 5852|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = ((($2)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 88|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = 1 << $13;
 $15 = ((($0)) + 100|0);
 $16 = HEAP32[$15>>2]|0;
 switch ($16|0) {
 case 4: case 2:  {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 default: {
 }
 }
 $17 = ($6<<24>>24)==(0);
 if ($17) {
  $18 = ((($0)) + 116|0);
  HEAP32[$18>>2] = 16;
  $$2 = 1072;
  STACKTOP = sp;return ($$2|0);
 }
 $19 = ((($4)) + 256|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)==(0);
 if ($21) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $22 = ((($4)) + 6|0);
 $23 = HEAP16[$22>>1]|0;
 $24 = ($23<<16>>16)==(3);
 if ($24) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $25 = (($14) + -1)|0;
 $$1106126 = (($7) + -1)|0;
 $26 = ((($2)) + 16|0);
 $27 = ((($2)) + 96|0);
 $$0105135 = 0;$$0108131 = 0;$$0110130 = $9;$28 = $23;
 L14: while(1) {
  $29 = ($28&65535)<(2);
  L16: do {
   if ($29) {
    $30 = (($4) + ($$0108131<<3)|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (($31) + 1)|0;
    $33 = ($28<<16>>16)==(0);
    $34 = $31 ^ -1;
    $$1111$p = $33 ? $34 : $32;
    $$1111 = (($$1111$p) + ($$0110130))|0;
    $35 = $$1111 & $25;
    $36 = ($7|0)>($$0108131|0);
    if ($36) {
     $$1106127 = $$1106126;
     while(1) {
      $37 = (((($0)) + 5468|0) + ($$1106127<<2)|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = ((($38)) + 76|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($40|0)==($35|0);
      if ($41) {
       $42 = ((($38)) + 69|0);
       $43 = HEAP8[$42>>0]|0;
       $44 = ($43<<24>>24)==(0);
       if ($44) {
        break;
       }
      }
      $$1106 = (($$1106127) + -1)|0;
      $45 = ($$1106127|0)>($$0108131|0);
      if ($45) {
       $$1106127 = $$1106;
      } else {
       $$2112 = $35;$$3 = $$1106;
       break L16;
      }
     }
     $46 = HEAP8[$26>>0]|0;
     $47 = ((($38)) + 75|0);
     $48 = HEAP8[$47>>0]|0;
     $49 = ($46<<24>>24)==($48<<24>>24);
     if ($49) {
      $50 = HEAP32[$27>>2]|0;
      $51 = ((($38)) + 84|0);
      $52 = HEAP32[$51>>2]|0;
      $53 = ($50|0)==($52|0);
      if ($53) {
       $$2112 = $35;$$3 = $$1106127;
      } else {
       label = 14;
       break L14;
      }
     } else {
      $$2112 = $35;$$3 = $$1106127;
     }
    } else {
     $$2112 = $35;$$3 = $$1106126;
    }
   } else {
    $55 = ($28<<16>>16)==(2);
    if ($55) {
     $56 = ($7|0)>($$0108131|0);
     if ($56) {
      $57 = (((($4) + ($$0108131<<3)|0)) + 4|0);
      $$2107125 = $$1106126;
      while(1) {
       $58 = (((($0)) + 5468|0) + ($$2107125<<2)|0);
       $59 = HEAP32[$58>>2]|0;
       $60 = ((($59)) + 69|0);
       $61 = HEAP8[$60>>0]|0;
       $62 = ($61<<24>>24)==(0);
       if (!($62)) {
        $64 = ((($59)) + 80|0);
        $65 = HEAP32[$64>>2]|0;
        $66 = HEAP16[$57>>1]|0;
        $67 = $66&65535;
        $68 = ($65|0)==($67|0);
        if ($68) {
         break;
        }
       }
       $$2107 = (($$2107125) + -1)|0;
       $63 = ($$2107125|0)>($$0108131|0);
       if ($63) {
        $$2107125 = $$2107;
       } else {
        $$2112 = $$0110130;$$3 = $$2107;
        break L16;
       }
      }
      $69 = HEAP8[$26>>0]|0;
      $70 = ((($59)) + 75|0);
      $71 = HEAP8[$70>>0]|0;
      $72 = ($69<<24>>24)==($71<<24>>24);
      if ($72) {
       $73 = HEAP32[$27>>2]|0;
       $74 = ((($59)) + 84|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = ($73|0)==($75|0);
       if ($76) {
        $$2112 = $$0110130;$$3 = $$2107125;
       } else {
        label = 23;
        break L14;
       }
      } else {
       $$2112 = $$0110130;$$3 = $$2107125;
      }
     } else {
      $$2112 = $$0110130;$$3 = $$1106126;
     }
    } else {
     $$2112 = $$0110130;$$3 = $$0105135;
    }
   }
  } while(0);
  $78 = ($$3|0)<($$0108131|0);
  $79 = (($$0108131) + 1)|0;
  $80 = (((($0)) + 5468|0) + ($$0108131<<2)|0);
  if ($78) {
   $$2 = 1072;
   label = 26;
   break;
  }
  $81 = (($$3) - ($$0108131))|0;
  $82 = $81 << 2;
  $83 = (((($0)) + 5468|0) + ($79<<2)|0);
  $84 = (((($0)) + 5468|0) + ($$3<<2)|0);
  $85 = HEAP32[$84>>2]|0;
  _memmove(($83|0),($80|0),($82|0))|0;
  HEAP32[$80>>2] = $85;
  $86 = (((($4) + ($79<<3)|0)) + 6|0);
  $87 = HEAP16[$86>>1]|0;
  $88 = ($87<<16>>16)==(3);
  if ($88) {
   $$2 = 0;
   label = 26;
   break;
  } else {
   $$0105135 = $$3;$$0108131 = $79;$$0110130 = $$2112;$28 = $87;
  }
 }
 if ((label|0) == 14) {
  HEAP32[$vararg_buffer>>2] = $50;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $52;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,25896,$vararg_buffer);
  $54 = ((($0)) + 116|0);
  HEAP32[$54>>2] = 16;
  $$2 = 1072;
  STACKTOP = sp;return ($$2|0);
 }
 else if ((label|0) == 23) {
  HEAP32[$vararg_buffer2>>2] = $73;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $75;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,25896,$vararg_buffer2);
  $77 = ((($0)) + 116|0);
  HEAP32[$77>>2] = 16;
  $$2 = 1072;
  STACKTOP = sp;return ($$2|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function __ZN7WelsDec15WelsDecodeSliceEPNS_21TagWelsDecoderContextEbPNS_10TagNalUnitE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0115122 = 0, $$0119 = 0, $$1 = 0, $$1116 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_ZN7WelsDec23WelsDecodeMbCabacPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj$_ZN7WelsDec23WelsDecodeMbCabacISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj = 0, $_ZN7WelsDec23WelsDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj$_ZN7WelsDec23WelsDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj = 0, $_ZN7WelsDec29WelsMapNxNNeighToSampleNormalEPNS_16TagNeighborAvailEPi$sink = 0, $_ZN7WelsDec31WelsFillCacheConstrain0IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE$sink = 0, $_ZN7WelsDec31WelsMap16x16NeighToSampleNormalEPNS_16TagNeighborAvailEPh$sink = 0, $or$cond = 0, $or$cond121 = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 4|0;
 $4 = ((($0)) + 241932|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 5240|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($5)) + 88|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$3>>2] = 0;
 $12 = ((($5)) + 3876|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($0)) + 241928|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 176|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)==(0);
 do {
  if ($17) {
   $33 = ((($5)) + 2756|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($34|0)==(0);
   $_ZN7WelsDec23WelsDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj$_ZN7WelsDec23WelsDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj = $35 ? 11 : 10;
   $$0119 = $_ZN7WelsDec23WelsDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj$_ZN7WelsDec23WelsDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj;$$pre$phiZ2D = $33;
  } else {
   $18 = ((($5)) + 3858|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $21 = ((($5)) + 3856|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = ($22<<24>>24)==(0);
    if ($23) {
     $24 = ((($5)) + 3860|0);
     $25 = HEAP8[$24>>0]|0;
     $26 = ($25<<24>>24)==(0);
     if ($26) {
      $30 = ((($5)) + 2756|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = ($31|0)==(0);
      $_ZN7WelsDec23WelsDecodeMbCabacPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj$_ZN7WelsDec23WelsDecodeMbCabacISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj = $32 ? 9 : 8;
      $$0119 = $_ZN7WelsDec23WelsDecodeMbCabacPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj$_ZN7WelsDec23WelsDecodeMbCabacISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj;$$pre$phiZ2D = $30;
      break;
     }
    }
   }
   __Z7WelsLogP13TagLogContextiPKcz($0,1,24706,$vararg_buffer);
   $27 = ((($0)) + 116|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = $28 | 4;
   HEAP32[$27>>2] = $29;
   $$1 = 4;
   STACKTOP = sp;return ($$1|0);
  }
 } while(0);
 $36 = ((($5)) + 92|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($37)) + 180|0);
 $39 = HEAP8[$38>>0]|0;
 $40 = ($39<<24>>24)==(0);
 $41 = ((($0)) + 317148|0);
 $_ZN7WelsDec31WelsFillCacheConstrain0IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE$sink = $40 ? 8 : 7;
 $_ZN7WelsDec29WelsMapNxNNeighToSampleNormalEPNS_16TagNeighborAvailEPi$sink = $40 ? 2 : 1;
 $_ZN7WelsDec31WelsMap16x16NeighToSampleNormalEPNS_16TagNeighborAvailEPh$sink = $40 ? 4 : 3;
 HEAP32[$41>>2] = $_ZN7WelsDec31WelsFillCacheConstrain0IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE$sink;
 $42 = ((($0)) + 317152|0);
 HEAP32[$42>>2] = $_ZN7WelsDec29WelsMapNxNNeighToSampleNormalEPNS_16TagNeighborAvailEPi$sink;
 $43 = ((($0)) + 317156|0);
 HEAP32[$43>>2] = $_ZN7WelsDec31WelsMap16x16NeighToSampleNormalEPNS_16TagNeighborAvailEPh$sink;
 $44 = HEAP32[$$pre$phiZ2D>>2]|0;
 $45 = ((($0)) + 100|0);
 HEAP32[$45>>2] = $44;
 $46 = ((($5)) + 3896|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ((($47)) + 176|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = ($49<<24>>24)==(0);
 if (!($50)) {
  $51 = ((($5)) + 64|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($5)) + 1152|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = ((($5)) + 3881|0);
  $56 = HEAP8[$55>>0]|0;
  __ZN7WelsDec20WelsCabacContextInitEPNS_21TagWelsDecoderContextEhii($0,$56,$54,$52);
  $57 = ((($5)) + 3884|0);
  HEAP32[$57>>2] = 0;
  $58 = ((($0)) + 512232|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = HEAP32[$4>>2]|0;
  $61 = ((($60)) + 3900|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (__ZN7WelsDec24InitCabacDecEngineFromBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($59,$62)|0);
  $64 = ($63|0)==(0);
  if (!($64)) {
   $$1 = $63;
   STACKTOP = sp;return ($$1|0);
  }
 }
 (__ZN7WelsDec27WelsCalcDeqCoeffScalingListEPNS_21TagWelsDecoderContextE($0)|0);
 $65 = ((($5)) + 24|0);
 $66 = HEAP32[$65>>2]|0;
 $67 = ((($5)) + 4044|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = (($66|0) % ($68|0))&-1;
 $70 = (($66|0) / ($68|0))&-1;
 $71 = ((($5)) + 3872|0);
 HEAP32[$71>>2] = -1;
 $72 = $66 << 7;
 $73 = ((($5)) + 4111|0);
 $74 = HEAP8[$73>>0]|0;
 $75 = $74&255;
 $76 = (($75) + ($72))|0;
 $77 = ((($5)) + 4032|0);
 HEAP32[$77>>2] = $69;
 $78 = ((($5)) + 4036|0);
 $79 = ((($5)) + 3912|0);
 HEAP32[$78>>2] = $70;
 $80 = ((($5)) + 4040|0);
 HEAP32[$80>>2] = $66;
 $81 = ($66|0)!=(-1);
 $82 = ($66|0)<($11|0);
 $or$cond121 = $81 & $82;
 if (!($or$cond121)) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $83 = ((($0)) + 512344|0);
 $84 = ((($5)) + 3984|0);
 $$0115122 = $66;
 while(1) {
  $85 = HEAP32[$79>>2]|0;
  $86 = (($85) + ($$0115122<<2)|0);
  HEAP32[$86>>2] = $76;
  HEAP8[$83>>0] = 0;
  $87 = (FUNCTION_TABLE_iiii[$$0119 & 15]($0,$2,$3)|0);
  $88 = HEAP8[$83>>0]|0;
  $89 = HEAP32[$84>>2]|0;
  $90 = (($89) + ($$0115122)|0);
  HEAP8[$90>>0] = $88;
  $91 = ($87|0)==(0);
  if (!($91)) {
   $$1 = $87;
   label = 18;
   break;
  }
  $92 = HEAP32[$12>>2]|0;
  $93 = (($92) + 1)|0;
  HEAP32[$12>>2] = $93;
  $94 = HEAP32[$3>>2]|0;
  $95 = ($94|0)==(0);
  if (!($95)) {
   $$1 = 0;
   label = 18;
   break;
  }
  $96 = HEAP32[$36>>2]|0;
  $97 = ((($96)) + 8|0);
  $98 = HEAP32[$97>>2]|0;
  $99 = ($98>>>0)>(1);
  if ($99) {
   $100 = $$0115122&65535;
   $101 = (__ZN7WelsDec9FmoNextMbEPNS_6TagFmoEs($7,$100)|0);
   $102 = $101 << 16 >> 16;
   $$1116 = $102;
  } else {
   $103 = (($$0115122) + 1)|0;
   $$1116 = $103;
  }
  $104 = HEAP32[$67>>2]|0;
  $105 = (($$1116|0) % ($104|0))&-1;
  $106 = (($$1116|0) / ($104|0))&-1;
  HEAP32[$77>>2] = $105;
  HEAP32[$78>>2] = $106;
  HEAP32[$80>>2] = $$1116;
  $107 = ($$1116|0)!=(-1);
  $108 = ($$1116|0)<($11|0);
  $or$cond = $107 & $108;
  if ($or$cond) {
   $$0115122 = $$1116;
  } else {
   $$1 = 0;
   label = 18;
   break;
  }
 }
 if ((label|0) == 18) {
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function __ZN7WelsDec27WelsTargetSliceConstructionEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0 = 0, $$09699 = 0, $$097$ph = 0, $$09798 = 0, $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre103 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer3 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 241932|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 88|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($2)) + 4044|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 << 4;
 $10 = ((($2)) + 4048|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 << 4;
 $13 = ((($0)) + 5240|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($2)) + 3876|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 241949|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = ($18<<24>>24)==(0);
 if ($19) {
  $20 = ((($0)) + 317140|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($9|0)==($21|0);
  if (!($22)) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $23 = ((($2)) + 24|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($24|0) % ($8|0))&-1;
 $26 = ((($2)) + 4032|0);
 HEAP32[$26>>2] = $25;
 $27 = (($24|0) / ($8|0))&-1;
 $28 = ((($2)) + 4036|0);
 HEAP32[$28>>2] = $27;
 $29 = ((($2)) + 4040|0);
 HEAP32[$29>>2] = $24;
 $30 = ($24|0)==(0);
 if ($30) {
  $31 = ((($0)) + 241924|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($2)) + 4100|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($35)) + 84|0);
  HEAP32[$36>>2] = $33;
  $37 = ((($0)) + 241928|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($38)) + 4|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = HEAP32[$34>>2]|0;
  $42 = ((($41)) + 88|0);
  HEAP32[$42>>2] = $40;
  $43 = ((($2)) + 16|0);
  $44 = HEAP8[$43>>0]|0;
  $45 = HEAP32[$34>>2]|0;
  $46 = ((($45)) + 75|0);
  HEAP8[$46>>0] = $44;
  $$097$ph = 0;
 } else {
  $$097$ph = $24;
 }
 $47 = ($16|0)>(0);
 L8: do {
  if ($47) {
   $48 = ((($0)) + 242344|0);
   $49 = ((($2)) + 3980|0);
   $50 = ((($2)) + 3984|0);
   $51 = ((($0)) + 5464|0);
   $52 = ((($0)) + 242320|0);
   $53 = ((($2)) + 92|0);
   $$09699 = 0;$$09798 = $$097$ph;
   while(1) {
    $54 = HEAP8[$48>>0]|0;
    $55 = ($54<<24>>24)==(0);
    if ($55) {
     $56 = (__ZN7WelsDec24WelsTargetMbConstructionEPNS_21TagWelsDecoderContextE($0)|0);
     $57 = ($56|0)==(0);
     if (!($57)) {
      label = 10;
      break;
     }
    }
    $63 = (($$09699) + 1)|0;
    $64 = HEAP32[$49>>2]|0;
    $65 = (($64) + ($$09798)|0);
    $66 = HEAP8[$65>>0]|0;
    $67 = ($66<<24>>24)==(0);
    if ($67) {
     HEAP8[$65>>0] = 1;
     $68 = HEAP32[$50>>2]|0;
     $69 = (($68) + ($$09798)|0);
     $70 = HEAP8[$69>>0]|0;
     $71 = $70&255;
     $72 = HEAP32[$51>>2]|0;
     $73 = ((($72)) + 112|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = (($74) + ($71))|0;
     HEAP32[$73>>2] = $75;
     $76 = HEAP32[$52>>2]|0;
     $77 = (($76) + 1)|0;
     HEAP32[$52>>2] = $77;
     $78 = $77;
    } else {
     $$pre = HEAP32[$52>>2]|0;
     $78 = $$pre;
    }
    $79 = ($78|0)>($6|0);
    if ($79) {
     label = 15;
     break;
    }
    $80 = HEAP32[$53>>2]|0;
    $81 = ((($80)) + 8|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82>>>0)>(1);
    if ($83) {
     $84 = $$09798&65535;
     $85 = (__ZN7WelsDec9FmoNextMbEPNS_6TagFmoEs($14,$84)|0);
     $86 = $85 << 16 >> 16;
     $$1 = $86;
    } else {
     $87 = (($$09798) + 1)|0;
     $$1 = $87;
    }
    $88 = ($$1|0)!=(-1);
    $89 = ($$1|0)<($6|0);
    $or$cond = $88 & $89;
    if (!($or$cond)) {
     $$pre$phiZ2D = $51;
     break L8;
    }
    $90 = HEAP32[$7>>2]|0;
    $91 = (($$1|0) % ($90|0))&-1;
    HEAP32[$26>>2] = $91;
    $92 = (($$1|0) / ($90|0))&-1;
    HEAP32[$28>>2] = $92;
    HEAP32[$29>>2] = $$1;
    $93 = ($63|0)<($16|0);
    if ($93) {
     $$09699 = $63;$$09798 = $$1;
    } else {
     $$pre$phiZ2D = $51;
     break L8;
    }
   }
   if ((label|0) == 10) {
    $58 = HEAP32[$26>>2]|0;
    $59 = HEAP32[$28>>2]|0;
    $60 = ((($2)) + 3881|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61&255;
    HEAP32[$vararg_buffer>>2] = $58;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $59;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $62;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,23990,$vararg_buffer);
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   else if ((label|0) == 15) {
    HEAP32[$vararg_buffer3>>2] = $78;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $6;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,24071,$vararg_buffer3);
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $$pre103 = ((($0)) + 5464|0);
   $$pre$phiZ2D = $$pre103;
  }
 } while(0);
 $94 = HEAP32[$$pre$phiZ2D>>2]|0;
 $95 = ((($94)) + 56|0);
 HEAP32[$95>>2] = $9;
 $96 = HEAP32[$$pre$phiZ2D>>2]|0;
 $97 = ((($96)) + 60|0);
 HEAP32[$97>>2] = $12;
 $98 = ((($2)) + 3881|0);
 $99 = HEAP8[$98>>0]|0;
 switch ($99<<24>>24) {
 case 0: case 2:  {
  break;
 }
 default: {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 }
 $100 = ((($0)) + 242344|0);
 $101 = HEAP8[$100>>0]|0;
 $102 = ($101<<24>>24)==(0);
 if (!($102)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $103 = ((($2)) + 72|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ($104|0)==(1);
 if ($105) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $106 = HEAP32[$1>>2]|0;
 $107 = ((($106)) + 3876|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = ($108|0)<(1);
 if ($109) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 __ZN7WelsDec25WelsDeblockingFilterSliceEPNS_21TagWelsDecoderContextEPFvPNS_10TagDqLayerEPNS_19tagDeblockingFilterEiE($0,2);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec24CheckRefPicturesCompleteEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$047$off0$lcssa = 0, $$054$be = 0, $$05455 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241932|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 3876|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = ((($2)) + 3908|0);
 $7 = ((($2)) + 3932|0);
 $8 = ($4|0)>(0);
 if (!($8)) {
  $$047$off0$lcssa = 1;
  return ($$047$off0$lcssa|0);
 }
 $9 = HEAP32[$5>>2]|0;
 $10 = HEAP32[$6>>2]|0;
 $$05455 = 0;
 L4: while(1) {
  $11 = (($9) + ($$05455))|0;
  $12 = (($10) + ($11<<1)|0);
  $13 = HEAP16[$12>>1]|0;
  $14 = $13 << 16 >> 16;
  switch ($14|0) {
  case 8: case 256:  {
   $83 = HEAP32[$7>>2]|0;
   $84 = (($83) + ($11<<4)|0);
   $85 = HEAP8[$84>>0]|0;
   $86 = $85 << 24 >> 24;
   $87 = (((($0)) + 5468|0) + ($86<<2)|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = ((($88)) + 72|0);
   $90 = HEAP8[$89>>0]|0;
   $91 = ($90<<24>>24)==(0);
   if ($91) {
    $$047$off0$lcssa = 0;
    label = 3;
    break L4;
   }
   break;
  }
  case 16:  {
   $16 = HEAP32[$7>>2]|0;
   $17 = (($16) + ($11<<4)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18 << 24 >> 24;
   $20 = (((($0)) + 5468|0) + ($19<<2)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($21)) + 72|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = (((($16) + ($11<<4)|0)) + 8|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = $25 << 24 >> 24;
   $27 = (((($0)) + 5468|0) + ($26<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ((($28)) + 72|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = $30 & $23;
   $32 = ($31<<24>>24)==(0);
   if ($32) {
    $$047$off0$lcssa = 0;
    label = 3;
    break L4;
   }
   break;
  }
  case 32:  {
   $33 = HEAP32[$7>>2]|0;
   $34 = (($33) + ($11<<4)|0);
   $35 = HEAP8[$34>>0]|0;
   $36 = $35 << 24 >> 24;
   $37 = (((($0)) + 5468|0) + ($36<<2)|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ((($38)) + 72|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = (((($33) + ($11<<4)|0)) + 2|0);
   $42 = HEAP8[$41>>0]|0;
   $43 = $42 << 24 >> 24;
   $44 = (((($0)) + 5468|0) + ($43<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 72|0);
   $47 = HEAP8[$46>>0]|0;
   $48 = $47 & $40;
   $49 = ($48<<24>>24)==(0);
   if ($49) {
    $$047$off0$lcssa = 0;
    label = 3;
    break L4;
   }
   break;
  }
  case 128: case 64:  {
   $50 = HEAP32[$7>>2]|0;
   $51 = (($50) + ($11<<4)|0);
   $52 = HEAP8[$51>>0]|0;
   $53 = $52 << 24 >> 24;
   $54 = (((($0)) + 5468|0) + ($53<<2)|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($55)) + 72|0);
   $57 = HEAP8[$56>>0]|0;
   $58 = (((($50) + ($11<<4)|0)) + 2|0);
   $59 = HEAP8[$58>>0]|0;
   $60 = $59 << 24 >> 24;
   $61 = (((($0)) + 5468|0) + ($60<<2)|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($62)) + 72|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = $64 & $57;
   $66 = (((($50) + ($11<<4)|0)) + 8|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = $67 << 24 >> 24;
   $69 = (((($0)) + 5468|0) + ($68<<2)|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($70)) + 72|0);
   $72 = HEAP8[$71>>0]|0;
   $73 = $65 & $72;
   $74 = (((($50) + ($11<<4)|0)) + 10|0);
   $75 = HEAP8[$74>>0]|0;
   $76 = $75 << 24 >> 24;
   $77 = (((($0)) + 5468|0) + ($76<<2)|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = ((($78)) + 72|0);
   $80 = HEAP8[$79>>0]|0;
   $81 = $73 & $80;
   $82 = ($81<<24>>24)==(0);
   if ($82) {
    $$047$off0$lcssa = 0;
    label = 3;
    break L4;
   }
   break;
  }
  default: {
  }
  }
  $$054$be = (($$05455) + 1)|0;
  $15 = ($$054$be|0)<($4|0);
  if ($15) {
   $$05455 = $$054$be;
  } else {
   $$047$off0$lcssa = 1;
   label = 3;
   break;
  }
 }
 if ((label|0) == 3) {
  return ($$047$off0$lcssa|0);
 }
 return (0)|0;
}
function __ZN7WelsDec12NeedErrorConEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$010$off0 = 0, $$011 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241924|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = Math_imul($6, $4)|0;
 $8 = ($7|0)>(0);
 if (!($8)) {
  $$010$off0 = 0;
  return ($$010$off0|0);
 }
 $9 = ((($0)) + 241932|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 3980|0);
 $12 = HEAP32[$11>>2]|0;
 $$011 = 0;
 while(1) {
  $15 = (($12) + ($$011)|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)==(0);
  $13 = (($$011) + 1)|0;
  if ($17) {
   $$010$off0 = 1;
   label = 5;
   break;
  }
  $14 = ($13|0)<($7|0);
  if ($14) {
   $$011 = $13;
  } else {
   $$010$off0 = 0;
   label = 5;
   break;
  }
 }
 if ((label|0) == 5) {
  return ($$010$off0|0);
 }
 return (0)|0;
}
function __ZN7WelsDec17ImplementErrorConEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 242340|0);
 $2 = HEAP32[$1>>2]|0;
 L1: do {
  switch ($2|0) {
  case 0:  {
   $3 = ((($0)) + 116|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = $4 | 4;
   HEAP32[$3>>2] = $5;
   return;
   break;
  }
  case 3: case 1:  {
   $6 = ((($0)) + 5464|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 316852|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ((($0)) + 241924|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ((($11)) + 8|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = $13 << 4;
   $15 = ((($7)) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($7)) + 36|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($11)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = Math_imul($20, $13)|0;
   $22 = ((($7)) + 108|0);
   HEAP32[$22>>2] = $21;
   $23 = HEAP32[$1>>2]|0;
   $24 = ($23|0)==(1);
   if ($24) {
    $25 = ((($0)) + 241932|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ((($26)) + 12|0);
    $28 = HEAP8[$27>>0]|0;
    $29 = ($28<<24>>24)==(0);
    if ($29) {
     label = 6;
    } else {
     $30 = ((($7)) + 16|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = Math_imul($14, $16)|0;
     $37 = $31;$38 = $32;
    }
   } else {
    label = 6;
   }
   if ((label|0) == 6) {
    $33 = ($9|0)==(0|0);
    $34 = ((($7)) + 16|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = Math_imul($14, $16)|0;
    if ($33) {
     $37 = $35;$38 = $36;
    } else {
     $46 = ((($9)) + 16|0);
     $47 = HEAP32[$46>>2]|0;
     _memcpy(($35|0),($47|0),($36|0))|0;
     $48 = ((($7)) + 20|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ((($9)) + 20|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = $13 << 3;
     $53 = $52 & 2147483640;
     $54 = Math_imul($53, $18)|0;
     _memcpy(($49|0),($51|0),($54|0))|0;
     $55 = ((($7)) + 24|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ((($9)) + 24|0);
     $58 = HEAP32[$57>>2]|0;
     _memcpy(($56|0),($58|0),($54|0))|0;
     break L1;
    }
   }
   _memset(($37|0),-128,($38|0))|0;
   $39 = ((($7)) + 20|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = $13 << 3;
   $42 = $41 & 2147483640;
   $43 = Math_imul($42, $18)|0;
   _memset(($40|0),-128,($43|0))|0;
   $44 = ((($7)) + 24|0);
   $45 = HEAP32[$44>>2]|0;
   _memset(($45|0),-128,($43|0))|0;
   break;
  }
  case 5: case 4: case 2:  {
   __ZN7WelsDec19DoErrorConSliceCopyEPNS_21TagWelsDecoderContextE($0);
   break;
  }
  case 7: case 6:  {
   __ZN7WelsDec24GetAvilInfoFromCorrectMbEPNS_21TagWelsDecoderContextE($0);
   __ZN7WelsDec21DoErrorConSliceMVCopyEPNS_21TagWelsDecoderContextE($0);
   break;
  }
  default: {
  }
  }
 } while(0);
 $59 = ((($0)) + 116|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = $60 | 32;
 HEAP32[$59>>2] = $61;
 $62 = ((($0)) + 5464|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ((($63)) + 72|0);
 HEAP8[$64>>0] = 0;
 return;
}
function __ZN7WelsDecL23DecodeFrameConstructionEPNS_21TagWelsDecoderContextEPPhP13TagBufferInfo($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0226$off0 = 0, $$0227$lcssa = 0, $$0227235 = 0, $$0228233 = 0, $$0229$ph = 0, $$0229232 = 0, $$0230234 = 0, $$pr = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 241932|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 5464|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 4044|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 << 4;
 $10 = ((($4)) + 4048|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 << 4;
 $13 = Math_imul($11, $8)|0;
 $14 = ((($6)) + 104|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ($15<<24>>24)==(0);
 if (!($16)) {
  $17 = ((($0)) + 6176|0);
  $18 = ((($4)) + 88|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 300|0);
  ;HEAP32[$17>>2]=HEAP32[$20>>2]|0;HEAP32[$17+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$20+8>>2]|0;HEAP32[$17+12>>2]=HEAP32[$20+12>>2]|0;
  $21 = ((($0)) + 242324|0);
  HEAP8[$21>>0] = 0;
  $22 = ((($0)) + 242320|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ($23|0)==($13|0);
  if ($24) {
   $25 = ((($0)) + 317169|0);
   HEAP8[$25>>0] = 1;
   $26 = HEAP32[$17>>2]|0;
   $27 = ((($0)) + 6184|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ((($0)) + 6180|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($0)) + 6188|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ((($0)) + 317172|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP32[$vararg_buffer>>2] = $9;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $12;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $26;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $28;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $30;
   $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
   HEAP32[$vararg_ptr5>>2] = $32;
   $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
   HEAP32[$vararg_ptr6>>2] = $34;
   __Z7WelsLogP13TagLogContextiPKcz($0,4,23581,$vararg_buffer);
   HEAP32[$33>>2] = 0;
  }
 }
 $35 = ((($0)) + 242344|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = ($36<<24>>24)==(0);
 if (!($37)) {
  $38 = ((($0)) + 241888|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($0)) + 116|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ($41|0)==(0);
  $43 = ((($0)) + 316848|0);
  $44 = HEAP32[$43>>2]|0;
  if (!($42)) {
   $166 = ((($44)) + 536|0);
   $167 = $166;
   $168 = $167;
   HEAP32[$168>>2] = 0;
   $169 = (($167) + 4)|0;
   $170 = $169;
   HEAP32[$170>>2] = 0;
   $171 = HEAP32[$43>>2]|0;
   HEAP32[$171>>2] = 0;
   $172 = HEAP32[$43>>2]|0;
   $173 = ((($172)) + 520|0);
   HEAP32[$173>>2] = 0;
   $174 = HEAP32[$43>>2]|0;
   $175 = ((($174)) + 524|0);
   HEAP32[$175>>2] = 0;
   $165 = -1;
   STACKTOP = sp;return ($165|0);
  }
  $45 = HEAP32[$44>>2]|0;
  $46 = ($45|0)>(0);
  if ($46) {
   $$0227235 = 0;$$0230234 = 0;
   while(1) {
    $47 = (($$0230234) + 1)|0;
    $48 = (((($44)) + 4|0) + ($$0230234<<2)|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = (($49) + ($$0227235))|0;
    $51 = ($47|0)<($45|0);
    if ($51) {
     $$0227235 = $50;$$0230234 = $47;
    } else {
     $$0227$lcssa = $50;
     break;
    }
   }
  } else {
   $$0227$lcssa = 0;
  }
  $52 = ((($44)) + 516|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (($53) + ($$0227$lcssa)|0);
  $55 = ((($39)) + 16|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($39)) + 20|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = HEAP32[$39>>2]|0;
  $60 = (($59) + ($56<<2)|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ($61|0)==(0|0);
  if ($62) {
   $73 = 0;$76 = 0;
  } else {
   $63 = ((($61)) + 3912|0);
   $64 = $63;
   $65 = $64;
   $66 = HEAP32[$65>>2]|0;
   $67 = (($64) + 4)|0;
   $68 = $67;
   $69 = HEAP32[$68>>2]|0;
   $73 = $66;$76 = $69;
  }
  $70 = ((($44)) + 536|0);
  $71 = $70;
  $72 = $71;
  HEAP32[$72>>2] = $73;
  $74 = (($71) + 4)|0;
  $75 = $74;
  HEAP32[$75>>2] = $76;
  $77 = ((($0)) + 241924|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = ((($78)) + 4|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = $80 << 4;
  $82 = ((($44)) + 520|0);
  HEAP32[$82>>2] = $81;
  $83 = HEAP32[$77>>2]|0;
  $84 = ((($83)) + 8|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = $85 << 4;
  $87 = ((($44)) + 524|0);
  HEAP32[$87>>2] = $86;
  $88 = HEAP32[$39>>2]|0;
  $89 = (($88) + ($56<<2)|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ((($90)) + 12|0);
  $92 = HEAP8[$91>>0]|0;
  $93 = ($92<<24>>24)==(0);
  if ($93) {
   $$0229$ph = $54;
  } else {
   $94 = ((($0)) + 242346|0);
   $95 = HEAP8[$94>>0]|0;
   $96 = ($95<<24>>24)==(0);
   if ($96) {
    $$0229$ph = $54;
   } else {
    $97 = ((($90)) + 4|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = ($98|0)==(20);
    $100 = HEAP32[$77>>2]|0;
    $101 = HEAP32[$100>>2]|0;
    $102 = ((($0)) + 241928|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ((($103)) + 4|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = ((($0)) + 242324|0);
    HEAP8[$106>>0] = 0;
    $107 = (((($0)) + 247216|0) + (($101*136)|0)|0);
    $108 = (((($0)) + 242864|0) + (($101*136)|0)|0);
    $109 = $99 ? $107 : $108;
    $110 = ((($109)) + 132|0);
    $111 = HEAP16[$110>>1]|0;
    $112 = $111&65535;
    _memcpy(($54|0),($109|0),($112|0))|0;
    $113 = HEAP16[$110>>1]|0;
    $114 = $113&65535;
    $115 = HEAP32[$44>>2]|0;
    $116 = (($115) + 1)|0;
    HEAP32[$44>>2] = $116;
    $117 = (((($44)) + 4|0) + ($115<<2)|0);
    HEAP32[$117>>2] = $114;
    $118 = HEAP16[$110>>1]|0;
    $119 = $118&65535;
    $120 = ((($0)) + 242348|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (($121) + 1)|0;
    HEAP32[$120>>2] = $122;
    $123 = (((($0)) + 242352|0) + ($121<<2)|0);
    HEAP32[$123>>2] = $119;
    $124 = HEAP16[$110>>1]|0;
    $125 = $124&65535;
    $126 = (($54) + ($125)|0);
    $127 = (((($0)) + 282032|0) + (($105*136)|0)|0);
    $128 = (((((($0)) + 282032|0) + (($105*136)|0)|0)) + 132|0);
    $129 = HEAP16[$128>>1]|0;
    $130 = $129&65535;
    _memcpy(($126|0),($127|0),($130|0))|0;
    $131 = HEAP16[$128>>1]|0;
    $132 = $131&65535;
    $133 = HEAP32[$44>>2]|0;
    $134 = (($133) + 1)|0;
    HEAP32[$44>>2] = $134;
    $135 = (((($44)) + 4|0) + ($133<<2)|0);
    HEAP32[$135>>2] = $132;
    $136 = HEAP16[$128>>1]|0;
    $137 = $136&65535;
    $138 = (($126) + ($137)|0);
    HEAP8[$94>>0] = 0;
    $$0229$ph = $138;
   }
  }
  $139 = ($56|0)>($58|0);
  if (!($139)) {
   $$0228233 = $56;$$0229232 = $$0229$ph;
   while(1) {
    $140 = HEAP32[$39>>2]|0;
    $141 = (($$0228233) + 1)|0;
    $142 = (($140) + ($$0228233<<2)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ((($143)) + 3900|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($143)) + 3896|0);
    $147 = HEAP32[$146>>2]|0;
    $148 = HEAP32[$44>>2]|0;
    $149 = (($148) + 1)|0;
    HEAP32[$44>>2] = $149;
    $150 = (((($44)) + 4|0) + ($148<<2)|0);
    HEAP32[$150>>2] = $145;
    _memcpy(($$0229232|0),($147|0),($145|0))|0;
    $151 = (($$0229232) + ($145)|0);
    $152 = ($$0228233|0)<($58|0);
    if ($152) {
     $$0228233 = $141;$$0229232 = $151;
    } else {
     break;
    }
   }
  }
  $153 = ((($0)) + 242320|0);
  $154 = HEAP32[$153>>2]|0;
  $155 = ($154|0)==($13|0);
  if ($155) {
   HEAP32[$153>>2] = 0;
   $156 = ((($0)) + 242345|0);
   HEAP8[$156>>0] = 0;
   $157 = ((($0)) + 242346|0);
   HEAP8[$157>>0] = 1;
   $165 = 0;
   STACKTOP = sp;return ($165|0);
  }
  $158 = ($154|0)==(0);
  if ($158) {
   $165 = 0;
   STACKTOP = sp;return ($165|0);
  }
  $159 = ((($0)) + 242345|0);
  HEAP8[$159>>0] = 1;
  $160 = HEAP32[$5>>2]|0;
  $161 = ((($160)) + 72|0);
  HEAP8[$161>>0] = 0;
  $162 = ((($0)) + 242346|0);
  HEAP8[$162>>0] = 0;
  $163 = HEAP32[$40>>2]|0;
  $164 = $163 | 1;
  HEAP32[$40>>2] = $164;
  $165 = -1;
  STACKTOP = sp;return ($165|0);
 }
 $176 = ((($0)) + 242320|0);
 $177 = HEAP32[$176>>2]|0;
 $178 = ($177|0)==($13|0);
 if ($178) {
  $184 = ((($4)) + 12|0);
  $185 = HEAP8[$184>>0]|0;
  $186 = ($185<<24>>24)==(0);
  if ($186) {
   $$0226$off0 = 1;
  } else {
   $187 = ((($0)) + 116|0);
   $188 = HEAP32[$187>>2]|0;
   $189 = ($188|0)==(0);
   if ($189) {
    $190 = HEAP32[$5>>2]|0;
    $191 = ((($190)) + 72|0);
    HEAP8[$191>>0] = 1;
    $192 = ((($0)) + 84|0);
    HEAP8[$192>>0] = 0;
    $$0226$off0 = 1;
   } else {
    $$0226$off0 = 1;
   }
  }
 } else {
  $179 = HEAP32[$7>>2]|0;
  $180 = HEAP32[$10>>2]|0;
  HEAP32[$vararg_buffer7>>2] = $177;
  $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
  HEAP32[$vararg_ptr10>>2] = $13;
  $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
  HEAP32[$vararg_ptr11>>2] = $179;
  $vararg_ptr12 = ((($vararg_buffer7)) + 12|0);
  HEAP32[$vararg_ptr12>>2] = $180;
  __Z7WelsLogP13TagLogContextiPKcz($0,8,23741,$vararg_buffer7);
  $181 = ((($0)) + 241951|0);
  $182 = HEAP8[$181>>0]|0;
  $183 = ($182<<24>>24)==(0);
  if ($183) {
   $$0226$off0 = 0;
  } else {
   $165 = -1;
   STACKTOP = sp;return ($165|0);
  }
 }
 HEAP32[$176>>2] = 0;
 $193 = ((($6)) + 96|0);
 $194 = $193;
 $195 = $194;
 $196 = HEAP32[$195>>2]|0;
 $197 = (($194) + 4)|0;
 $198 = $197;
 $199 = HEAP32[$198>>2]|0;
 $200 = ((($2)) + 16|0);
 $201 = $200;
 $202 = $201;
 HEAP32[$202>>2] = $196;
 $203 = (($201) + 4)|0;
 $204 = $203;
 HEAP32[$204>>2] = $199;
 $205 = ((($6)) + 16|0);
 $206 = HEAP32[$205>>2]|0;
 HEAP32[$1>>2] = $206;
 $207 = ((($6)) + 20|0);
 $208 = HEAP32[$207>>2]|0;
 $209 = ((($1)) + 4|0);
 HEAP32[$209>>2] = $208;
 $210 = ((($6)) + 24|0);
 $211 = HEAP32[$210>>2]|0;
 $212 = ((($1)) + 8|0);
 HEAP32[$212>>2] = $211;
 $213 = ((($2)) + 32|0);
 HEAP32[$213>>2] = 23;
 $214 = ((($0)) + 6176|0);
 $215 = HEAP32[$214>>2]|0;
 $216 = ((($0)) + 6184|0);
 $217 = HEAP32[$216>>2]|0;
 $218 = (($217) + ($215))|0;
 $219 = $218 << 1;
 $220 = (($9) - ($219))|0;
 $221 = ((($2)) + 24|0);
 HEAP32[$221>>2] = $220;
 $222 = ((($0)) + 6180|0);
 $223 = HEAP32[$222>>2]|0;
 $224 = ((($0)) + 6188|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = (($225) + ($223))|0;
 $227 = $226 << 1;
 $228 = (($12) - ($227))|0;
 $229 = ((($2)) + 28|0);
 HEAP32[$229>>2] = $228;
 $230 = ((($6)) + 32|0);
 $231 = HEAP32[$230>>2]|0;
 $232 = ((($2)) + 36|0);
 HEAP32[$232>>2] = $231;
 $233 = ((($6)) + 36|0);
 $234 = HEAP32[$233>>2]|0;
 $235 = ((($2)) + 40|0);
 HEAP32[$235>>2] = $234;
 $236 = HEAP32[$1>>2]|0;
 $237 = HEAP32[$222>>2]|0;
 $238 = $237 << 1;
 $239 = HEAP32[$230>>2]|0;
 $240 = Math_imul($238, $239)|0;
 $241 = (($236) + ($240)|0);
 $242 = HEAP32[$214>>2]|0;
 $243 = $242 << 1;
 $244 = (($241) + ($243)|0);
 HEAP32[$1>>2] = $244;
 $245 = HEAP32[$209>>2]|0;
 $246 = HEAP32[$222>>2]|0;
 $247 = HEAP32[$233>>2]|0;
 $248 = Math_imul($247, $246)|0;
 $249 = (($245) + ($248)|0);
 $250 = HEAP32[$214>>2]|0;
 $251 = (($249) + ($250)|0);
 HEAP32[$209>>2] = $251;
 $252 = HEAP32[$212>>2]|0;
 $253 = HEAP32[$222>>2]|0;
 $254 = HEAP32[$233>>2]|0;
 $255 = Math_imul($254, $253)|0;
 $256 = (($252) + ($255)|0);
 $257 = HEAP32[$214>>2]|0;
 $258 = (($256) + ($257)|0);
 HEAP32[$212>>2] = $258;
 HEAP32[$2>>2] = 1;
 $259 = ((($0)) + 76|0);
 $260 = HEAP32[$259>>2]|0;
 $261 = HEAP32[$221>>2]|0;
 $262 = ($260|0)==($261|0);
 $263 = ((($0)) + 80|0);
 if ($262) {
  $264 = HEAP32[$263>>2]|0;
  $265 = HEAP32[$229>>2]|0;
  $phitmp = ($264|0)==($265|0);
  $276 = $phitmp;
 } else {
  $276 = 0;
 }
 HEAP32[$259>>2] = $261;
 $266 = HEAP32[$229>>2]|0;
 HEAP32[$263>>2] = $266;
 $267 = ((($0)) + 242340|0);
 $268 = HEAP32[$267>>2]|0;
 switch ($268|0) {
 case 0:  {
  if ($$0226$off0) {
   $269 = ((($6)) + 72|0);
   $270 = HEAP8[$269>>0]|0;
   $271 = $270&255;
   $272 = $271;
  } else {
   $272 = 0;
  }
  HEAP32[$2>>2] = $272;
  $278 = $272;
  break;
 }
 case 7: case 5:  {
  $273 = ((($0)) + 116|0);
  $274 = HEAP32[$273>>2]|0;
  $275 = ($274|0)==(0);
  $brmerge = $276 | $275;
  if ($brmerge) {
   label = 34;
  } else {
   $277 = ((($0)) + 84|0);
   HEAP8[$277>>0] = 1;
   label = 34;
  }
  break;
 }
 default: {
  label = 34;
 }
 }
 if ((label|0) == 34) {
  $$pr = HEAP32[$2>>2]|0;
  $278 = $$pr;
 }
 $279 = ($278|0)==(0);
 if ($279) {
  if ($$0226$off0) {
   $165 = -1;
   STACKTOP = sp;return ($165|0);
  }
  $280 = ((($0)) + 116|0);
  $281 = HEAP32[$280>>2]|0;
  $282 = $281 | 4;
  HEAP32[$280>>2] = $282;
  $165 = -1;
  STACKTOP = sp;return ($165|0);
 }
 $283 = ((($0)) + 84|0);
 $284 = HEAP8[$283>>0]|0;
 $285 = ($284<<24>>24)==(0);
 if (!($285)) {
  HEAP32[$2>>2] = 0;
  $286 = HEAP8[$14>>0]|0;
  $287 = ($286<<24>>24)==(0);
  if (!($287)) {
   __Z7WelsLogP13TagLogContextiPKcz($0,4,23855,$vararg_buffer13);
  }
 }
 $288 = ((($6)) + 108|0);
 $289 = HEAP32[$288>>2]|0;
 $290 = ((($0)) + 512332|0);
 HEAP32[$290>>2] = $289;
 $291 = ((($6)) + 116|0);
 $292 = HEAP32[$291>>2]|0;
 $293 = ((($0)) + 512340|0);
 HEAP32[$293>>2] = $292;
 $294 = ((($6)) + 112|0);
 $295 = HEAP32[$294>>2]|0;
 $296 = ((($0)) + 512336|0);
 HEAP32[$296>>2] = $295;
 $297 = HEAP32[$2>>2]|0;
 $298 = ($297|0)!=(0);
 _UpdateDecStat($0,$298);
 $165 = 0;
 STACKTOP = sp;return ($165|0);
}
function __ZN7WelsDec13WelsMarkAsRefEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$ = 0, $$$i$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i64$ph = 0, $$0189$i$i$i = 0, $$024$i$i$i = 0, $$02633$i$i$i$i = 0, $$02633$i$i$i$i$i = 0, $$02633$i$i69$i$i = 0, $$02633$i$i75$i$i = 0, $$02633$i$i83$i$i = 0, $$02835$i$i = 0, $$02835$i$i$i = 0, $$02835$i$i$i$i = 0, $$04293$i = 0, $$056116 = 0, $$058 = 0;
 var $$063131$i$i = 0, $$1 = 0, $$123$i$i$i = 0, $$2 = 0, $$2$i$ph = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i60 = 0, $$pre$phi$i61Z2D = 0, $$pre$phiZ2D = 0, $$pre1$i = 0, $$pre166 = 0, $$pre174$i$i = 0, $$pre175$i$i = 0, $$sink1$i = 0, $$sink1$i$i$i = 0, $$sink1$i$i$i$i = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i$i = 0, $exitcond25$i$i$i = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 241932|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4088|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 241888|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($2)) + 16|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = ((($0)) + 5464|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 75|0);
 HEAP8[$11>>0] = $8;
 $12 = HEAP32[$1>>2]|0;
 $13 = ((($12)) + 17|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = HEAP32[$9>>2]|0;
 $16 = ((($15)) + 73|0);
 HEAP8[$16>>0] = $14;
 $17 = ((($0)) + 241924|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = HEAP32[$9>>2]|0;
 $21 = ((($20)) + 84|0);
 HEAP32[$21>>2] = $19;
 $22 = ((($0)) + 241928|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = HEAP32[$9>>2]|0;
 $27 = ((($26)) + 88|0);
 HEAP32[$27>>2] = $25;
 $28 = ((($6)) + 16|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($6)) + 20|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($29>>>0)>($31>>>0);
 L1: do {
  if ($32) {
   label = 15;
  } else {
   $33 = HEAP32[$6>>2]|0;
   $$056116 = $29;
   while(1) {
    $36 = (($33) + ($$056116<<2)|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ((($37)) + 4|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ($39|0)==(5);
    if ($40) {
     break;
    }
    $41 = ((($37)) + 12|0);
    $42 = HEAP8[$41>>0]|0;
    $43 = ($42<<24>>24)==(0);
    $34 = (($$056116) + 1)|0;
    if (!($43)) {
     break;
    }
    $35 = ($34>>>0)>($31>>>0);
    if ($35) {
     label = 15;
     break L1;
    } else {
     $$056116 = $34;
    }
   }
   $44 = ((($4)) + 1585|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(0);
   $47 = ((($0)) + 5860|0);
   if ($46) {
    HEAP32[$47>>2] = -1;
    $$1 = 0;
    break;
   }
   HEAP32[$47>>2] = 0;
   $48 = HEAP32[$9>>2]|0;
   $49 = ((($48)) + 68|0);
   HEAP8[$49>>0] = 1;
   $50 = ((($48)) + 69|0);
   HEAP8[$50>>0] = 1;
   $51 = ((($48)) + 80|0);
   HEAP32[$51>>2] = 0;
   $52 = ((($0)) + 5856|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = ($53<<24>>24)==(0);
   if ($54) {
    $56 = ((($0)) + 5724|0);
    $$sink1$i = $56;
   } else {
    $55 = $53&255;
    $$0$i = 0;
    while(1) {
     $57 = ($55|0)>($$0$i|0);
     $58 = (($$0$i) + 1)|0;
     $59 = (((($0)) + 5724|0) + ($$0$i<<2)|0);
     if (!($57)) {
      break;
     }
     $60 = HEAP32[$59>>2]|0;
     $61 = ((($60)) + 80|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = ($62|0)>(0);
     if ($63) {
      break;
     } else {
      $$0$i = $58;
     }
    }
    $64 = (((($0)) + 5724|0) + ($58<<2)|0);
    $65 = (($55) - ($$0$i))|0;
    $66 = $65 << 2;
    _memmove(($64|0),($59|0),($66|0))|0;
    $$sink1$i = $59;
   }
   HEAP32[$$sink1$i>>2] = $48;
   $67 = HEAP8[$52>>0]|0;
   $68 = (($67) + 1)<<24>>24;
   HEAP8[$52>>0] = $68;
   $$1 = 0;
  }
 } while(0);
 L19: do {
  if ((label|0) == 15) {
   $69 = ((($4)) + 1586|0);
   $70 = HEAP8[$69>>0]|0;
   $71 = ($70<<24>>24)==(0);
   if ($71) {
    $379 = ((($0)) + 5854|0);
    $380 = HEAP8[$379>>0]|0;
    $381 = $380&255;
    $382 = ((($0)) + 5856|0);
    $383 = HEAP8[$382>>0]|0;
    $384 = $383&255;
    $385 = (($384) + ($381))|0;
    $386 = HEAP32[$17>>2]|0;
    $387 = ((($386)) + 296|0);
    $388 = HEAP32[$387>>2]|0;
    $389 = ($385|0)<($388|0);
    if ($389) {
     $$1 = 0;
     break;
    }
    $390 = ($380<<24>>24)==(0);
    L24: do {
     if ($390) {
      __Z7WelsLogP13TagLogContextiPKcz($0,1,23463,$vararg_buffer10);
      $$0$i64$ph = 10010;
     } else {
      $391 = (($381) + -1)|0;
      $392 = (((($0)) + 5596|0) + ($391<<2)|0);
      $393 = HEAP32[$392>>2]|0;
      $394 = ((($393)) + 76|0);
      $395 = HEAP32[$394>>2]|0;
      $$02835$i$i = 0;
      while(1) {
       $396 = (((($0)) + 5596|0) + ($$02835$i$i<<2)|0);
       $397 = HEAP32[$396>>2]|0;
       $398 = ((($397)) + 76|0);
       $399 = HEAP32[$398>>2]|0;
       $400 = ($399|0)==($395|0);
       if ($400) {
        break;
       }
       $409 = (($$02835$i$i) + 1)|0;
       $410 = ($381|0)>($409|0);
       if ($410) {
        $$02835$i$i = $409;
       } else {
        $$0$i64$ph = 10009;
        break L24;
       }
      }
      $401 = (($381) - ($$02835$i$i))|0;
      $402 = ((($397)) + 68|0);
      HEAP8[$402>>0] = 0;
      $403 = HEAP32[$396>>2]|0;
      HEAP32[$396>>2] = 0;
      $404 = ($401|0)>(1);
      if ($404) {
       $405 = $401 << 2;
       $406 = (($405) + -4)|0;
       $407 = (($$02835$i$i) + 1)|0;
       $408 = (((($0)) + 5596|0) + ($407<<2)|0);
       _memmove(($396|0),($408|0),($406|0))|0;
      }
      $411 = HEAP8[$379>>0]|0;
      $412 = (($411) + -1)<<24>>24;
      HEAP8[$379>>0] = $412;
      $413 = $412&255;
      $414 = (((($0)) + 5596|0) + ($413<<2)|0);
      HEAP32[$414>>2] = 0;
      $415 = ($403|0)==(0|0);
      if ($415) {
       $$0$i64$ph = 10009;
      } else {
       $416 = ((($403)) + 68|0);
       HEAP8[$416>>0] = 0;
       $417 = ((($403)) + 69|0);
       HEAP8[$417>>0] = 0;
       $418 = ((($403)) + 73|0);
       $419 = ((($403)) + 72|0);
       dest=$418; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
       HEAP8[$419>>0] = 0;
       $$1 = 0;
       break L19;
      }
     }
    } while(0);
    $420 = ((($0)) + 242340|0);
    $421 = HEAP32[$420>>2]|0;
    $422 = ($421|0)==(0);
    if ($422) {
     $$058 = $$0$i64$ph;
     STACKTOP = sp;return ($$058|0);
    } else {
     $423 = (__ZN7WelsDecL25RemainOneBufferInDpbForECEPNS_21TagWelsDecoderContextE($0)|0);
     $$1 = $423;
     break;
    }
   }
   $72 = ((($0)) + 5860|0);
   $73 = HEAP32[$4>>2]|0;
   $74 = ($73|0)==(0);
   L40: do {
    if ($74) {
     $$pre166 = ((($0)) + 112|0);
     $$0 = 0;$$pre$phiZ2D = $$pre166;
    } else {
     $75 = HEAP32[$1>>2]|0;
     $76 = ((($75)) + 3892|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = ((($0)) + 104|0);
     $79 = ((($77)) + 16|0);
     $80 = ((($0)) + 5854|0);
     $81 = ((($0)) + 5856|0);
     $82 = ((($0)) + 242325|0);
     $83 = ((($0)) + 242328|0);
     $84 = ((($0)) + 5852|0);
     $85 = ((($0)) + 5724|0);
     $86 = ((($0)) + 112|0);
     $$04293$i = 0;$87 = $73;
     L43: while(1) {
      $88 = ($87>>>0)>(6);
      if ($88) {
       $$2$i$ph = 10005;
       break;
      }
      $89 = (((($4) + (($$04293$i*24)|0)|0)) + 20|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (((($4) + (($$04293$i*24)|0)|0)) + 16|0);
      $92 = HEAP32[$91>>2]|0;
      $93 = (((($4) + (($$04293$i*24)|0)|0)) + 12|0);
      $94 = HEAP32[$93>>2]|0;
      $95 = HEAP32[$78>>2]|0;
      $96 = (((($4) + (($$04293$i*24)|0)|0)) + 8|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = (($95) - ($97))|0;
      $99 = HEAP32[$79>>2]|0;
      $100 = 1 << $99;
      $101 = (($100) + -1)|0;
      $102 = $101 & $98;
      L46: do {
       switch ($87|0) {
       case 1:  {
        $103 = HEAP8[$80>>0]|0;
        $104 = $103&255;
        $105 = ($103<<24>>24)==(0);
        L48: do {
         if (!($105)) {
          $$02835$i$i$i$i = 0;
          while(1) {
           $106 = (((($0)) + 5596|0) + ($$02835$i$i$i$i<<2)|0);
           $107 = HEAP32[$106>>2]|0;
           $108 = ((($107)) + 76|0);
           $109 = HEAP32[$108>>2]|0;
           $110 = ($109|0)==($102|0);
           if ($110) {
            break;
           }
           $119 = (($$02835$i$i$i$i) + 1)|0;
           $120 = ($104|0)>($119|0);
           if ($120) {
            $$02835$i$i$i$i = $119;
           } else {
            break L48;
           }
          }
          $111 = (($104) - ($$02835$i$i$i$i))|0;
          $112 = ((($107)) + 68|0);
          HEAP8[$112>>0] = 0;
          $113 = HEAP32[$106>>2]|0;
          HEAP32[$106>>2] = 0;
          $114 = ($111|0)>(1);
          if ($114) {
           $115 = $111 << 2;
           $116 = (($115) + -4)|0;
           $117 = (($$02835$i$i$i$i) + 1)|0;
           $118 = (((($0)) + 5596|0) + ($117<<2)|0);
           _memmove(($106|0),($118|0),($116|0))|0;
          }
          $121 = HEAP8[$80>>0]|0;
          $122 = (($121) + -1)<<24>>24;
          HEAP8[$80>>0] = $122;
          $123 = $122&255;
          $124 = (((($0)) + 5596|0) + ($123<<2)|0);
          HEAP32[$124>>2] = 0;
          $125 = ($113|0)==(0|0);
          if (!($125)) {
           $126 = ((($113)) + 68|0);
           HEAP8[$126>>0] = 0;
           $127 = ((($113)) + 69|0);
           HEAP8[$127>>0] = 0;
           $128 = ((($113)) + 73|0);
           $129 = ((($113)) + 72|0);
           dest=$128; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
           HEAP8[$129>>0] = 0;
           break L46;
          }
         }
        } while(0);
        __Z7WelsLogP13TagLogContextiPKcz($0,2,23165,$vararg_buffer);
        break;
       }
       case 2:  {
        $130 = HEAP8[$81>>0]|0;
        $131 = $130&255;
        $132 = ($130<<24>>24)==(0);
        L59: do {
         if (!($132)) {
          $$02633$i$i83$i$i = 0;
          while(1) {
           $133 = (((($0)) + 5724|0) + ($$02633$i$i83$i$i<<2)|0);
           $134 = HEAP32[$133>>2]|0;
           $135 = ((($134)) + 80|0);
           $136 = HEAP32[$135>>2]|0;
           $137 = ($136|0)==($94|0);
           if ($137) {
            break;
           }
           $146 = (($$02633$i$i83$i$i) + 1)|0;
           $147 = ($131|0)>($146|0);
           if ($147) {
            $$02633$i$i83$i$i = $146;
           } else {
            break L59;
           }
          }
          $138 = (($131) - ($$02633$i$i83$i$i))|0;
          $139 = ((($134)) + 68|0);
          HEAP8[$139>>0] = 0;
          $140 = ((($134)) + 69|0);
          HEAP8[$140>>0] = 0;
          $141 = ($138|0)>(1);
          if ($141) {
           $142 = $138 << 2;
           $143 = (($142) + -4)|0;
           $144 = (($$02633$i$i83$i$i) + 1)|0;
           $145 = (((($0)) + 5724|0) + ($144<<2)|0);
           _memmove(($133|0),($145|0),($143|0))|0;
          }
          $148 = HEAP8[$81>>0]|0;
          $149 = (($148) + -1)<<24>>24;
          HEAP8[$81>>0] = $149;
          $150 = $149&255;
          $151 = (((($0)) + 5724|0) + ($150<<2)|0);
          HEAP32[$151>>2] = 0;
          HEAP8[$139>>0] = 0;
          HEAP8[$140>>0] = 0;
          $152 = ((($134)) + 73|0);
          $153 = ((($134)) + 72|0);
          dest=$152; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
          HEAP8[$153>>0] = 0;
          break L46;
         }
        } while(0);
        __Z7WelsLogP13TagLogContextiPKcz($0,2,23226,$vararg_buffer1);
        break;
       }
       case 3:  {
        $154 = HEAP32[$72>>2]|0;
        $155 = ($154|0)<($92|0);
        if ($155) {
         $$2$i$ph = 10011;
         break L43;
        }
        $156 = HEAP8[$80>>0]|0;
        $157 = $156&255;
        $158 = ($156<<24>>24)==(0);
        L70: do {
         if (!($158)) {
          $$02835$i$i$i = 0;
          while(1) {
           $159 = (((($0)) + 5596|0) + ($$02835$i$i$i<<2)|0);
           $160 = HEAP32[$159>>2]|0;
           $161 = ((($160)) + 76|0);
           $162 = HEAP32[$161>>2]|0;
           $163 = ($162|0)==($102|0);
           if ($163) {
            break;
           }
           $172 = (($$02835$i$i$i) + 1)|0;
           $173 = ($157|0)>($172|0);
           if ($173) {
            $$02835$i$i$i = $172;
           } else {
            break L70;
           }
          }
          $164 = (($157) - ($$02835$i$i$i))|0;
          $165 = ((($160)) + 68|0);
          HEAP8[$165>>0] = 0;
          $166 = HEAP32[$159>>2]|0;
          HEAP32[$159>>2] = 0;
          $167 = ($164|0)>(1);
          if ($167) {
           $168 = (($$02835$i$i$i) + 1)|0;
           $169 = (((($0)) + 5596|0) + ($168<<2)|0);
           $170 = $164 << 2;
           $171 = (($170) + -4)|0;
           _memmove(($159|0),($169|0),($171|0))|0;
          }
          $174 = HEAP8[$80>>0]|0;
          $175 = (($174) + -1)<<24>>24;
          HEAP8[$80>>0] = $175;
          $176 = $175&255;
          $177 = (((($0)) + 5596|0) + ($176<<2)|0);
          HEAP32[$177>>2] = 0;
          $178 = ($166|0)==(0|0);
          if (!($178)) {
           $179 = HEAP8[$81>>0]|0;
           $180 = $179&255;
           $181 = ($179<<24>>24)==(0);
           L79: do {
            if (!($181)) {
             $$02633$i$i75$i$i = 0;
             while(1) {
              $182 = (((($0)) + 5724|0) + ($$02633$i$i75$i$i<<2)|0);
              $183 = HEAP32[$182>>2]|0;
              $184 = ((($183)) + 80|0);
              $185 = HEAP32[$184>>2]|0;
              $186 = ($185|0)==($92|0);
              if ($186) {
               break;
              }
              $195 = (($$02633$i$i75$i$i) + 1)|0;
              $196 = ($180|0)>($195|0);
              if ($196) {
               $$02633$i$i75$i$i = $195;
              } else {
               break L79;
              }
             }
             $187 = (($180) - ($$02633$i$i75$i$i))|0;
             $188 = ((($183)) + 68|0);
             HEAP8[$188>>0] = 0;
             $189 = ((($183)) + 69|0);
             HEAP8[$189>>0] = 0;
             $190 = ($187|0)>(1);
             if ($190) {
              $191 = $187 << 2;
              $192 = (($191) + -4)|0;
              $193 = (($$02633$i$i75$i$i) + 1)|0;
              $194 = (((($0)) + 5724|0) + ($193<<2)|0);
              _memmove(($182|0),($194|0),($192|0))|0;
             }
             $197 = HEAP8[$81>>0]|0;
             $198 = (($197) + -1)<<24>>24;
             HEAP8[$81>>0] = $198;
             $199 = $198&255;
             $200 = (((($0)) + 5724|0) + ($199<<2)|0);
             HEAP32[$200>>2] = 0;
             HEAP8[$188>>0] = 0;
             HEAP8[$189>>0] = 0;
             $201 = ((($183)) + 73|0);
             $202 = ((($183)) + 72|0);
             dest=$201; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
             HEAP8[$202>>0] = 0;
            }
           } while(0);
           HEAP8[$82>>0] = 1;
           HEAP32[$83>>2] = $102;
           HEAP32[$vararg_buffer5>>2] = $102;
           __Z7WelsLogP13TagLogContextiPKcz($0,4,23343,$vararg_buffer5);
           $203 = HEAP8[$81>>0]|0;
           $204 = $203&255;
           $205 = ($203<<24>>24)==(0);
           L88: do {
            if (!($205)) {
             $$02633$i$i$i$i$i = 0;
             while(1) {
              $206 = (((($0)) + 5724|0) + ($$02633$i$i$i$i$i<<2)|0);
              $207 = HEAP32[$206>>2]|0;
              $208 = ((($207)) + 80|0);
              $209 = HEAP32[$208>>2]|0;
              $210 = ($209|0)==($92|0);
              if ($210) {
               break;
              }
              $219 = (($$02633$i$i$i$i$i) + 1)|0;
              $220 = ($204|0)>($219|0);
              if ($220) {
               $$02633$i$i$i$i$i = $219;
              } else {
               break L88;
              }
             }
             $211 = (($204) - ($$02633$i$i$i$i$i))|0;
             $212 = ((($207)) + 68|0);
             HEAP8[$212>>0] = 0;
             $213 = ((($207)) + 69|0);
             HEAP8[$213>>0] = 0;
             $214 = ($211|0)>(1);
             if ($214) {
              $215 = (($$02633$i$i$i$i$i) + 1)|0;
              $216 = (((($0)) + 5724|0) + ($215<<2)|0);
              $217 = $211 << 2;
              $218 = (($217) + -4)|0;
              _memmove(($206|0),($216|0),($218|0))|0;
             }
             $221 = HEAP8[$81>>0]|0;
             $222 = (($221) + -1)<<24>>24;
             HEAP8[$81>>0] = $222;
             $223 = $222&255;
             $224 = (((($0)) + 5724|0) + ($223<<2)|0);
             HEAP32[$224>>2] = 0;
             HEAP8[$212>>0] = 0;
             HEAP8[$213>>0] = 0;
             $225 = ((($207)) + 73|0);
             $226 = ((($207)) + 72|0);
             dest=$225; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
             HEAP8[$226>>0] = 0;
            }
           } while(0);
           $227 = HEAP8[$84>>0]|0;
           $228 = ($227<<24>>24)==(0);
           if ($228) {
            break L46;
           }
           $229 = $227&255;
           $$0189$i$i$i = 0;
           while(1) {
            $230 = (((($0)) + 5468|0) + ($$0189$i$i$i<<2)|0);
            $231 = HEAP32[$230>>2]|0;
            $232 = ((($231)) + 76|0);
            $233 = HEAP32[$232>>2]|0;
            $234 = ($233|0)==($102|0);
            if ($234) {
             $235 = ((($231)) + 69|0);
             $236 = HEAP8[$235>>0]|0;
             $237 = ($236<<24>>24)==(0);
             if ($237) {
              break;
             }
            }
            $255 = (($$0189$i$i$i) + 1)|0;
            $256 = ($255|0)<($229|0);
            if ($256) {
             $$0189$i$i$i = $255;
            } else {
             break L46;
            }
           }
           $238 = ((($231)) + 68|0);
           HEAP8[$238>>0] = 1;
           HEAP8[$235>>0] = 1;
           $239 = ((($231)) + 80|0);
           HEAP32[$239>>2] = $92;
           $240 = HEAP8[$81>>0]|0;
           $241 = ($240<<24>>24)==(0);
           if ($241) {
            $$sink1$i$i$i$i = $85;
           } else {
            $242 = $240&255;
            $$0$i$i$i$i = 0;
            while(1) {
             $243 = ($242|0)>($$0$i$i$i$i|0);
             $244 = (($$0$i$i$i$i) + 1)|0;
             $245 = (((($0)) + 5724|0) + ($$0$i$i$i$i<<2)|0);
             if (!($243)) {
              break;
             }
             $246 = HEAP32[$245>>2]|0;
             $247 = ((($246)) + 80|0);
             $248 = HEAP32[$247>>2]|0;
             $249 = ($248|0)>($92|0);
             if ($249) {
              break;
             } else {
              $$0$i$i$i$i = $244;
             }
            }
            $250 = (((($0)) + 5724|0) + ($244<<2)|0);
            $251 = (($242) - ($$0$i$i$i$i))|0;
            $252 = $251 << 2;
            _memmove(($250|0),($245|0),($252|0))|0;
            $$sink1$i$i$i$i = $245;
           }
           HEAP32[$$sink1$i$i$i$i>>2] = $231;
           $253 = HEAP8[$81>>0]|0;
           $254 = (($253) + 1)<<24>>24;
           HEAP8[$81>>0] = $254;
           break L46;
          }
         }
        } while(0);
        __Z7WelsLogP13TagLogContextiPKcz($0,2,23285,$vararg_buffer3);
        break;
       }
       case 4:  {
        HEAP32[$72>>2] = $90;
        $257 = HEAP8[$81>>0]|0;
        $258 = ($257<<24>>24)==(0);
        if (!($258)) {
         $$063131$i$i = 0;$264 = $90;$266 = $257;
         while(1) {
          $259 = (((($0)) + 5724|0) + ($$063131$i$i<<2)|0);
          $260 = HEAP32[$259>>2]|0;
          $261 = ((($260)) + 80|0);
          $262 = HEAP32[$261>>2]|0;
          $263 = ($262|0)>($264|0);
          L115: do {
           if ($263) {
            $265 = $266&255;
            $267 = ($266<<24>>24)==(0);
            if ($267) {
             $291 = 0;
            } else {
             $$02633$i$i69$i$i = 0;
             while(1) {
              $268 = (((($0)) + 5724|0) + ($$02633$i$i69$i$i<<2)|0);
              $269 = HEAP32[$268>>2]|0;
              $270 = ((($269)) + 80|0);
              $271 = HEAP32[$270>>2]|0;
              $272 = ($271|0)==($262|0);
              if ($272) {
               break;
              }
              $281 = (($$02633$i$i69$i$i) + 1)|0;
              $282 = ($265|0)>($281|0);
              if ($282) {
               $$02633$i$i69$i$i = $281;
              } else {
               $291 = $266;
               break L115;
              }
             }
             $273 = (($265) - ($$02633$i$i69$i$i))|0;
             $274 = ((($269)) + 68|0);
             HEAP8[$274>>0] = 0;
             $275 = ((($269)) + 69|0);
             HEAP8[$275>>0] = 0;
             $276 = ($273|0)>(1);
             if ($276) {
              $277 = $273 << 2;
              $278 = (($277) + -4)|0;
              $279 = (($$02633$i$i69$i$i) + 1)|0;
              $280 = (((($0)) + 5724|0) + ($279<<2)|0);
              _memmove(($268|0),($280|0),($278|0))|0;
             }
             $283 = HEAP8[$81>>0]|0;
             $284 = (($283) + -1)<<24>>24;
             HEAP8[$81>>0] = $284;
             $285 = $284&255;
             $286 = (((($0)) + 5724|0) + ($285<<2)|0);
             HEAP32[$286>>2] = 0;
             HEAP8[$274>>0] = 0;
             HEAP8[$275>>0] = 0;
             $287 = ((($269)) + 73|0);
             $288 = ((($269)) + 72|0);
             dest=$287; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
             HEAP8[$288>>0] = 0;
             $$pre175$i$i = HEAP8[$81>>0]|0;
             $291 = $$pre175$i$i;
            }
           } else {
            $291 = $266;
           }
          } while(0);
          $289 = (($$063131$i$i) + 1)|0;
          $290 = $291&255;
          $292 = ($289|0)<($290|0);
          if (!($292)) {
           break L46;
          }
          $$pre174$i$i = HEAP32[$72>>2]|0;
          $$063131$i$i = $289;$264 = $$pre174$i$i;$266 = $291;
         }
        }
        break;
       }
       case 5:  {
        HEAP8[$80>>0] = 0;
        HEAP8[$81>>0] = 0;
        HEAP8[$84>>0] = 0;
        $$024$i$i$i = 0;
        while(1) {
         $293 = (((($0)) + 5596|0) + ($$024$i$i$i<<2)|0);
         $294 = HEAP32[$293>>2]|0;
         $295 = ($294|0)==(0|0);
         if (!($295)) {
          $296 = ((($294)) + 68|0);
          HEAP8[$296>>0] = 0;
          $297 = ((($294)) + 69|0);
          HEAP8[$297>>0] = 0;
          $298 = ((($294)) + 73|0);
          $299 = ((($294)) + 72|0);
          dest=$298; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
          HEAP8[$299>>0] = 0;
          HEAP32[$293>>2] = 0;
         }
         $300 = (($$024$i$i$i) + 1)|0;
         $exitcond25$i$i$i = ($300|0)==(16);
         if ($exitcond25$i$i$i) {
          break;
         } else {
          $$024$i$i$i = $300;
         }
        }
        HEAP8[$80>>0] = 0;
        $$123$i$i$i = 0;
        while(1) {
         $301 = (((($0)) + 5724|0) + ($$123$i$i$i<<2)|0);
         $302 = HEAP32[$301>>2]|0;
         $303 = ($302|0)==(0|0);
         if (!($303)) {
          $304 = ((($302)) + 68|0);
          HEAP8[$304>>0] = 0;
          $305 = ((($302)) + 69|0);
          HEAP8[$305>>0] = 0;
          $306 = ((($302)) + 73|0);
          $307 = ((($302)) + 72|0);
          dest=$306; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
          HEAP8[$307>>0] = 0;
          HEAP32[$301>>2] = 0;
         }
         $308 = (($$123$i$i$i) + 1)|0;
         $exitcond$i$i$i = ($308|0)==(16);
         if ($exitcond$i$i$i) {
          break;
         } else {
          $$123$i$i$i = $308;
         }
        }
        HEAP8[$81>>0] = 0;
        HEAP8[$86>>0] = 1;
        break;
       }
       case 6:  {
        $309 = HEAP32[$72>>2]|0;
        $310 = ($309|0)<($92|0);
        if ($310) {
         $$2$i$ph = 10011;
         break L43;
        }
        $311 = HEAP8[$81>>0]|0;
        $312 = $311&255;
        $313 = ($311<<24>>24)==(0);
        L141: do {
         if ($313) {
          $336 = 0;
         } else {
          $$02633$i$i$i$i = 0;
          while(1) {
           $314 = (((($0)) + 5724|0) + ($$02633$i$i$i$i<<2)|0);
           $315 = HEAP32[$314>>2]|0;
           $316 = ((($315)) + 80|0);
           $317 = HEAP32[$316>>2]|0;
           $318 = ($317|0)==($92|0);
           if ($318) {
            break;
           }
           $327 = (($$02633$i$i$i$i) + 1)|0;
           $328 = ($312|0)>($327|0);
           if ($328) {
            $$02633$i$i$i$i = $327;
           } else {
            $336 = $311;
            break L141;
           }
          }
          $319 = (($312) - ($$02633$i$i$i$i))|0;
          $320 = ((($315)) + 68|0);
          HEAP8[$320>>0] = 0;
          $321 = ((($315)) + 69|0);
          HEAP8[$321>>0] = 0;
          $322 = ($319|0)>(1);
          if ($322) {
           $323 = $319 << 2;
           $324 = (($323) + -4)|0;
           $325 = (($$02633$i$i$i$i) + 1)|0;
           $326 = (((($0)) + 5724|0) + ($325<<2)|0);
           _memmove(($314|0),($326|0),($324|0))|0;
          }
          $329 = HEAP8[$81>>0]|0;
          $330 = (($329) + -1)<<24>>24;
          HEAP8[$81>>0] = $330;
          $331 = $330&255;
          $332 = (((($0)) + 5724|0) + ($331<<2)|0);
          HEAP32[$332>>2] = 0;
          HEAP8[$320>>0] = 0;
          HEAP8[$321>>0] = 0;
          $333 = ((($315)) + 73|0);
          $334 = ((($315)) + 72|0);
          dest=$333; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
          HEAP8[$334>>0] = 0;
          $$pre$i$i = HEAP8[$81>>0]|0;
          $336 = $$pre$i$i;
         }
        } while(0);
        $335 = $336&255;
        $337 = HEAP8[$80>>0]|0;
        $338 = $337&255;
        $339 = (($338) + ($335))|0;
        $340 = HEAP32[$17>>2]|0;
        $341 = ((($340)) + 296|0);
        $342 = HEAP32[$341>>2]|0;
        $343 = ($342|0)>(1);
        $$$i$i = $343 ? $342 : 1;
        $344 = ($339|0)<($$$i$i|0);
        if (!($344)) {
         $$2$i$ph = 10009;
         break L43;
        }
        HEAP8[$82>>0] = 1;
        $345 = HEAP32[$78>>2]|0;
        HEAP32[$83>>2] = $345;
        HEAP32[$vararg_buffer7>>2] = $345;
        __Z7WelsLogP13TagLogContextiPKcz($0,4,23406,$vararg_buffer7);
        $346 = HEAP32[$9>>2]|0;
        $347 = ((($346)) + 68|0);
        HEAP8[$347>>0] = 1;
        $348 = ((($346)) + 69|0);
        HEAP8[$348>>0] = 1;
        $349 = ((($346)) + 80|0);
        HEAP32[$349>>2] = $92;
        $350 = HEAP8[$81>>0]|0;
        $351 = ($350<<24>>24)==(0);
        if ($351) {
         $$sink1$i$i$i = $85;
        } else {
         $352 = $350&255;
         $$0$i$i$i = 0;
         while(1) {
          $353 = ($352|0)>($$0$i$i$i|0);
          $354 = (($$0$i$i$i) + 1)|0;
          $355 = (((($0)) + 5724|0) + ($$0$i$i$i<<2)|0);
          if (!($353)) {
           break;
          }
          $356 = HEAP32[$355>>2]|0;
          $357 = ((($356)) + 80|0);
          $358 = HEAP32[$357>>2]|0;
          $359 = ($358|0)>($92|0);
          if ($359) {
           break;
          } else {
           $$0$i$i$i = $354;
          }
         }
         $360 = (((($0)) + 5724|0) + ($354<<2)|0);
         $361 = (($352) - ($$0$i$i$i))|0;
         $362 = $361 << 2;
         _memmove(($360|0),($355|0),($362|0))|0;
         $$sink1$i$i$i = $355;
        }
        HEAP32[$$sink1$i$i$i>>2] = $346;
        $363 = HEAP8[$81>>0]|0;
        $364 = (($363) + 1)<<24>>24;
        HEAP8[$81>>0] = $364;
        break;
       }
       default: {
       }
       }
      } while(0);
      $365 = (($$04293$i) + 1)|0;
      $366 = (($4) + (($365*24)|0)|0);
      $367 = HEAP32[$366>>2]|0;
      $368 = ($367|0)==(0);
      if ($368) {
       $$0 = 0;$$pre$phiZ2D = $86;
       break L40;
      } else {
       $$04293$i = $365;$87 = $367;
      }
     }
     $369 = ((($0)) + 242340|0);
     $370 = HEAP32[$369>>2]|0;
     $371 = ($370|0)==(0);
     if ($371) {
      $$058 = $$2$i$ph;
      STACKTOP = sp;return ($$058|0);
     } else {
      $372 = (__ZN7WelsDecL25RemainOneBufferInDpbForECEPNS_21TagWelsDecoderContextE($0)|0);
      $$0 = $372;$$pre$phiZ2D = $86;
      break;
     }
    }
   } while(0);
   $373 = HEAP8[$$pre$phiZ2D>>0]|0;
   $374 = ($373<<24>>24)==(0);
   if ($374) {
    $$1 = $$0;
   } else {
    $375 = HEAP32[$9>>2]|0;
    $376 = ((($375)) + 76|0);
    HEAP32[$376>>2] = 0;
    $377 = HEAP32[$9>>2]|0;
    $378 = ((($377)) + 64|0);
    HEAP32[$378>>2] = 0;
    $$1 = $$0;
   }
  }
 } while(0);
 $424 = HEAP32[$9>>2]|0;
 $425 = ((($424)) + 69|0);
 $426 = HEAP8[$425>>0]|0;
 $427 = ($426<<24>>24)==(0);
 if (!($427)) {
  $$058 = $$1;
  STACKTOP = sp;return ($$058|0);
 }
 $428 = ((($0)) + 5856|0);
 $429 = HEAP8[$428>>0]|0;
 $430 = $429&255;
 $431 = ((($0)) + 5854|0);
 $432 = HEAP8[$431>>0]|0;
 $433 = $432&255;
 $434 = (($433) + ($430))|0;
 $435 = HEAP32[$17>>2]|0;
 $436 = ((($435)) + 296|0);
 $437 = HEAP32[$436>>2]|0;
 $438 = ($437|0)>(1);
 $$ = $438 ? $437 : 1;
 $439 = ($434|0)<($$|0);
 do {
  if ($439) {
   $$2 = $$1;$445 = $424;
  } else {
   $440 = ((($0)) + 242340|0);
   $441 = HEAP32[$440>>2]|0;
   $442 = ($441|0)==(0);
   if ($442) {
    $$058 = 10009;
    STACKTOP = sp;return ($$058|0);
   } else {
    $443 = (__ZN7WelsDecL25RemainOneBufferInDpbForECEPNS_21TagWelsDecoderContextE($0)|0);
    $$pre = HEAP32[$9>>2]|0;
    $$2 = $443;$445 = $$pre;
    break;
   }
  }
 } while(0);
 $444 = ((($445)) + 68|0);
 HEAP8[$444>>0] = 1;
 $446 = ((($445)) + 69|0);
 HEAP8[$446>>0] = 0;
 $447 = ((($445)) + 80|0);
 HEAP32[$447>>2] = -1;
 $448 = HEAP8[$431>>0]|0;
 $449 = ($448<<24>>24)==(0);
 if ($449) {
  $$pre1$i = ((($0)) + 5596|0);
  $$pre$phi$i61Z2D = $$pre1$i;$454 = 1;
 } else {
  $450 = $448&255;
  $451 = $450 << 2;
  $452 = ((($0)) + 5596|0);
  $453 = ((($0)) + 5600|0);
  _memmove(($453|0),($452|0),($451|0))|0;
  $$pre$i60 = HEAP8[$431>>0]|0;
  $phitmp$i = (($$pre$i60) + 1)<<24>>24;
  $$pre$phi$i61Z2D = $452;$454 = $phitmp$i;
 }
 HEAP32[$$pre$phi$i61Z2D>>2] = $445;
 HEAP8[$431>>0] = $454;
 $$058 = $$2;
 STACKTOP = sp;return ($$058|0);
}
function __ZN7WelsDecL25RemainOneBufferInDpbForECEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0 = 0, $$01517$i = 0, $$02633$i$i = 0, $$02835$i$i = 0, $$034 = 0, $$03551 = 0, $$pre = 0, $$pre65 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond50 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 5854|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2&255;
 $4 = ((($0)) + 5856|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (($6) + ($3))|0;
 $8 = ((($0)) + 241924|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 296|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($7|0)<($11|0);
 if ($12) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = ($2<<24>>24)==(0);
 L4: do {
  if ($13) {
   $43 = ((($0)) + 5860|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ((($0)) + 242328|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($5<<24>>24)==(0);
   L6: do {
    if ($47) {
     $60 = -1;
    } else {
     $$01517$i = 0;
     while(1) {
      $50 = (((($0)) + 5724|0) + ($$01517$i<<2)|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = ((($51)) + 76|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ($53|0)==($46|0);
      $48 = (($$01517$i) + 1)|0;
      if ($54) {
       break;
      }
      $49 = ($48|0)<($6|0);
      if ($49) {
       $$01517$i = $48;
      } else {
       $60 = -1;
       break L6;
      }
     }
     $55 = ((($51)) + 80|0);
     $56 = HEAP32[$55>>2]|0;
     $60 = $56;
    }
   } while(0);
   $57 = ($6|0)<($11|0);
   $58 = ($44|0)<(0);
   $or$cond50 = $58 | $57;
   if ($or$cond50) {
    $$034 = 0;
   } else {
    $$03551 = 0;$102 = $9;$70 = $5;
    while(1) {
     $59 = ($$03551|0)==($60|0);
     L14: do {
      if ($59) {
       $63 = $70;$65 = $102;
      } else {
       $69 = $70&255;
       $71 = ($70<<24>>24)==(0);
       if ($71) {
        $63 = 0;$65 = $102;
       } else {
        $$02633$i$i = 0;
        while(1) {
         $72 = (((($0)) + 5724|0) + ($$02633$i$i<<2)|0);
         $73 = HEAP32[$72>>2]|0;
         $74 = ((($73)) + 80|0);
         $75 = HEAP32[$74>>2]|0;
         $76 = ($75|0)==($$03551|0);
         if ($76) {
          break;
         }
         $85 = (($$02633$i$i) + 1)|0;
         $86 = ($69|0)>($85|0);
         if ($86) {
          $$02633$i$i = $85;
         } else {
          $63 = $70;$65 = $102;
          break L14;
         }
        }
        $77 = (($69) - ($$02633$i$i))|0;
        $78 = ((($73)) + 68|0);
        HEAP8[$78>>0] = 0;
        $79 = ((($73)) + 69|0);
        HEAP8[$79>>0] = 0;
        $80 = ($77|0)>(1);
        if ($80) {
         $81 = $77 << 2;
         $82 = (($81) + -4)|0;
         $83 = (($$02633$i$i) + 1)|0;
         $84 = (((($0)) + 5724|0) + ($83<<2)|0);
         _memmove(($72|0),($84|0),($82|0))|0;
        }
        $87 = HEAP8[$4>>0]|0;
        $88 = (($87) + -1)<<24>>24;
        HEAP8[$4>>0] = $88;
        $89 = $88&255;
        $90 = (((($0)) + 5724|0) + ($89<<2)|0);
        HEAP32[$90>>2] = 0;
        HEAP8[$78>>0] = 0;
        HEAP8[$79>>0] = 0;
        $91 = ((($73)) + 73|0);
        $92 = ((($73)) + 72|0);
        dest=$91; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
        HEAP8[$92>>0] = 0;
        $$pre = HEAP8[$4>>0]|0;
        $$pre65 = HEAP32[$8>>2]|0;
        $63 = $$pre;$65 = $$pre65;
       }
      }
     } while(0);
     $61 = (($$03551) + 1)|0;
     $62 = $63&255;
     $64 = ((($65)) + 296|0);
     $66 = HEAP32[$64>>2]|0;
     $67 = ($62|0)<($66|0);
     $68 = ($$03551|0)>=($44|0);
     $or$cond = $68 | $67;
     if ($or$cond) {
      $$034 = 0;
      break;
     } else {
      $$03551 = $61;$102 = $65;$70 = $63;
     }
    }
   }
  } else {
   $14 = (($3) + -1)|0;
   $15 = (((($0)) + 5596|0) + ($14<<2)|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($16)) + 76|0);
   $18 = HEAP32[$17>>2]|0;
   $$02835$i$i = 0;
   while(1) {
    $19 = (((($0)) + 5596|0) + ($$02835$i$i<<2)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($20)) + 76|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($22|0)==($18|0);
    if ($23) {
     break;
    }
    $32 = (($$02835$i$i) + 1)|0;
    $33 = ($3|0)>($32|0);
    if ($33) {
     $$02835$i$i = $32;
    } else {
     $$034 = 10009;
     break L4;
    }
   }
   $24 = (($3) - ($$02835$i$i))|0;
   $25 = ((($20)) + 68|0);
   HEAP8[$25>>0] = 0;
   $26 = HEAP32[$19>>2]|0;
   HEAP32[$19>>2] = 0;
   $27 = ($24|0)>(1);
   if ($27) {
    $28 = $24 << 2;
    $29 = (($28) + -4)|0;
    $30 = (($$02835$i$i) + 1)|0;
    $31 = (((($0)) + 5596|0) + ($30<<2)|0);
    _memmove(($19|0),($31|0),($29|0))|0;
   }
   $34 = HEAP8[$1>>0]|0;
   $35 = (($34) + -1)<<24>>24;
   HEAP8[$1>>0] = $35;
   $36 = $35&255;
   $37 = (((($0)) + 5596|0) + ($36<<2)|0);
   HEAP32[$37>>2] = 0;
   $38 = ($26|0)==(0|0);
   if ($38) {
    $$034 = 10009;
   } else {
    $39 = ((($26)) + 68|0);
    HEAP8[$39>>0] = 0;
    $40 = ((($26)) + 69|0);
    HEAP8[$40>>0] = 0;
    $41 = ((($26)) + 73|0);
    $42 = ((($26)) + 72|0);
    dest=$41; stop=dest+15|0; do { HEAP8[dest>>0]=255|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    HEAP8[$42>>0] = 0;
    $$034 = 0;
   }
  }
 } while(0);
 $93 = HEAP8[$1>>0]|0;
 $94 = $93&255;
 $95 = HEAP8[$4>>0]|0;
 $96 = $95&255;
 $97 = (($96) + ($94))|0;
 $98 = HEAP32[$8>>2]|0;
 $99 = ((($98)) + 296|0);
 $100 = HEAP32[$99>>2]|0;
 $101 = ($97|0)<($100|0);
 if ($101) {
  $$0 = $$034;
  STACKTOP = sp;return ($$0|0);
 }
 __Z7WelsLogP13TagLogContextiPKcz($0,2,23523,$vararg_buffer);
 $$0 = 1010;
 STACKTOP = sp;return ($$0|0);
}
function _UpdateDecStat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$042$lcssa$i = 0, $$04243$i = 0, $$044$i = 0, $$sink$i = 0, $$sink$i4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $div$i = 0, $exitcond$i = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 84|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)==(0);
 if (!($4)) {
  $5 = ((($0)) + 241932|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 12|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = ($8<<24>>24)!=(0);
  $10 = ((($0)) + 512300|0);
  $11 = ((($0)) + 512296|0);
  $$sink$i = $9 ? $11 : $10;
  $12 = HEAP32[$$sink$i>>2]|0;
  $13 = (($12) + 1)|0;
  HEAP32[$$sink$i>>2] = $13;
  return;
 }
 if (!($1)) {
  return;
 }
 $14 = ((($0)) + 241932|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($0)) + 5464|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 512304|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(-1);
 if ($20) {
  HEAP32[$18>>2] = 0;
  $47 = 0;
 } else {
  $47 = $19;
 }
 $21 = ((($15)) + 4044|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($15)) + 4048|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = Math_imul($24, $22)|0;
 $26 = ($25|0)>(0);
 if ($26) {
  $27 = ((($15)) + 3948|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($15)) + 3980|0);
  $30 = HEAP32[$29>>2]|0;
  $$04243$i = 0;$$044$i = 0;
  while(1) {
   $36 = (($28) + ($$044$i)|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37 << 24 >> 24;
   $39 = (($30) + ($$044$i)|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = $40&255;
   $42 = (0 - ($41))|0;
   $43 = $38 & $42;
   $44 = (($43) + ($$04243$i))|0;
   $45 = (($$044$i) + 1)|0;
   $exitcond$i = ($45|0)==($25|0);
   if ($exitcond$i) {
    $$042$lcssa$i = $44;
    break;
   } else {
    $$04243$i = $44;$$044$i = $45;
   }
  }
 } else {
  $$042$lcssa$i = 0;
 }
 $31 = (($$042$lcssa$i|0) / ($25|0))&-1;
 $32 = ((($0)) + 512264|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (($33) + 1)|0;
 $35 = ($34|0)==(0);
 if ($35) {
  $46 = ((($0)) + 512256|0);
  dest=$46; stop=dest+76|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  HEAP32[$18>>2] = $47;
  $$sink$i4 = $31;
 } else {
  $48 = Math_imul($33, $47)|0;
  $49 = (($48) + ($31))|0;
  $div$i = (($49>>>0) / ($34>>>0))&-1;
  $$sink$i4 = $div$i;
 }
 HEAP32[$18>>2] = $$sink$i4;
 $50 = ((($15)) + 12|0);
 $51 = HEAP8[$50>>0]|0;
 $52 = ($51<<24>>24)==(0);
 if ($52) {
  return;
 }
 $53 = ((($17)) + 72|0);
 $54 = HEAP8[$53>>0]|0;
 $55 = $54&255;
 $56 = ((($0)) + 512272|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = (($57) + ($55))|0;
 HEAP32[$56>>2] = $58;
 $59 = HEAP8[$53>>0]|0;
 $60 = $59 ^ 1;
 $61 = $60&255;
 $62 = ((($0)) + 512284|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = (($61) + ($63))|0;
 HEAP32[$62>>2] = $64;
 return;
}
function __ZN7WelsDec19DoErrorConSliceCopyEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$ = 0, $$0118128 = 0, $$0118128$us = 0, $$0119130 = 0, $$0120 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $exitcond = 0, $exitcond137 = 0, $exitcond138 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241924|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 5464|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 316852|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 242340|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(2);
 $14 = ((($0)) + 241932|0);
 $15 = HEAP32[$14>>2]|0;
 if ($13) {
  $16 = ((($15)) + 12|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = ($17<<24>>24)==(0);
  $$ = $18 ? $10 : 0;
  $$0120 = $$;
 } else {
  $$0120 = $10;
 }
 $19 = ((($15)) + 3980|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($8)) + 32|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($6|0)>(0);
 if (!($23)) {
  return;
 }
 $24 = ($4|0)>(0);
 $25 = ($$0120|0)==(0|0);
 $26 = ((($8)) + 16|0);
 $27 = ((($8)) + 20|0);
 $28 = $22 << 3;
 $29 = $22 >>> 1;
 $30 = ((($8)) + 24|0);
 $31 = ((($$0120)) + 32|0);
 $32 = ((($$0120)) + 16|0);
 $33 = ((($0)) + 317056|0);
 $34 = ((($$0120)) + 20|0);
 $35 = ((($0)) + 317060|0);
 $36 = ((($$0120)) + 24|0);
 $$0119130 = 0;
 while(1) {
  if ($24) {
   $37 = Math_imul($$0119130, $4)|0;
   $38 = $$0119130 << 4;
   $39 = Math_imul($38, $22)|0;
   $40 = Math_imul($28, $$0119130)|0;
   $41 = $40 >>> 1;
   $42 = $$0119130 << 3;
   $43 = Math_imul($42, $22)|0;
   $44 = $43 >>> 1;
   if ($25) {
    $$0118128$us = 0;
    while(1) {
     $45 = (($$0118128$us) + ($37))|0;
     $46 = (($20) + ($45)|0);
     $47 = HEAP8[$46>>0]|0;
     $48 = ($47<<24>>24)==(0);
     if ($48) {
      $49 = HEAP32[$7>>2]|0;
      $50 = ((($49)) + 108|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = (($51) + 1)|0;
      HEAP32[$50>>2] = $52;
      $53 = $$0118128$us << 4;
      $54 = HEAP32[$26>>2]|0;
      $55 = (($54) + ($39)|0);
      $56 = (($55) + ($53)|0);
      dest=$56; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $57 = (($56) + ($22)|0);
      dest=$57; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $58 = (($57) + ($22)|0);
      dest=$58; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $59 = (($58) + ($22)|0);
      dest=$59; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $60 = (($59) + ($22)|0);
      dest=$60; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $61 = (($60) + ($22)|0);
      dest=$61; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $62 = (($61) + ($22)|0);
      dest=$62; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $63 = (($62) + ($22)|0);
      dest=$63; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $64 = (($63) + ($22)|0);
      dest=$64; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $65 = (($64) + ($22)|0);
      dest=$65; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $66 = (($65) + ($22)|0);
      dest=$66; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $67 = (($66) + ($22)|0);
      dest=$67; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $68 = (($67) + ($22)|0);
      dest=$68; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $69 = (($68) + ($22)|0);
      dest=$69; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $70 = (($69) + ($22)|0);
      dest=$70; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $71 = (($70) + ($22)|0);
      dest=$71; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $72 = HEAP32[$27>>2]|0;
      $73 = (($72) + ($41)|0);
      $74 = $$0118128$us << 3;
      $75 = (($73) + ($74)|0);
      $76 = $75;
      $77 = $76;
      HEAP8[$77>>0]=-2139062144&255;HEAP8[$77+1>>0]=(-2139062144>>8)&255;HEAP8[$77+2>>0]=(-2139062144>>16)&255;HEAP8[$77+3>>0]=-2139062144>>24;
      $78 = (($76) + 4)|0;
      $79 = $78;
      HEAP8[$79>>0]=-2139062144&255;HEAP8[$79+1>>0]=(-2139062144>>8)&255;HEAP8[$79+2>>0]=(-2139062144>>16)&255;HEAP8[$79+3>>0]=-2139062144>>24;
      $80 = (($75) + ($29)|0);
      $81 = $80;
      $82 = $81;
      HEAP8[$82>>0]=-2139062144&255;HEAP8[$82+1>>0]=(-2139062144>>8)&255;HEAP8[$82+2>>0]=(-2139062144>>16)&255;HEAP8[$82+3>>0]=-2139062144>>24;
      $83 = (($81) + 4)|0;
      $84 = $83;
      HEAP8[$84>>0]=-2139062144&255;HEAP8[$84+1>>0]=(-2139062144>>8)&255;HEAP8[$84+2>>0]=(-2139062144>>16)&255;HEAP8[$84+3>>0]=-2139062144>>24;
      $85 = (($80) + ($29)|0);
      $86 = $85;
      $87 = $86;
      HEAP8[$87>>0]=-2139062144&255;HEAP8[$87+1>>0]=(-2139062144>>8)&255;HEAP8[$87+2>>0]=(-2139062144>>16)&255;HEAP8[$87+3>>0]=-2139062144>>24;
      $88 = (($86) + 4)|0;
      $89 = $88;
      HEAP8[$89>>0]=-2139062144&255;HEAP8[$89+1>>0]=(-2139062144>>8)&255;HEAP8[$89+2>>0]=(-2139062144>>16)&255;HEAP8[$89+3>>0]=-2139062144>>24;
      $90 = (($85) + ($29)|0);
      $91 = $90;
      $92 = $91;
      HEAP8[$92>>0]=-2139062144&255;HEAP8[$92+1>>0]=(-2139062144>>8)&255;HEAP8[$92+2>>0]=(-2139062144>>16)&255;HEAP8[$92+3>>0]=-2139062144>>24;
      $93 = (($91) + 4)|0;
      $94 = $93;
      HEAP8[$94>>0]=-2139062144&255;HEAP8[$94+1>>0]=(-2139062144>>8)&255;HEAP8[$94+2>>0]=(-2139062144>>16)&255;HEAP8[$94+3>>0]=-2139062144>>24;
      $95 = (($90) + ($29)|0);
      $96 = $95;
      $97 = $96;
      HEAP8[$97>>0]=-2139062144&255;HEAP8[$97+1>>0]=(-2139062144>>8)&255;HEAP8[$97+2>>0]=(-2139062144>>16)&255;HEAP8[$97+3>>0]=-2139062144>>24;
      $98 = (($96) + 4)|0;
      $99 = $98;
      HEAP8[$99>>0]=-2139062144&255;HEAP8[$99+1>>0]=(-2139062144>>8)&255;HEAP8[$99+2>>0]=(-2139062144>>16)&255;HEAP8[$99+3>>0]=-2139062144>>24;
      $100 = (($95) + ($29)|0);
      $101 = $100;
      $102 = $101;
      HEAP8[$102>>0]=-2139062144&255;HEAP8[$102+1>>0]=(-2139062144>>8)&255;HEAP8[$102+2>>0]=(-2139062144>>16)&255;HEAP8[$102+3>>0]=-2139062144>>24;
      $103 = (($101) + 4)|0;
      $104 = $103;
      HEAP8[$104>>0]=-2139062144&255;HEAP8[$104+1>>0]=(-2139062144>>8)&255;HEAP8[$104+2>>0]=(-2139062144>>16)&255;HEAP8[$104+3>>0]=-2139062144>>24;
      $105 = (($100) + ($29)|0);
      $106 = $105;
      $107 = $106;
      HEAP8[$107>>0]=-2139062144&255;HEAP8[$107+1>>0]=(-2139062144>>8)&255;HEAP8[$107+2>>0]=(-2139062144>>16)&255;HEAP8[$107+3>>0]=-2139062144>>24;
      $108 = (($106) + 4)|0;
      $109 = $108;
      HEAP8[$109>>0]=-2139062144&255;HEAP8[$109+1>>0]=(-2139062144>>8)&255;HEAP8[$109+2>>0]=(-2139062144>>16)&255;HEAP8[$109+3>>0]=-2139062144>>24;
      $110 = (($105) + ($29)|0);
      $111 = $110;
      $112 = $111;
      HEAP8[$112>>0]=-2139062144&255;HEAP8[$112+1>>0]=(-2139062144>>8)&255;HEAP8[$112+2>>0]=(-2139062144>>16)&255;HEAP8[$112+3>>0]=-2139062144>>24;
      $113 = (($111) + 4)|0;
      $114 = $113;
      HEAP8[$114>>0]=-2139062144&255;HEAP8[$114+1>>0]=(-2139062144>>8)&255;HEAP8[$114+2>>0]=(-2139062144>>16)&255;HEAP8[$114+3>>0]=-2139062144>>24;
      $115 = HEAP32[$30>>2]|0;
      $116 = (($115) + ($41)|0);
      $117 = (($116) + ($74)|0);
      $118 = $117;
      $119 = $118;
      HEAP8[$119>>0]=-2139062144&255;HEAP8[$119+1>>0]=(-2139062144>>8)&255;HEAP8[$119+2>>0]=(-2139062144>>16)&255;HEAP8[$119+3>>0]=-2139062144>>24;
      $120 = (($118) + 4)|0;
      $121 = $120;
      HEAP8[$121>>0]=-2139062144&255;HEAP8[$121+1>>0]=(-2139062144>>8)&255;HEAP8[$121+2>>0]=(-2139062144>>16)&255;HEAP8[$121+3>>0]=-2139062144>>24;
      $122 = (($117) + ($29)|0);
      $123 = $122;
      $124 = $123;
      HEAP8[$124>>0]=-2139062144&255;HEAP8[$124+1>>0]=(-2139062144>>8)&255;HEAP8[$124+2>>0]=(-2139062144>>16)&255;HEAP8[$124+3>>0]=-2139062144>>24;
      $125 = (($123) + 4)|0;
      $126 = $125;
      HEAP8[$126>>0]=-2139062144&255;HEAP8[$126+1>>0]=(-2139062144>>8)&255;HEAP8[$126+2>>0]=(-2139062144>>16)&255;HEAP8[$126+3>>0]=-2139062144>>24;
      $127 = (($122) + ($29)|0);
      $128 = $127;
      $129 = $128;
      HEAP8[$129>>0]=-2139062144&255;HEAP8[$129+1>>0]=(-2139062144>>8)&255;HEAP8[$129+2>>0]=(-2139062144>>16)&255;HEAP8[$129+3>>0]=-2139062144>>24;
      $130 = (($128) + 4)|0;
      $131 = $130;
      HEAP8[$131>>0]=-2139062144&255;HEAP8[$131+1>>0]=(-2139062144>>8)&255;HEAP8[$131+2>>0]=(-2139062144>>16)&255;HEAP8[$131+3>>0]=-2139062144>>24;
      $132 = (($127) + ($29)|0);
      $133 = $132;
      $134 = $133;
      HEAP8[$134>>0]=-2139062144&255;HEAP8[$134+1>>0]=(-2139062144>>8)&255;HEAP8[$134+2>>0]=(-2139062144>>16)&255;HEAP8[$134+3>>0]=-2139062144>>24;
      $135 = (($133) + 4)|0;
      $136 = $135;
      HEAP8[$136>>0]=-2139062144&255;HEAP8[$136+1>>0]=(-2139062144>>8)&255;HEAP8[$136+2>>0]=(-2139062144>>16)&255;HEAP8[$136+3>>0]=-2139062144>>24;
      $137 = (($132) + ($29)|0);
      $138 = $137;
      $139 = $138;
      HEAP8[$139>>0]=-2139062144&255;HEAP8[$139+1>>0]=(-2139062144>>8)&255;HEAP8[$139+2>>0]=(-2139062144>>16)&255;HEAP8[$139+3>>0]=-2139062144>>24;
      $140 = (($138) + 4)|0;
      $141 = $140;
      HEAP8[$141>>0]=-2139062144&255;HEAP8[$141+1>>0]=(-2139062144>>8)&255;HEAP8[$141+2>>0]=(-2139062144>>16)&255;HEAP8[$141+3>>0]=-2139062144>>24;
      $142 = (($137) + ($29)|0);
      $143 = $142;
      $144 = $143;
      HEAP8[$144>>0]=-2139062144&255;HEAP8[$144+1>>0]=(-2139062144>>8)&255;HEAP8[$144+2>>0]=(-2139062144>>16)&255;HEAP8[$144+3>>0]=-2139062144>>24;
      $145 = (($143) + 4)|0;
      $146 = $145;
      HEAP8[$146>>0]=-2139062144&255;HEAP8[$146+1>>0]=(-2139062144>>8)&255;HEAP8[$146+2>>0]=(-2139062144>>16)&255;HEAP8[$146+3>>0]=-2139062144>>24;
      $147 = (($142) + ($29)|0);
      $148 = $147;
      $149 = $148;
      HEAP8[$149>>0]=-2139062144&255;HEAP8[$149+1>>0]=(-2139062144>>8)&255;HEAP8[$149+2>>0]=(-2139062144>>16)&255;HEAP8[$149+3>>0]=-2139062144>>24;
      $150 = (($148) + 4)|0;
      $151 = $150;
      HEAP8[$151>>0]=-2139062144&255;HEAP8[$151+1>>0]=(-2139062144>>8)&255;HEAP8[$151+2>>0]=(-2139062144>>16)&255;HEAP8[$151+3>>0]=-2139062144>>24;
      $152 = (($147) + ($29)|0);
      $153 = $152;
      $154 = $153;
      HEAP8[$154>>0]=-2139062144&255;HEAP8[$154+1>>0]=(-2139062144>>8)&255;HEAP8[$154+2>>0]=(-2139062144>>16)&255;HEAP8[$154+3>>0]=-2139062144>>24;
      $155 = (($153) + 4)|0;
      $156 = $155;
      HEAP8[$156>>0]=-2139062144&255;HEAP8[$156+1>>0]=(-2139062144>>8)&255;HEAP8[$156+2>>0]=(-2139062144>>16)&255;HEAP8[$156+3>>0]=-2139062144>>24;
     }
     $157 = (($$0118128$us) + 1)|0;
     $exitcond137 = ($157|0)==($4|0);
     if ($exitcond137) {
      break;
     } else {
      $$0118128$us = $157;
     }
    }
   } else {
    $$0118128 = 0;
    while(1) {
     $159 = (($$0118128) + ($37))|0;
     $160 = (($20) + ($159)|0);
     $161 = HEAP8[$160>>0]|0;
     $162 = ($161<<24>>24)==(0);
     if ($162) {
      $163 = HEAP32[$7>>2]|0;
      $164 = ((($163)) + 108|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = (($165) + 1)|0;
      HEAP32[$164>>2] = $166;
      $167 = $$0118128 << 4;
      $168 = HEAP32[$26>>2]|0;
      $169 = HEAP32[$31>>2]|0;
      $170 = (($168) + ($39)|0);
      $171 = (($170) + ($167)|0);
      $172 = HEAP32[$32>>2]|0;
      $173 = Math_imul($169, $38)|0;
      $174 = (($172) + ($173)|0);
      $175 = (($174) + ($167)|0);
      $176 = HEAP32[$33>>2]|0;
      FUNCTION_TABLE_viiii[$176 & 31]($171,$22,$175,$169);
      $177 = HEAP32[$27>>2]|0;
      $178 = (($177) + ($44)|0);
      $179 = $$0118128 << 3;
      $180 = (($178) + ($179)|0);
      $181 = HEAP32[$34>>2]|0;
      $182 = Math_imul($169, $42)|0;
      $183 = $182 >>> 1;
      $184 = (($181) + ($183)|0);
      $185 = (($184) + ($179)|0);
      $186 = HEAP32[$35>>2]|0;
      $187 = $169 >>> 1;
      FUNCTION_TABLE_viiii[$186 & 31]($180,$29,$185,$187);
      $188 = HEAP32[$30>>2]|0;
      $189 = (($188) + ($44)|0);
      $190 = (($189) + ($179)|0);
      $191 = HEAP32[$36>>2]|0;
      $192 = (($191) + ($183)|0);
      $193 = (($192) + ($179)|0);
      $194 = HEAP32[$35>>2]|0;
      FUNCTION_TABLE_viiii[$194 & 31]($190,$29,$193,$187);
     }
     $195 = (($$0118128) + 1)|0;
     $exitcond = ($195|0)==($4|0);
     if ($exitcond) {
      break;
     } else {
      $$0118128 = $195;
     }
    }
   }
  }
  $158 = (($$0119130) + 1)|0;
  $exitcond138 = ($158|0)==($6|0);
  if ($exitcond138) {
   break;
  } else {
   $$0119130 = $158;
  }
 }
 return;
}
function __ZN7WelsDec24GetAvilInfoFromCorrectMbEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0225239 = 0, $$0227237 = 0, $$0228238 = 0, $$0235 = 0, $$pre = 0, $$sink = 0, $$sink231 = 0, $$sink245 = 0, $$sink246 = 0, $$sink3 = 0, $$sink3$ph = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond242 = 0, $exitcond243 = 0, $exitcond244 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $1 = sp;
 $2 = ((($0)) + 241924|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($3)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 241932|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 3980|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 512348|0);
 _memset(($12|0),0,192)|0;
 dest=$1; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $13 = ($7|0)>(0);
 if ($13) {
  $14 = ($5|0)>(0);
  $15 = ((($9)) + 3908|0);
  $16 = ((($9)) + 3932|0);
  $17 = ((($9)) + 3916|0);
  $18 = ((($9)) + 4008|0);
  $$0225239 = 0;
  while(1) {
   if ($14) {
    $19 = Math_imul($$0225239, $5)|0;
    $$0228238 = 0;
    while(1) {
     $21 = (($$0228238) + ($19))|0;
     $22 = (($11) + ($21)|0);
     $23 = HEAP8[$22>>0]|0;
     $24 = ($23<<24>>24)==(0);
     L9: do {
      if (!($24)) {
       $25 = HEAP32[$15>>2]|0;
       $26 = (($25) + ($21<<1)|0);
       $27 = HEAP16[$26>>1]|0;
       $28 = $27 << 16 >> 16;
       $29 = $28 & 504;
       $30 = ($29|0)==(0);
       if (!($30)) {
        switch ($28|0) {
        case 8: case 256:  {
         $31 = HEAP32[$16>>2]|0;
         $32 = (($31) + ($21<<4)|0);
         $33 = HEAP8[$32>>0]|0;
         $34 = HEAP32[$17>>2]|0;
         $35 = (($34) + ($21<<6)|0);
         $36 = HEAP16[$35>>1]|0;
         $37 = $36 << 16 >> 16;
         $38 = $33 << 24 >> 24;
         $39 = (((($0)) + 512348|0) + ($38<<3)|0);
         $40 = HEAP32[$39>>2]|0;
         $41 = (($40) + ($37))|0;
         HEAP32[$39>>2] = $41;
         $42 = HEAP32[$17>>2]|0;
         $43 = (((($42) + ($21<<6)|0)) + 2|0);
         $44 = HEAP16[$43>>1]|0;
         $45 = $44 << 16 >> 16;
         $46 = (((((($0)) + 512348|0) + ($38<<3)|0)) + 4|0);
         $47 = HEAP32[$46>>2]|0;
         $48 = (($47) + ($45))|0;
         HEAP32[$46>>2] = $48;
         $49 = (((($0)) + 5468|0) + ($38<<2)|0);
         $50 = HEAP32[$49>>2]|0;
         $51 = (((($0)) + 512476|0) + ($38<<2)|0);
         HEAP32[$51>>2] = $50;
         $52 = (($1) + ($38<<2)|0);
         $53 = HEAP32[$52>>2]|0;
         $54 = (($53) + 1)|0;
         HEAP32[$52>>2] = $54;
         break L9;
         break;
        }
        case 16:  {
         $55 = HEAP32[$16>>2]|0;
         $56 = (($55) + ($21<<4)|0);
         $57 = HEAP8[$56>>0]|0;
         $58 = HEAP32[$17>>2]|0;
         $59 = (($58) + ($21<<6)|0);
         $60 = HEAP16[$59>>1]|0;
         $61 = $60 << 16 >> 16;
         $62 = $57 << 24 >> 24;
         $63 = (((($0)) + 512348|0) + ($62<<3)|0);
         $64 = HEAP32[$63>>2]|0;
         $65 = (($64) + ($61))|0;
         HEAP32[$63>>2] = $65;
         $66 = HEAP32[$17>>2]|0;
         $67 = (((($66) + ($21<<6)|0)) + 2|0);
         $68 = HEAP16[$67>>1]|0;
         $69 = $68 << 16 >> 16;
         $70 = (((((($0)) + 512348|0) + ($62<<3)|0)) + 4|0);
         $71 = HEAP32[$70>>2]|0;
         $72 = (($71) + ($69))|0;
         HEAP32[$70>>2] = $72;
         $73 = (((($0)) + 5468|0) + ($62<<2)|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (((($0)) + 512476|0) + ($62<<2)|0);
         HEAP32[$75>>2] = $74;
         $76 = (($1) + ($62<<2)|0);
         $77 = HEAP32[$76>>2]|0;
         $78 = (($77) + 1)|0;
         HEAP32[$76>>2] = $78;
         $79 = HEAP32[$16>>2]|0;
         $80 = (((($79) + ($21<<4)|0)) + 8|0);
         $81 = HEAP8[$80>>0]|0;
         $82 = HEAP32[$17>>2]|0;
         $83 = (((($82) + ($21<<6)|0)) + 32|0);
         $84 = HEAP16[$83>>1]|0;
         $85 = $84 << 16 >> 16;
         $86 = $81 << 24 >> 24;
         $87 = (((($0)) + 512348|0) + ($86<<3)|0);
         $88 = HEAP32[$87>>2]|0;
         $89 = (($88) + ($85))|0;
         HEAP32[$87>>2] = $89;
         $90 = HEAP32[$17>>2]|0;
         $91 = (((($90) + ($21<<6)|0)) + 34|0);
         $92 = HEAP16[$91>>1]|0;
         $93 = $92 << 16 >> 16;
         $94 = (((((($0)) + 512348|0) + ($86<<3)|0)) + 4|0);
         $95 = HEAP32[$94>>2]|0;
         $96 = (($95) + ($93))|0;
         HEAP32[$94>>2] = $96;
         $97 = (((($0)) + 5468|0) + ($86<<2)|0);
         $98 = HEAP32[$97>>2]|0;
         $99 = (((($0)) + 512476|0) + ($86<<2)|0);
         HEAP32[$99>>2] = $98;
         $100 = (($1) + ($86<<2)|0);
         $101 = HEAP32[$100>>2]|0;
         $102 = (($101) + 1)|0;
         HEAP32[$100>>2] = $102;
         break L9;
         break;
        }
        case 32:  {
         $103 = HEAP32[$16>>2]|0;
         $104 = (($103) + ($21<<4)|0);
         $105 = HEAP8[$104>>0]|0;
         $106 = HEAP32[$17>>2]|0;
         $107 = (($106) + ($21<<6)|0);
         $108 = HEAP16[$107>>1]|0;
         $109 = $108 << 16 >> 16;
         $110 = $105 << 24 >> 24;
         $111 = (((($0)) + 512348|0) + ($110<<3)|0);
         $112 = HEAP32[$111>>2]|0;
         $113 = (($112) + ($109))|0;
         HEAP32[$111>>2] = $113;
         $114 = HEAP32[$17>>2]|0;
         $115 = (((($114) + ($21<<6)|0)) + 2|0);
         $116 = HEAP16[$115>>1]|0;
         $117 = $116 << 16 >> 16;
         $118 = (((((($0)) + 512348|0) + ($110<<3)|0)) + 4|0);
         $119 = HEAP32[$118>>2]|0;
         $120 = (($119) + ($117))|0;
         HEAP32[$118>>2] = $120;
         $121 = (((($0)) + 5468|0) + ($110<<2)|0);
         $122 = HEAP32[$121>>2]|0;
         $123 = (((($0)) + 512476|0) + ($110<<2)|0);
         HEAP32[$123>>2] = $122;
         $124 = (($1) + ($110<<2)|0);
         $125 = HEAP32[$124>>2]|0;
         $126 = (($125) + 1)|0;
         HEAP32[$124>>2] = $126;
         $127 = HEAP32[$16>>2]|0;
         $128 = (((($127) + ($21<<4)|0)) + 2|0);
         $129 = HEAP8[$128>>0]|0;
         $130 = HEAP32[$17>>2]|0;
         $131 = (((($130) + ($21<<6)|0)) + 8|0);
         $132 = HEAP16[$131>>1]|0;
         $133 = $132 << 16 >> 16;
         $134 = $129 << 24 >> 24;
         $135 = (((($0)) + 512348|0) + ($134<<3)|0);
         $136 = HEAP32[$135>>2]|0;
         $137 = (($136) + ($133))|0;
         HEAP32[$135>>2] = $137;
         $138 = HEAP32[$17>>2]|0;
         $139 = (((($138) + ($21<<6)|0)) + 10|0);
         $140 = HEAP16[$139>>1]|0;
         $141 = $140 << 16 >> 16;
         $142 = (((((($0)) + 512348|0) + ($134<<3)|0)) + 4|0);
         $143 = HEAP32[$142>>2]|0;
         $144 = (($143) + ($141))|0;
         HEAP32[$142>>2] = $144;
         $145 = (((($0)) + 5468|0) + ($134<<2)|0);
         $146 = HEAP32[$145>>2]|0;
         $147 = (((($0)) + 512476|0) + ($134<<2)|0);
         HEAP32[$147>>2] = $146;
         $148 = (($1) + ($134<<2)|0);
         $149 = HEAP32[$148>>2]|0;
         $150 = (($149) + 1)|0;
         HEAP32[$148>>2] = $150;
         break L9;
         break;
        }
        case 128: case 64:  {
         $$0227237 = 0;
         while(1) {
          $151 = HEAP32[$18>>2]|0;
          $152 = ((($151) + ($21<<2)|0) + ($$0227237)|0);
          $153 = HEAP8[$152>>0]|0;
          $154 = $153 << 24 >> 24;
          $155 = $$0227237 >>> 1;
          $156 = $155 << 3;
          $157 = $$0227237 << 1;
          $158 = $157 & 2;
          $159 = $156 | $158;
          $160 = HEAP32[$16>>2]|0;
          $161 = ((($160) + ($21<<4)|0) + ($159)|0);
          $162 = HEAP8[$161>>0]|0;
          $163 = $162 << 24 >> 24;
          $164 = (((($0)) + 5468|0) + ($163<<2)|0);
          $165 = HEAP32[$164>>2]|0;
          $166 = (((($0)) + 512476|0) + ($163<<2)|0);
          HEAP32[$166>>2] = $165;
          switch ($154|0) {
          case 1:  {
           $214 = HEAP32[$17>>2]|0;
           $215 = ((($214) + ($21<<6)|0) + ($159<<2)|0);
           $216 = HEAP16[$215>>1]|0;
           $217 = $216 << 16 >> 16;
           $218 = (((($0)) + 512348|0) + ($163<<3)|0);
           $219 = HEAP32[$218>>2]|0;
           $220 = (($219) + ($217))|0;
           HEAP32[$218>>2] = $220;
           $221 = HEAP32[$17>>2]|0;
           $222 = ((((($221) + ($21<<6)|0) + ($159<<2)|0)) + 2|0);
           $223 = HEAP16[$222>>1]|0;
           $224 = $223 << 16 >> 16;
           $225 = (((((($0)) + 512348|0) + ($163<<3)|0)) + 4|0);
           $$pre = HEAP32[$225>>2]|0;
           $$sink = $225;$$sink231 = $224;$$sink3$ph = 1;$275 = $$pre;
           label = 17;
           break;
          }
          case 2:  {
           $226 = HEAP32[$17>>2]|0;
           $227 = ((($226) + ($21<<6)|0) + ($159<<2)|0);
           $228 = HEAP16[$227>>1]|0;
           $229 = $228 << 16 >> 16;
           $230 = (((($0)) + 512348|0) + ($163<<3)|0);
           $231 = HEAP32[$230>>2]|0;
           $232 = (($231) + ($229))|0;
           HEAP32[$230>>2] = $232;
           $233 = HEAP32[$17>>2]|0;
           $234 = ((((($233) + ($21<<6)|0) + ($159<<2)|0)) + 2|0);
           $235 = HEAP16[$234>>1]|0;
           $236 = $235 << 16 >> 16;
           $237 = (((((($0)) + 512348|0) + ($163<<3)|0)) + 4|0);
           $238 = HEAP32[$237>>2]|0;
           $239 = (($238) + ($236))|0;
           HEAP32[$237>>2] = $239;
           $240 = HEAP32[$17>>2]|0;
           $241 = $159 | 4;
           $242 = ((($240) + ($21<<6)|0) + ($241<<2)|0);
           $243 = HEAP16[$242>>1]|0;
           $244 = $243 << 16 >> 16;
           $245 = (($232) + ($244))|0;
           HEAP32[$230>>2] = $245;
           $246 = HEAP32[$17>>2]|0;
           $247 = ((((($246) + ($21<<6)|0) + ($241<<2)|0)) + 2|0);
           $248 = HEAP16[$247>>1]|0;
           $249 = $248 << 16 >> 16;
           $$sink = $237;$$sink231 = $249;$$sink3$ph = 2;$275 = $239;
           label = 17;
           break;
          }
          case 4:  {
           $250 = HEAP32[$17>>2]|0;
           $251 = ((($250) + ($21<<6)|0) + ($159<<2)|0);
           $252 = HEAP16[$251>>1]|0;
           $253 = $252 << 16 >> 16;
           $254 = (((($0)) + 512348|0) + ($163<<3)|0);
           $255 = HEAP32[$254>>2]|0;
           $256 = (($255) + ($253))|0;
           HEAP32[$254>>2] = $256;
           $257 = HEAP32[$17>>2]|0;
           $258 = ((((($257) + ($21<<6)|0) + ($159<<2)|0)) + 2|0);
           $259 = HEAP16[$258>>1]|0;
           $260 = $259 << 16 >> 16;
           $261 = (((((($0)) + 512348|0) + ($163<<3)|0)) + 4|0);
           $262 = HEAP32[$261>>2]|0;
           $263 = (($262) + ($260))|0;
           HEAP32[$261>>2] = $263;
           $264 = HEAP32[$17>>2]|0;
           $265 = $159 | 1;
           $266 = ((($264) + ($21<<6)|0) + ($265<<2)|0);
           $267 = HEAP16[$266>>1]|0;
           $268 = $267 << 16 >> 16;
           $269 = (($256) + ($268))|0;
           HEAP32[$254>>2] = $269;
           $270 = HEAP32[$17>>2]|0;
           $271 = ((((($270) + ($21<<6)|0) + ($265<<2)|0)) + 2|0);
           $272 = HEAP16[$271>>1]|0;
           $273 = $272 << 16 >> 16;
           $$sink = $261;$$sink231 = $273;$$sink3$ph = 2;$275 = $263;
           label = 17;
           break;
          }
          case 8:  {
           $167 = (((($0)) + 512348|0) + ($163<<3)|0);
           $168 = (((((($0)) + 512348|0) + ($163<<3)|0)) + 4|0);
           $169 = HEAP32[$17>>2]|0;
           $170 = ((($169) + ($21<<6)|0) + ($159<<2)|0);
           $171 = HEAP16[$170>>1]|0;
           $172 = $171 << 16 >> 16;
           $173 = HEAP32[$167>>2]|0;
           $174 = (($173) + ($172))|0;
           HEAP32[$167>>2] = $174;
           $175 = HEAP32[$17>>2]|0;
           $176 = ((((($175) + ($21<<6)|0) + ($159<<2)|0)) + 2|0);
           $177 = HEAP16[$176>>1]|0;
           $178 = $177 << 16 >> 16;
           $179 = HEAP32[$168>>2]|0;
           $180 = (($179) + ($178))|0;
           HEAP32[$168>>2] = $180;
           $181 = HEAP32[$17>>2]|0;
           $182 = $159 | 1;
           $183 = ((($181) + ($21<<6)|0) + ($182<<2)|0);
           $184 = HEAP16[$183>>1]|0;
           $185 = $184 << 16 >> 16;
           $186 = (($174) + ($185))|0;
           HEAP32[$167>>2] = $186;
           $187 = HEAP32[$17>>2]|0;
           $188 = ((((($187) + ($21<<6)|0) + ($182<<2)|0)) + 2|0);
           $189 = HEAP16[$188>>1]|0;
           $190 = $189 << 16 >> 16;
           $191 = (($180) + ($190))|0;
           HEAP32[$168>>2] = $191;
           $192 = HEAP32[$17>>2]|0;
           $193 = $159 | 4;
           $194 = ((($192) + ($21<<6)|0) + ($193<<2)|0);
           $195 = HEAP16[$194>>1]|0;
           $196 = $195 << 16 >> 16;
           $197 = (($186) + ($196))|0;
           HEAP32[$167>>2] = $197;
           $198 = HEAP32[$17>>2]|0;
           $199 = ((((($198) + ($21<<6)|0) + ($193<<2)|0)) + 2|0);
           $200 = HEAP16[$199>>1]|0;
           $201 = $200 << 16 >> 16;
           $202 = (($191) + ($201))|0;
           HEAP32[$168>>2] = $202;
           $203 = HEAP32[$17>>2]|0;
           $204 = $159 | 5;
           $205 = ((($203) + ($21<<6)|0) + ($204<<2)|0);
           $206 = HEAP16[$205>>1]|0;
           $207 = $206 << 16 >> 16;
           $208 = (($197) + ($207))|0;
           HEAP32[$167>>2] = $208;
           $209 = HEAP32[$17>>2]|0;
           $210 = ((((($209) + ($21<<6)|0) + ($204<<2)|0)) + 2|0);
           $211 = HEAP16[$210>>1]|0;
           $212 = $211 << 16 >> 16;
           $213 = (($202) + ($212))|0;
           $$sink245 = $213;$$sink246 = $168;$$sink3 = 4;
           label = 18;
           break;
          }
          default: {
          }
          }
          if ((label|0) == 17) {
           label = 0;
           $274 = (($275) + ($$sink231))|0;
           $$sink245 = $274;$$sink246 = $$sink;$$sink3 = $$sink3$ph;
           label = 18;
          }
          if ((label|0) == 18) {
           label = 0;
           HEAP32[$$sink246>>2] = $$sink245;
           $276 = (($1) + ($163<<2)|0);
           $277 = HEAP32[$276>>2]|0;
           $278 = (($277) + ($$sink3))|0;
           HEAP32[$276>>2] = $278;
          }
          $279 = (($$0227237) + 1)|0;
          $exitcond242 = ($279|0)==(4);
          if ($exitcond242) {
           break L9;
          } else {
           $$0227237 = $279;
          }
         }
         break;
        }
        default: {
         break L9;
        }
        }
       }
      }
     } while(0);
     $280 = (($$0228238) + 1)|0;
     $exitcond243 = ($280|0)==($5|0);
     if ($exitcond243) {
      break;
     } else {
      $$0228238 = $280;
     }
    }
   }
   $20 = (($$0225239) + 1)|0;
   $exitcond244 = ($20|0)==($7|0);
   if ($exitcond244) {
    $$0235 = 0;
    break;
   } else {
    $$0225239 = $20;
   }
  }
 } else {
  $$0235 = 0;
 }
 while(1) {
  $281 = (($1) + ($$0235<<2)|0);
  $282 = HEAP32[$281>>2]|0;
  $283 = ($282|0)==(0);
  if (!($283)) {
   $284 = (((($0)) + 512348|0) + ($$0235<<3)|0);
   $285 = HEAP32[$284>>2]|0;
   $286 = (($285|0) / ($282|0))&-1;
   HEAP32[$284>>2] = $286;
   $287 = (((((($0)) + 512348|0) + ($$0235<<3)|0)) + 4|0);
   $288 = HEAP32[$287>>2]|0;
   $289 = (($288|0) / ($282|0))&-1;
   HEAP32[$287>>2] = $289;
  }
  $290 = (($$0235) + 1)|0;
  $exitcond = ($290|0)==(16);
  if ($exitcond) {
   break;
  } else {
   $$0235 = $290;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec21DoErrorConSliceMVCopyEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$091101$us$us = 0, $$091101$us107 = 0, $$092103$us = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond = 0, $exitcond121 = 0, $exitcond122 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer = sp;
 $1 = sp + 8|0;
 $2 = ((($0)) + 241924|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($3)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 5464|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 316852|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 241932|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 3980|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($9)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($11|0)!=(0|0);
 if ($18) {
  $19 = ((($11)) + 32|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($1)) + 24|0);
  HEAP32[$21>>2] = $20;
  $22 = ((($11)) + 36|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($1)) + 28|0);
  HEAP32[$24>>2] = $23;
  $25 = ((($11)) + 16|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($1)) + 12|0);
  HEAP32[$27>>2] = $26;
  $28 = ((($11)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($1)) + 16|0);
  HEAP32[$30>>2] = $29;
  $31 = ((($11)) + 24|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($1)) + 20|0);
  HEAP32[$33>>2] = $32;
  $34 = ((($1)) + 32|0);
  HEAP32[$34>>2] = $17;
  $35 = ((($9)) + 36|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($1)) + 36|0);
  HEAP32[$37>>2] = $36;
  $38 = ((($9)) + 56|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($1)) + 40|0);
  HEAP32[$40>>2] = $39;
  $41 = ((($9)) + 60|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ((($1)) + 44|0);
  HEAP32[$43>>2] = $42;
  $44 = ($9|0)==($11|0);
  if ($44) {
   __Z7WelsLogP13TagLogContextiPKcz($0,1,23917,$vararg_buffer);
  }
 }
 $45 = ($7|0)>(0);
 if (!($45)) {
  STACKTOP = sp;return;
 }
 $46 = ($5|0)>(0);
 $47 = ((($9)) + 16|0);
 $48 = $17 << 4;
 $49 = ((($9)) + 20|0);
 $50 = $17 << 3;
 $51 = $17 >>> 1;
 $52 = ((($9)) + 24|0);
 if ($46) {
  $$092103$us = 0;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $53 = Math_imul($$092103$us, $5)|0;
  $54 = Math_imul($48, $$092103$us)|0;
  $55 = Math_imul($50, $$092103$us)|0;
  $56 = $55 >>> 1;
  if ($18) {
   $$091101$us$us = 0;
   while(1) {
    $171 = (($$091101$us$us) + ($53))|0;
    $172 = (($15) + ($171)|0);
    $173 = HEAP8[$172>>0]|0;
    $174 = ($173<<24>>24)==(0);
    if ($174) {
     $175 = HEAP32[$8>>2]|0;
     $176 = ((($175)) + 108|0);
     $177 = HEAP32[$176>>2]|0;
     $178 = (($177) + 1)|0;
     HEAP32[$176>>2] = $178;
     __ZN7WelsDec12DoMbECMvCopyEPNS_21TagWelsDecoderContextEPNS_10TagPictureES3_iiiPNS_14TagMCRefMemberE($0,$9,$11,0,$$091101$us$us,$$092103$us,$1);
    }
    $179 = (($$091101$us$us) + 1)|0;
    $exitcond121 = ($179|0)==($5|0);
    if ($exitcond121) {
     break;
    } else {
     $$091101$us$us = $179;
    }
   }
  } else {
   $$091101$us107 = 0;
   while(1) {
    $57 = (($$091101$us107) + ($53))|0;
    $58 = (($15) + ($57)|0);
    $59 = HEAP8[$58>>0]|0;
    $60 = ($59<<24>>24)==(0);
    if ($60) {
     $61 = HEAP32[$8>>2]|0;
     $62 = ((($61)) + 108|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = (($63) + 1)|0;
     HEAP32[$62>>2] = $64;
     $65 = HEAP32[$47>>2]|0;
     $66 = (($65) + ($54)|0);
     $67 = $$091101$us107 << 4;
     $68 = (($66) + ($67)|0);
     dest=$68; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $69 = (($68) + ($17)|0);
     dest=$69; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $70 = (($69) + ($17)|0);
     dest=$70; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $71 = (($70) + ($17)|0);
     dest=$71; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $72 = (($71) + ($17)|0);
     dest=$72; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $73 = (($72) + ($17)|0);
     dest=$73; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $74 = (($73) + ($17)|0);
     dest=$74; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $75 = (($74) + ($17)|0);
     dest=$75; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $76 = (($75) + ($17)|0);
     dest=$76; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $77 = (($76) + ($17)|0);
     dest=$77; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $78 = (($77) + ($17)|0);
     dest=$78; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $79 = (($78) + ($17)|0);
     dest=$79; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $80 = (($79) + ($17)|0);
     dest=$80; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $81 = (($80) + ($17)|0);
     dest=$81; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $82 = (($81) + ($17)|0);
     dest=$82; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $83 = (($82) + ($17)|0);
     dest=$83; stop=dest+16|0; do { HEAP8[dest>>0]=128|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     $84 = HEAP32[$49>>2]|0;
     $85 = (($84) + ($56)|0);
     $86 = $$091101$us107 << 3;
     $87 = (($85) + ($86)|0);
     $88 = $87;
     $89 = $88;
     HEAP8[$89>>0]=-2139062144&255;HEAP8[$89+1>>0]=(-2139062144>>8)&255;HEAP8[$89+2>>0]=(-2139062144>>16)&255;HEAP8[$89+3>>0]=-2139062144>>24;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP8[$91>>0]=-2139062144&255;HEAP8[$91+1>>0]=(-2139062144>>8)&255;HEAP8[$91+2>>0]=(-2139062144>>16)&255;HEAP8[$91+3>>0]=-2139062144>>24;
     $92 = (($87) + ($51)|0);
     $93 = $92;
     $94 = $93;
     HEAP8[$94>>0]=-2139062144&255;HEAP8[$94+1>>0]=(-2139062144>>8)&255;HEAP8[$94+2>>0]=(-2139062144>>16)&255;HEAP8[$94+3>>0]=-2139062144>>24;
     $95 = (($93) + 4)|0;
     $96 = $95;
     HEAP8[$96>>0]=-2139062144&255;HEAP8[$96+1>>0]=(-2139062144>>8)&255;HEAP8[$96+2>>0]=(-2139062144>>16)&255;HEAP8[$96+3>>0]=-2139062144>>24;
     $97 = (($92) + ($51)|0);
     $98 = $97;
     $99 = $98;
     HEAP8[$99>>0]=-2139062144&255;HEAP8[$99+1>>0]=(-2139062144>>8)&255;HEAP8[$99+2>>0]=(-2139062144>>16)&255;HEAP8[$99+3>>0]=-2139062144>>24;
     $100 = (($98) + 4)|0;
     $101 = $100;
     HEAP8[$101>>0]=-2139062144&255;HEAP8[$101+1>>0]=(-2139062144>>8)&255;HEAP8[$101+2>>0]=(-2139062144>>16)&255;HEAP8[$101+3>>0]=-2139062144>>24;
     $102 = (($97) + ($51)|0);
     $103 = $102;
     $104 = $103;
     HEAP8[$104>>0]=-2139062144&255;HEAP8[$104+1>>0]=(-2139062144>>8)&255;HEAP8[$104+2>>0]=(-2139062144>>16)&255;HEAP8[$104+3>>0]=-2139062144>>24;
     $105 = (($103) + 4)|0;
     $106 = $105;
     HEAP8[$106>>0]=-2139062144&255;HEAP8[$106+1>>0]=(-2139062144>>8)&255;HEAP8[$106+2>>0]=(-2139062144>>16)&255;HEAP8[$106+3>>0]=-2139062144>>24;
     $107 = (($102) + ($51)|0);
     $108 = $107;
     $109 = $108;
     HEAP8[$109>>0]=-2139062144&255;HEAP8[$109+1>>0]=(-2139062144>>8)&255;HEAP8[$109+2>>0]=(-2139062144>>16)&255;HEAP8[$109+3>>0]=-2139062144>>24;
     $110 = (($108) + 4)|0;
     $111 = $110;
     HEAP8[$111>>0]=-2139062144&255;HEAP8[$111+1>>0]=(-2139062144>>8)&255;HEAP8[$111+2>>0]=(-2139062144>>16)&255;HEAP8[$111+3>>0]=-2139062144>>24;
     $112 = (($107) + ($51)|0);
     $113 = $112;
     $114 = $113;
     HEAP8[$114>>0]=-2139062144&255;HEAP8[$114+1>>0]=(-2139062144>>8)&255;HEAP8[$114+2>>0]=(-2139062144>>16)&255;HEAP8[$114+3>>0]=-2139062144>>24;
     $115 = (($113) + 4)|0;
     $116 = $115;
     HEAP8[$116>>0]=-2139062144&255;HEAP8[$116+1>>0]=(-2139062144>>8)&255;HEAP8[$116+2>>0]=(-2139062144>>16)&255;HEAP8[$116+3>>0]=-2139062144>>24;
     $117 = (($112) + ($51)|0);
     $118 = $117;
     $119 = $118;
     HEAP8[$119>>0]=-2139062144&255;HEAP8[$119+1>>0]=(-2139062144>>8)&255;HEAP8[$119+2>>0]=(-2139062144>>16)&255;HEAP8[$119+3>>0]=-2139062144>>24;
     $120 = (($118) + 4)|0;
     $121 = $120;
     HEAP8[$121>>0]=-2139062144&255;HEAP8[$121+1>>0]=(-2139062144>>8)&255;HEAP8[$121+2>>0]=(-2139062144>>16)&255;HEAP8[$121+3>>0]=-2139062144>>24;
     $122 = (($117) + ($51)|0);
     $123 = $122;
     $124 = $123;
     HEAP8[$124>>0]=-2139062144&255;HEAP8[$124+1>>0]=(-2139062144>>8)&255;HEAP8[$124+2>>0]=(-2139062144>>16)&255;HEAP8[$124+3>>0]=-2139062144>>24;
     $125 = (($123) + 4)|0;
     $126 = $125;
     HEAP8[$126>>0]=-2139062144&255;HEAP8[$126+1>>0]=(-2139062144>>8)&255;HEAP8[$126+2>>0]=(-2139062144>>16)&255;HEAP8[$126+3>>0]=-2139062144>>24;
     $127 = HEAP32[$52>>2]|0;
     $128 = (($127) + ($56)|0);
     $129 = (($128) + ($86)|0);
     $130 = $129;
     $131 = $130;
     HEAP8[$131>>0]=-2139062144&255;HEAP8[$131+1>>0]=(-2139062144>>8)&255;HEAP8[$131+2>>0]=(-2139062144>>16)&255;HEAP8[$131+3>>0]=-2139062144>>24;
     $132 = (($130) + 4)|0;
     $133 = $132;
     HEAP8[$133>>0]=-2139062144&255;HEAP8[$133+1>>0]=(-2139062144>>8)&255;HEAP8[$133+2>>0]=(-2139062144>>16)&255;HEAP8[$133+3>>0]=-2139062144>>24;
     $134 = (($129) + ($51)|0);
     $135 = $134;
     $136 = $135;
     HEAP8[$136>>0]=-2139062144&255;HEAP8[$136+1>>0]=(-2139062144>>8)&255;HEAP8[$136+2>>0]=(-2139062144>>16)&255;HEAP8[$136+3>>0]=-2139062144>>24;
     $137 = (($135) + 4)|0;
     $138 = $137;
     HEAP8[$138>>0]=-2139062144&255;HEAP8[$138+1>>0]=(-2139062144>>8)&255;HEAP8[$138+2>>0]=(-2139062144>>16)&255;HEAP8[$138+3>>0]=-2139062144>>24;
     $139 = (($134) + ($51)|0);
     $140 = $139;
     $141 = $140;
     HEAP8[$141>>0]=-2139062144&255;HEAP8[$141+1>>0]=(-2139062144>>8)&255;HEAP8[$141+2>>0]=(-2139062144>>16)&255;HEAP8[$141+3>>0]=-2139062144>>24;
     $142 = (($140) + 4)|0;
     $143 = $142;
     HEAP8[$143>>0]=-2139062144&255;HEAP8[$143+1>>0]=(-2139062144>>8)&255;HEAP8[$143+2>>0]=(-2139062144>>16)&255;HEAP8[$143+3>>0]=-2139062144>>24;
     $144 = (($139) + ($51)|0);
     $145 = $144;
     $146 = $145;
     HEAP8[$146>>0]=-2139062144&255;HEAP8[$146+1>>0]=(-2139062144>>8)&255;HEAP8[$146+2>>0]=(-2139062144>>16)&255;HEAP8[$146+3>>0]=-2139062144>>24;
     $147 = (($145) + 4)|0;
     $148 = $147;
     HEAP8[$148>>0]=-2139062144&255;HEAP8[$148+1>>0]=(-2139062144>>8)&255;HEAP8[$148+2>>0]=(-2139062144>>16)&255;HEAP8[$148+3>>0]=-2139062144>>24;
     $149 = (($144) + ($51)|0);
     $150 = $149;
     $151 = $150;
     HEAP8[$151>>0]=-2139062144&255;HEAP8[$151+1>>0]=(-2139062144>>8)&255;HEAP8[$151+2>>0]=(-2139062144>>16)&255;HEAP8[$151+3>>0]=-2139062144>>24;
     $152 = (($150) + 4)|0;
     $153 = $152;
     HEAP8[$153>>0]=-2139062144&255;HEAP8[$153+1>>0]=(-2139062144>>8)&255;HEAP8[$153+2>>0]=(-2139062144>>16)&255;HEAP8[$153+3>>0]=-2139062144>>24;
     $154 = (($149) + ($51)|0);
     $155 = $154;
     $156 = $155;
     HEAP8[$156>>0]=-2139062144&255;HEAP8[$156+1>>0]=(-2139062144>>8)&255;HEAP8[$156+2>>0]=(-2139062144>>16)&255;HEAP8[$156+3>>0]=-2139062144>>24;
     $157 = (($155) + 4)|0;
     $158 = $157;
     HEAP8[$158>>0]=-2139062144&255;HEAP8[$158+1>>0]=(-2139062144>>8)&255;HEAP8[$158+2>>0]=(-2139062144>>16)&255;HEAP8[$158+3>>0]=-2139062144>>24;
     $159 = (($154) + ($51)|0);
     $160 = $159;
     $161 = $160;
     HEAP8[$161>>0]=-2139062144&255;HEAP8[$161+1>>0]=(-2139062144>>8)&255;HEAP8[$161+2>>0]=(-2139062144>>16)&255;HEAP8[$161+3>>0]=-2139062144>>24;
     $162 = (($160) + 4)|0;
     $163 = $162;
     HEAP8[$163>>0]=-2139062144&255;HEAP8[$163+1>>0]=(-2139062144>>8)&255;HEAP8[$163+2>>0]=(-2139062144>>16)&255;HEAP8[$163+3>>0]=-2139062144>>24;
     $164 = (($159) + ($51)|0);
     $165 = $164;
     $166 = $165;
     HEAP8[$166>>0]=-2139062144&255;HEAP8[$166+1>>0]=(-2139062144>>8)&255;HEAP8[$166+2>>0]=(-2139062144>>16)&255;HEAP8[$166+3>>0]=-2139062144>>24;
     $167 = (($165) + 4)|0;
     $168 = $167;
     HEAP8[$168>>0]=-2139062144&255;HEAP8[$168+1>>0]=(-2139062144>>8)&255;HEAP8[$168+2>>0]=(-2139062144>>16)&255;HEAP8[$168+3>>0]=-2139062144>>24;
    }
    $169 = (($$091101$us107) + 1)|0;
    $exitcond = ($169|0)==($5|0);
    if ($exitcond) {
     break;
    } else {
     $$091101$us107 = $169;
    }
   }
  }
  $170 = (($$092103$us) + 1)|0;
  $exitcond122 = ($170|0)==($7|0);
  if ($exitcond122) {
   break;
  } else {
   $$092103$us = $170;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec12DoMbECMvCopyEPNS_21TagWelsDecoderContextEPNS_10TagPictureES3_iiiPNS_14TagMCRefMemberE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$$ = 0, $$0 = 0, $$0149 = 0, $$0150 = 0, $$0151 = 0, $$0152 = 0, $$0153 = 0, $$154 = 0, $$154$ = 0, $$pre$phiZ2D = 0, $$sink2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $sext = 0, $sext155 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $7 = sp;
 $8 = ($1|0)==($2|0);
 if ($8) {
  STACKTOP = sp;return;
 }
 $9 = $4 << 4;
 $10 = $5 << 4;
 $11 = ((($1)) + 64|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + ($9)|0);
 $16 = ((($6)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = Math_imul($17, $10)|0;
 $19 = (($15) + ($18)|0);
 $20 = ((($1)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $9 >> 1;
 $23 = (($21) + ($22)|0);
 $24 = $10 >> 1;
 $25 = ((($6)) + 36|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = Math_imul($26, $24)|0;
 $28 = (($23) + ($27)|0);
 $29 = ((($1)) + 24|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($30) + ($22)|0);
 $32 = (($31) + ($27)|0);
 $33 = ((($1)) + 52|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = ($34<<24>>24)==(0);
 if ($35) {
  $36 = ((($0)) + 512476|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($37|0)==(0|0);
  if ($38) {
   label = 4;
  } else {
   $68 = ($37|0)==($2|0);
   do {
    if ($68) {
     $69 = ((($0)) + 512348|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = $70&65535;
     HEAP16[$7>>1] = $71;
     $72 = ((($0)) + 512352|0);
     $73 = HEAP32[$72>>2]|0;
     $$pre$phiZ2D = $7;$$sink2 = $73;$94 = $70;
    } else {
     $74 = ((($37)) + 64|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (($75) - ($12))|0;
     $77 = ((($2)) + 64|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = (($78) - ($12))|0;
     $80 = ($76|0)==(0);
     if ($80) {
      HEAP16[$7>>1] = 0;
      $$pre$phiZ2D = $7;$$sink2 = 0;$94 = 0;
      break;
     } else {
      $81 = ((($0)) + 512348|0);
      $82 = HEAP32[$81>>2]|0;
      $83 = Math_imul($82, $79)|0;
      $84 = (($83|0) / ($76|0))&-1;
      $phitmp = $84&65535;
      HEAP16[$7>>1] = $phitmp;
      $85 = ((($0)) + 512352|0);
      $86 = HEAP32[$85>>2]|0;
      $87 = Math_imul($86, $79)|0;
      $88 = (($87|0) / ($76|0))&-1;
      $$pre$phiZ2D = $7;$$sink2 = $88;$94 = $84;
      break;
     }
    }
   } while(0);
   $89 = $$sink2&65535;
   $90 = ((($7)) + 2|0);
   HEAP16[$90>>1] = $89;
   HEAP32[$6>>2] = $19;
   $91 = ((($6)) + 4|0);
   HEAP32[$91>>2] = $28;
   $92 = ((($6)) + 8|0);
   HEAP32[$92>>2] = $32;
   $93 = $4 << 6;
   $sext = $94 << 16;
   $95 = $sext >> 16;
   $96 = (($95) + ($93))|0;
   $97 = $5 << 6;
   $sext155 = $$sink2 << 16;
   $98 = $sext155 >> 16;
   $99 = (($98) + ($97))|0;
   $100 = ((($6)) + 40|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($6)) + 44|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ((($0)) + 241924|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($105)) + 327|0);
   $107 = HEAP8[$106>>0]|0;
   $108 = ($107<<24>>24)==(0);
   if ($108) {
    $$0150 = 0;$$0151 = $103;$$0152 = $101;$$0153 = 0;
   } else {
    $109 = ((($0)) + 6176|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = $110 << 1;
    $112 = ((($0)) + 6184|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = $113 << 1;
    $115 = (($101) - ($114))|0;
    $116 = ((($0)) + 6180|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = $117 << 1;
    $119 = (($103) - ($118))|0;
    $$0150 = $111;$$0151 = $119;$$0152 = $115;$$0153 = $118;
   }
   $120 = $$0150 << 2;
   $121 = (($120) + 8)|0;
   $122 = $$0153 << 2;
   $123 = (($122) + 8)|0;
   $124 = $$0151 << 2;
   $125 = (($124) + -76)|0;
   $126 = ($96|0)<($121|0);
   if ($126) {
    $127 = $96 & -4;
    $128 = ($$0150|0)>($127|0);
    $129 = $128 ? $$0150 : $127;
    $$0 = $129;
   } else {
    $130 = $$0152 << 2;
    $131 = (($130) + -76)|0;
    $132 = ($96|0)>($131|0);
    $133 = $96 & -4;
    $134 = (($130) + -68)|0;
    $135 = ($134|0)<($133|0);
    $$ = $135 ? $134 : $133;
    $$$ = $132 ? $$ : $96;
    $$0 = $$$;
   }
   $136 = ($99|0)<($123|0);
   if ($136) {
    $137 = $99 & -4;
    $138 = ($$0153|0)>($137|0);
    $139 = $138 ? $$0153 : $137;
    $$0149 = $139;
   } else {
    $140 = ($99|0)>($125|0);
    $141 = $99 & -4;
    $142 = (($124) + -68)|0;
    $143 = ($142|0)<($141|0);
    $$154 = $143 ? $142 : $141;
    $$154$ = $140 ? $$154 : $99;
    $$0149 = $$154$;
   }
   $144 = (($$0) - ($93))|0;
   $145 = $144&65535;
   HEAP16[$$pre$phiZ2D>>1] = $145;
   $146 = (($$0149) - ($97))|0;
   $147 = $146&65535;
   HEAP16[$90>>1] = $147;
   $148 = ((($0)) + 316972|0);
   __ZN7WelsDec6BaseMCEPNS_14TagMCRefMemberEiiP9TagMcFunciiPs($6,$9,$10,$148,16,16,$$pre$phiZ2D);
  }
 } else {
  label = 4;
 }
 if ((label|0) == 4) {
  $39 = ((($6)) + 12|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($6)) + 24|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = Math_imul($42, $10)|0;
  $44 = (($40) + ($43)|0);
  $45 = (($44) + ($9)|0);
  $46 = ((($0)) + 317056|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_viiii[$47 & 31]($19,$17,$45,$42);
  $48 = ((($6)) + 16|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = $5 << 3;
  $51 = ((($6)) + 28|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = Math_imul($52, $50)|0;
  $54 = (($49) + ($53)|0);
  $55 = $4 << 3;
  $56 = (($54) + ($55)|0);
  $57 = ((($0)) + 317060|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_viiii[$58 & 31]($28,$59,$56,$52);
  $60 = ((($6)) + 20|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = HEAP32[$51>>2]|0;
  $63 = Math_imul($62, $50)|0;
  $64 = (($61) + ($63)|0);
  $65 = (($64) + ($55)|0);
  $66 = HEAP32[$57>>2]|0;
  $67 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_viiii[$66 & 31]($32,$67,$65,$62);
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec6BaseMCEPNS_14TagMCRefMemberEiiP9TagMcFunciiPs($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$80 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = $1 << 2;
 $8 = HEAP16[$6>>1]|0;
 $9 = $8 << 16 >> 16;
 $10 = (($9) + ($7))|0;
 $11 = $2 << 2;
 $12 = ((($6)) + 2|0);
 $13 = HEAP16[$12>>1]|0;
 $14 = $13 << 16 >> 16;
 $15 = (($14) + ($11))|0;
 $16 = ($10|0)<(-120);
 if ($16) {
  $29 = -120;
 } else {
  $17 = ((($0)) + 40|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = $18 << 2;
  $20 = (($19) + 52)|0;
  $21 = ($10|0)>($20|0);
  $$ = $21 ? $20 : $10;
  $29 = $$;
 }
 $22 = ($15|0)<(-120);
 if ($22) {
  $31 = -120;
 } else {
  $23 = ((($0)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24 << 2;
  $26 = (($25) + 52)|0;
  $27 = ($15|0)>($26|0);
  $$80 = $27 ? $26 : $15;
  $31 = $$80;
 }
 $28 = $29 >> 2;
 $30 = $31 >> 2;
 $32 = ((($0)) + 24|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = Math_imul($30, $33)|0;
 $35 = (($34) + ($28))|0;
 $36 = $29 >> 3;
 $37 = $31 >> 3;
 $38 = ((($0)) + 28|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = Math_imul($39, $37)|0;
 $41 = (($40) + ($36))|0;
 $42 = $4 >> 1;
 $43 = $5 >> 1;
 $44 = ((($0)) + 12|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = (($45) + ($35)|0);
 $47 = ((($0)) + 16|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = (($48) + ($41)|0);
 $50 = ((($0)) + 20|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51) + ($41)|0);
 $53 = HEAP32[$0>>2]|0;
 $54 = ((($0)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = ((($0)) + 8|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ((($3)) + 16|0);
 $59 = HEAP32[$58>>2]|0;
 $60 = ((($0)) + 32|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = $29&65535;
 $63 = $31&65535;
 FUNCTION_TABLE_viiiiiiii[$59 & 3]($46,$33,$53,$61,$62,$63,$4,$5);
 $64 = ((($3)) + 12|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = HEAP32[$38>>2]|0;
 $67 = ((($0)) + 36|0);
 $68 = HEAP32[$67>>2]|0;
 FUNCTION_TABLE_viiiiiiii[$65 & 3]($49,$66,$55,$68,$62,$63,$42,$43);
 $69 = HEAP32[$64>>2]|0;
 $70 = HEAP32[$38>>2]|0;
 $71 = HEAP32[$67>>2]|0;
 FUNCTION_TABLE_viiiiiiii[$69 & 3]($52,$70,$57,$71,$62,$63,$42,$43);
 return;
}
function __ZN7WelsDec24WelsTargetMbConstructionEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 241932|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 3908|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 4040|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + ($6<<1)|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8 << 16 >> 16;
 $10 = ($8<<16>>16)==(512);
 if ($10) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = $9 & 519;
 $12 = ($11|0)==(0);
 if (!($12)) {
  (__ZN7WelsDec33WelsMbIntraPredictionConstructionEPNS_21TagWelsDecoderContextEPNS_10TagDqLayerEb($0,$2,1)|0);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = $9 & 504;
 $14 = ($13|0)==(0);
 if ($14) {
  HEAP32[$vararg_buffer>>2] = $9;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,24655,$vararg_buffer);
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = ((($2)) + 3956|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($16) + ($6)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = ($18<<24>>24)==(0);
 $20 = ((($2)) + 4032|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($2)) + 4036|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($0)) + 5464|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 32|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($25)) + 36|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($2)) + 4100|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 16|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = Math_imul($27, $23)|0;
 $35 = (($34) + ($21))|0;
 $36 = $35 << 4;
 $37 = (($33) + ($36)|0);
 $38 = ((($31)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = Math_imul($29, $23)|0;
 $41 = (($40) + ($21))|0;
 $42 = $41 << 3;
 $43 = (($39) + ($42)|0);
 $44 = ((($31)) + 24|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = (($45) + ($42)|0);
 __ZN7WelsDec12GetInterPredEPhS0_S0_PNS_21TagWelsDecoderContextE($37,$43,$46,$0);
 if ($19) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 (__ZN7WelsDec29WelsMbInterSampleConstructionEPNS_21TagWelsDecoderContextEPNS_10TagDqLayerEPhS4_S4_ii($0,$2,$37,$43,$46,$27,$29)|0);
 $47 = ((($0)) + 317124|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = ((($2)) + 3964|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$5>>2]|0;
 $52 = (($50) + (($51*24)|0)|0);
 FUNCTION_TABLE_vi[$48 & 15]($52);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec9FmoNextMbEPNS_6TagFmoEs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$018 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$0>>2]|0;
 $5 = $1 << 16 >> 16;
 $6 = ($1<<16>>16)<(0);
 if ($6) {
  $$0 = -1;
  return ($$0|0);
 }
 $7 = ($5|0)>=($3|0);
 $8 = ($4|0)==(0|0);
 $or$cond$i = $7 | $8;
 if ($or$cond$i) {
  $$0 = -1;
  return ($$0|0);
 }
 $9 = (($4) + ($5)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(-1);
 if ($11) {
  $$0 = -1;
  return ($$0|0);
 } else {
  $$018 = $1;
 }
 while(1) {
  $12 = (($$018) + 1)<<16>>16;
  $13 = $12 << 16 >> 16;
  $14 = ($13|0)<($3|0);
  if (!($14)) {
   $$0 = -1;
   label = 6;
   break;
  }
  $15 = (($4) + ($13)|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)==($10<<24>>24);
  if ($17) {
   $$0 = $12;
   label = 6;
   break;
  } else {
   $$018 = $12;
  }
 }
 if ((label|0) == 6) {
  return ($$0|0);
 }
 return (0)|0;
}
function __ZN7WelsDec16WelsDeblockingMbEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $$sink$i = 0, $$sink5 = 0, $$sink5$i = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0;
 var $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0;
 var $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0;
 var $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0;
 var $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0;
 var $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0;
 var $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0;
 var $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0;
 var $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0;
 var $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0;
 var $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0;
 var $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0;
 var $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0;
 var $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0;
 var $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0;
 var $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0;
 var $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0;
 var $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0;
 var $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0;
 var $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0;
 var $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0;
 var $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0;
 var $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0;
 var $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0;
 var $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0;
 var $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;
 var $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0;
 var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;
 var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;
 var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;
 var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;
 var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;
 var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;
 var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;
 var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0;
 var $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0;
 var $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0;
 var $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0;
 var $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;
 var $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0;
 var $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0;
 var $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0;
 var $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0;
 var $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0;
 var $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0;
 var $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0;
 var $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0;
 var $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0;
 var $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0;
 var $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $3 = sp + 32|0;
 $4 = sp;
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;
 $5 = ((($0)) + 4040|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 3908|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + ($6<<1)|0);
 $10 = HEAP16[$9>>1]|0;
 $11 = $10 << 16 >> 16;
 switch ($11|0) {
 case 512: case 2: case 4: case 1:  {
  __ZN7WelsDec19FilteringEdgeLumaHVEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEi($0,$1,$2);
  __ZN7WelsDec21FilteringEdgeChromaHVEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEi($0,$1,$2);
  STACKTOP = sp;return;
  break;
 }
 default: {
 }
 }
 $12 = $2 & 1;
 $13 = ($12|0)==(0);
 if ($13) {
  $$sink = 0;
 } else {
  $14 = (($6) + -1)|0;
  $15 = (($8) + ($14<<1)|0);
  $16 = HEAP16[$15>>1]|0;
  $17 = $16 & 519;
  $18 = ($17<<16>>16)==(0);
  if ($18) {
   $19 = (__ZN7WelsDec29DeblockingBsMarginalMBAvcbaseEPNS_10TagDqLayerEiii($0,0,$14,$6)|0);
   $$sink = $19;
  } else {
   $$sink = 67372036;
  }
 }
 HEAP32[$4>>2] = $$sink;
 $20 = $2 & 2;
 $21 = ($20|0)==(0);
 if ($21) {
  $$sink5 = 0;
 } else {
  $22 = ((($0)) + 4044|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($6) - ($23))|0;
  $25 = (($8) + ($24<<1)|0);
  $26 = HEAP16[$25>>1]|0;
  $27 = $26 & 519;
  $28 = ($27<<16>>16)==(0);
  if ($28) {
   $29 = (__ZN7WelsDec29DeblockingBsMarginalMBAvcbaseEPNS_10TagDqLayerEiii($0,1,$24,$6)|0);
   $$sink5 = $29;
  } else {
   $$sink5 = 67372036;
  }
 }
 $30 = ((($4)) + 16|0);
 HEAP32[$30>>2] = $$sink5;
 $31 = ($10<<16>>16)==(256);
 do {
  if ($31) {
   $1444 = ((($4)) + 28|0);
   HEAP32[$1444>>2] = 0;
   $1445 = ((($4)) + 24|0);
   HEAP32[$1445>>2] = 0;
   $1446 = ((($4)) + 20|0);
   HEAP32[$1446>>2] = 0;
   $1447 = ((($4)) + 12|0);
   HEAP32[$1447>>2] = 0;
   $1448 = ((($4)) + 8|0);
   HEAP32[$1448>>2] = 0;
   $1449 = ((($4)) + 4|0);
   HEAP32[$1449>>2] = 0;
  } else {
   $32 = ($10<<16>>16)==(8);
   $33 = ((($0)) + 3964|0);
   $34 = HEAP32[$33>>2]|0;
   if ($32) {
    $35 = ((($0)) + 3944|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (($36) + ($6)|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = ($38<<24>>24)==(0);
    if ($39) {
     $40 = (($34) + (($6*24)|0)|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = (((($34) + (($6*24)|0)|0)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = (((($34) + (($6*24)|0)|0)) + 8|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (((($34) + (($6*24)|0)|0)) + 12|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = $41&255;
     $49 = (((($34) + (($6*24)|0)|0)) + 1|0);
     $50 = HEAP8[$49>>0]|0;
     $51 = $50 | $48;
     $52 = $51 << 24 >> 24;
     $53 = $52 << 1;
     $54 = $53&255;
     $55 = ((($4)) + 4|0);
     HEAP8[$55>>0] = $54;
     $56 = HEAP8[$49>>0]|0;
     $57 = (((($34) + (($6*24)|0)|0)) + 2|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58 | $56;
     $60 = $59 << 24 >> 24;
     $61 = $60 << 1;
     $62 = $61&255;
     $63 = ((($4)) + 8|0);
     HEAP8[$63>>0] = $62;
     $64 = HEAP8[$57>>0]|0;
     $65 = (((($34) + (($6*24)|0)|0)) + 3|0);
     $66 = HEAP8[$65>>0]|0;
     $67 = $66 | $64;
     $68 = $67 << 24 >> 24;
     $69 = $68 << 1;
     $70 = $69&255;
     $71 = ((($4)) + 12|0);
     HEAP8[$71>>0] = $70;
     $72 = HEAP8[$42>>0]|0;
     $73 = (((($34) + (($6*24)|0)|0)) + 5|0);
     $74 = HEAP8[$73>>0]|0;
     $75 = $74 | $72;
     $76 = $75 << 24 >> 24;
     $77 = $76 << 1;
     $78 = $77&255;
     $79 = ((($4)) + 5|0);
     HEAP8[$79>>0] = $78;
     $80 = HEAP8[$73>>0]|0;
     $81 = (((($34) + (($6*24)|0)|0)) + 6|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = $82 | $80;
     $84 = $83 << 24 >> 24;
     $85 = $84 << 1;
     $86 = $85&255;
     $87 = ((($4)) + 9|0);
     HEAP8[$87>>0] = $86;
     $88 = HEAP8[$81>>0]|0;
     $89 = (((($34) + (($6*24)|0)|0)) + 7|0);
     $90 = HEAP8[$89>>0]|0;
     $91 = $90 | $88;
     $92 = $91 << 24 >> 24;
     $93 = $92 << 1;
     $94 = $93&255;
     $95 = ((($4)) + 13|0);
     HEAP8[$95>>0] = $94;
     $96 = $43 | $41;
     $97 = $96 << 1;
     $98 = ((($4)) + 20|0);
     HEAP32[$98>>2] = $97;
     $99 = HEAP8[$44>>0]|0;
     $100 = (((($34) + (($6*24)|0)|0)) + 9|0);
     $101 = HEAP8[$100>>0]|0;
     $102 = $101 | $99;
     $103 = $102 << 24 >> 24;
     $104 = $103 << 1;
     $105 = $104&255;
     $106 = ((($4)) + 6|0);
     HEAP8[$106>>0] = $105;
     $107 = HEAP8[$100>>0]|0;
     $108 = (((($34) + (($6*24)|0)|0)) + 10|0);
     $109 = HEAP8[$108>>0]|0;
     $110 = $109 | $107;
     $111 = $110 << 24 >> 24;
     $112 = $111 << 1;
     $113 = $112&255;
     $114 = ((($4)) + 10|0);
     HEAP8[$114>>0] = $113;
     $115 = HEAP8[$108>>0]|0;
     $116 = (((($34) + (($6*24)|0)|0)) + 11|0);
     $117 = HEAP8[$116>>0]|0;
     $118 = $117 | $115;
     $119 = $118 << 24 >> 24;
     $120 = $119 << 1;
     $121 = $120&255;
     $122 = ((($4)) + 14|0);
     HEAP8[$122>>0] = $121;
     $123 = $45 | $43;
     $124 = $123 << 1;
     $125 = ((($4)) + 24|0);
     HEAP32[$125>>2] = $124;
     $126 = HEAP8[$46>>0]|0;
     $127 = (((($34) + (($6*24)|0)|0)) + 13|0);
     $128 = HEAP8[$127>>0]|0;
     $129 = $128 | $126;
     $130 = $129 << 24 >> 24;
     $131 = $130 << 1;
     $132 = $131&255;
     $133 = ((($4)) + 7|0);
     HEAP8[$133>>0] = $132;
     $134 = HEAP8[$127>>0]|0;
     $135 = (((($34) + (($6*24)|0)|0)) + 14|0);
     $136 = HEAP8[$135>>0]|0;
     $137 = $136 | $134;
     $138 = $137 << 24 >> 24;
     $139 = $138 << 1;
     $140 = $139&255;
     $141 = ((($4)) + 11|0);
     HEAP8[$141>>0] = $140;
     $142 = HEAP8[$135>>0]|0;
     $143 = (((($34) + (($6*24)|0)|0)) + 15|0);
     $144 = HEAP8[$143>>0]|0;
     $145 = $144 | $142;
     $146 = $145 << 24 >> 24;
     $147 = $146 << 1;
     $148 = $147&255;
     $149 = ((($4)) + 15|0);
     HEAP8[$149>>0] = $148;
     $150 = $47 | $45;
     $151 = $150 << 1;
     $152 = ((($4)) + 28|0);
     HEAP32[$152>>2] = $151;
     break;
    } else {
     $153 = HEAP8[11079]|0;
     $154 = $153&255;
     $155 = ((($34) + (($6*24)|0)|0) + ($154)|0);
     $156 = HEAP8[$155>>0]|0;
     $157 = HEAP8[(11080)>>0]|0;
     $158 = $157&255;
     $159 = ((($34) + (($6*24)|0)|0) + ($158)|0);
     $160 = HEAP8[$159>>0]|0;
     $161 = $160 | $156;
     $162 = HEAP8[(11081)>>0]|0;
     $163 = $162&255;
     $164 = ((($34) + (($6*24)|0)|0) + ($163)|0);
     $165 = HEAP8[$164>>0]|0;
     $166 = $161 | $165;
     $167 = HEAP8[(11082)>>0]|0;
     $168 = $167&255;
     $169 = ((($34) + (($6*24)|0)|0) + ($168)|0);
     $170 = HEAP8[$169>>0]|0;
     $171 = $166 | $170;
     $172 = HEAP8[(11083)>>0]|0;
     $173 = $172&255;
     $174 = ((($34) + (($6*24)|0)|0) + ($173)|0);
     $175 = HEAP8[$174>>0]|0;
     $176 = HEAP8[(11084)>>0]|0;
     $177 = $176&255;
     $178 = ((($34) + (($6*24)|0)|0) + ($177)|0);
     $179 = HEAP8[$178>>0]|0;
     $180 = $179 | $175;
     $181 = HEAP8[(11085)>>0]|0;
     $182 = $181&255;
     $183 = ((($34) + (($6*24)|0)|0) + ($182)|0);
     $184 = HEAP8[$183>>0]|0;
     $185 = $180 | $184;
     $186 = HEAP8[(11086)>>0]|0;
     $187 = $186&255;
     $188 = ((($34) + (($6*24)|0)|0) + ($187)|0);
     $189 = HEAP8[$188>>0]|0;
     $190 = $185 | $189;
     $191 = HEAP8[(11087)>>0]|0;
     $192 = $191&255;
     $193 = ((($34) + (($6*24)|0)|0) + ($192)|0);
     $194 = HEAP8[$193>>0]|0;
     $195 = HEAP8[(11088)>>0]|0;
     $196 = $195&255;
     $197 = ((($34) + (($6*24)|0)|0) + ($196)|0);
     $198 = HEAP8[$197>>0]|0;
     $199 = $198 | $194;
     $200 = HEAP8[(11089)>>0]|0;
     $201 = $200&255;
     $202 = ((($34) + (($6*24)|0)|0) + ($201)|0);
     $203 = HEAP8[$202>>0]|0;
     $204 = $199 | $203;
     $205 = HEAP8[(11090)>>0]|0;
     $206 = $205&255;
     $207 = ((($34) + (($6*24)|0)|0) + ($206)|0);
     $208 = HEAP8[$207>>0]|0;
     $209 = $204 | $208;
     $210 = HEAP8[(11091)>>0]|0;
     $211 = $210&255;
     $212 = ((($34) + (($6*24)|0)|0) + ($211)|0);
     $213 = HEAP8[$212>>0]|0;
     $214 = HEAP8[(11092)>>0]|0;
     $215 = $214&255;
     $216 = ((($34) + (($6*24)|0)|0) + ($215)|0);
     $217 = HEAP8[$216>>0]|0;
     $218 = $217 | $213;
     $219 = HEAP8[(11093)>>0]|0;
     $220 = $219&255;
     $221 = ((($34) + (($6*24)|0)|0) + ($220)|0);
     $222 = HEAP8[$221>>0]|0;
     $223 = $218 | $222;
     $224 = HEAP8[(11094)>>0]|0;
     $225 = $224&255;
     $226 = ((($34) + (($6*24)|0)|0) + ($225)|0);
     $227 = HEAP8[$226>>0]|0;
     $228 = $223 | $227;
     $229 = $190 | $171;
     $230 = $229 << 24 >> 24;
     $231 = $230 << 1;
     $232 = $231&255;
     $233 = ((($4)) + 9|0);
     HEAP8[$233>>0] = $232;
     $234 = ((($4)) + 8|0);
     HEAP8[$234>>0] = $232;
     $235 = $228 | $209;
     $236 = $235 << 24 >> 24;
     $237 = $236 << 1;
     $238 = $237&255;
     $239 = ((($4)) + 11|0);
     HEAP8[$239>>0] = $238;
     $240 = ((($4)) + 10|0);
     HEAP8[$240>>0] = $238;
     $241 = $209 | $171;
     $242 = $241 << 24 >> 24;
     $243 = $242 << 1;
     $244 = $243&255;
     $245 = ((($4)) + 25|0);
     HEAP8[$245>>0] = $244;
     $246 = ((($4)) + 24|0);
     HEAP8[$246>>0] = $244;
     $247 = $228 | $190;
     $248 = $247 << 24 >> 24;
     $249 = $248 << 1;
     $250 = $249&255;
     $251 = ((($4)) + 27|0);
     HEAP8[$251>>0] = $250;
     $252 = ((($4)) + 26|0);
     HEAP8[$252>>0] = $250;
     break;
    }
   }
   $253 = ((($0)) + 3932|0);
   $254 = HEAP32[$253>>2]|0;
   $255 = (($254) + ($6<<4)|0);
   $256 = ((($3)) + 3|0);
   $257 = $256;
   $258 = $257 & 3;
   $259 = (0 - ($258))|0;
   $260 = (($256) + ($259)|0);
   $261 = ((($0)) + 3944|0);
   $262 = HEAP32[$261>>2]|0;
   $263 = (($262) + ($6)|0);
   $264 = HEAP8[$263>>0]|0;
   $265 = ($264<<24>>24)==(0);
   if ($265) {
    $497 = (($34) + (($6*24)|0)|0);
    $498 = HEAP32[$497>>2]|0;
    $499 = (((($34) + (($6*24)|0)|0)) + 4|0);
    $500 = HEAP32[$499>>2]|0;
    $501 = (((($34) + (($6*24)|0)|0)) + 8|0);
    $502 = HEAP32[$501>>2]|0;
    $503 = (((($34) + (($6*24)|0)|0)) + 12|0);
    $504 = HEAP32[$503>>2]|0;
    $505 = $498&255;
    $506 = (((($34) + (($6*24)|0)|0)) + 1|0);
    $507 = HEAP8[$506>>0]|0;
    $508 = $507 | $505;
    HEAP8[$260>>0] = $508;
    $509 = (((($34) + (($6*24)|0)|0)) + 2|0);
    $510 = HEAP8[$509>>0]|0;
    $511 = $510 | $507;
    $512 = ((($260)) + 1|0);
    HEAP8[$512>>0] = $511;
    $513 = (((($34) + (($6*24)|0)|0)) + 3|0);
    $514 = HEAP8[$513>>0]|0;
    $515 = $514 | $510;
    $516 = ((($260)) + 2|0);
    HEAP8[$516>>0] = $515;
    $517 = $508&255;
    $518 = (((($254) + ($6<<4)|0)) + 1|0);
    $519 = HEAP8[$518>>0]|0;
    $520 = HEAP8[$255>>0]|0;
    $521 = ($519<<24>>24)==($520<<24>>24);
    if ($521) {
     $522 = ((($0)) + 3916|0);
     $523 = HEAP32[$522>>2]|0;
     $524 = (((($523) + ($6<<6)|0)) + 4|0);
     $525 = HEAP16[$524>>1]|0;
     $526 = $525 << 16 >> 16;
     $527 = (($523) + ($6<<6)|0);
     $528 = HEAP16[$527>>1]|0;
     $529 = $528 << 16 >> 16;
     $530 = (($526) - ($529))|0;
     $531 = $530 >> 31;
     $532 = $531 ^ $530;
     $533 = (($532) - ($531))|0;
     $534 = (((($523) + ($6<<6)|0)) + 6|0);
     $535 = HEAP16[$534>>1]|0;
     $536 = $535 << 16 >> 16;
     $537 = (((($523) + ($6<<6)|0)) + 2|0);
     $538 = HEAP16[$537>>1]|0;
     $539 = $538 << 16 >> 16;
     $540 = (($536) - ($539))|0;
     $541 = $540 >> 31;
     $542 = $541 ^ $540;
     $543 = (($542) - ($541))|0;
     $544 = $543 | $533;
     $545 = ($544>>>0)>(3);
     $547 = $545;
    } else {
     $547 = 1;
    }
    $546 = $547&1;
    $548 = $546 | $517;
    $549 = ($508<<24>>24)!=(0);
    $550 = $549&1;
    $551 = $548 << $550;
    $552 = $551&255;
    $553 = ((($4)) + 4|0);
    HEAP8[$553>>0] = $552;
    $554 = $511&255;
    $555 = (((($254) + ($6<<4)|0)) + 2|0);
    $556 = HEAP8[$555>>0]|0;
    $557 = HEAP8[$518>>0]|0;
    $558 = ($556<<24>>24)==($557<<24>>24);
    if ($558) {
     $559 = ((($0)) + 3916|0);
     $560 = HEAP32[$559>>2]|0;
     $561 = (((($560) + ($6<<6)|0)) + 8|0);
     $562 = HEAP16[$561>>1]|0;
     $563 = $562 << 16 >> 16;
     $564 = (((($560) + ($6<<6)|0)) + 4|0);
     $565 = HEAP16[$564>>1]|0;
     $566 = $565 << 16 >> 16;
     $567 = (($563) - ($566))|0;
     $568 = $567 >> 31;
     $569 = $568 ^ $567;
     $570 = (($569) - ($568))|0;
     $571 = (((($560) + ($6<<6)|0)) + 10|0);
     $572 = HEAP16[$571>>1]|0;
     $573 = $572 << 16 >> 16;
     $574 = (((($560) + ($6<<6)|0)) + 6|0);
     $575 = HEAP16[$574>>1]|0;
     $576 = $575 << 16 >> 16;
     $577 = (($573) - ($576))|0;
     $578 = $577 >> 31;
     $579 = $578 ^ $577;
     $580 = (($579) - ($578))|0;
     $581 = $580 | $570;
     $582 = ($581>>>0)>(3);
     $584 = $582;
    } else {
     $584 = 1;
    }
    $583 = $584&1;
    $585 = $583 | $554;
    $586 = ($511<<24>>24)!=(0);
    $587 = $586&1;
    $588 = $585 << $587;
    $589 = $588&255;
    $590 = ((($4)) + 8|0);
    HEAP8[$590>>0] = $589;
    $591 = $515&255;
    $592 = (((($254) + ($6<<4)|0)) + 3|0);
    $593 = HEAP8[$592>>0]|0;
    $594 = HEAP8[$555>>0]|0;
    $595 = ($593<<24>>24)==($594<<24>>24);
    if ($595) {
     $596 = ((($0)) + 3916|0);
     $597 = HEAP32[$596>>2]|0;
     $598 = (((($597) + ($6<<6)|0)) + 12|0);
     $599 = HEAP16[$598>>1]|0;
     $600 = $599 << 16 >> 16;
     $601 = (((($597) + ($6<<6)|0)) + 8|0);
     $602 = HEAP16[$601>>1]|0;
     $603 = $602 << 16 >> 16;
     $604 = (($600) - ($603))|0;
     $605 = $604 >> 31;
     $606 = $605 ^ $604;
     $607 = (($606) - ($605))|0;
     $608 = (((($597) + ($6<<6)|0)) + 14|0);
     $609 = HEAP16[$608>>1]|0;
     $610 = $609 << 16 >> 16;
     $611 = (((($597) + ($6<<6)|0)) + 10|0);
     $612 = HEAP16[$611>>1]|0;
     $613 = $612 << 16 >> 16;
     $614 = (($610) - ($613))|0;
     $615 = $614 >> 31;
     $616 = $615 ^ $614;
     $617 = (($616) - ($615))|0;
     $618 = $617 | $607;
     $619 = ($618>>>0)>(3);
     $621 = $619;
    } else {
     $621 = 1;
    }
    $620 = $621&1;
    $622 = $620 | $591;
    $623 = ($515<<24>>24)!=(0);
    $624 = $623&1;
    $625 = $622 << $624;
    $626 = $625&255;
    $627 = ((($4)) + 12|0);
    HEAP8[$627>>0] = $626;
    $628 = HEAP8[$499>>0]|0;
    $629 = (((($34) + (($6*24)|0)|0)) + 5|0);
    $630 = HEAP8[$629>>0]|0;
    $631 = $630 | $628;
    HEAP8[$260>>0] = $631;
    $632 = (((($34) + (($6*24)|0)|0)) + 6|0);
    $633 = HEAP8[$632>>0]|0;
    $634 = $633 | $630;
    HEAP8[$512>>0] = $634;
    $635 = (((($34) + (($6*24)|0)|0)) + 7|0);
    $636 = HEAP8[$635>>0]|0;
    $637 = $636 | $633;
    HEAP8[$516>>0] = $637;
    $638 = $631&255;
    $639 = (((($254) + ($6<<4)|0)) + 5|0);
    $640 = HEAP8[$639>>0]|0;
    $641 = (((($254) + ($6<<4)|0)) + 4|0);
    $642 = HEAP8[$641>>0]|0;
    $643 = ($640<<24>>24)==($642<<24>>24);
    if ($643) {
     $644 = ((($0)) + 3916|0);
     $645 = HEAP32[$644>>2]|0;
     $646 = (((($645) + ($6<<6)|0)) + 20|0);
     $647 = HEAP16[$646>>1]|0;
     $648 = $647 << 16 >> 16;
     $649 = (((($645) + ($6<<6)|0)) + 16|0);
     $650 = HEAP16[$649>>1]|0;
     $651 = $650 << 16 >> 16;
     $652 = (($648) - ($651))|0;
     $653 = $652 >> 31;
     $654 = $653 ^ $652;
     $655 = (($654) - ($653))|0;
     $656 = (((($645) + ($6<<6)|0)) + 22|0);
     $657 = HEAP16[$656>>1]|0;
     $658 = $657 << 16 >> 16;
     $659 = (((($645) + ($6<<6)|0)) + 18|0);
     $660 = HEAP16[$659>>1]|0;
     $661 = $660 << 16 >> 16;
     $662 = (($658) - ($661))|0;
     $663 = $662 >> 31;
     $664 = $663 ^ $662;
     $665 = (($664) - ($663))|0;
     $666 = $665 | $655;
     $667 = ($666>>>0)>(3);
     $669 = $667;
    } else {
     $669 = 1;
    }
    $668 = $669&1;
    $670 = $668 | $638;
    $671 = ($631<<24>>24)!=(0);
    $672 = $671&1;
    $673 = $670 << $672;
    $674 = $673&255;
    $675 = ((($4)) + 5|0);
    HEAP8[$675>>0] = $674;
    $676 = $634&255;
    $677 = (((($254) + ($6<<4)|0)) + 6|0);
    $678 = HEAP8[$677>>0]|0;
    $679 = HEAP8[$639>>0]|0;
    $680 = ($678<<24>>24)==($679<<24>>24);
    if ($680) {
     $681 = ((($0)) + 3916|0);
     $682 = HEAP32[$681>>2]|0;
     $683 = (((($682) + ($6<<6)|0)) + 24|0);
     $684 = HEAP16[$683>>1]|0;
     $685 = $684 << 16 >> 16;
     $686 = (((($682) + ($6<<6)|0)) + 20|0);
     $687 = HEAP16[$686>>1]|0;
     $688 = $687 << 16 >> 16;
     $689 = (($685) - ($688))|0;
     $690 = $689 >> 31;
     $691 = $690 ^ $689;
     $692 = (($691) - ($690))|0;
     $693 = (((($682) + ($6<<6)|0)) + 26|0);
     $694 = HEAP16[$693>>1]|0;
     $695 = $694 << 16 >> 16;
     $696 = (((($682) + ($6<<6)|0)) + 22|0);
     $697 = HEAP16[$696>>1]|0;
     $698 = $697 << 16 >> 16;
     $699 = (($695) - ($698))|0;
     $700 = $699 >> 31;
     $701 = $700 ^ $699;
     $702 = (($701) - ($700))|0;
     $703 = $702 | $692;
     $704 = ($703>>>0)>(3);
     $706 = $704;
    } else {
     $706 = 1;
    }
    $705 = $706&1;
    $707 = $705 | $676;
    $708 = ($634<<24>>24)!=(0);
    $709 = $708&1;
    $710 = $707 << $709;
    $711 = $710&255;
    $712 = ((($4)) + 9|0);
    HEAP8[$712>>0] = $711;
    $713 = $637&255;
    $714 = (((($254) + ($6<<4)|0)) + 7|0);
    $715 = HEAP8[$714>>0]|0;
    $716 = HEAP8[$677>>0]|0;
    $717 = ($715<<24>>24)==($716<<24>>24);
    if ($717) {
     $718 = ((($0)) + 3916|0);
     $719 = HEAP32[$718>>2]|0;
     $720 = (((($719) + ($6<<6)|0)) + 28|0);
     $721 = HEAP16[$720>>1]|0;
     $722 = $721 << 16 >> 16;
     $723 = (((($719) + ($6<<6)|0)) + 24|0);
     $724 = HEAP16[$723>>1]|0;
     $725 = $724 << 16 >> 16;
     $726 = (($722) - ($725))|0;
     $727 = $726 >> 31;
     $728 = $727 ^ $726;
     $729 = (($728) - ($727))|0;
     $730 = (((($719) + ($6<<6)|0)) + 30|0);
     $731 = HEAP16[$730>>1]|0;
     $732 = $731 << 16 >> 16;
     $733 = (((($719) + ($6<<6)|0)) + 26|0);
     $734 = HEAP16[$733>>1]|0;
     $735 = $734 << 16 >> 16;
     $736 = (($732) - ($735))|0;
     $737 = $736 >> 31;
     $738 = $737 ^ $736;
     $739 = (($738) - ($737))|0;
     $740 = $739 | $729;
     $741 = ($740>>>0)>(3);
     $743 = $741;
    } else {
     $743 = 1;
    }
    $742 = $743&1;
    $744 = $742 | $713;
    $745 = ($637<<24>>24)!=(0);
    $746 = $745&1;
    $747 = $744 << $746;
    $748 = $747&255;
    $749 = ((($4)) + 13|0);
    HEAP8[$749>>0] = $748;
    $750 = HEAP8[$501>>0]|0;
    $751 = (((($34) + (($6*24)|0)|0)) + 9|0);
    $752 = HEAP8[$751>>0]|0;
    $753 = $752 | $750;
    HEAP8[$260>>0] = $753;
    $754 = (((($34) + (($6*24)|0)|0)) + 10|0);
    $755 = HEAP8[$754>>0]|0;
    $756 = $755 | $752;
    HEAP8[$512>>0] = $756;
    $757 = (((($34) + (($6*24)|0)|0)) + 11|0);
    $758 = HEAP8[$757>>0]|0;
    $759 = $758 | $755;
    HEAP8[$516>>0] = $759;
    $760 = $753&255;
    $761 = (((($254) + ($6<<4)|0)) + 9|0);
    $762 = HEAP8[$761>>0]|0;
    $763 = (((($254) + ($6<<4)|0)) + 8|0);
    $764 = HEAP8[$763>>0]|0;
    $765 = ($762<<24>>24)==($764<<24>>24);
    if ($765) {
     $766 = ((($0)) + 3916|0);
     $767 = HEAP32[$766>>2]|0;
     $768 = (((($767) + ($6<<6)|0)) + 36|0);
     $769 = HEAP16[$768>>1]|0;
     $770 = $769 << 16 >> 16;
     $771 = (((($767) + ($6<<6)|0)) + 32|0);
     $772 = HEAP16[$771>>1]|0;
     $773 = $772 << 16 >> 16;
     $774 = (($770) - ($773))|0;
     $775 = $774 >> 31;
     $776 = $775 ^ $774;
     $777 = (($776) - ($775))|0;
     $778 = (((($767) + ($6<<6)|0)) + 38|0);
     $779 = HEAP16[$778>>1]|0;
     $780 = $779 << 16 >> 16;
     $781 = (((($767) + ($6<<6)|0)) + 34|0);
     $782 = HEAP16[$781>>1]|0;
     $783 = $782 << 16 >> 16;
     $784 = (($780) - ($783))|0;
     $785 = $784 >> 31;
     $786 = $785 ^ $784;
     $787 = (($786) - ($785))|0;
     $788 = $787 | $777;
     $789 = ($788>>>0)>(3);
     $791 = $789;
    } else {
     $791 = 1;
    }
    $790 = $791&1;
    $792 = $790 | $760;
    $793 = ($753<<24>>24)!=(0);
    $794 = $793&1;
    $795 = $792 << $794;
    $796 = $795&255;
    $797 = ((($4)) + 6|0);
    HEAP8[$797>>0] = $796;
    $798 = $756&255;
    $799 = (((($254) + ($6<<4)|0)) + 10|0);
    $800 = HEAP8[$799>>0]|0;
    $801 = HEAP8[$761>>0]|0;
    $802 = ($800<<24>>24)==($801<<24>>24);
    if ($802) {
     $803 = ((($0)) + 3916|0);
     $804 = HEAP32[$803>>2]|0;
     $805 = (((($804) + ($6<<6)|0)) + 40|0);
     $806 = HEAP16[$805>>1]|0;
     $807 = $806 << 16 >> 16;
     $808 = (((($804) + ($6<<6)|0)) + 36|0);
     $809 = HEAP16[$808>>1]|0;
     $810 = $809 << 16 >> 16;
     $811 = (($807) - ($810))|0;
     $812 = $811 >> 31;
     $813 = $812 ^ $811;
     $814 = (($813) - ($812))|0;
     $815 = (((($804) + ($6<<6)|0)) + 42|0);
     $816 = HEAP16[$815>>1]|0;
     $817 = $816 << 16 >> 16;
     $818 = (((($804) + ($6<<6)|0)) + 38|0);
     $819 = HEAP16[$818>>1]|0;
     $820 = $819 << 16 >> 16;
     $821 = (($817) - ($820))|0;
     $822 = $821 >> 31;
     $823 = $822 ^ $821;
     $824 = (($823) - ($822))|0;
     $825 = $824 | $814;
     $826 = ($825>>>0)>(3);
     $828 = $826;
    } else {
     $828 = 1;
    }
    $827 = $828&1;
    $829 = $827 | $798;
    $830 = ($756<<24>>24)!=(0);
    $831 = $830&1;
    $832 = $829 << $831;
    $833 = $832&255;
    $834 = ((($4)) + 10|0);
    HEAP8[$834>>0] = $833;
    $835 = $759&255;
    $836 = (((($254) + ($6<<4)|0)) + 11|0);
    $837 = HEAP8[$836>>0]|0;
    $838 = HEAP8[$799>>0]|0;
    $839 = ($837<<24>>24)==($838<<24>>24);
    if ($839) {
     $840 = ((($0)) + 3916|0);
     $841 = HEAP32[$840>>2]|0;
     $842 = (((($841) + ($6<<6)|0)) + 44|0);
     $843 = HEAP16[$842>>1]|0;
     $844 = $843 << 16 >> 16;
     $845 = (((($841) + ($6<<6)|0)) + 40|0);
     $846 = HEAP16[$845>>1]|0;
     $847 = $846 << 16 >> 16;
     $848 = (($844) - ($847))|0;
     $849 = $848 >> 31;
     $850 = $849 ^ $848;
     $851 = (($850) - ($849))|0;
     $852 = (((($841) + ($6<<6)|0)) + 46|0);
     $853 = HEAP16[$852>>1]|0;
     $854 = $853 << 16 >> 16;
     $855 = (((($841) + ($6<<6)|0)) + 42|0);
     $856 = HEAP16[$855>>1]|0;
     $857 = $856 << 16 >> 16;
     $858 = (($854) - ($857))|0;
     $859 = $858 >> 31;
     $860 = $859 ^ $858;
     $861 = (($860) - ($859))|0;
     $862 = $861 | $851;
     $863 = ($862>>>0)>(3);
     $865 = $863;
    } else {
     $865 = 1;
    }
    $864 = $865&1;
    $866 = $864 | $835;
    $867 = ($759<<24>>24)!=(0);
    $868 = $867&1;
    $869 = $866 << $868;
    $870 = $869&255;
    $871 = ((($4)) + 14|0);
    HEAP8[$871>>0] = $870;
    $872 = HEAP8[$503>>0]|0;
    $873 = (((($34) + (($6*24)|0)|0)) + 13|0);
    $874 = HEAP8[$873>>0]|0;
    $875 = $874 | $872;
    HEAP8[$260>>0] = $875;
    $876 = (((($34) + (($6*24)|0)|0)) + 14|0);
    $877 = HEAP8[$876>>0]|0;
    $878 = $877 | $874;
    HEAP8[$512>>0] = $878;
    $879 = (((($34) + (($6*24)|0)|0)) + 15|0);
    $880 = HEAP8[$879>>0]|0;
    $881 = $880 | $877;
    HEAP8[$516>>0] = $881;
    $882 = $875&255;
    $883 = (((($254) + ($6<<4)|0)) + 13|0);
    $884 = HEAP8[$883>>0]|0;
    $885 = (((($254) + ($6<<4)|0)) + 12|0);
    $886 = HEAP8[$885>>0]|0;
    $887 = ($884<<24>>24)==($886<<24>>24);
    if ($887) {
     $888 = ((($0)) + 3916|0);
     $889 = HEAP32[$888>>2]|0;
     $890 = (((($889) + ($6<<6)|0)) + 52|0);
     $891 = HEAP16[$890>>1]|0;
     $892 = $891 << 16 >> 16;
     $893 = (((($889) + ($6<<6)|0)) + 48|0);
     $894 = HEAP16[$893>>1]|0;
     $895 = $894 << 16 >> 16;
     $896 = (($892) - ($895))|0;
     $897 = $896 >> 31;
     $898 = $897 ^ $896;
     $899 = (($898) - ($897))|0;
     $900 = (((($889) + ($6<<6)|0)) + 54|0);
     $901 = HEAP16[$900>>1]|0;
     $902 = $901 << 16 >> 16;
     $903 = (((($889) + ($6<<6)|0)) + 50|0);
     $904 = HEAP16[$903>>1]|0;
     $905 = $904 << 16 >> 16;
     $906 = (($902) - ($905))|0;
     $907 = $906 >> 31;
     $908 = $907 ^ $906;
     $909 = (($908) - ($907))|0;
     $910 = $909 | $899;
     $911 = ($910>>>0)>(3);
     $913 = $911;
    } else {
     $913 = 1;
    }
    $912 = $913&1;
    $914 = $912 | $882;
    $915 = ($875<<24>>24)!=(0);
    $916 = $915&1;
    $917 = $914 << $916;
    $918 = $917&255;
    $919 = ((($4)) + 7|0);
    HEAP8[$919>>0] = $918;
    $920 = $878&255;
    $921 = (((($254) + ($6<<4)|0)) + 14|0);
    $922 = HEAP8[$921>>0]|0;
    $923 = HEAP8[$883>>0]|0;
    $924 = ($922<<24>>24)==($923<<24>>24);
    if ($924) {
     $925 = ((($0)) + 3916|0);
     $926 = HEAP32[$925>>2]|0;
     $927 = (((($926) + ($6<<6)|0)) + 56|0);
     $928 = HEAP16[$927>>1]|0;
     $929 = $928 << 16 >> 16;
     $930 = (((($926) + ($6<<6)|0)) + 52|0);
     $931 = HEAP16[$930>>1]|0;
     $932 = $931 << 16 >> 16;
     $933 = (($929) - ($932))|0;
     $934 = $933 >> 31;
     $935 = $934 ^ $933;
     $936 = (($935) - ($934))|0;
     $937 = (((($926) + ($6<<6)|0)) + 58|0);
     $938 = HEAP16[$937>>1]|0;
     $939 = $938 << 16 >> 16;
     $940 = (((($926) + ($6<<6)|0)) + 54|0);
     $941 = HEAP16[$940>>1]|0;
     $942 = $941 << 16 >> 16;
     $943 = (($939) - ($942))|0;
     $944 = $943 >> 31;
     $945 = $944 ^ $943;
     $946 = (($945) - ($944))|0;
     $947 = $946 | $936;
     $948 = ($947>>>0)>(3);
     $950 = $948;
    } else {
     $950 = 1;
    }
    $949 = $950&1;
    $951 = $949 | $920;
    $952 = ($878<<24>>24)!=(0);
    $953 = $952&1;
    $954 = $951 << $953;
    $955 = $954&255;
    $956 = ((($4)) + 11|0);
    HEAP8[$956>>0] = $955;
    $957 = $881&255;
    $958 = (((($254) + ($6<<4)|0)) + 15|0);
    $959 = HEAP8[$958>>0]|0;
    $960 = HEAP8[$921>>0]|0;
    $961 = ($959<<24>>24)==($960<<24>>24);
    if ($961) {
     $962 = ((($0)) + 3916|0);
     $963 = HEAP32[$962>>2]|0;
     $964 = (((($963) + ($6<<6)|0)) + 60|0);
     $965 = HEAP16[$964>>1]|0;
     $966 = $965 << 16 >> 16;
     $967 = (((($963) + ($6<<6)|0)) + 56|0);
     $968 = HEAP16[$967>>1]|0;
     $969 = $968 << 16 >> 16;
     $970 = (($966) - ($969))|0;
     $971 = $970 >> 31;
     $972 = $971 ^ $970;
     $973 = (($972) - ($971))|0;
     $974 = (((($963) + ($6<<6)|0)) + 62|0);
     $975 = HEAP16[$974>>1]|0;
     $976 = $975 << 16 >> 16;
     $977 = (((($963) + ($6<<6)|0)) + 58|0);
     $978 = HEAP16[$977>>1]|0;
     $979 = $978 << 16 >> 16;
     $980 = (($976) - ($979))|0;
     $981 = $980 >> 31;
     $982 = $981 ^ $980;
     $983 = (($982) - ($981))|0;
     $984 = $983 | $973;
     $985 = ($984>>>0)>(3);
     $987 = $985;
    } else {
     $987 = 1;
    }
    $986 = $987&1;
    $988 = $986 | $957;
    $989 = ($881<<24>>24)!=(0);
    $990 = $989&1;
    $991 = $988 << $990;
    $992 = $991&255;
    $993 = ((($4)) + 15|0);
    HEAP8[$993>>0] = $992;
    $994 = $500 | $498;
    HEAP32[$260>>2] = $994;
    $995 = $994&255;
    $996 = $994 & 255;
    $997 = HEAP8[$641>>0]|0;
    $998 = HEAP8[$255>>0]|0;
    $999 = ($997<<24>>24)==($998<<24>>24);
    $1000 = $994 >>> 8;
    $1001 = $1000&255;
    $1002 = $994 >>> 16;
    $1003 = $1002&255;
    $1004 = $994 >>> 24;
    if ($999) {
     $1005 = ((($0)) + 3916|0);
     $1006 = HEAP32[$1005>>2]|0;
     $1007 = (((($1006) + ($6<<6)|0)) + 16|0);
     $1008 = HEAP16[$1007>>1]|0;
     $1009 = $1008 << 16 >> 16;
     $1010 = (($1006) + ($6<<6)|0);
     $1011 = HEAP16[$1010>>1]|0;
     $1012 = $1011 << 16 >> 16;
     $1013 = (($1009) - ($1012))|0;
     $1014 = $1013 >> 31;
     $1015 = $1014 ^ $1013;
     $1016 = (($1015) - ($1014))|0;
     $1017 = (((($1006) + ($6<<6)|0)) + 18|0);
     $1018 = HEAP16[$1017>>1]|0;
     $1019 = $1018 << 16 >> 16;
     $1020 = (((($1006) + ($6<<6)|0)) + 2|0);
     $1021 = HEAP16[$1020>>1]|0;
     $1022 = $1021 << 16 >> 16;
     $1023 = (($1019) - ($1022))|0;
     $1024 = $1023 >> 31;
     $1025 = $1024 ^ $1023;
     $1026 = (($1025) - ($1024))|0;
     $1027 = $1026 | $1016;
     $1028 = ($1027>>>0)>(3);
     $1030 = $1028;
    } else {
     $1030 = 1;
    }
    $1029 = $1030&1;
    $1031 = $1029 | $996;
    $1032 = ($995<<24>>24)!=(0);
    $1033 = $1032&1;
    $1034 = $1031 << $1033;
    $1035 = $1034&255;
    $1036 = ((($4)) + 20|0);
    HEAP8[$1036>>0] = $1035;
    $1037 = $1000 & 255;
    $1038 = HEAP8[$639>>0]|0;
    $1039 = HEAP8[$518>>0]|0;
    $1040 = ($1038<<24>>24)==($1039<<24>>24);
    if ($1040) {
     $1041 = ((($0)) + 3916|0);
     $1042 = HEAP32[$1041>>2]|0;
     $1043 = (((($1042) + ($6<<6)|0)) + 20|0);
     $1044 = HEAP16[$1043>>1]|0;
     $1045 = $1044 << 16 >> 16;
     $1046 = (((($1042) + ($6<<6)|0)) + 4|0);
     $1047 = HEAP16[$1046>>1]|0;
     $1048 = $1047 << 16 >> 16;
     $1049 = (($1045) - ($1048))|0;
     $1050 = $1049 >> 31;
     $1051 = $1050 ^ $1049;
     $1052 = (($1051) - ($1050))|0;
     $1053 = (((($1042) + ($6<<6)|0)) + 22|0);
     $1054 = HEAP16[$1053>>1]|0;
     $1055 = $1054 << 16 >> 16;
     $1056 = (((($1042) + ($6<<6)|0)) + 6|0);
     $1057 = HEAP16[$1056>>1]|0;
     $1058 = $1057 << 16 >> 16;
     $1059 = (($1055) - ($1058))|0;
     $1060 = $1059 >> 31;
     $1061 = $1060 ^ $1059;
     $1062 = (($1061) - ($1060))|0;
     $1063 = $1062 | $1052;
     $1064 = ($1063>>>0)>(3);
     $1066 = $1064;
    } else {
     $1066 = 1;
    }
    $1065 = $1066&1;
    $1067 = $1065 | $1037;
    $1068 = ($1001<<24>>24)!=(0);
    $1069 = $1068&1;
    $1070 = $1067 << $1069;
    $1071 = $1070&255;
    $1072 = ((($4)) + 21|0);
    HEAP8[$1072>>0] = $1071;
    $1073 = $1002 & 255;
    $1074 = HEAP8[$677>>0]|0;
    $1075 = HEAP8[$555>>0]|0;
    $1076 = ($1074<<24>>24)==($1075<<24>>24);
    if ($1076) {
     $1077 = ((($0)) + 3916|0);
     $1078 = HEAP32[$1077>>2]|0;
     $1079 = (((($1078) + ($6<<6)|0)) + 24|0);
     $1080 = HEAP16[$1079>>1]|0;
     $1081 = $1080 << 16 >> 16;
     $1082 = (((($1078) + ($6<<6)|0)) + 8|0);
     $1083 = HEAP16[$1082>>1]|0;
     $1084 = $1083 << 16 >> 16;
     $1085 = (($1081) - ($1084))|0;
     $1086 = $1085 >> 31;
     $1087 = $1086 ^ $1085;
     $1088 = (($1087) - ($1086))|0;
     $1089 = (((($1078) + ($6<<6)|0)) + 26|0);
     $1090 = HEAP16[$1089>>1]|0;
     $1091 = $1090 << 16 >> 16;
     $1092 = (((($1078) + ($6<<6)|0)) + 10|0);
     $1093 = HEAP16[$1092>>1]|0;
     $1094 = $1093 << 16 >> 16;
     $1095 = (($1091) - ($1094))|0;
     $1096 = $1095 >> 31;
     $1097 = $1096 ^ $1095;
     $1098 = (($1097) - ($1096))|0;
     $1099 = $1098 | $1088;
     $1100 = ($1099>>>0)>(3);
     $1102 = $1100;
    } else {
     $1102 = 1;
    }
    $1101 = $1102&1;
    $1103 = $1101 | $1073;
    $1104 = ($1003<<24>>24)!=(0);
    $1105 = $1104&1;
    $1106 = $1103 << $1105;
    $1107 = $1106&255;
    $1108 = ((($4)) + 22|0);
    HEAP8[$1108>>0] = $1107;
    $1109 = HEAP8[$714>>0]|0;
    $1110 = HEAP8[$592>>0]|0;
    $1111 = ($1109<<24>>24)==($1110<<24>>24);
    if ($1111) {
     $1112 = ((($0)) + 3916|0);
     $1113 = HEAP32[$1112>>2]|0;
     $1114 = (((($1113) + ($6<<6)|0)) + 28|0);
     $1115 = HEAP16[$1114>>1]|0;
     $1116 = $1115 << 16 >> 16;
     $1117 = (((($1113) + ($6<<6)|0)) + 12|0);
     $1118 = HEAP16[$1117>>1]|0;
     $1119 = $1118 << 16 >> 16;
     $1120 = (($1116) - ($1119))|0;
     $1121 = $1120 >> 31;
     $1122 = $1121 ^ $1120;
     $1123 = (($1122) - ($1121))|0;
     $1124 = (((($1113) + ($6<<6)|0)) + 30|0);
     $1125 = HEAP16[$1124>>1]|0;
     $1126 = $1125 << 16 >> 16;
     $1127 = (((($1113) + ($6<<6)|0)) + 14|0);
     $1128 = HEAP16[$1127>>1]|0;
     $1129 = $1128 << 16 >> 16;
     $1130 = (($1126) - ($1129))|0;
     $1131 = $1130 >> 31;
     $1132 = $1131 ^ $1130;
     $1133 = (($1132) - ($1131))|0;
     $1134 = $1133 | $1123;
     $1135 = ($1134>>>0)>(3);
     $1137 = $1135;
    } else {
     $1137 = 1;
    }
    $1136 = $1137&1;
    $1138 = $1136 | $1004;
    $1139 = ($1004|0)!=(0);
    $1140 = $1139&1;
    $1141 = $1138 << $1140;
    $1142 = $1141&255;
    $1143 = ((($4)) + 23|0);
    HEAP8[$1143>>0] = $1142;
    $1144 = $502 | $500;
    HEAP32[$260>>2] = $1144;
    $1145 = $1144&255;
    $1146 = $1144 & 255;
    $1147 = HEAP8[$763>>0]|0;
    $1148 = HEAP8[$641>>0]|0;
    $1149 = ($1147<<24>>24)==($1148<<24>>24);
    $1150 = $1144 >>> 8;
    $1151 = $1150&255;
    $1152 = $1144 >>> 16;
    $1153 = $1152&255;
    $1154 = $1144 >>> 24;
    if ($1149) {
     $1155 = ((($0)) + 3916|0);
     $1156 = HEAP32[$1155>>2]|0;
     $1157 = (((($1156) + ($6<<6)|0)) + 32|0);
     $1158 = HEAP16[$1157>>1]|0;
     $1159 = $1158 << 16 >> 16;
     $1160 = (((($1156) + ($6<<6)|0)) + 16|0);
     $1161 = HEAP16[$1160>>1]|0;
     $1162 = $1161 << 16 >> 16;
     $1163 = (($1159) - ($1162))|0;
     $1164 = $1163 >> 31;
     $1165 = $1164 ^ $1163;
     $1166 = (($1165) - ($1164))|0;
     $1167 = (((($1156) + ($6<<6)|0)) + 34|0);
     $1168 = HEAP16[$1167>>1]|0;
     $1169 = $1168 << 16 >> 16;
     $1170 = (((($1156) + ($6<<6)|0)) + 18|0);
     $1171 = HEAP16[$1170>>1]|0;
     $1172 = $1171 << 16 >> 16;
     $1173 = (($1169) - ($1172))|0;
     $1174 = $1173 >> 31;
     $1175 = $1174 ^ $1173;
     $1176 = (($1175) - ($1174))|0;
     $1177 = $1176 | $1166;
     $1178 = ($1177>>>0)>(3);
     $1180 = $1178;
    } else {
     $1180 = 1;
    }
    $1179 = $1180&1;
    $1181 = $1179 | $1146;
    $1182 = ($1145<<24>>24)!=(0);
    $1183 = $1182&1;
    $1184 = $1181 << $1183;
    $1185 = $1184&255;
    $1186 = ((($4)) + 24|0);
    HEAP8[$1186>>0] = $1185;
    $1187 = $1150 & 255;
    $1188 = HEAP8[$761>>0]|0;
    $1189 = HEAP8[$639>>0]|0;
    $1190 = ($1188<<24>>24)==($1189<<24>>24);
    if ($1190) {
     $1191 = ((($0)) + 3916|0);
     $1192 = HEAP32[$1191>>2]|0;
     $1193 = (((($1192) + ($6<<6)|0)) + 36|0);
     $1194 = HEAP16[$1193>>1]|0;
     $1195 = $1194 << 16 >> 16;
     $1196 = (((($1192) + ($6<<6)|0)) + 20|0);
     $1197 = HEAP16[$1196>>1]|0;
     $1198 = $1197 << 16 >> 16;
     $1199 = (($1195) - ($1198))|0;
     $1200 = $1199 >> 31;
     $1201 = $1200 ^ $1199;
     $1202 = (($1201) - ($1200))|0;
     $1203 = (((($1192) + ($6<<6)|0)) + 38|0);
     $1204 = HEAP16[$1203>>1]|0;
     $1205 = $1204 << 16 >> 16;
     $1206 = (((($1192) + ($6<<6)|0)) + 22|0);
     $1207 = HEAP16[$1206>>1]|0;
     $1208 = $1207 << 16 >> 16;
     $1209 = (($1205) - ($1208))|0;
     $1210 = $1209 >> 31;
     $1211 = $1210 ^ $1209;
     $1212 = (($1211) - ($1210))|0;
     $1213 = $1212 | $1202;
     $1214 = ($1213>>>0)>(3);
     $1216 = $1214;
    } else {
     $1216 = 1;
    }
    $1215 = $1216&1;
    $1217 = $1215 | $1187;
    $1218 = ($1151<<24>>24)!=(0);
    $1219 = $1218&1;
    $1220 = $1217 << $1219;
    $1221 = $1220&255;
    $1222 = ((($4)) + 25|0);
    HEAP8[$1222>>0] = $1221;
    $1223 = $1152 & 255;
    $1224 = HEAP8[$799>>0]|0;
    $1225 = HEAP8[$677>>0]|0;
    $1226 = ($1224<<24>>24)==($1225<<24>>24);
    if ($1226) {
     $1227 = ((($0)) + 3916|0);
     $1228 = HEAP32[$1227>>2]|0;
     $1229 = (((($1228) + ($6<<6)|0)) + 40|0);
     $1230 = HEAP16[$1229>>1]|0;
     $1231 = $1230 << 16 >> 16;
     $1232 = (((($1228) + ($6<<6)|0)) + 24|0);
     $1233 = HEAP16[$1232>>1]|0;
     $1234 = $1233 << 16 >> 16;
     $1235 = (($1231) - ($1234))|0;
     $1236 = $1235 >> 31;
     $1237 = $1236 ^ $1235;
     $1238 = (($1237) - ($1236))|0;
     $1239 = (((($1228) + ($6<<6)|0)) + 42|0);
     $1240 = HEAP16[$1239>>1]|0;
     $1241 = $1240 << 16 >> 16;
     $1242 = (((($1228) + ($6<<6)|0)) + 26|0);
     $1243 = HEAP16[$1242>>1]|0;
     $1244 = $1243 << 16 >> 16;
     $1245 = (($1241) - ($1244))|0;
     $1246 = $1245 >> 31;
     $1247 = $1246 ^ $1245;
     $1248 = (($1247) - ($1246))|0;
     $1249 = $1248 | $1238;
     $1250 = ($1249>>>0)>(3);
     $1252 = $1250;
    } else {
     $1252 = 1;
    }
    $1251 = $1252&1;
    $1253 = $1251 | $1223;
    $1254 = ($1153<<24>>24)!=(0);
    $1255 = $1254&1;
    $1256 = $1253 << $1255;
    $1257 = $1256&255;
    $1258 = ((($4)) + 26|0);
    HEAP8[$1258>>0] = $1257;
    $1259 = HEAP8[$836>>0]|0;
    $1260 = HEAP8[$714>>0]|0;
    $1261 = ($1259<<24>>24)==($1260<<24>>24);
    if ($1261) {
     $1262 = ((($0)) + 3916|0);
     $1263 = HEAP32[$1262>>2]|0;
     $1264 = (((($1263) + ($6<<6)|0)) + 44|0);
     $1265 = HEAP16[$1264>>1]|0;
     $1266 = $1265 << 16 >> 16;
     $1267 = (((($1263) + ($6<<6)|0)) + 28|0);
     $1268 = HEAP16[$1267>>1]|0;
     $1269 = $1268 << 16 >> 16;
     $1270 = (($1266) - ($1269))|0;
     $1271 = $1270 >> 31;
     $1272 = $1271 ^ $1270;
     $1273 = (($1272) - ($1271))|0;
     $1274 = (((($1263) + ($6<<6)|0)) + 46|0);
     $1275 = HEAP16[$1274>>1]|0;
     $1276 = $1275 << 16 >> 16;
     $1277 = (((($1263) + ($6<<6)|0)) + 30|0);
     $1278 = HEAP16[$1277>>1]|0;
     $1279 = $1278 << 16 >> 16;
     $1280 = (($1276) - ($1279))|0;
     $1281 = $1280 >> 31;
     $1282 = $1281 ^ $1280;
     $1283 = (($1282) - ($1281))|0;
     $1284 = $1283 | $1273;
     $1285 = ($1284>>>0)>(3);
     $1287 = $1285;
    } else {
     $1287 = 1;
    }
    $1286 = $1287&1;
    $1288 = $1286 | $1154;
    $1289 = ($1154|0)!=(0);
    $1290 = $1289&1;
    $1291 = $1288 << $1290;
    $1292 = $1291&255;
    $1293 = ((($4)) + 27|0);
    HEAP8[$1293>>0] = $1292;
    $1294 = $504 | $502;
    HEAP32[$260>>2] = $1294;
    $1295 = $1294&255;
    $1296 = $1294 & 255;
    $1297 = HEAP8[$885>>0]|0;
    $1298 = HEAP8[$763>>0]|0;
    $1299 = ($1297<<24>>24)==($1298<<24>>24);
    $1300 = $1294 >>> 8;
    $1301 = $1300&255;
    $1302 = $1294 >>> 16;
    $1303 = $1302&255;
    $1304 = $1294 >>> 24;
    if ($1299) {
     $1305 = ((($0)) + 3916|0);
     $1306 = HEAP32[$1305>>2]|0;
     $1307 = (((($1306) + ($6<<6)|0)) + 48|0);
     $1308 = HEAP16[$1307>>1]|0;
     $1309 = $1308 << 16 >> 16;
     $1310 = (((($1306) + ($6<<6)|0)) + 32|0);
     $1311 = HEAP16[$1310>>1]|0;
     $1312 = $1311 << 16 >> 16;
     $1313 = (($1309) - ($1312))|0;
     $1314 = $1313 >> 31;
     $1315 = $1314 ^ $1313;
     $1316 = (($1315) - ($1314))|0;
     $1317 = (((($1306) + ($6<<6)|0)) + 50|0);
     $1318 = HEAP16[$1317>>1]|0;
     $1319 = $1318 << 16 >> 16;
     $1320 = (((($1306) + ($6<<6)|0)) + 34|0);
     $1321 = HEAP16[$1320>>1]|0;
     $1322 = $1321 << 16 >> 16;
     $1323 = (($1319) - ($1322))|0;
     $1324 = $1323 >> 31;
     $1325 = $1324 ^ $1323;
     $1326 = (($1325) - ($1324))|0;
     $1327 = $1326 | $1316;
     $1328 = ($1327>>>0)>(3);
     $1330 = $1328;
    } else {
     $1330 = 1;
    }
    $1329 = $1330&1;
    $1331 = $1329 | $1296;
    $1332 = ($1295<<24>>24)!=(0);
    $1333 = $1332&1;
    $1334 = $1331 << $1333;
    $1335 = $1334&255;
    $1336 = ((($4)) + 28|0);
    HEAP8[$1336>>0] = $1335;
    $1337 = $1300 & 255;
    $1338 = HEAP8[$883>>0]|0;
    $1339 = HEAP8[$761>>0]|0;
    $1340 = ($1338<<24>>24)==($1339<<24>>24);
    if ($1340) {
     $1341 = ((($0)) + 3916|0);
     $1342 = HEAP32[$1341>>2]|0;
     $1343 = (((($1342) + ($6<<6)|0)) + 52|0);
     $1344 = HEAP16[$1343>>1]|0;
     $1345 = $1344 << 16 >> 16;
     $1346 = (((($1342) + ($6<<6)|0)) + 36|0);
     $1347 = HEAP16[$1346>>1]|0;
     $1348 = $1347 << 16 >> 16;
     $1349 = (($1345) - ($1348))|0;
     $1350 = $1349 >> 31;
     $1351 = $1350 ^ $1349;
     $1352 = (($1351) - ($1350))|0;
     $1353 = (((($1342) + ($6<<6)|0)) + 54|0);
     $1354 = HEAP16[$1353>>1]|0;
     $1355 = $1354 << 16 >> 16;
     $1356 = (((($1342) + ($6<<6)|0)) + 38|0);
     $1357 = HEAP16[$1356>>1]|0;
     $1358 = $1357 << 16 >> 16;
     $1359 = (($1355) - ($1358))|0;
     $1360 = $1359 >> 31;
     $1361 = $1360 ^ $1359;
     $1362 = (($1361) - ($1360))|0;
     $1363 = $1362 | $1352;
     $1364 = ($1363>>>0)>(3);
     $1366 = $1364;
    } else {
     $1366 = 1;
    }
    $1365 = $1366&1;
    $1367 = $1365 | $1337;
    $1368 = ($1301<<24>>24)!=(0);
    $1369 = $1368&1;
    $1370 = $1367 << $1369;
    $1371 = $1370&255;
    $1372 = ((($4)) + 29|0);
    HEAP8[$1372>>0] = $1371;
    $1373 = $1302 & 255;
    $1374 = HEAP8[$921>>0]|0;
    $1375 = HEAP8[$799>>0]|0;
    $1376 = ($1374<<24>>24)==($1375<<24>>24);
    if ($1376) {
     $1377 = ((($0)) + 3916|0);
     $1378 = HEAP32[$1377>>2]|0;
     $1379 = (((($1378) + ($6<<6)|0)) + 56|0);
     $1380 = HEAP16[$1379>>1]|0;
     $1381 = $1380 << 16 >> 16;
     $1382 = (((($1378) + ($6<<6)|0)) + 40|0);
     $1383 = HEAP16[$1382>>1]|0;
     $1384 = $1383 << 16 >> 16;
     $1385 = (($1381) - ($1384))|0;
     $1386 = $1385 >> 31;
     $1387 = $1386 ^ $1385;
     $1388 = (($1387) - ($1386))|0;
     $1389 = (((($1378) + ($6<<6)|0)) + 58|0);
     $1390 = HEAP16[$1389>>1]|0;
     $1391 = $1390 << 16 >> 16;
     $1392 = (((($1378) + ($6<<6)|0)) + 42|0);
     $1393 = HEAP16[$1392>>1]|0;
     $1394 = $1393 << 16 >> 16;
     $1395 = (($1391) - ($1394))|0;
     $1396 = $1395 >> 31;
     $1397 = $1396 ^ $1395;
     $1398 = (($1397) - ($1396))|0;
     $1399 = $1398 | $1388;
     $1400 = ($1399>>>0)>(3);
     $1402 = $1400;
    } else {
     $1402 = 1;
    }
    $1401 = $1402&1;
    $1403 = $1401 | $1373;
    $1404 = ($1303<<24>>24)!=(0);
    $1405 = $1404&1;
    $1406 = $1403 << $1405;
    $1407 = $1406&255;
    $1408 = ((($4)) + 30|0);
    HEAP8[$1408>>0] = $1407;
    $1409 = HEAP8[$958>>0]|0;
    $1410 = HEAP8[$836>>0]|0;
    $1411 = ($1409<<24>>24)==($1410<<24>>24);
    if ($1411) {
     $1412 = ((($0)) + 3916|0);
     $1413 = HEAP32[$1412>>2]|0;
     $1414 = (((($1413) + ($6<<6)|0)) + 60|0);
     $1415 = HEAP16[$1414>>1]|0;
     $1416 = $1415 << 16 >> 16;
     $1417 = (((($1413) + ($6<<6)|0)) + 44|0);
     $1418 = HEAP16[$1417>>1]|0;
     $1419 = $1418 << 16 >> 16;
     $1420 = (($1416) - ($1419))|0;
     $1421 = $1420 >> 31;
     $1422 = $1421 ^ $1420;
     $1423 = (($1422) - ($1421))|0;
     $1424 = (((($1413) + ($6<<6)|0)) + 62|0);
     $1425 = HEAP16[$1424>>1]|0;
     $1426 = $1425 << 16 >> 16;
     $1427 = (((($1413) + ($6<<6)|0)) + 46|0);
     $1428 = HEAP16[$1427>>1]|0;
     $1429 = $1428 << 16 >> 16;
     $1430 = (($1426) - ($1429))|0;
     $1431 = $1430 >> 31;
     $1432 = $1431 ^ $1430;
     $1433 = (($1432) - ($1431))|0;
     $1434 = $1433 | $1423;
     $1435 = ($1434>>>0)>(3);
     $1437 = $1435;
    } else {
     $1437 = 1;
    }
    $1436 = $1437&1;
    $1438 = $1436 | $1304;
    $1439 = ($1304|0)!=(0);
    $1440 = $1439&1;
    $1441 = $1438 << $1440;
    $1442 = $1441&255;
    $$sink$i = $1442;$$sink5$i = 3;
   } else {
    $266 = HEAP8[11079]|0;
    $267 = $266&255;
    $268 = ((($34) + (($6*24)|0)|0) + ($267)|0);
    $269 = HEAP8[$268>>0]|0;
    $270 = HEAP8[(11080)>>0]|0;
    $271 = $270&255;
    $272 = ((($34) + (($6*24)|0)|0) + ($271)|0);
    $273 = HEAP8[$272>>0]|0;
    $274 = $273 | $269;
    $275 = HEAP8[(11081)>>0]|0;
    $276 = $275&255;
    $277 = ((($34) + (($6*24)|0)|0) + ($276)|0);
    $278 = HEAP8[$277>>0]|0;
    $279 = $274 | $278;
    $280 = HEAP8[(11082)>>0]|0;
    $281 = $280&255;
    $282 = ((($34) + (($6*24)|0)|0) + ($281)|0);
    $283 = HEAP8[$282>>0]|0;
    $284 = $279 | $283;
    $285 = HEAP8[(11083)>>0]|0;
    $286 = $285&255;
    $287 = ((($34) + (($6*24)|0)|0) + ($286)|0);
    $288 = HEAP8[$287>>0]|0;
    $289 = HEAP8[(11084)>>0]|0;
    $290 = $289&255;
    $291 = ((($34) + (($6*24)|0)|0) + ($290)|0);
    $292 = HEAP8[$291>>0]|0;
    $293 = $292 | $288;
    $294 = HEAP8[(11085)>>0]|0;
    $295 = $294&255;
    $296 = ((($34) + (($6*24)|0)|0) + ($295)|0);
    $297 = HEAP8[$296>>0]|0;
    $298 = $293 | $297;
    $299 = HEAP8[(11086)>>0]|0;
    $300 = $299&255;
    $301 = ((($34) + (($6*24)|0)|0) + ($300)|0);
    $302 = HEAP8[$301>>0]|0;
    $303 = $298 | $302;
    $304 = HEAP8[(11087)>>0]|0;
    $305 = $304&255;
    $306 = ((($34) + (($6*24)|0)|0) + ($305)|0);
    $307 = HEAP8[$306>>0]|0;
    $308 = HEAP8[(11088)>>0]|0;
    $309 = $308&255;
    $310 = ((($34) + (($6*24)|0)|0) + ($309)|0);
    $311 = HEAP8[$310>>0]|0;
    $312 = $311 | $307;
    $313 = HEAP8[(11089)>>0]|0;
    $314 = $313&255;
    $315 = ((($34) + (($6*24)|0)|0) + ($314)|0);
    $316 = HEAP8[$315>>0]|0;
    $317 = $312 | $316;
    $318 = HEAP8[(11090)>>0]|0;
    $319 = $318&255;
    $320 = ((($34) + (($6*24)|0)|0) + ($319)|0);
    $321 = HEAP8[$320>>0]|0;
    $322 = $317 | $321;
    $323 = HEAP8[(11091)>>0]|0;
    $324 = $323&255;
    $325 = ((($34) + (($6*24)|0)|0) + ($324)|0);
    $326 = HEAP8[$325>>0]|0;
    $327 = HEAP8[(11092)>>0]|0;
    $328 = $327&255;
    $329 = ((($34) + (($6*24)|0)|0) + ($328)|0);
    $330 = HEAP8[$329>>0]|0;
    $331 = $330 | $326;
    $332 = HEAP8[(11093)>>0]|0;
    $333 = $332&255;
    $334 = ((($34) + (($6*24)|0)|0) + ($333)|0);
    $335 = HEAP8[$334>>0]|0;
    $336 = $331 | $335;
    $337 = HEAP8[(11094)>>0]|0;
    $338 = $337&255;
    $339 = ((($34) + (($6*24)|0)|0) + ($338)|0);
    $340 = HEAP8[$339>>0]|0;
    $341 = $336 | $340;
    $342 = $303 | $284;
    $343 = $342 << 24 >> 24;
    $344 = ((($254) + ($6<<4)|0) + ($286)|0);
    $345 = HEAP8[$344>>0]|0;
    $346 = ((($254) + ($6<<4)|0) + ($267)|0);
    $347 = HEAP8[$346>>0]|0;
    $348 = ($345<<24>>24)==($347<<24>>24);
    if ($348) {
     $349 = ((($0)) + 3916|0);
     $350 = HEAP32[$349>>2]|0;
     $351 = ((($350) + ($6<<6)|0) + ($286<<2)|0);
     $352 = HEAP16[$351>>1]|0;
     $353 = $352 << 16 >> 16;
     $354 = ((($350) + ($6<<6)|0) + ($267<<2)|0);
     $355 = HEAP16[$354>>1]|0;
     $356 = $355 << 16 >> 16;
     $357 = (($353) - ($356))|0;
     $358 = $357 >> 31;
     $359 = $358 ^ $357;
     $360 = (($359) - ($358))|0;
     $361 = ((((($350) + ($6<<6)|0) + ($286<<2)|0)) + 2|0);
     $362 = HEAP16[$361>>1]|0;
     $363 = $362 << 16 >> 16;
     $364 = ((((($350) + ($6<<6)|0) + ($267<<2)|0)) + 2|0);
     $365 = HEAP16[$364>>1]|0;
     $366 = $365 << 16 >> 16;
     $367 = (($363) - ($366))|0;
     $368 = $367 >> 31;
     $369 = $368 ^ $367;
     $370 = (($369) - ($368))|0;
     $371 = $370 | $360;
     $372 = ($371>>>0)>(3);
     $374 = $372;
    } else {
     $374 = 1;
    }
    $373 = $374&1;
    $375 = $373 | $343;
    $376 = ($342<<24>>24)!=(0);
    $377 = $376&1;
    $378 = $375 << $377;
    $379 = $378&255;
    $380 = ((($4)) + 9|0);
    HEAP8[$380>>0] = $379;
    $381 = ((($4)) + 8|0);
    HEAP8[$381>>0] = $379;
    $382 = $341 | $322;
    $383 = $382 << 24 >> 24;
    $384 = ((($254) + ($6<<4)|0) + ($324)|0);
    $385 = HEAP8[$384>>0]|0;
    $386 = ((($254) + ($6<<4)|0) + ($305)|0);
    $387 = HEAP8[$386>>0]|0;
    $388 = ($385<<24>>24)==($387<<24>>24);
    if ($388) {
     $389 = ((($0)) + 3916|0);
     $390 = HEAP32[$389>>2]|0;
     $391 = ((($390) + ($6<<6)|0) + ($324<<2)|0);
     $392 = HEAP16[$391>>1]|0;
     $393 = $392 << 16 >> 16;
     $394 = ((($390) + ($6<<6)|0) + ($305<<2)|0);
     $395 = HEAP16[$394>>1]|0;
     $396 = $395 << 16 >> 16;
     $397 = (($393) - ($396))|0;
     $398 = $397 >> 31;
     $399 = $398 ^ $397;
     $400 = (($399) - ($398))|0;
     $401 = ((((($390) + ($6<<6)|0) + ($324<<2)|0)) + 2|0);
     $402 = HEAP16[$401>>1]|0;
     $403 = $402 << 16 >> 16;
     $404 = ((((($390) + ($6<<6)|0) + ($305<<2)|0)) + 2|0);
     $405 = HEAP16[$404>>1]|0;
     $406 = $405 << 16 >> 16;
     $407 = (($403) - ($406))|0;
     $408 = $407 >> 31;
     $409 = $408 ^ $407;
     $410 = (($409) - ($408))|0;
     $411 = $410 | $400;
     $412 = ($411>>>0)>(3);
     $414 = $412;
    } else {
     $414 = 1;
    }
    $413 = $414&1;
    $415 = $413 | $383;
    $416 = ($382<<24>>24)!=(0);
    $417 = $416&1;
    $418 = $415 << $417;
    $419 = $418&255;
    $420 = ((($4)) + 11|0);
    HEAP8[$420>>0] = $419;
    $421 = ((($4)) + 10|0);
    HEAP8[$421>>0] = $419;
    $422 = $322 | $284;
    $423 = $422 << 24 >> 24;
    $424 = HEAP8[$386>>0]|0;
    $425 = HEAP8[$346>>0]|0;
    $426 = ($424<<24>>24)==($425<<24>>24);
    if ($426) {
     $427 = ((($0)) + 3916|0);
     $428 = HEAP32[$427>>2]|0;
     $429 = ((($428) + ($6<<6)|0) + ($305<<2)|0);
     $430 = HEAP16[$429>>1]|0;
     $431 = $430 << 16 >> 16;
     $432 = ((($428) + ($6<<6)|0) + ($267<<2)|0);
     $433 = HEAP16[$432>>1]|0;
     $434 = $433 << 16 >> 16;
     $435 = (($431) - ($434))|0;
     $436 = $435 >> 31;
     $437 = $436 ^ $435;
     $438 = (($437) - ($436))|0;
     $439 = ((((($428) + ($6<<6)|0) + ($305<<2)|0)) + 2|0);
     $440 = HEAP16[$439>>1]|0;
     $441 = $440 << 16 >> 16;
     $442 = ((((($428) + ($6<<6)|0) + ($267<<2)|0)) + 2|0);
     $443 = HEAP16[$442>>1]|0;
     $444 = $443 << 16 >> 16;
     $445 = (($441) - ($444))|0;
     $446 = $445 >> 31;
     $447 = $446 ^ $445;
     $448 = (($447) - ($446))|0;
     $449 = $448 | $438;
     $450 = ($449>>>0)>(3);
     $452 = $450;
    } else {
     $452 = 1;
    }
    $451 = $452&1;
    $453 = $451 | $423;
    $454 = ($422<<24>>24)!=(0);
    $455 = $454&1;
    $456 = $453 << $455;
    $457 = $456&255;
    $458 = ((($4)) + 25|0);
    HEAP8[$458>>0] = $457;
    $459 = ((($4)) + 24|0);
    HEAP8[$459>>0] = $457;
    $460 = $341 | $303;
    $461 = $460 << 24 >> 24;
    $462 = HEAP8[$384>>0]|0;
    $463 = HEAP8[$344>>0]|0;
    $464 = ($462<<24>>24)==($463<<24>>24);
    if ($464) {
     $465 = ((($0)) + 3916|0);
     $466 = HEAP32[$465>>2]|0;
     $467 = ((($466) + ($6<<6)|0) + ($324<<2)|0);
     $468 = HEAP16[$467>>1]|0;
     $469 = $468 << 16 >> 16;
     $470 = ((($466) + ($6<<6)|0) + ($286<<2)|0);
     $471 = HEAP16[$470>>1]|0;
     $472 = $471 << 16 >> 16;
     $473 = (($469) - ($472))|0;
     $474 = $473 >> 31;
     $475 = $474 ^ $473;
     $476 = (($475) - ($474))|0;
     $477 = ((((($466) + ($6<<6)|0) + ($324<<2)|0)) + 2|0);
     $478 = HEAP16[$477>>1]|0;
     $479 = $478 << 16 >> 16;
     $480 = ((((($466) + ($6<<6)|0) + ($286<<2)|0)) + 2|0);
     $481 = HEAP16[$480>>1]|0;
     $482 = $481 << 16 >> 16;
     $483 = (($479) - ($482))|0;
     $484 = $483 >> 31;
     $485 = $484 ^ $483;
     $486 = (($485) - ($484))|0;
     $487 = $486 | $476;
     $488 = ($487>>>0)>(3);
     $490 = $488;
    } else {
     $490 = 1;
    }
    $489 = $490&1;
    $491 = $489 | $461;
    $492 = ($460<<24>>24)!=(0);
    $493 = $492&1;
    $494 = $491 << $493;
    $495 = $494&255;
    $496 = ((($4)) + 27|0);
    HEAP8[$496>>0] = $495;
    $$sink$i = $495;$$sink5$i = 2;
   }
   $1443 = ((((($4)) + 16|0) + ($$sink5$i<<2)|0) + ($$sink5$i)|0);
   HEAP8[$1443>>0] = $$sink$i;
  }
 } while(0);
 __ZN7WelsDec17DeblockingInterMbEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEPA4_A4_hi($0,$1,$4,$2);
 STACKTOP = sp;return;
}
function __ZN7WelsDec25WelsDeblockingFilterSliceEPNS_21TagWelsDecoderContextEPFvPNS_10TagDqLayerEPNS_19tagDeblockingFilterEiE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$in$i$us = 0, $$071 = 0, $$071$us = 0, $$1 = 0, $$1$us = 0, $$pn = 0, $$pn$us = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, $or$cond$us = 0, $storemerge = 0, $storemerge$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp;
 $3 = ((($0)) + 241932|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 4044|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 88|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($2)) + 16|0);
 ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;HEAP32[$11+12>>2]=0|0;HEAP32[$11+16>>2]=0|0;
 $12 = ((($0)) + 5240|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($4)) + 3876|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($4)) + 72|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($0)) + 5464|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($19)) + 16|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$2>>2] = $21;
 $22 = ((($19)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($2)) + 4|0);
 HEAP32[$24>>2] = $23;
 $25 = ((($19)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($2)) + 8|0);
 HEAP32[$27>>2] = $26;
 $28 = ((($19)) + 32|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($2)) + 12|0);
 HEAP32[$30>>2] = $29;
 $31 = ((($19)) + 36|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($2)) + 16|0);
 HEAP32[$33>>2] = $32;
 $34 = ((($4)) + 3881|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = $35&255;
 $37 = ((($2)) + 20|0);
 HEAP32[$37>>2] = $36;
 $38 = ((($4)) + 76|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = $39&255;
 $41 = ((($2)) + 24|0);
 HEAP8[$41>>0] = $40;
 $42 = ((($4)) + 80|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = $43&255;
 $45 = ((($2)) + 25|0);
 HEAP8[$45>>0] = $44;
 $46 = ((($0)) + 317064|0);
 $47 = ((($2)) + 32|0);
 HEAP32[$47>>2] = $46;
 $48 = $17 | 2;
 $49 = ($48|0)==(2);
 if (!($49)) {
  STACKTOP = sp;return;
 }
 $50 = ((($4)) + 24|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51|0) % ($6|0))&-1;
 $53 = ((($4)) + 4032|0);
 HEAP32[$53>>2] = $52;
 $54 = ((($4)) + 4036|0);
 $55 = ((($4)) + 4040|0);
 $56 = ($17|0)==(2);
 $57 = ((($4)) + 3912|0);
 $58 = ((($4)) + 92|0);
 if ($56) {
  $$071$us = 0;$$pn$us = $51;$59 = $52;
 } else {
  $$071 = 0;$$pn = $51;$95 = $52;
  while(1) {
   $storemerge = (($$pn|0) / ($6|0))&-1;
   HEAP32[$54>>2] = $storemerge;
   HEAP32[$55>>2] = $$pn;
   $96 = ($95|0)>(0);
   $97 = ($storemerge|0)>(0);
   $98 = $96&1;
   $99 = $97&1;
   $100 = $99 << 1;
   $101 = $100 | $98;
   FUNCTION_TABLE_viii[$1 & 7]($4,$2,$101);
   $102 = (($$071) + 1)|0;
   $103 = ($102|0)<($15|0);
   if (!($103)) {
    label = 19;
    break;
   }
   $104 = HEAP32[$58>>2]|0;
   $105 = ((($104)) + 8|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = ($106>>>0)>(1);
   if ($107) {
    $108 = $$pn&65535;
    $109 = (__ZN7WelsDec9FmoNextMbEPNS_6TagFmoEs($13,$108)|0);
    $110 = $109 << 16 >> 16;
    $$1 = $110;
   } else {
    $111 = (($$pn) + 1)|0;
    $$1 = $111;
   }
   $112 = ($$1|0)!=(-1);
   $113 = ($$1|0)<($10|0);
   $or$cond = $112 & $113;
   if (!($or$cond)) {
    label = 19;
    break;
   }
   $114 = (($$1|0) % ($6|0))&-1;
   HEAP32[$53>>2] = $114;
   $$071 = $102;$$pn = $$1;$95 = $114;
  }
  if ((label|0) == 19) {
   STACKTOP = sp;return;
  }
 }
 while(1) {
  $storemerge$us = (($$pn$us|0) / ($6|0))&-1;
  HEAP32[$54>>2] = $storemerge$us;
  HEAP32[$55>>2] = $$pn$us;
  $60 = ($59|0)>(0);
  $61 = ($storemerge$us|0)>(0);
  if ($60) {
   $62 = HEAP32[$57>>2]|0;
   $63 = (($62) + ($$pn$us<<2)|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = (($$pn$us) + -1)|0;
   $66 = (($62) + ($65<<2)|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ($64|0)==($67|0);
   $78 = $68;
  } else {
   $78 = 0;
  }
  if ($61) {
   $69 = HEAP32[$57>>2]|0;
   $70 = (($69) + ($$pn$us<<2)|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = HEAP32[$5>>2]|0;
   $73 = (($$pn$us) - ($72))|0;
   $74 = (($69) + ($73<<2)|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = ($71|0)==($75|0);
   $$0$in$i$us = $76;
  } else {
   $$0$in$i$us = 0;
  }
  $77 = $78&1;
  $79 = $$0$in$i$us&1;
  $80 = $79 << 1;
  $81 = $80 | $77;
  FUNCTION_TABLE_viii[$1 & 7]($4,$2,$81);
  $82 = (($$071$us) + 1)|0;
  $83 = ($82|0)<($15|0);
  if (!($83)) {
   label = 19;
   break;
  }
  $84 = HEAP32[$58>>2]|0;
  $85 = ((($84)) + 8|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = ($86>>>0)>(1);
  if ($87) {
   $89 = $$pn$us&65535;
   $90 = (__ZN7WelsDec9FmoNextMbEPNS_6TagFmoEs($13,$89)|0);
   $91 = $90 << 16 >> 16;
   $$1$us = $91;
  } else {
   $88 = (($$pn$us) + 1)|0;
   $$1$us = $88;
  }
  $92 = ($$1$us|0)!=(-1);
  $93 = ($$1$us|0)<($10|0);
  $or$cond$us = $92 & $93;
  if (!($or$cond$us)) {
   label = 19;
   break;
  }
  $94 = (($$1$us|0) % ($6|0))&-1;
  HEAP32[$53>>2] = $94;
  $$071$us = $82;$$pn$us = $$1$us;$59 = $94;
 }
 if ((label|0) == 19) {
  STACKTOP = sp;return;
 }
}
function __ZN7WelsDec19FilteringEdgeLumaHVEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $$pre$phi126Z2D = 0, $$pre$phi128Z2D = 0, $$pre$phi132Z2D = 0, $$pre$phiZ2D = 0, $$pre125 = 0, $$pre127 = 0, $$pre131 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext = 0, $sext123 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = sp + 7|0;
 $4 = sp;
 $5 = ((($0)) + 4040|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 4032|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4036|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 4044|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($3)) + 15|0);
 $16 = $15;
 $17 = $16 & 15;
 $18 = (0 - ($17))|0;
 $19 = (($15) + ($18)|0);
 $20 = ((($4)) + 3|0);
 $21 = $20;
 $22 = $21 & 3;
 $23 = (0 - ($22))|0;
 $24 = (($20) + ($23)|0);
 $25 = HEAP32[$1>>2]|0;
 $26 = Math_imul($14, $10)|0;
 $27 = (($26) + ($8))|0;
 $28 = $27 << 4;
 $29 = (($25) + ($28)|0);
 $30 = ((($0)) + 3948|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (($31) + ($6)|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = $33 << 24 >> 24;
 HEAP32[$24>>2] = 50529027;
 $35 = $2 & 1;
 $36 = ($35|0)==(0);
 if ($36) {
  $$pre = ((($1)) + 28|0);
  $$pre125 = ((($1)) + 24|0);
  $$pre127 = ((($1)) + 25|0);
  $$pre$phi126Z2D = $$pre125;$$pre$phi128Z2D = $$pre127;$$pre$phiZ2D = $$pre;
 } else {
  $37 = (($6) + -1)|0;
  $38 = (($31) + ($37)|0);
  $39 = HEAP8[$38>>0]|0;
  $40 = $39 << 24 >> 24;
  $41 = (($34) + 1)|0;
  $42 = (($41) + ($40))|0;
  $43 = $42 >>> 1;
  $44 = $43&255;
  $45 = ((($1)) + 28|0);
  HEAP8[$45>>0] = $44;
  $sext = $43 << 24;
  $46 = $sext >> 24;
  $47 = ((($1)) + 24|0);
  $48 = HEAP8[$47>>0]|0;
  $49 = $48 << 24 >> 24;
  $50 = (($46) + 12)|0;
  $51 = (($50) + ($49))|0;
  $52 = (24151 + ($51)|0);
  $53 = HEAP8[$52>>0]|0;
  $54 = $53&255;
  $55 = ((($1)) + 25|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = $56 << 24 >> 24;
  $58 = (($50) + ($57))|0;
  $59 = (24227 + ($58)|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = $60 << 24 >> 24;
  $62 = $61 | $54;
  $63 = ($62|0)==(0);
  if ($63) {
   $$pre$phi126Z2D = $47;$$pre$phi128Z2D = $55;$$pre$phiZ2D = $45;
  } else {
   $64 = ((($1)) + 32|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ((($65)) + 12|0);
   $67 = HEAP32[$66>>2]|0;
   FUNCTION_TABLE_viiii[$67 & 31]($29,$14,$54,$61);
   $$pre$phi126Z2D = $47;$$pre$phi128Z2D = $55;$$pre$phiZ2D = $45;
  }
 }
 HEAP8[$$pre$phiZ2D>>0] = $33;
 $68 = HEAP8[$$pre$phi126Z2D>>0]|0;
 $69 = $68 << 24 >> 24;
 $70 = (($34) + 12)|0;
 $71 = (($70) + ($69))|0;
 $72 = (24151 + ($71)|0);
 $73 = HEAP8[$72>>0]|0;
 $74 = $73&255;
 $75 = HEAP8[$$pre$phi128Z2D>>0]|0;
 $76 = $75 << 24 >> 24;
 $77 = (($70) + ($76))|0;
 $78 = (24227 + ($77)|0);
 $79 = HEAP8[$78>>0]|0;
 $80 = $79 << 24 >> 24;
 $81 = $80 | $74;
 $82 = ($81|0)!=(0);
 if ($82) {
  $83 = HEAP8[$24>>0]|0;
  $84 = $83&255;
  $85 = ((24303 + ($71<<2)|0) + ($84)|0);
  $86 = HEAP8[$85>>0]|0;
  HEAP8[$19>>0] = $86;
  $87 = ((($24)) + 1|0);
  $88 = HEAP8[$87>>0]|0;
  $89 = $88&255;
  $90 = ((24303 + ($71<<2)|0) + ($89)|0);
  $91 = HEAP8[$90>>0]|0;
  $92 = ((($19)) + 1|0);
  HEAP8[$92>>0] = $91;
  $93 = ((($24)) + 2|0);
  $94 = HEAP8[$93>>0]|0;
  $95 = $94&255;
  $96 = ((24303 + ($71<<2)|0) + ($95)|0);
  $97 = HEAP8[$96>>0]|0;
  $98 = ((($19)) + 2|0);
  HEAP8[$98>>0] = $97;
  $99 = ((($24)) + 3|0);
  $100 = HEAP8[$99>>0]|0;
  $101 = $100&255;
  $102 = ((24303 + ($71<<2)|0) + ($101)|0);
  $103 = HEAP8[$102>>0]|0;
  $104 = ((($19)) + 3|0);
  HEAP8[$104>>0] = $103;
  $105 = ((($0)) + 3944|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($106) + ($6)|0);
  $108 = HEAP8[$107>>0]|0;
  $109 = ($108<<24>>24)==(0);
  $110 = ((($1)) + 32|0);
  if ($109) {
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($111)) + 8|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ((($29)) + 4|0);
   FUNCTION_TABLE_viiiii[$113 & 15]($114,$14,$74,$80,$19);
  }
  $115 = HEAP32[$110>>2]|0;
  $116 = ((($115)) + 8|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = ((($29)) + 8|0);
  FUNCTION_TABLE_viiiii[$117 & 15]($118,$14,$74,$80,$19);
  $119 = HEAP32[$105>>2]|0;
  $120 = (($119) + ($6)|0);
  $121 = HEAP8[$120>>0]|0;
  $122 = ($121<<24>>24)==(0);
  if ($122) {
   $123 = HEAP32[$110>>2]|0;
   $124 = ((($123)) + 8|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = ((($29)) + 12|0);
   FUNCTION_TABLE_viiiii[$125 & 15]($126,$14,$74,$80,$19);
  }
 }
 $127 = $2 & 2;
 $128 = ($127|0)==(0);
 if (!($128)) {
  $129 = HEAP32[$30>>2]|0;
  $130 = (($6) - ($12))|0;
  $131 = (($129) + ($130)|0);
  $132 = HEAP8[$131>>0]|0;
  $133 = $132 << 24 >> 24;
  $134 = (($34) + 1)|0;
  $135 = (($134) + ($133))|0;
  $136 = $135 >>> 1;
  $137 = $136&255;
  HEAP8[$$pre$phiZ2D>>0] = $137;
  $sext123 = $136 << 24;
  $138 = $sext123 >> 24;
  $139 = HEAP8[$$pre$phi126Z2D>>0]|0;
  $140 = $139 << 24 >> 24;
  $141 = (($138) + 12)|0;
  $142 = (($141) + ($140))|0;
  $143 = (24151 + ($142)|0);
  $144 = HEAP8[$143>>0]|0;
  $145 = $144&255;
  $146 = HEAP8[$$pre$phi128Z2D>>0]|0;
  $147 = $146 << 24 >> 24;
  $148 = (($141) + ($147))|0;
  $149 = (24227 + ($148)|0);
  $150 = HEAP8[$149>>0]|0;
  $151 = $150 << 24 >> 24;
  $152 = $151 | $145;
  $153 = ($152|0)==(0);
  if (!($153)) {
   $154 = ((($1)) + 32|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = ((($155)) + 4|0);
   $157 = HEAP32[$156>>2]|0;
   FUNCTION_TABLE_viiii[$157 & 31]($29,$14,$145,$151);
  }
 }
 HEAP8[$$pre$phiZ2D>>0] = $33;
 if (!($82)) {
  STACKTOP = sp;return;
 }
 $158 = ((($0)) + 3944|0);
 $159 = HEAP32[$158>>2]|0;
 $160 = (($159) + ($6)|0);
 $161 = HEAP8[$160>>0]|0;
 $162 = ($161<<24>>24)==(0);
 if ($162) {
  $163 = $14 << 2;
  $164 = (($29) + ($163)|0);
  $165 = ((($1)) + 32|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = HEAP32[$166>>2]|0;
  FUNCTION_TABLE_viiiii[$167 & 15]($164,$14,$74,$80,$19);
  $$pre$phi132Z2D = $165;
 } else {
  $$pre131 = ((($1)) + 32|0);
  $$pre$phi132Z2D = $$pre131;
 }
 $168 = HEAP32[$$pre$phi132Z2D>>2]|0;
 $169 = HEAP32[$168>>2]|0;
 $170 = $14 << 3;
 $171 = (($29) + ($170)|0);
 FUNCTION_TABLE_viiiii[$169 & 15]($171,$14,$74,$80,$19);
 $172 = HEAP32[$158>>2]|0;
 $173 = (($172) + ($6)|0);
 $174 = HEAP8[$173>>0]|0;
 $175 = ($174<<24>>24)==(0);
 if (!($175)) {
  STACKTOP = sp;return;
 }
 $176 = ($14*12)|0;
 $177 = (($29) + ($176)|0);
 $178 = HEAP32[$$pre$phi132Z2D>>2]|0;
 $179 = HEAP32[$178>>2]|0;
 FUNCTION_TABLE_viiiii[$179 & 15]($177,$14,$74,$80,$19);
 STACKTOP = sp;return;
}
function __ZN7WelsDec21FilteringEdgeChromaHVEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $$pre$phi212Z2D = 0, $$pre$phi214Z2D = 0, $$pre$phiZ2D = 0, $$pre205 = 0, $$pre206 = 0, $$pre207 = 0, $$pre208 = 0, $$pre209 = 0, $$pre210 = 0, $$pre211 = 0, $$pre213 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = sp + 7|0;
 $4 = sp;
 $5 = ((($0)) + 4040|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 4032|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4036|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 4044|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($3)) + 15|0);
 $16 = $15;
 $17 = $16 & 15;
 $18 = (0 - ($17))|0;
 $19 = (($15) + ($18)|0);
 $20 = ((($4)) + 3|0);
 $21 = $20;
 $22 = $21 & 3;
 $23 = (0 - ($22))|0;
 $24 = (($20) + ($23)|0);
 $25 = ((($1)) + 4|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = Math_imul($14, $10)|0;
 $28 = (($27) + ($8))|0;
 $29 = $28 << 3;
 $30 = (($26) + ($29)|0);
 $31 = ((($1)) + 8|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (($32) + ($29)|0);
 $34 = ((($0)) + 3952|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (($35) + ($6<<1)|0);
 HEAP32[$24>>2] = 50529027;
 $37 = $2 & 1;
 $38 = ($37|0)==(0);
 if ($38) {
  $$pre210 = ((($1)) + 26|0);
  $$pre211 = (((($35) + ($6<<1)|0)) + 1|0);
  $$pre213 = ((($1)) + 27|0);
  $$pre$phi212Z2D = $$pre211;$$pre$phi214Z2D = $$pre213;$$pre$phiZ2D = $$pre210;
 } else {
  $39 = (($6) + -1)|0;
  $40 = HEAP8[$36>>0]|0;
  $41 = $40 << 24 >> 24;
  $42 = (($35) + ($39<<1)|0);
  $43 = HEAP8[$42>>0]|0;
  $44 = $43 << 24 >> 24;
  $45 = (($41) + 1)|0;
  $46 = (($45) + ($44))|0;
  $47 = $46 >>> 1;
  $48 = $47&255;
  $49 = ((($1)) + 26|0);
  HEAP8[$49>>0] = $48;
  $50 = (((($35) + ($6<<1)|0)) + 1|0);
  $51 = HEAP8[$50>>0]|0;
  $52 = $51 << 24 >> 24;
  $53 = HEAP32[$34>>2]|0;
  $54 = (((($53) + ($39<<1)|0)) + 1|0);
  $55 = HEAP8[$54>>0]|0;
  $56 = $55 << 24 >> 24;
  $57 = (($52) + 1)|0;
  $58 = (($57) + ($56))|0;
  $59 = $58 >>> 1;
  $60 = $59&255;
  $61 = ((($1)) + 27|0);
  HEAP8[$61>>0] = $60;
  __ZN7WelsDec25FilteringEdgeChromaIntraVEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$30,$33,$14,0);
  $$pre$phi212Z2D = $50;$$pre$phi214Z2D = $61;$$pre$phiZ2D = $49;
 }
 $62 = HEAP8[$36>>0]|0;
 HEAP8[$$pre$phiZ2D>>0] = $62;
 $63 = HEAP8[$$pre$phi212Z2D>>0]|0;
 HEAP8[$$pre$phi214Z2D>>0] = $63;
 $64 = $62 << 24 >> 24;
 $65 = ($62<<24>>24)==($63<<24>>24);
 $66 = ((($1)) + 24|0);
 if ($65) {
  $90 = HEAP8[$66>>0]|0;
  $91 = $90 << 24 >> 24;
  $92 = (($64) + 12)|0;
  $93 = (($92) + ($91))|0;
  $94 = (24151 + ($93)|0);
  $95 = HEAP8[$94>>0]|0;
  $96 = $95&255;
  $97 = ((($1)) + 25|0);
  $98 = HEAP8[$97>>0]|0;
  $99 = $98 << 24 >> 24;
  $100 = (($92) + ($99))|0;
  $101 = (24227 + ($100)|0);
  $102 = HEAP8[$101>>0]|0;
  $103 = $102 << 24 >> 24;
  $104 = $103 | $96;
  $105 = ($104|0)==(0);
  if (!($105)) {
   $106 = HEAP8[$24>>0]|0;
   $107 = $106&255;
   $108 = ((24303 + ($93<<2)|0) + ($107)|0);
   $109 = HEAP8[$108>>0]|0;
   $110 = $109&255;
   $111 = (($110) + 1)|0;
   $112 = $111&255;
   HEAP8[$19>>0] = $112;
   $113 = ((($24)) + 1|0);
   $114 = HEAP8[$113>>0]|0;
   $115 = $114&255;
   $116 = ((24303 + ($93<<2)|0) + ($115)|0);
   $117 = HEAP8[$116>>0]|0;
   $118 = $117&255;
   $119 = (($118) + 1)|0;
   $120 = $119&255;
   $121 = ((($19)) + 1|0);
   HEAP8[$121>>0] = $120;
   $122 = ((($24)) + 2|0);
   $123 = HEAP8[$122>>0]|0;
   $124 = $123&255;
   $125 = ((24303 + ($93<<2)|0) + ($124)|0);
   $126 = HEAP8[$125>>0]|0;
   $127 = $126&255;
   $128 = (($127) + 1)|0;
   $129 = $128&255;
   $130 = ((($19)) + 2|0);
   HEAP8[$130>>0] = $129;
   $131 = ((($24)) + 3|0);
   $132 = HEAP8[$131>>0]|0;
   $133 = $132&255;
   $134 = ((24303 + ($93<<2)|0) + ($133)|0);
   $135 = HEAP8[$134>>0]|0;
   $136 = $135&255;
   $137 = (($136) + 1)|0;
   $138 = $137&255;
   $139 = ((($19)) + 3|0);
   HEAP8[$139>>0] = $138;
   $140 = ((($1)) + 32|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = ((($141)) + 24|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($30)) + 4|0);
   $145 = ((($33)) + 4|0);
   FUNCTION_TABLE_viiiiii[$143 & 31]($144,$145,$14,$96,$103,$19);
  }
 } else {
  $67 = ((($1)) + 25|0);
  $68 = ((($24)) + 1|0);
  $69 = ((($19)) + 1|0);
  $70 = ((($24)) + 2|0);
  $71 = ((($19)) + 2|0);
  $72 = ((($24)) + 3|0);
  $73 = ((($19)) + 3|0);
  $74 = ((($1)) + 32|0);
  $75 = HEAP8[$66>>0]|0;
  $76 = $75 << 24 >> 24;
  $77 = (($64) + 12)|0;
  $78 = (($77) + ($76))|0;
  $79 = (24151 + ($78)|0);
  $80 = HEAP8[$79>>0]|0;
  $81 = $80&255;
  $82 = HEAP8[$67>>0]|0;
  $83 = $82 << 24 >> 24;
  $84 = (($77) + ($83))|0;
  $85 = (24227 + ($84)|0);
  $86 = HEAP8[$85>>0]|0;
  $87 = $86 << 24 >> 24;
  $88 = $87 | $81;
  $89 = ($88|0)==(0);
  if ($89) {
   $179 = $63;$181 = $75;$188 = $82;
  } else {
   $146 = ((($30)) + 4|0);
   $147 = HEAP8[$24>>0]|0;
   $148 = $147&255;
   $149 = ((24303 + ($78<<2)|0) + ($148)|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = $150&255;
   $152 = (($151) + 1)|0;
   $153 = $152&255;
   HEAP8[$19>>0] = $153;
   $154 = HEAP8[$68>>0]|0;
   $155 = $154&255;
   $156 = ((24303 + ($78<<2)|0) + ($155)|0);
   $157 = HEAP8[$156>>0]|0;
   $158 = $157&255;
   $159 = (($158) + 1)|0;
   $160 = $159&255;
   HEAP8[$69>>0] = $160;
   $161 = HEAP8[$70>>0]|0;
   $162 = $161&255;
   $163 = ((24303 + ($78<<2)|0) + ($162)|0);
   $164 = HEAP8[$163>>0]|0;
   $165 = $164&255;
   $166 = (($165) + 1)|0;
   $167 = $166&255;
   HEAP8[$71>>0] = $167;
   $168 = HEAP8[$72>>0]|0;
   $169 = $168&255;
   $170 = ((24303 + ($78<<2)|0) + ($169)|0);
   $171 = HEAP8[$170>>0]|0;
   $172 = $171&255;
   $173 = (($172) + 1)|0;
   $174 = $173&255;
   HEAP8[$73>>0] = $174;
   $175 = HEAP32[$74>>2]|0;
   $176 = ((($175)) + 40|0);
   $177 = HEAP32[$176>>2]|0;
   FUNCTION_TABLE_viiiii[$177 & 15]($146,$14,$81,$87,$19);
   $$pre = HEAP8[$$pre$phi214Z2D>>0]|0;
   $$pre205 = HEAP8[$66>>0]|0;
   $$pre206 = HEAP8[$67>>0]|0;
   $179 = $$pre;$181 = $$pre205;$188 = $$pre206;
  }
  $178 = $179 << 24 >> 24;
  $180 = $181 << 24 >> 24;
  $182 = (($178) + 12)|0;
  $183 = (($182) + ($180))|0;
  $184 = (24151 + ($183)|0);
  $185 = HEAP8[$184>>0]|0;
  $186 = $185&255;
  $187 = $188 << 24 >> 24;
  $189 = (($182) + ($187))|0;
  $190 = (24227 + ($189)|0);
  $191 = HEAP8[$190>>0]|0;
  $192 = $191 << 24 >> 24;
  $193 = $192 | $186;
  $194 = ($193|0)==(0);
  if (!($194)) {
   $288 = ((($33)) + 4|0);
   $289 = HEAP8[$24>>0]|0;
   $290 = $289&255;
   $291 = ((24303 + ($183<<2)|0) + ($290)|0);
   $292 = HEAP8[$291>>0]|0;
   $293 = $292&255;
   $294 = (($293) + 1)|0;
   $295 = $294&255;
   HEAP8[$19>>0] = $295;
   $296 = HEAP8[$68>>0]|0;
   $297 = $296&255;
   $298 = ((24303 + ($183<<2)|0) + ($297)|0);
   $299 = HEAP8[$298>>0]|0;
   $300 = $299&255;
   $301 = (($300) + 1)|0;
   $302 = $301&255;
   HEAP8[$69>>0] = $302;
   $303 = HEAP8[$70>>0]|0;
   $304 = $303&255;
   $305 = ((24303 + ($183<<2)|0) + ($304)|0);
   $306 = HEAP8[$305>>0]|0;
   $307 = $306&255;
   $308 = (($307) + 1)|0;
   $309 = $308&255;
   HEAP8[$71>>0] = $309;
   $310 = HEAP8[$72>>0]|0;
   $311 = $310&255;
   $312 = ((24303 + ($183<<2)|0) + ($311)|0);
   $313 = HEAP8[$312>>0]|0;
   $314 = $313&255;
   $315 = (($314) + 1)|0;
   $316 = $315&255;
   HEAP8[$73>>0] = $316;
   $317 = HEAP32[$74>>2]|0;
   $318 = ((($317)) + 40|0);
   $319 = HEAP32[$318>>2]|0;
   FUNCTION_TABLE_viiiii[$319 & 15]($288,$14,$186,$192,$19);
  }
 }
 $195 = $2 & 2;
 $196 = ($195|0)==(0);
 if (!($196)) {
  $197 = (($6) - ($12))|0;
  $198 = HEAP8[$36>>0]|0;
  $199 = $198 << 24 >> 24;
  $200 = HEAP32[$34>>2]|0;
  $201 = (($200) + ($197<<1)|0);
  $202 = HEAP8[$201>>0]|0;
  $203 = $202 << 24 >> 24;
  $204 = (($199) + 1)|0;
  $205 = (($204) + ($203))|0;
  $206 = $205 >>> 1;
  $207 = $206&255;
  HEAP8[$$pre$phiZ2D>>0] = $207;
  $208 = HEAP8[$$pre$phi212Z2D>>0]|0;
  $209 = $208 << 24 >> 24;
  $210 = HEAP32[$34>>2]|0;
  $211 = (((($210) + ($197<<1)|0)) + 1|0);
  $212 = HEAP8[$211>>0]|0;
  $213 = $212 << 24 >> 24;
  $214 = (($209) + 1)|0;
  $215 = (($214) + ($213))|0;
  $216 = $215 >>> 1;
  $217 = $216&255;
  HEAP8[$$pre$phi214Z2D>>0] = $217;
  __ZN7WelsDec25FilteringEdgeChromaIntraHEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$30,$33,$14,0);
 }
 $218 = HEAP8[$36>>0]|0;
 HEAP8[$$pre$phiZ2D>>0] = $218;
 $219 = HEAP8[$$pre$phi212Z2D>>0]|0;
 HEAP8[$$pre$phi214Z2D>>0] = $219;
 $220 = $218 << 24 >> 24;
 $221 = ($218<<24>>24)==($219<<24>>24);
 if ($221) {
  $240 = HEAP8[$66>>0]|0;
  $241 = $240 << 24 >> 24;
  $242 = (($220) + 12)|0;
  $243 = (($242) + ($241))|0;
  $244 = (24151 + ($243)|0);
  $245 = HEAP8[$244>>0]|0;
  $246 = $245&255;
  $247 = ((($1)) + 25|0);
  $248 = HEAP8[$247>>0]|0;
  $249 = $248 << 24 >> 24;
  $250 = (($242) + ($249))|0;
  $251 = (24227 + ($250)|0);
  $252 = HEAP8[$251>>0]|0;
  $253 = $252 << 24 >> 24;
  $254 = $253 | $246;
  $255 = ($254|0)==(0);
  $256 = $14 << 2;
  if ($255) {
   STACKTOP = sp;return;
  }
  $257 = (($33) + ($256)|0);
  $258 = (($30) + ($256)|0);
  $259 = ((($1)) + 32|0);
  $260 = HEAP32[$259>>2]|0;
  $261 = ((($260)) + 16|0);
  $262 = HEAP32[$261>>2]|0;
  FUNCTION_TABLE_viiiiii[$262 & 31]($258,$257,$14,$246,$253,$19);
  STACKTOP = sp;return;
 }
 $222 = ((($1)) + 25|0);
 $223 = ((($1)) + 32|0);
 $224 = $14 << 2;
 $225 = HEAP8[$66>>0]|0;
 $226 = $225 << 24 >> 24;
 $227 = (($220) + 12)|0;
 $228 = (($227) + ($226))|0;
 $229 = (24151 + ($228)|0);
 $230 = HEAP8[$229>>0]|0;
 $231 = $230&255;
 $232 = HEAP8[$222>>0]|0;
 $233 = $232 << 24 >> 24;
 $234 = (($227) + ($233))|0;
 $235 = (24227 + ($234)|0);
 $236 = HEAP8[$235>>0]|0;
 $237 = $236 << 24 >> 24;
 $238 = $237 | $231;
 $239 = ($238|0)==(0);
 if ($239) {
  $268 = $219;$270 = $225;$277 = $232;
 } else {
  $263 = (($30) + ($224)|0);
  $264 = HEAP32[$223>>2]|0;
  $265 = ((($264)) + 32|0);
  $266 = HEAP32[$265>>2]|0;
  FUNCTION_TABLE_viiiii[$266 & 15]($263,$14,$231,$237,$19);
  $$pre207 = HEAP8[$$pre$phi214Z2D>>0]|0;
  $$pre208 = HEAP8[$66>>0]|0;
  $$pre209 = HEAP8[$222>>0]|0;
  $268 = $$pre207;$270 = $$pre208;$277 = $$pre209;
 }
 $267 = $268 << 24 >> 24;
 $269 = $270 << 24 >> 24;
 $271 = (($267) + 12)|0;
 $272 = (($271) + ($269))|0;
 $273 = (24151 + ($272)|0);
 $274 = HEAP8[$273>>0]|0;
 $275 = $274&255;
 $276 = $277 << 24 >> 24;
 $278 = (($271) + ($276))|0;
 $279 = (24227 + ($278)|0);
 $280 = HEAP8[$279>>0]|0;
 $281 = $280 << 24 >> 24;
 $282 = $281 | $275;
 $283 = ($282|0)==(0);
 if ($283) {
  STACKTOP = sp;return;
 }
 $284 = (($33) + ($224)|0);
 $285 = HEAP32[$223>>2]|0;
 $286 = ((($285)) + 32|0);
 $287 = HEAP32[$286>>2]|0;
 FUNCTION_TABLE_viiiii[$287 & 15]($284,$14,$275,$281,$19);
 STACKTOP = sp;return;
}
function __ZN7WelsDec29DeblockingBsMarginalMBAvcbaseEPNS_10TagDqLayerEiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0304346 = 0, $$0306340 = 0, $$0312348 = 0, $$0312348$1 = 0, $$1303347 = 0, $$1310345 = 0, $$1313342 = 0, $$1341 = 0, $$2311339 = 0, $$3315336 = 0, $$sink12 = 0, $$sink12$1 = 0, $$sink19 = 0, $$sink19$1 = 0, $$sink19$2 = 0, $$sink19$3 = 0, $$sink20$1 = 0, $$sink20$2 = 0, $$sink20$3 = 0, $$sink316 = 0;
 var $$sink316$1 = 0, $$sink5 = 0, $$sink5$1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0;
 var $478 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond363 = 0;
 var $phitmp = 0, $phitmp368 = 0, $phitmp369 = 0, $phitmp370 = 0, $phitmp371 = 0, $phitmp372 = 0, $scevgep = 0, $scevgep361 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $5 = (24607 + ($1<<3)|0);
 $6 = (((24607 + ($1<<3)|0)) + 4|0);
 $7 = (24623 + ($1<<4)|0);
 $8 = (((24623 + ($1<<4)|0)) + 8|0);
 $9 = ((($0)) + 3944|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + ($3)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)==(0);
 $14 = (($10) + ($2)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ($15<<24>>24)==(0);
 $17 = ((($0)) + 3964|0);
 $18 = ((($0)) + 3932|0);
 $19 = ((($0)) + 3916|0);
 $20 = HEAP32[$17>>2]|0;
 if (!($13)) {
  if ($16) {
   $$0304346 = $6;$$1303347 = $7;$$1310345 = 0;
  } else {
   $$0312348 = 0;
   while(1) {
    $21 = ((24623 + ($1<<4)|0) + ($$0312348)|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = $22&255;
    $24 = ((($20) + (($3*24)|0)|0) + ($23)|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = (($8) + ($$0312348)|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27&255;
    $29 = ((($20) + (($2*24)|0)|0) + ($28)|0);
    $30 = HEAP8[$29>>0]|0;
    $31 = $25 | $30;
    $32 = (($$0312348) + 1)|0;
    $33 = ($31<<24>>24)==(0);
    $34 = ($32|0)<(4);
    $35 = $34 & $33;
    if ($35) {
     $$0312348 = $32;
    } else {
     break;
    }
   }
   if ($33) {
    $36 = HEAP32[$18>>2]|0;
    $37 = HEAP8[$7>>0]|0;
    $38 = $37&255;
    $39 = ((($36) + ($3<<4)|0) + ($38)|0);
    $40 = HEAP8[$39>>0]|0;
    $41 = HEAP8[$8>>0]|0;
    $42 = $41&255;
    $43 = ((($36) + ($2<<4)|0) + ($42)|0);
    $44 = HEAP8[$43>>0]|0;
    $45 = ($40<<24>>24)==($44<<24>>24);
    if ($45) {
     $46 = HEAP32[$19>>2]|0;
     $47 = ((($46) + ($3<<6)|0) + ($38<<2)|0);
     $48 = HEAP16[$47>>1]|0;
     $49 = $48 << 16 >> 16;
     $50 = ((($46) + ($2<<6)|0) + ($42<<2)|0);
     $51 = HEAP16[$50>>1]|0;
     $52 = $51 << 16 >> 16;
     $53 = (($49) - ($52))|0;
     $54 = $53 >> 31;
     $55 = $54 ^ $53;
     $56 = (($55) - ($54))|0;
     $57 = ($56|0)>(3);
     if ($57) {
      $$sink316 = 1;
     } else {
      $58 = ((((($46) + ($3<<6)|0) + ($38<<2)|0)) + 2|0);
      $59 = HEAP16[$58>>1]|0;
      $60 = $59 << 16 >> 16;
      $61 = ((((($46) + ($2<<6)|0) + ($42<<2)|0)) + 2|0);
      $62 = HEAP16[$61>>1]|0;
      $63 = $62 << 16 >> 16;
      $64 = (($60) - ($63))|0;
      $65 = $64 >> 31;
      $66 = $65 ^ $64;
      $67 = (($66) - ($65))|0;
      $68 = ($67|0)>(3);
      $phitmp368 = $68&1;
      $$sink316 = $phitmp368;
     }
    } else {
     $$sink316 = 1;
    }
   } else {
    $$sink316 = 2;
   }
   $69 = ((($4)) + 1|0);
   HEAP8[$69>>0] = $$sink316;
   HEAP8[$4>>0] = $$sink316;
   $70 = (((24623 + ($1<<4)|0)) + 4|0);
   $71 = (((24623 + ($1<<4)|0)) + 12|0);
   $$0312348$1 = 0;
   while(1) {
    $429 = (($70) + ($$0312348$1)|0);
    $430 = HEAP8[$429>>0]|0;
    $431 = $430&255;
    $432 = ((($20) + (($3*24)|0)|0) + ($431)|0);
    $433 = HEAP8[$432>>0]|0;
    $434 = (($71) + ($$0312348$1)|0);
    $435 = HEAP8[$434>>0]|0;
    $436 = $435&255;
    $437 = ((($20) + (($2*24)|0)|0) + ($436)|0);
    $438 = HEAP8[$437>>0]|0;
    $439 = $433 | $438;
    $440 = (($$0312348$1) + 1)|0;
    $441 = ($439<<24>>24)==(0);
    $442 = ($440|0)<(4);
    $443 = $442 & $441;
    if ($443) {
     $$0312348$1 = $440;
    } else {
     break;
    }
   }
   if ($441) {
    $444 = HEAP32[$18>>2]|0;
    $445 = HEAP8[$70>>0]|0;
    $446 = $445&255;
    $447 = ((($444) + ($3<<4)|0) + ($446)|0);
    $448 = HEAP8[$447>>0]|0;
    $449 = HEAP8[$71>>0]|0;
    $450 = $449&255;
    $451 = ((($444) + ($2<<4)|0) + ($450)|0);
    $452 = HEAP8[$451>>0]|0;
    $453 = ($448<<24>>24)==($452<<24>>24);
    if ($453) {
     $454 = HEAP32[$19>>2]|0;
     $455 = ((($454) + ($3<<6)|0) + ($446<<2)|0);
     $456 = HEAP16[$455>>1]|0;
     $457 = $456 << 16 >> 16;
     $458 = ((($454) + ($2<<6)|0) + ($450<<2)|0);
     $459 = HEAP16[$458>>1]|0;
     $460 = $459 << 16 >> 16;
     $461 = (($457) - ($460))|0;
     $462 = $461 >> 31;
     $463 = $462 ^ $461;
     $464 = (($463) - ($462))|0;
     $465 = ($464|0)>(3);
     if ($465) {
      $$sink316$1 = 1;
     } else {
      $466 = ((((($454) + ($3<<6)|0) + ($446<<2)|0)) + 2|0);
      $467 = HEAP16[$466>>1]|0;
      $468 = $467 << 16 >> 16;
      $469 = ((((($454) + ($2<<6)|0) + ($450<<2)|0)) + 2|0);
      $470 = HEAP16[$469>>1]|0;
      $471 = $470 << 16 >> 16;
      $472 = (($468) - ($471))|0;
      $473 = $472 >> 31;
      $474 = $473 ^ $472;
      $475 = (($474) - ($473))|0;
      $476 = ($475|0)>(3);
      $phitmp = $476&1;
      $$sink316$1 = $phitmp;
     }
    } else {
     $$sink316$1 = 1;
    }
   } else {
    $$sink316$1 = 2;
   }
   $477 = ((($4)) + 3|0);
   HEAP8[$477>>0] = $$sink316$1;
   $478 = ((($4)) + 2|0);
   HEAP8[$478>>0] = $$sink316$1;
   $243 = HEAP32[$4>>2]|0;
   STACKTOP = sp;return ($243|0);
  }
  while(1) {
   $$1313342 = 0;
   while(1) {
    $82 = (($$1303347) + ($$1313342)|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83&255;
    $85 = ((($20) + (($3*24)|0)|0) + ($84)|0);
    $73 = HEAP8[$85>>0]|0;
    $86 = (($$1313342) + 1)|0;
    $87 = ($73<<24>>24)==(0);
    $88 = ($86|0)<(4);
    $89 = $88 & $87;
    if ($89) {
     $$1313342 = $86;
    } else {
     break;
    }
   }
   $72 = $73&255;
   $74 = $$1310345 << 1;
   $75 = HEAP8[$$0304346>>0]|0;
   $76 = $75&255;
   $77 = ((($20) + (($2*24)|0)|0) + ($76)|0);
   $78 = HEAP8[$77>>0]|0;
   $79 = $78 << 24 >> 24;
   $80 = $79 | $72;
   $81 = ($80|0)==(0);
   if ($81) {
    $90 = HEAP32[$18>>2]|0;
    $91 = HEAP8[$$1303347>>0]|0;
    $92 = $91&255;
    $93 = ((($90) + ($3<<4)|0) + ($92)|0);
    $94 = HEAP8[$93>>0]|0;
    $95 = ((($90) + ($2<<4)|0) + ($76)|0);
    $96 = HEAP8[$95>>0]|0;
    $97 = ($94<<24>>24)==($96<<24>>24);
    if ($97) {
     $98 = HEAP32[$19>>2]|0;
     $99 = ((($98) + ($3<<6)|0) + ($92<<2)|0);
     $100 = HEAP16[$99>>1]|0;
     $101 = $100 << 16 >> 16;
     $102 = ((($98) + ($2<<6)|0) + ($76<<2)|0);
     $103 = HEAP16[$102>>1]|0;
     $104 = $103 << 16 >> 16;
     $105 = (($101) - ($104))|0;
     $106 = $105 >> 31;
     $107 = $106 ^ $105;
     $108 = (($107) - ($106))|0;
     $109 = ($108|0)>(3);
     if ($109) {
      $122 = 1;
     } else {
      $110 = ((((($98) + ($3<<6)|0) + ($92<<2)|0)) + 2|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 << 16 >> 16;
      $113 = ((((($98) + ($2<<6)|0) + ($76<<2)|0)) + 2|0);
      $114 = HEAP16[$113>>1]|0;
      $115 = $114 << 16 >> 16;
      $116 = (($112) - ($115))|0;
      $117 = $116 >> 31;
      $118 = $117 ^ $116;
      $119 = (($118) - ($117))|0;
      $120 = ($119|0)>(3);
      $122 = $120;
     }
    } else {
     $122 = 1;
    }
    $121 = $122&1;
    $$sink5 = $121;
   } else {
    $$sink5 = 2;
   }
   $123 = (($4) + ($74)|0);
   HEAP8[$123>>0] = $$sink5;
   $124 = ((($$0304346)) + 1|0);
   $125 = HEAP8[$124>>0]|0;
   $126 = $125&255;
   $127 = ((($20) + (($2*24)|0)|0) + ($126)|0);
   $128 = HEAP8[$127>>0]|0;
   $129 = $128 << 24 >> 24;
   $130 = $129 | $72;
   $131 = ($130|0)==(0);
   if ($131) {
    $392 = HEAP32[$18>>2]|0;
    $393 = HEAP8[$$1303347>>0]|0;
    $394 = $393&255;
    $395 = ((($392) + ($3<<4)|0) + ($394)|0);
    $396 = HEAP8[$395>>0]|0;
    $397 = ((($392) + ($2<<4)|0) + ($126)|0);
    $398 = HEAP8[$397>>0]|0;
    $399 = ($396<<24>>24)==($398<<24>>24);
    if ($399) {
     $400 = HEAP32[$19>>2]|0;
     $401 = ((($400) + ($3<<6)|0) + ($394<<2)|0);
     $402 = HEAP16[$401>>1]|0;
     $403 = $402 << 16 >> 16;
     $404 = ((($400) + ($2<<6)|0) + ($126<<2)|0);
     $405 = HEAP16[$404>>1]|0;
     $406 = $405 << 16 >> 16;
     $407 = (($403) - ($406))|0;
     $408 = $407 >> 31;
     $409 = $408 ^ $407;
     $410 = (($409) - ($408))|0;
     $411 = ($410|0)>(3);
     if ($411) {
      $424 = 1;
     } else {
      $412 = ((((($400) + ($3<<6)|0) + ($394<<2)|0)) + 2|0);
      $413 = HEAP16[$412>>1]|0;
      $414 = $413 << 16 >> 16;
      $415 = ((((($400) + ($2<<6)|0) + ($126<<2)|0)) + 2|0);
      $416 = HEAP16[$415>>1]|0;
      $417 = $416 << 16 >> 16;
      $418 = (($414) - ($417))|0;
      $419 = $418 >> 31;
      $420 = $419 ^ $418;
      $421 = (($420) - ($419))|0;
      $422 = ($421|0)>(3);
      $424 = $422;
     }
    } else {
     $424 = 1;
    }
    $423 = $424&1;
    $$sink5$1 = $423;
   } else {
    $$sink5$1 = 2;
   }
   $425 = $74 | 1;
   $426 = (($4) + ($425)|0);
   HEAP8[$426>>0] = $$sink5$1;
   $scevgep361 = ((($$0304346)) + 2|0);
   $427 = ((($$1303347)) + 4|0);
   $428 = (($$1310345) + 1)|0;
   $exitcond363 = ($428|0)==(2);
   if ($exitcond363) {
    break;
   } else {
    $$0304346 = $scevgep361;$$1303347 = $427;$$1310345 = $428;
   }
  }
  $243 = HEAP32[$4>>2]|0;
  STACKTOP = sp;return ($243|0);
 }
 if (!($16)) {
  $$0306340 = $5;$$1341 = $8;$$2311339 = 0;
  while(1) {
   $$3315336 = 0;
   while(1) {
    $152 = (($$1341) + ($$3315336)|0);
    $153 = HEAP8[$152>>0]|0;
    $154 = $153&255;
    $155 = ((($20) + (($2*24)|0)|0) + ($154)|0);
    $143 = HEAP8[$155>>0]|0;
    $156 = (($$3315336) + 1)|0;
    $157 = ($143<<24>>24)==(0);
    $158 = ($156|0)<(4);
    $159 = $158 & $157;
    if ($159) {
     $$3315336 = $156;
    } else {
     break;
    }
   }
   $142 = $143&255;
   $144 = $$2311339 << 1;
   $145 = HEAP8[$$0306340>>0]|0;
   $146 = $145&255;
   $147 = ((($20) + (($3*24)|0)|0) + ($146)|0);
   $148 = HEAP8[$147>>0]|0;
   $149 = $148 << 24 >> 24;
   $150 = $149 | $142;
   $151 = ($150|0)==(0);
   if ($151) {
    $160 = HEAP32[$18>>2]|0;
    $161 = ((($160) + ($3<<4)|0) + ($146)|0);
    $162 = HEAP8[$161>>0]|0;
    $163 = HEAP8[$$1341>>0]|0;
    $164 = $163&255;
    $165 = ((($160) + ($2<<4)|0) + ($164)|0);
    $166 = HEAP8[$165>>0]|0;
    $167 = ($162<<24>>24)==($166<<24>>24);
    if ($167) {
     $168 = HEAP32[$19>>2]|0;
     $169 = ((($168) + ($3<<6)|0) + ($146<<2)|0);
     $170 = HEAP16[$169>>1]|0;
     $171 = $170 << 16 >> 16;
     $172 = ((($168) + ($2<<6)|0) + ($164<<2)|0);
     $173 = HEAP16[$172>>1]|0;
     $174 = $173 << 16 >> 16;
     $175 = (($171) - ($174))|0;
     $176 = $175 >> 31;
     $177 = $176 ^ $175;
     $178 = (($177) - ($176))|0;
     $179 = ($178|0)>(3);
     if ($179) {
      $192 = 1;
     } else {
      $180 = ((((($168) + ($3<<6)|0) + ($146<<2)|0)) + 2|0);
      $181 = HEAP16[$180>>1]|0;
      $182 = $181 << 16 >> 16;
      $183 = ((((($168) + ($2<<6)|0) + ($164<<2)|0)) + 2|0);
      $184 = HEAP16[$183>>1]|0;
      $185 = $184 << 16 >> 16;
      $186 = (($182) - ($185))|0;
      $187 = $186 >> 31;
      $188 = $187 ^ $186;
      $189 = (($188) - ($187))|0;
      $190 = ($189|0)>(3);
      $192 = $190;
     }
    } else {
     $192 = 1;
    }
    $191 = $192&1;
    $$sink12 = $191;
   } else {
    $$sink12 = 2;
   }
   $193 = (($4) + ($144)|0);
   HEAP8[$193>>0] = $$sink12;
   $194 = ((($$0306340)) + 1|0);
   $195 = HEAP8[$194>>0]|0;
   $196 = $195&255;
   $197 = ((($20) + (($3*24)|0)|0) + ($196)|0);
   $198 = HEAP8[$197>>0]|0;
   $199 = $198 << 24 >> 24;
   $200 = $199 | $142;
   $201 = ($200|0)==(0);
   if ($201) {
    $355 = HEAP32[$18>>2]|0;
    $356 = ((($355) + ($3<<4)|0) + ($196)|0);
    $357 = HEAP8[$356>>0]|0;
    $358 = HEAP8[$$1341>>0]|0;
    $359 = $358&255;
    $360 = ((($355) + ($2<<4)|0) + ($359)|0);
    $361 = HEAP8[$360>>0]|0;
    $362 = ($357<<24>>24)==($361<<24>>24);
    if ($362) {
     $363 = HEAP32[$19>>2]|0;
     $364 = ((($363) + ($3<<6)|0) + ($196<<2)|0);
     $365 = HEAP16[$364>>1]|0;
     $366 = $365 << 16 >> 16;
     $367 = ((($363) + ($2<<6)|0) + ($359<<2)|0);
     $368 = HEAP16[$367>>1]|0;
     $369 = $368 << 16 >> 16;
     $370 = (($366) - ($369))|0;
     $371 = $370 >> 31;
     $372 = $371 ^ $370;
     $373 = (($372) - ($371))|0;
     $374 = ($373|0)>(3);
     if ($374) {
      $387 = 1;
     } else {
      $375 = ((((($363) + ($3<<6)|0) + ($196<<2)|0)) + 2|0);
      $376 = HEAP16[$375>>1]|0;
      $377 = $376 << 16 >> 16;
      $378 = ((((($363) + ($2<<6)|0) + ($359<<2)|0)) + 2|0);
      $379 = HEAP16[$378>>1]|0;
      $380 = $379 << 16 >> 16;
      $381 = (($377) - ($380))|0;
      $382 = $381 >> 31;
      $383 = $382 ^ $381;
      $384 = (($383) - ($382))|0;
      $385 = ($384|0)>(3);
      $387 = $385;
     }
    } else {
     $387 = 1;
    }
    $386 = $387&1;
    $$sink12$1 = $386;
   } else {
    $$sink12$1 = 2;
   }
   $388 = $144 | 1;
   $389 = (($4) + ($388)|0);
   HEAP8[$389>>0] = $$sink12$1;
   $scevgep = ((($$0306340)) + 2|0);
   $390 = ((($$1341)) + 4|0);
   $391 = (($$2311339) + 1)|0;
   $exitcond = ($391|0)==(2);
   if ($exitcond) {
    break;
   } else {
    $$0306340 = $scevgep;$$1341 = $390;$$2311339 = $391;
   }
  }
  $243 = HEAP32[$4>>2]|0;
  STACKTOP = sp;return ($243|0);
 }
 $132 = HEAP8[$5>>0]|0;
 $133 = $132&255;
 $134 = ((($20) + (($3*24)|0)|0) + ($133)|0);
 $135 = HEAP8[$134>>0]|0;
 $136 = HEAP8[$6>>0]|0;
 $137 = $136&255;
 $138 = ((($20) + (($2*24)|0)|0) + ($137)|0);
 $139 = HEAP8[$138>>0]|0;
 $140 = $139 | $135;
 $141 = ($140<<24>>24)==(0);
 if ($141) {
  $202 = HEAP32[$18>>2]|0;
  $203 = ((($202) + ($3<<4)|0) + ($133)|0);
  $204 = HEAP8[$203>>0]|0;
  $205 = ((($202) + ($2<<4)|0) + ($137)|0);
  $206 = HEAP8[$205>>0]|0;
  $207 = ($204<<24>>24)==($206<<24>>24);
  if ($207) {
   $208 = HEAP32[$19>>2]|0;
   $209 = ((($208) + ($3<<6)|0) + ($133<<2)|0);
   $210 = HEAP16[$209>>1]|0;
   $211 = $210 << 16 >> 16;
   $212 = ((($208) + ($2<<6)|0) + ($137<<2)|0);
   $213 = HEAP16[$212>>1]|0;
   $214 = $213 << 16 >> 16;
   $215 = (($211) - ($214))|0;
   $216 = $215 >> 31;
   $217 = $216 ^ $215;
   $218 = (($217) - ($216))|0;
   $219 = ($218|0)>(3);
   if ($219) {
    $$sink19 = 1;
   } else {
    $220 = ((((($208) + ($3<<6)|0) + ($133<<2)|0)) + 2|0);
    $221 = HEAP16[$220>>1]|0;
    $222 = $221 << 16 >> 16;
    $223 = ((((($208) + ($2<<6)|0) + ($137<<2)|0)) + 2|0);
    $224 = HEAP16[$223>>1]|0;
    $225 = $224 << 16 >> 16;
    $226 = (($222) - ($225))|0;
    $227 = $226 >> 31;
    $228 = $227 ^ $226;
    $229 = (($228) - ($227))|0;
    $230 = ($229|0)>(3);
    $phitmp372 = $230&1;
    $$sink19 = $phitmp372;
   }
  } else {
   $$sink19 = 1;
  }
 } else {
  $$sink19 = 2;
 }
 HEAP8[$4>>0] = $$sink19;
 $231 = (((24607 + ($1<<3)|0)) + 1|0);
 $232 = (((24607 + ($1<<3)|0)) + 5|0);
 $233 = HEAP8[$231>>0]|0;
 $234 = $233&255;
 $235 = ((($20) + (($3*24)|0)|0) + ($234)|0);
 $236 = HEAP8[$235>>0]|0;
 $237 = HEAP8[$232>>0]|0;
 $238 = $237&255;
 $239 = ((($20) + (($2*24)|0)|0) + ($238)|0);
 $240 = HEAP8[$239>>0]|0;
 $241 = $240 | $236;
 $242 = ($241<<24>>24)==(0);
 if ($242) {
  $244 = HEAP32[$18>>2]|0;
  $245 = ((($244) + ($3<<4)|0) + ($234)|0);
  $246 = HEAP8[$245>>0]|0;
  $247 = ((($244) + ($2<<4)|0) + ($238)|0);
  $248 = HEAP8[$247>>0]|0;
  $249 = ($246<<24>>24)==($248<<24>>24);
  if ($249) {
   $250 = HEAP32[$19>>2]|0;
   $251 = ((($250) + ($3<<6)|0) + ($234<<2)|0);
   $252 = HEAP16[$251>>1]|0;
   $253 = $252 << 16 >> 16;
   $254 = ((($250) + ($2<<6)|0) + ($238<<2)|0);
   $255 = HEAP16[$254>>1]|0;
   $256 = $255 << 16 >> 16;
   $257 = (($253) - ($256))|0;
   $258 = $257 >> 31;
   $259 = $258 ^ $257;
   $260 = (($259) - ($258))|0;
   $261 = ($260|0)>(3);
   if ($261) {
    $$sink19$1 = 1;
   } else {
    $262 = ((((($250) + ($3<<6)|0) + ($234<<2)|0)) + 2|0);
    $263 = HEAP16[$262>>1]|0;
    $264 = $263 << 16 >> 16;
    $265 = ((((($250) + ($2<<6)|0) + ($238<<2)|0)) + 2|0);
    $266 = HEAP16[$265>>1]|0;
    $267 = $266 << 16 >> 16;
    $268 = (($264) - ($267))|0;
    $269 = $268 >> 31;
    $270 = $269 ^ $268;
    $271 = (($270) - ($269))|0;
    $272 = ($271|0)>(3);
    $phitmp371 = $272&1;
    $$sink19$1 = $phitmp371;
   }
  } else {
   $$sink19$1 = 1;
  }
 } else {
  $$sink19$1 = 2;
 }
 $$sink20$1 = ((($4)) + 1|0);
 HEAP8[$$sink20$1>>0] = $$sink19$1;
 $273 = (((24607 + ($1<<3)|0)) + 2|0);
 $274 = (((24607 + ($1<<3)|0)) + 6|0);
 $275 = HEAP8[$273>>0]|0;
 $276 = $275&255;
 $277 = ((($20) + (($3*24)|0)|0) + ($276)|0);
 $278 = HEAP8[$277>>0]|0;
 $279 = HEAP8[$274>>0]|0;
 $280 = $279&255;
 $281 = ((($20) + (($2*24)|0)|0) + ($280)|0);
 $282 = HEAP8[$281>>0]|0;
 $283 = $282 | $278;
 $284 = ($283<<24>>24)==(0);
 if ($284) {
  $285 = HEAP32[$18>>2]|0;
  $286 = ((($285) + ($3<<4)|0) + ($276)|0);
  $287 = HEAP8[$286>>0]|0;
  $288 = ((($285) + ($2<<4)|0) + ($280)|0);
  $289 = HEAP8[$288>>0]|0;
  $290 = ($287<<24>>24)==($289<<24>>24);
  if ($290) {
   $291 = HEAP32[$19>>2]|0;
   $292 = ((($291) + ($3<<6)|0) + ($276<<2)|0);
   $293 = HEAP16[$292>>1]|0;
   $294 = $293 << 16 >> 16;
   $295 = ((($291) + ($2<<6)|0) + ($280<<2)|0);
   $296 = HEAP16[$295>>1]|0;
   $297 = $296 << 16 >> 16;
   $298 = (($294) - ($297))|0;
   $299 = $298 >> 31;
   $300 = $299 ^ $298;
   $301 = (($300) - ($299))|0;
   $302 = ($301|0)>(3);
   if ($302) {
    $$sink19$2 = 1;
   } else {
    $303 = ((((($291) + ($3<<6)|0) + ($276<<2)|0)) + 2|0);
    $304 = HEAP16[$303>>1]|0;
    $305 = $304 << 16 >> 16;
    $306 = ((((($291) + ($2<<6)|0) + ($280<<2)|0)) + 2|0);
    $307 = HEAP16[$306>>1]|0;
    $308 = $307 << 16 >> 16;
    $309 = (($305) - ($308))|0;
    $310 = $309 >> 31;
    $311 = $310 ^ $309;
    $312 = (($311) - ($310))|0;
    $313 = ($312|0)>(3);
    $phitmp370 = $313&1;
    $$sink19$2 = $phitmp370;
   }
  } else {
   $$sink19$2 = 1;
  }
 } else {
  $$sink19$2 = 2;
 }
 $$sink20$2 = ((($4)) + 2|0);
 HEAP8[$$sink20$2>>0] = $$sink19$2;
 $314 = (((24607 + ($1<<3)|0)) + 3|0);
 $315 = (((24607 + ($1<<3)|0)) + 7|0);
 $316 = HEAP8[$314>>0]|0;
 $317 = $316&255;
 $318 = ((($20) + (($3*24)|0)|0) + ($317)|0);
 $319 = HEAP8[$318>>0]|0;
 $320 = HEAP8[$315>>0]|0;
 $321 = $320&255;
 $322 = ((($20) + (($2*24)|0)|0) + ($321)|0);
 $323 = HEAP8[$322>>0]|0;
 $324 = $323 | $319;
 $325 = ($324<<24>>24)==(0);
 if ($325) {
  $326 = HEAP32[$18>>2]|0;
  $327 = ((($326) + ($3<<4)|0) + ($317)|0);
  $328 = HEAP8[$327>>0]|0;
  $329 = ((($326) + ($2<<4)|0) + ($321)|0);
  $330 = HEAP8[$329>>0]|0;
  $331 = ($328<<24>>24)==($330<<24>>24);
  if ($331) {
   $332 = HEAP32[$19>>2]|0;
   $333 = ((($332) + ($3<<6)|0) + ($317<<2)|0);
   $334 = HEAP16[$333>>1]|0;
   $335 = $334 << 16 >> 16;
   $336 = ((($332) + ($2<<6)|0) + ($321<<2)|0);
   $337 = HEAP16[$336>>1]|0;
   $338 = $337 << 16 >> 16;
   $339 = (($335) - ($338))|0;
   $340 = $339 >> 31;
   $341 = $340 ^ $339;
   $342 = (($341) - ($340))|0;
   $343 = ($342|0)>(3);
   if ($343) {
    $$sink19$3 = 1;
   } else {
    $344 = ((((($332) + ($3<<6)|0) + ($317<<2)|0)) + 2|0);
    $345 = HEAP16[$344>>1]|0;
    $346 = $345 << 16 >> 16;
    $347 = ((((($332) + ($2<<6)|0) + ($321<<2)|0)) + 2|0);
    $348 = HEAP16[$347>>1]|0;
    $349 = $348 << 16 >> 16;
    $350 = (($346) - ($349))|0;
    $351 = $350 >> 31;
    $352 = $351 ^ $350;
    $353 = (($352) - ($351))|0;
    $354 = ($353|0)>(3);
    $phitmp369 = $354&1;
    $$sink19$3 = $phitmp369;
   }
  } else {
   $$sink19$3 = 1;
  }
 } else {
  $$sink19$3 = 2;
 }
 $$sink20$3 = ((($4)) + 3|0);
 HEAP8[$$sink20$3>>0] = $$sink19$3;
 $243 = HEAP32[$4>>2]|0;
 STACKTOP = sp;return ($243|0);
}
function __ZN7WelsDec17DeblockingInterMbEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEPA4_A4_hi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre = 0, $$pre$phi189Z2D = 0, $$pre$phi191Z2D = 0, $$pre$phi193Z2D = 0, $$pre$phiZ2D = 0, $$pre188 = 0, $$pre190 = 0, $$pre192 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0;
 var $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0;
 var $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext = 0;
 var $sext194 = 0, $sext195 = 0, $sext196 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $5 = ((($0)) + 4040|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 4032|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 4036|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 3948|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + ($6)|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 << 24 >> 24;
 $16 = ((($0)) + 3952|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($17) + ($6<<1)|0);
 $19 = ((($1)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($1)) + 16|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = HEAP32[$1>>2]|0;
 $24 = Math_imul($20, $10)|0;
 $25 = (($24) + ($8))|0;
 $26 = $25 << 4;
 $27 = (($23) + ($26)|0);
 $28 = ((($1)) + 4|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = Math_imul($22, $10)|0;
 $31 = (($30) + ($8))|0;
 $32 = $31 << 3;
 $33 = (($29) + ($32)|0);
 $34 = ((($1)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = (($35) + ($32)|0);
 $37 = $3 & 1;
 $38 = ($37|0)==(0);
 do {
  if ($38) {
   $$pre = ((($1)) + 28|0);
   $$pre188 = ((($1)) + 26|0);
   $$pre190 = (((($17) + ($6<<1)|0)) + 1|0);
   $$pre192 = ((($1)) + 27|0);
   $$pre$phi189Z2D = $$pre188;$$pre$phi191Z2D = $$pre190;$$pre$phi193Z2D = $$pre192;$$pre$phiZ2D = $$pre;
  } else {
   $39 = (($6) + -1)|0;
   $40 = (($12) + ($39)|0);
   $41 = HEAP8[$40>>0]|0;
   $42 = $41 << 24 >> 24;
   $43 = (($15) + 1)|0;
   $44 = (($43) + ($42))|0;
   $45 = $44 >>> 1;
   $46 = $45&255;
   $47 = ((($1)) + 28|0);
   HEAP8[$47>>0] = $46;
   $48 = HEAP8[$18>>0]|0;
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$16>>2]|0;
   $51 = (($50) + ($39<<1)|0);
   $52 = HEAP8[$51>>0]|0;
   $53 = $52 << 24 >> 24;
   $54 = (($49) + 1)|0;
   $55 = (($54) + ($53))|0;
   $56 = $55 >>> 1;
   $57 = $56&255;
   $58 = ((($1)) + 26|0);
   HEAP8[$58>>0] = $57;
   $59 = (((($17) + ($6<<1)|0)) + 1|0);
   $60 = HEAP8[$59>>0]|0;
   $61 = $60 << 24 >> 24;
   $62 = HEAP32[$16>>2]|0;
   $63 = (((($62) + ($39<<1)|0)) + 1|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = $64 << 24 >> 24;
   $66 = (($61) + 1)|0;
   $67 = (($66) + ($65))|0;
   $68 = $67 >>> 1;
   $69 = $68&255;
   $70 = ((($1)) + 27|0);
   HEAP8[$70>>0] = $69;
   $71 = HEAP8[$2>>0]|0;
   $72 = ($71<<24>>24)==(4);
   if ($72) {
    $sext196 = $45 << 24;
    $73 = $sext196 >> 24;
    $74 = ((($1)) + 24|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = $75 << 24 >> 24;
    $77 = (($73) + 12)|0;
    $78 = (($77) + ($76))|0;
    $79 = (24151 + ($78)|0);
    $80 = HEAP8[$79>>0]|0;
    $81 = $80&255;
    $82 = ((($1)) + 25|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83 << 24 >> 24;
    $85 = (($84) + ($77))|0;
    $86 = (24227 + ($85)|0);
    $87 = HEAP8[$86>>0]|0;
    $88 = $87 << 24 >> 24;
    $89 = $88 | $81;
    $90 = ($89|0)==(0);
    if (!($90)) {
     $91 = ((($1)) + 32|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = ((($92)) + 12|0);
     $94 = HEAP32[$93>>2]|0;
     FUNCTION_TABLE_viiii[$94 & 31]($27,$20,$81,$88);
    }
    __ZN7WelsDec25FilteringEdgeChromaIntraVEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$33,$36,$22,0);
    $$pre$phi189Z2D = $58;$$pre$phi191Z2D = $59;$$pre$phi193Z2D = $70;$$pre$phiZ2D = $47;
    break;
   }
   $95 = HEAP32[$2>>2]|0;
   $96 = ($95|0)==(0);
   if ($96) {
    $$pre$phi189Z2D = $58;$$pre$phi191Z2D = $59;$$pre$phi193Z2D = $70;$$pre$phiZ2D = $47;
   } else {
    $97 = ((($4)) + 15|0);
    $98 = $97;
    $99 = $98 & 15;
    $100 = (0 - ($99))|0;
    $101 = (($97) + ($100)|0);
    $sext = $45 << 24;
    $102 = $sext >> 24;
    $103 = ((($1)) + 24|0);
    $104 = HEAP8[$103>>0]|0;
    $105 = $104 << 24 >> 24;
    $106 = (($102) + 12)|0;
    $107 = (($106) + ($105))|0;
    $108 = (24151 + ($107)|0);
    $109 = HEAP8[$108>>0]|0;
    $110 = $109&255;
    $111 = ((($1)) + 25|0);
    $112 = HEAP8[$111>>0]|0;
    $113 = $112 << 24 >> 24;
    $114 = (($113) + ($106))|0;
    $115 = (24227 + ($114)|0);
    $116 = HEAP8[$115>>0]|0;
    $117 = $116 << 24 >> 24;
    $118 = $117 | $110;
    $119 = ($118|0)==(0);
    if (!($119)) {
     $120 = $95 & 255;
     $121 = ((24303 + ($107<<2)|0) + ($120)|0);
     $122 = HEAP8[$121>>0]|0;
     HEAP8[$101>>0] = $122;
     $123 = ((($2)) + 1|0);
     $124 = HEAP8[$123>>0]|0;
     $125 = $124&255;
     $126 = ((24303 + ($107<<2)|0) + ($125)|0);
     $127 = HEAP8[$126>>0]|0;
     $128 = ((($101)) + 1|0);
     HEAP8[$128>>0] = $127;
     $129 = ((($2)) + 2|0);
     $130 = HEAP8[$129>>0]|0;
     $131 = $130&255;
     $132 = ((24303 + ($107<<2)|0) + ($131)|0);
     $133 = HEAP8[$132>>0]|0;
     $134 = ((($101)) + 2|0);
     HEAP8[$134>>0] = $133;
     $135 = ((($2)) + 3|0);
     $136 = HEAP8[$135>>0]|0;
     $137 = $136&255;
     $138 = ((24303 + ($107<<2)|0) + ($137)|0);
     $139 = HEAP8[$138>>0]|0;
     $140 = ((($101)) + 3|0);
     HEAP8[$140>>0] = $139;
     $141 = ((($1)) + 32|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ((($142)) + 8|0);
     $144 = HEAP32[$143>>2]|0;
     FUNCTION_TABLE_viiiii[$144 & 15]($27,$20,$110,$117,$101);
    }
    __ZN7WelsDec20FilteringEdgeChromaVEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$33,$36,$22,$2);
    $$pre$phi189Z2D = $58;$$pre$phi191Z2D = $59;$$pre$phi193Z2D = $70;$$pre$phiZ2D = $47;
   }
  }
 } while(0);
 HEAP8[$$pre$phiZ2D>>0] = $14;
 $145 = HEAP8[$18>>0]|0;
 HEAP8[$$pre$phi189Z2D>>0] = $145;
 $146 = HEAP8[$$pre$phi191Z2D>>0]|0;
 HEAP8[$$pre$phi193Z2D>>0] = $146;
 $147 = ((($2)) + 4|0);
 $148 = HEAP32[$147>>2]|0;
 $149 = ($148|0)==(0);
 if (!($149)) {
  $150 = ((($0)) + 3944|0);
  $151 = HEAP32[$150>>2]|0;
  $152 = (($151) + ($6)|0);
  $153 = HEAP8[$152>>0]|0;
  $154 = ($153<<24>>24)==(0);
  if ($154) {
   $155 = ((($4)) + 15|0);
   $156 = $155;
   $157 = $156 & 15;
   $158 = (0 - ($157))|0;
   $159 = (($155) + ($158)|0);
   $160 = ((($1)) + 24|0);
   $161 = HEAP8[$160>>0]|0;
   $162 = $161 << 24 >> 24;
   $163 = (($15) + 12)|0;
   $164 = (($163) + ($162))|0;
   $165 = (24151 + ($164)|0);
   $166 = HEAP8[$165>>0]|0;
   $167 = $166&255;
   $168 = ((($1)) + 25|0);
   $169 = HEAP8[$168>>0]|0;
   $170 = $169 << 24 >> 24;
   $171 = (($170) + ($163))|0;
   $172 = (24227 + ($171)|0);
   $173 = HEAP8[$172>>0]|0;
   $174 = $173 << 24 >> 24;
   $175 = $174 | $167;
   $176 = ($175|0)==(0);
   if (!($176)) {
    $177 = ((($27)) + 4|0);
    $178 = $148 & 255;
    $179 = ((24303 + ($164<<2)|0) + ($178)|0);
    $180 = HEAP8[$179>>0]|0;
    HEAP8[$159>>0] = $180;
    $181 = ((($2)) + 5|0);
    $182 = HEAP8[$181>>0]|0;
    $183 = $182&255;
    $184 = ((24303 + ($164<<2)|0) + ($183)|0);
    $185 = HEAP8[$184>>0]|0;
    $186 = ((($159)) + 1|0);
    HEAP8[$186>>0] = $185;
    $187 = ((($2)) + 6|0);
    $188 = HEAP8[$187>>0]|0;
    $189 = $188&255;
    $190 = ((24303 + ($164<<2)|0) + ($189)|0);
    $191 = HEAP8[$190>>0]|0;
    $192 = ((($159)) + 2|0);
    HEAP8[$192>>0] = $191;
    $193 = ((($2)) + 7|0);
    $194 = HEAP8[$193>>0]|0;
    $195 = $194&255;
    $196 = ((24303 + ($164<<2)|0) + ($195)|0);
    $197 = HEAP8[$196>>0]|0;
    $198 = ((($159)) + 3|0);
    HEAP8[$198>>0] = $197;
    $199 = ((($1)) + 32|0);
    $200 = HEAP32[$199>>2]|0;
    $201 = ((($200)) + 8|0);
    $202 = HEAP32[$201>>2]|0;
    FUNCTION_TABLE_viiiii[$202 & 15]($177,$20,$167,$174,$159);
   }
  }
 }
 $203 = ((($2)) + 8|0);
 $204 = HEAP32[$203>>2]|0;
 $205 = ($204|0)==(0);
 if (!($205)) {
  $206 = ((($4)) + 15|0);
  $207 = $206;
  $208 = $207 & 15;
  $209 = (0 - ($208))|0;
  $210 = (($206) + ($209)|0);
  $211 = HEAP8[$$pre$phiZ2D>>0]|0;
  $212 = $211 << 24 >> 24;
  $213 = ((($1)) + 24|0);
  $214 = HEAP8[$213>>0]|0;
  $215 = $214 << 24 >> 24;
  $216 = (($212) + 12)|0;
  $217 = (($216) + ($215))|0;
  $218 = (24151 + ($217)|0);
  $219 = HEAP8[$218>>0]|0;
  $220 = $219&255;
  $221 = ((($1)) + 25|0);
  $222 = HEAP8[$221>>0]|0;
  $223 = $222 << 24 >> 24;
  $224 = (($223) + ($216))|0;
  $225 = (24227 + ($224)|0);
  $226 = HEAP8[$225>>0]|0;
  $227 = $226 << 24 >> 24;
  $228 = $227 | $220;
  $229 = ($228|0)==(0);
  if (!($229)) {
   $230 = ((($27)) + 8|0);
   $231 = $204 & 255;
   $232 = ((24303 + ($217<<2)|0) + ($231)|0);
   $233 = HEAP8[$232>>0]|0;
   HEAP8[$210>>0] = $233;
   $234 = ((($2)) + 9|0);
   $235 = HEAP8[$234>>0]|0;
   $236 = $235&255;
   $237 = ((24303 + ($217<<2)|0) + ($236)|0);
   $238 = HEAP8[$237>>0]|0;
   $239 = ((($210)) + 1|0);
   HEAP8[$239>>0] = $238;
   $240 = ((($2)) + 10|0);
   $241 = HEAP8[$240>>0]|0;
   $242 = $241&255;
   $243 = ((24303 + ($217<<2)|0) + ($242)|0);
   $244 = HEAP8[$243>>0]|0;
   $245 = ((($210)) + 2|0);
   HEAP8[$245>>0] = $244;
   $246 = ((($2)) + 11|0);
   $247 = HEAP8[$246>>0]|0;
   $248 = $247&255;
   $249 = ((24303 + ($217<<2)|0) + ($248)|0);
   $250 = HEAP8[$249>>0]|0;
   $251 = ((($210)) + 3|0);
   HEAP8[$251>>0] = $250;
   $252 = ((($1)) + 32|0);
   $253 = HEAP32[$252>>2]|0;
   $254 = ((($253)) + 8|0);
   $255 = HEAP32[$254>>2]|0;
   FUNCTION_TABLE_viiiii[$255 & 15]($230,$20,$220,$227,$210);
  }
  $256 = ((($33)) + 4|0);
  $257 = ((($36)) + 4|0);
  __ZN7WelsDec20FilteringEdgeChromaVEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$256,$257,$22,$203);
 }
 $258 = ((($2)) + 12|0);
 $259 = HEAP32[$258>>2]|0;
 $260 = ($259|0)==(0);
 if (!($260)) {
  $261 = ((($0)) + 3944|0);
  $262 = HEAP32[$261>>2]|0;
  $263 = (($262) + ($6)|0);
  $264 = HEAP8[$263>>0]|0;
  $265 = ($264<<24>>24)==(0);
  if ($265) {
   $266 = ((($4)) + 15|0);
   $267 = $266;
   $268 = $267 & 15;
   $269 = (0 - ($268))|0;
   $270 = (($266) + ($269)|0);
   $271 = HEAP8[$$pre$phiZ2D>>0]|0;
   $272 = $271 << 24 >> 24;
   $273 = ((($1)) + 24|0);
   $274 = HEAP8[$273>>0]|0;
   $275 = $274 << 24 >> 24;
   $276 = (($272) + 12)|0;
   $277 = (($276) + ($275))|0;
   $278 = (24151 + ($277)|0);
   $279 = HEAP8[$278>>0]|0;
   $280 = $279&255;
   $281 = ((($1)) + 25|0);
   $282 = HEAP8[$281>>0]|0;
   $283 = $282 << 24 >> 24;
   $284 = (($283) + ($276))|0;
   $285 = (24227 + ($284)|0);
   $286 = HEAP8[$285>>0]|0;
   $287 = $286 << 24 >> 24;
   $288 = $287 | $280;
   $289 = ($288|0)==(0);
   if (!($289)) {
    $290 = ((($27)) + 12|0);
    $291 = $259 & 255;
    $292 = ((24303 + ($277<<2)|0) + ($291)|0);
    $293 = HEAP8[$292>>0]|0;
    HEAP8[$270>>0] = $293;
    $294 = ((($2)) + 13|0);
    $295 = HEAP8[$294>>0]|0;
    $296 = $295&255;
    $297 = ((24303 + ($277<<2)|0) + ($296)|0);
    $298 = HEAP8[$297>>0]|0;
    $299 = ((($270)) + 1|0);
    HEAP8[$299>>0] = $298;
    $300 = ((($2)) + 14|0);
    $301 = HEAP8[$300>>0]|0;
    $302 = $301&255;
    $303 = ((24303 + ($277<<2)|0) + ($302)|0);
    $304 = HEAP8[$303>>0]|0;
    $305 = ((($270)) + 2|0);
    HEAP8[$305>>0] = $304;
    $306 = ((($2)) + 15|0);
    $307 = HEAP8[$306>>0]|0;
    $308 = $307&255;
    $309 = ((24303 + ($277<<2)|0) + ($308)|0);
    $310 = HEAP8[$309>>0]|0;
    $311 = ((($270)) + 3|0);
    HEAP8[$311>>0] = $310;
    $312 = ((($1)) + 32|0);
    $313 = HEAP32[$312>>2]|0;
    $314 = ((($313)) + 8|0);
    $315 = HEAP32[$314>>2]|0;
    FUNCTION_TABLE_viiiii[$315 & 15]($290,$20,$280,$287,$270);
   }
  }
 }
 $316 = $3 & 2;
 $317 = ($316|0)==(0);
 do {
  if (!($317)) {
   $318 = ((($0)) + 4044|0);
   $319 = HEAP32[$318>>2]|0;
   $320 = (($6) - ($319))|0;
   $321 = HEAP32[$11>>2]|0;
   $322 = (($321) + ($320)|0);
   $323 = HEAP8[$322>>0]|0;
   $324 = $323 << 24 >> 24;
   $325 = (($15) + 1)|0;
   $326 = (($325) + ($324))|0;
   $327 = $326 >>> 1;
   $328 = $327&255;
   HEAP8[$$pre$phiZ2D>>0] = $328;
   $329 = HEAP8[$18>>0]|0;
   $330 = $329 << 24 >> 24;
   $331 = HEAP32[$16>>2]|0;
   $332 = (($331) + ($320<<1)|0);
   $333 = HEAP8[$332>>0]|0;
   $334 = $333 << 24 >> 24;
   $335 = (($330) + 1)|0;
   $336 = (($335) + ($334))|0;
   $337 = $336 >>> 1;
   $338 = $337&255;
   HEAP8[$$pre$phi189Z2D>>0] = $338;
   $339 = HEAP8[$$pre$phi191Z2D>>0]|0;
   $340 = $339 << 24 >> 24;
   $341 = HEAP32[$16>>2]|0;
   $342 = (((($341) + ($320<<1)|0)) + 1|0);
   $343 = HEAP8[$342>>0]|0;
   $344 = $343 << 24 >> 24;
   $345 = (($340) + 1)|0;
   $346 = (($345) + ($344))|0;
   $347 = $346 >>> 1;
   $348 = $347&255;
   HEAP8[$$pre$phi193Z2D>>0] = $348;
   $349 = ((($2)) + 16|0);
   $350 = HEAP8[$349>>0]|0;
   $351 = ($350<<24>>24)==(4);
   if ($351) {
    $sext195 = $327 << 24;
    $352 = $sext195 >> 24;
    $353 = ((($1)) + 24|0);
    $354 = HEAP8[$353>>0]|0;
    $355 = $354 << 24 >> 24;
    $356 = (($352) + 12)|0;
    $357 = (($356) + ($355))|0;
    $358 = (24151 + ($357)|0);
    $359 = HEAP8[$358>>0]|0;
    $360 = $359&255;
    $361 = ((($1)) + 25|0);
    $362 = HEAP8[$361>>0]|0;
    $363 = $362 << 24 >> 24;
    $364 = (($363) + ($356))|0;
    $365 = (24227 + ($364)|0);
    $366 = HEAP8[$365>>0]|0;
    $367 = $366 << 24 >> 24;
    $368 = $367 | $360;
    $369 = ($368|0)==(0);
    if (!($369)) {
     $370 = ((($1)) + 32|0);
     $371 = HEAP32[$370>>2]|0;
     $372 = ((($371)) + 4|0);
     $373 = HEAP32[$372>>2]|0;
     FUNCTION_TABLE_viiii[$373 & 31]($27,$20,$360,$367);
    }
    __ZN7WelsDec25FilteringEdgeChromaIntraHEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$33,$36,$22,0);
    break;
   }
   $374 = HEAP32[$349>>2]|0;
   $375 = ($374|0)==(0);
   if (!($375)) {
    $376 = ((($4)) + 15|0);
    $377 = $376;
    $378 = $377 & 15;
    $379 = (0 - ($378))|0;
    $380 = (($376) + ($379)|0);
    $sext194 = $327 << 24;
    $381 = $sext194 >> 24;
    $382 = ((($1)) + 24|0);
    $383 = HEAP8[$382>>0]|0;
    $384 = $383 << 24 >> 24;
    $385 = (($381) + 12)|0;
    $386 = (($385) + ($384))|0;
    $387 = (24151 + ($386)|0);
    $388 = HEAP8[$387>>0]|0;
    $389 = $388&255;
    $390 = ((($1)) + 25|0);
    $391 = HEAP8[$390>>0]|0;
    $392 = $391 << 24 >> 24;
    $393 = (($392) + ($385))|0;
    $394 = (24227 + ($393)|0);
    $395 = HEAP8[$394>>0]|0;
    $396 = $395 << 24 >> 24;
    $397 = $396 | $389;
    $398 = ($397|0)==(0);
    if (!($398)) {
     $399 = $374 & 255;
     $400 = ((24303 + ($386<<2)|0) + ($399)|0);
     $401 = HEAP8[$400>>0]|0;
     HEAP8[$380>>0] = $401;
     $402 = ((($2)) + 17|0);
     $403 = HEAP8[$402>>0]|0;
     $404 = $403&255;
     $405 = ((24303 + ($386<<2)|0) + ($404)|0);
     $406 = HEAP8[$405>>0]|0;
     $407 = ((($380)) + 1|0);
     HEAP8[$407>>0] = $406;
     $408 = ((($2)) + 18|0);
     $409 = HEAP8[$408>>0]|0;
     $410 = $409&255;
     $411 = ((24303 + ($386<<2)|0) + ($410)|0);
     $412 = HEAP8[$411>>0]|0;
     $413 = ((($380)) + 2|0);
     HEAP8[$413>>0] = $412;
     $414 = ((($2)) + 19|0);
     $415 = HEAP8[$414>>0]|0;
     $416 = $415&255;
     $417 = ((24303 + ($386<<2)|0) + ($416)|0);
     $418 = HEAP8[$417>>0]|0;
     $419 = ((($380)) + 3|0);
     HEAP8[$419>>0] = $418;
     $420 = ((($1)) + 32|0);
     $421 = HEAP32[$420>>2]|0;
     $422 = HEAP32[$421>>2]|0;
     FUNCTION_TABLE_viiiii[$422 & 15]($27,$20,$389,$396,$380);
    }
    __ZN7WelsDec20FilteringEdgeChromaHEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$33,$36,$22,$349);
   }
  }
 } while(0);
 HEAP8[$$pre$phiZ2D>>0] = $14;
 $423 = HEAP8[$18>>0]|0;
 HEAP8[$$pre$phi189Z2D>>0] = $423;
 $424 = HEAP8[$$pre$phi191Z2D>>0]|0;
 HEAP8[$$pre$phi193Z2D>>0] = $424;
 $425 = ((($2)) + 20|0);
 $426 = HEAP32[$425>>2]|0;
 $427 = ($426|0)==(0);
 if (!($427)) {
  $428 = ((($0)) + 3944|0);
  $429 = HEAP32[$428>>2]|0;
  $430 = (($429) + ($6)|0);
  $431 = HEAP8[$430>>0]|0;
  $432 = ($431<<24>>24)==(0);
  if ($432) {
   $433 = ((($4)) + 15|0);
   $434 = $433;
   $435 = $434 & 15;
   $436 = (0 - ($435))|0;
   $437 = (($433) + ($436)|0);
   $438 = ((($1)) + 24|0);
   $439 = HEAP8[$438>>0]|0;
   $440 = $439 << 24 >> 24;
   $441 = (($15) + 12)|0;
   $442 = (($441) + ($440))|0;
   $443 = (24151 + ($442)|0);
   $444 = HEAP8[$443>>0]|0;
   $445 = $444&255;
   $446 = ((($1)) + 25|0);
   $447 = HEAP8[$446>>0]|0;
   $448 = $447 << 24 >> 24;
   $449 = (($448) + ($441))|0;
   $450 = (24227 + ($449)|0);
   $451 = HEAP8[$450>>0]|0;
   $452 = $451 << 24 >> 24;
   $453 = $452 | $445;
   $454 = ($453|0)==(0);
   if (!($454)) {
    $455 = $20 << 2;
    $456 = (($27) + ($455)|0);
    $457 = $426 & 255;
    $458 = ((24303 + ($442<<2)|0) + ($457)|0);
    $459 = HEAP8[$458>>0]|0;
    HEAP8[$437>>0] = $459;
    $460 = ((($2)) + 21|0);
    $461 = HEAP8[$460>>0]|0;
    $462 = $461&255;
    $463 = ((24303 + ($442<<2)|0) + ($462)|0);
    $464 = HEAP8[$463>>0]|0;
    $465 = ((($437)) + 1|0);
    HEAP8[$465>>0] = $464;
    $466 = ((($2)) + 22|0);
    $467 = HEAP8[$466>>0]|0;
    $468 = $467&255;
    $469 = ((24303 + ($442<<2)|0) + ($468)|0);
    $470 = HEAP8[$469>>0]|0;
    $471 = ((($437)) + 2|0);
    HEAP8[$471>>0] = $470;
    $472 = ((($2)) + 23|0);
    $473 = HEAP8[$472>>0]|0;
    $474 = $473&255;
    $475 = ((24303 + ($442<<2)|0) + ($474)|0);
    $476 = HEAP8[$475>>0]|0;
    $477 = ((($437)) + 3|0);
    HEAP8[$477>>0] = $476;
    $478 = ((($1)) + 32|0);
    $479 = HEAP32[$478>>2]|0;
    $480 = HEAP32[$479>>2]|0;
    FUNCTION_TABLE_viiiii[$480 & 15]($456,$20,$445,$452,$437);
   }
  }
 }
 $481 = ((($2)) + 24|0);
 $482 = HEAP32[$481>>2]|0;
 $483 = ($482|0)==(0);
 if (!($483)) {
  $484 = ((($4)) + 15|0);
  $485 = $484;
  $486 = $485 & 15;
  $487 = (0 - ($486))|0;
  $488 = (($484) + ($487)|0);
  $489 = HEAP8[$$pre$phiZ2D>>0]|0;
  $490 = $489 << 24 >> 24;
  $491 = ((($1)) + 24|0);
  $492 = HEAP8[$491>>0]|0;
  $493 = $492 << 24 >> 24;
  $494 = (($490) + 12)|0;
  $495 = (($494) + ($493))|0;
  $496 = (24151 + ($495)|0);
  $497 = HEAP8[$496>>0]|0;
  $498 = $497&255;
  $499 = ((($1)) + 25|0);
  $500 = HEAP8[$499>>0]|0;
  $501 = $500 << 24 >> 24;
  $502 = (($501) + ($494))|0;
  $503 = (24227 + ($502)|0);
  $504 = HEAP8[$503>>0]|0;
  $505 = $504 << 24 >> 24;
  $506 = $505 | $498;
  $507 = ($506|0)==(0);
  if (!($507)) {
   $508 = $20 << 3;
   $509 = (($27) + ($508)|0);
   $510 = $482 & 255;
   $511 = ((24303 + ($495<<2)|0) + ($510)|0);
   $512 = HEAP8[$511>>0]|0;
   HEAP8[$488>>0] = $512;
   $513 = ((($2)) + 25|0);
   $514 = HEAP8[$513>>0]|0;
   $515 = $514&255;
   $516 = ((24303 + ($495<<2)|0) + ($515)|0);
   $517 = HEAP8[$516>>0]|0;
   $518 = ((($488)) + 1|0);
   HEAP8[$518>>0] = $517;
   $519 = ((($2)) + 26|0);
   $520 = HEAP8[$519>>0]|0;
   $521 = $520&255;
   $522 = ((24303 + ($495<<2)|0) + ($521)|0);
   $523 = HEAP8[$522>>0]|0;
   $524 = ((($488)) + 2|0);
   HEAP8[$524>>0] = $523;
   $525 = ((($2)) + 27|0);
   $526 = HEAP8[$525>>0]|0;
   $527 = $526&255;
   $528 = ((24303 + ($495<<2)|0) + ($527)|0);
   $529 = HEAP8[$528>>0]|0;
   $530 = ((($488)) + 3|0);
   HEAP8[$530>>0] = $529;
   $531 = ((($1)) + 32|0);
   $532 = HEAP32[$531>>2]|0;
   $533 = HEAP32[$532>>2]|0;
   FUNCTION_TABLE_viiiii[$533 & 15]($509,$20,$498,$505,$488);
  }
  $534 = $22 << 2;
  $535 = (($33) + ($534)|0);
  $536 = (($36) + ($534)|0);
  __ZN7WelsDec20FilteringEdgeChromaHEPNS_19tagDeblockingFilterEPhS2_iS2_($1,$535,$536,$22,$481);
 }
 $537 = ((($2)) + 28|0);
 $538 = HEAP32[$537>>2]|0;
 $539 = ($538|0)==(0);
 if ($539) {
  STACKTOP = sp;return;
 }
 $540 = ((($0)) + 3944|0);
 $541 = HEAP32[$540>>2]|0;
 $542 = (($541) + ($6)|0);
 $543 = HEAP8[$542>>0]|0;
 $544 = ($543<<24>>24)==(0);
 if (!($544)) {
  STACKTOP = sp;return;
 }
 $545 = ((($4)) + 15|0);
 $546 = $545;
 $547 = $546 & 15;
 $548 = (0 - ($547))|0;
 $549 = (($545) + ($548)|0);
 $550 = HEAP8[$$pre$phiZ2D>>0]|0;
 $551 = $550 << 24 >> 24;
 $552 = ((($1)) + 24|0);
 $553 = HEAP8[$552>>0]|0;
 $554 = $553 << 24 >> 24;
 $555 = (($551) + 12)|0;
 $556 = (($555) + ($554))|0;
 $557 = (24151 + ($556)|0);
 $558 = HEAP8[$557>>0]|0;
 $559 = $558&255;
 $560 = ((($1)) + 25|0);
 $561 = HEAP8[$560>>0]|0;
 $562 = $561 << 24 >> 24;
 $563 = (($562) + ($555))|0;
 $564 = (24227 + ($563)|0);
 $565 = HEAP8[$564>>0]|0;
 $566 = $565 << 24 >> 24;
 $567 = $566 | $559;
 $568 = ($567|0)==(0);
 if (!($568)) {
  $569 = ($20*12)|0;
  $570 = (($27) + ($569)|0);
  $571 = $538 & 255;
  $572 = ((24303 + ($556<<2)|0) + ($571)|0);
  $573 = HEAP8[$572>>0]|0;
  HEAP8[$549>>0] = $573;
  $574 = ((($2)) + 29|0);
  $575 = HEAP8[$574>>0]|0;
  $576 = $575&255;
  $577 = ((24303 + ($556<<2)|0) + ($576)|0);
  $578 = HEAP8[$577>>0]|0;
  $579 = ((($549)) + 1|0);
  HEAP8[$579>>0] = $578;
  $580 = ((($2)) + 30|0);
  $581 = HEAP8[$580>>0]|0;
  $582 = $581&255;
  $583 = ((24303 + ($556<<2)|0) + ($582)|0);
  $584 = HEAP8[$583>>0]|0;
  $585 = ((($549)) + 2|0);
  HEAP8[$585>>0] = $584;
  $586 = ((($2)) + 31|0);
  $587 = HEAP8[$586>>0]|0;
  $588 = $587&255;
  $589 = ((24303 + ($556<<2)|0) + ($588)|0);
  $590 = HEAP8[$589>>0]|0;
  $591 = ((($549)) + 3|0);
  HEAP8[$591>>0] = $590;
  $592 = ((($1)) + 32|0);
  $593 = HEAP32[$592>>2]|0;
  $594 = HEAP32[$593>>2]|0;
  FUNCTION_TABLE_viiiii[$594 & 15]($570,$20,$559,$566,$549);
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec25FilteringEdgeChromaIntraVEPNS_19tagDeblockingFilterEPhS2_iS2_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$pre = 0, $$pre44 = 0, $$pre45 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 26|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = ((($0)) + 27|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($6<<24>>24)==($9<<24>>24);
 $11 = ((($0)) + 24|0);
 if ($10) {
  $29 = HEAP8[$11>>0]|0;
  $30 = $29 << 24 >> 24;
  $31 = (($7) + 12)|0;
  $32 = (($31) + ($30))|0;
  $33 = (24151 + ($32)|0);
  $34 = HEAP8[$33>>0]|0;
  $35 = $34&255;
  $36 = ((($0)) + 25|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = $37 << 24 >> 24;
  $39 = (($31) + ($38))|0;
  $40 = (24227 + ($39)|0);
  $41 = HEAP8[$40>>0]|0;
  $42 = $41 << 24 >> 24;
  $43 = $42 | $35;
  $44 = ($43|0)==(0);
  if ($44) {
   return;
  }
  $45 = ((($0)) + 32|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ((($46)) + 28|0);
  $48 = HEAP32[$47>>2]|0;
  FUNCTION_TABLE_viiiii[$48 & 15]($1,$2,$3,$35,$42);
  return;
 }
 $12 = ((($0)) + 25|0);
 $13 = ((($0)) + 32|0);
 $14 = HEAP8[$11>>0]|0;
 $15 = $14 << 24 >> 24;
 $16 = (($7) + 12)|0;
 $17 = (($16) + ($15))|0;
 $18 = (24151 + ($17)|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19&255;
 $21 = HEAP8[$12>>0]|0;
 $22 = $21 << 24 >> 24;
 $23 = (($16) + ($22))|0;
 $24 = (24227 + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25 << 24 >> 24;
 $27 = $26 | $20;
 $28 = ($27|0)==(0);
 if ($28) {
  $53 = $9;$55 = $14;$62 = $21;
 } else {
  $49 = HEAP32[$13>>2]|0;
  $50 = ((($49)) + 44|0);
  $51 = HEAP32[$50>>2]|0;
  FUNCTION_TABLE_viiii[$51 & 31]($1,$3,$20,$26);
  $$pre = HEAP8[$8>>0]|0;
  $$pre44 = HEAP8[$11>>0]|0;
  $$pre45 = HEAP8[$12>>0]|0;
  $53 = $$pre;$55 = $$pre44;$62 = $$pre45;
 }
 $52 = $53 << 24 >> 24;
 $54 = $55 << 24 >> 24;
 $56 = (($52) + 12)|0;
 $57 = (($56) + ($54))|0;
 $58 = (24151 + ($57)|0);
 $59 = HEAP8[$58>>0]|0;
 $60 = $59&255;
 $61 = $62 << 24 >> 24;
 $63 = (($56) + ($61))|0;
 $64 = (24227 + ($63)|0);
 $65 = HEAP8[$64>>0]|0;
 $66 = $65 << 24 >> 24;
 $67 = $66 | $60;
 $68 = ($67|0)==(0);
 if ($68) {
  return;
 }
 $69 = HEAP32[$13>>2]|0;
 $70 = ((($69)) + 44|0);
 $71 = HEAP32[$70>>2]|0;
 FUNCTION_TABLE_viiii[$71 & 31]($2,$3,$60,$66);
 return;
}
function __ZN7WelsDec20FilteringEdgeChromaVEPNS_19tagDeblockingFilterEPhS2_iS2_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$pre = 0, $$pre72 = 0, $$pre73 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $5 = sp;
 $6 = ((($5)) + 15|0);
 $7 = $6;
 $8 = $7 & 15;
 $9 = (0 - ($8))|0;
 $10 = (($6) + ($9)|0);
 $11 = ((($0)) + 26|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12 << 24 >> 24;
 $14 = ((($0)) + 27|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ($12<<24>>24)==($15<<24>>24);
 $17 = ((($0)) + 24|0);
 if ($16) {
  $41 = HEAP8[$17>>0]|0;
  $42 = $41 << 24 >> 24;
  $43 = (($13) + 12)|0;
  $44 = (($43) + ($42))|0;
  $45 = (24151 + ($44)|0);
  $46 = HEAP8[$45>>0]|0;
  $47 = $46&255;
  $48 = ((($0)) + 25|0);
  $49 = HEAP8[$48>>0]|0;
  $50 = $49 << 24 >> 24;
  $51 = (($43) + ($50))|0;
  $52 = (24227 + ($51)|0);
  $53 = HEAP8[$52>>0]|0;
  $54 = $53 << 24 >> 24;
  $55 = $54 | $47;
  $56 = ($55|0)==(0);
  if ($56) {
   STACKTOP = sp;return;
  }
  $57 = HEAP8[$4>>0]|0;
  $58 = $57&255;
  $59 = ((24303 + ($44<<2)|0) + ($58)|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = $60&255;
  $62 = (($61) + 1)|0;
  $63 = $62&255;
  HEAP8[$10>>0] = $63;
  $64 = ((($4)) + 1|0);
  $65 = HEAP8[$64>>0]|0;
  $66 = $65&255;
  $67 = ((24303 + ($44<<2)|0) + ($66)|0);
  $68 = HEAP8[$67>>0]|0;
  $69 = $68&255;
  $70 = (($69) + 1)|0;
  $71 = $70&255;
  $72 = ((($10)) + 1|0);
  HEAP8[$72>>0] = $71;
  $73 = ((($4)) + 2|0);
  $74 = HEAP8[$73>>0]|0;
  $75 = $74&255;
  $76 = ((24303 + ($44<<2)|0) + ($75)|0);
  $77 = HEAP8[$76>>0]|0;
  $78 = $77&255;
  $79 = (($78) + 1)|0;
  $80 = $79&255;
  $81 = ((($10)) + 2|0);
  HEAP8[$81>>0] = $80;
  $82 = ((($4)) + 3|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = $83&255;
  $85 = ((24303 + ($44<<2)|0) + ($84)|0);
  $86 = HEAP8[$85>>0]|0;
  $87 = $86&255;
  $88 = (($87) + 1)|0;
  $89 = $88&255;
  $90 = ((($10)) + 3|0);
  HEAP8[$90>>0] = $89;
  $91 = ((($0)) + 32|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ((($92)) + 24|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_viiiiii[$94 & 31]($1,$2,$3,$47,$54,$10);
  STACKTOP = sp;return;
 }
 $18 = ((($0)) + 25|0);
 $19 = ((($4)) + 1|0);
 $20 = ((($10)) + 1|0);
 $21 = ((($4)) + 2|0);
 $22 = ((($10)) + 2|0);
 $23 = ((($4)) + 3|0);
 $24 = ((($10)) + 3|0);
 $25 = ((($0)) + 32|0);
 $26 = HEAP8[$17>>0]|0;
 $27 = $26 << 24 >> 24;
 $28 = (($13) + 12)|0;
 $29 = (($28) + ($27))|0;
 $30 = (24151 + ($29)|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = HEAP8[$18>>0]|0;
 $34 = $33 << 24 >> 24;
 $35 = (($28) + ($34))|0;
 $36 = (24227 + ($35)|0);
 $37 = HEAP8[$36>>0]|0;
 $38 = $37 << 24 >> 24;
 $39 = $38 | $32;
 $40 = ($39|0)==(0);
 if ($40) {
  $127 = $15;$129 = $26;$136 = $33;
 } else {
  $95 = HEAP8[$4>>0]|0;
  $96 = $95&255;
  $97 = ((24303 + ($29<<2)|0) + ($96)|0);
  $98 = HEAP8[$97>>0]|0;
  $99 = $98&255;
  $100 = (($99) + 1)|0;
  $101 = $100&255;
  HEAP8[$10>>0] = $101;
  $102 = HEAP8[$19>>0]|0;
  $103 = $102&255;
  $104 = ((24303 + ($29<<2)|0) + ($103)|0);
  $105 = HEAP8[$104>>0]|0;
  $106 = $105&255;
  $107 = (($106) + 1)|0;
  $108 = $107&255;
  HEAP8[$20>>0] = $108;
  $109 = HEAP8[$21>>0]|0;
  $110 = $109&255;
  $111 = ((24303 + ($29<<2)|0) + ($110)|0);
  $112 = HEAP8[$111>>0]|0;
  $113 = $112&255;
  $114 = (($113) + 1)|0;
  $115 = $114&255;
  HEAP8[$22>>0] = $115;
  $116 = HEAP8[$23>>0]|0;
  $117 = $116&255;
  $118 = ((24303 + ($29<<2)|0) + ($117)|0);
  $119 = HEAP8[$118>>0]|0;
  $120 = $119&255;
  $121 = (($120) + 1)|0;
  $122 = $121&255;
  HEAP8[$24>>0] = $122;
  $123 = HEAP32[$25>>2]|0;
  $124 = ((($123)) + 40|0);
  $125 = HEAP32[$124>>2]|0;
  FUNCTION_TABLE_viiiii[$125 & 15]($1,$3,$32,$38,$10);
  $$pre = HEAP8[$14>>0]|0;
  $$pre72 = HEAP8[$17>>0]|0;
  $$pre73 = HEAP8[$18>>0]|0;
  $127 = $$pre;$129 = $$pre72;$136 = $$pre73;
 }
 $126 = $127 << 24 >> 24;
 $128 = $129 << 24 >> 24;
 $130 = (($126) + 12)|0;
 $131 = (($130) + ($128))|0;
 $132 = (24151 + ($131)|0);
 $133 = HEAP8[$132>>0]|0;
 $134 = $133&255;
 $135 = $136 << 24 >> 24;
 $137 = (($130) + ($135))|0;
 $138 = (24227 + ($137)|0);
 $139 = HEAP8[$138>>0]|0;
 $140 = $139 << 24 >> 24;
 $141 = $140 | $134;
 $142 = ($141|0)==(0);
 if ($142) {
  STACKTOP = sp;return;
 }
 $143 = HEAP8[$4>>0]|0;
 $144 = $143&255;
 $145 = ((24303 + ($131<<2)|0) + ($144)|0);
 $146 = HEAP8[$145>>0]|0;
 $147 = $146&255;
 $148 = (($147) + 1)|0;
 $149 = $148&255;
 HEAP8[$10>>0] = $149;
 $150 = HEAP8[$19>>0]|0;
 $151 = $150&255;
 $152 = ((24303 + ($131<<2)|0) + ($151)|0);
 $153 = HEAP8[$152>>0]|0;
 $154 = $153&255;
 $155 = (($154) + 1)|0;
 $156 = $155&255;
 HEAP8[$20>>0] = $156;
 $157 = HEAP8[$21>>0]|0;
 $158 = $157&255;
 $159 = ((24303 + ($131<<2)|0) + ($158)|0);
 $160 = HEAP8[$159>>0]|0;
 $161 = $160&255;
 $162 = (($161) + 1)|0;
 $163 = $162&255;
 HEAP8[$22>>0] = $163;
 $164 = HEAP8[$23>>0]|0;
 $165 = $164&255;
 $166 = ((24303 + ($131<<2)|0) + ($165)|0);
 $167 = HEAP8[$166>>0]|0;
 $168 = $167&255;
 $169 = (($168) + 1)|0;
 $170 = $169&255;
 HEAP8[$24>>0] = $170;
 $171 = HEAP32[$25>>2]|0;
 $172 = ((($171)) + 40|0);
 $173 = HEAP32[$172>>2]|0;
 FUNCTION_TABLE_viiiii[$173 & 15]($2,$3,$134,$140,$10);
 STACKTOP = sp;return;
}
function __ZN7WelsDec25FilteringEdgeChromaIntraHEPNS_19tagDeblockingFilterEPhS2_iS2_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$pre = 0, $$pre44 = 0, $$pre45 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 26|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = ((($0)) + 27|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($6<<24>>24)==($9<<24>>24);
 $11 = ((($0)) + 24|0);
 if ($10) {
  $29 = HEAP8[$11>>0]|0;
  $30 = $29 << 24 >> 24;
  $31 = (($7) + 12)|0;
  $32 = (($31) + ($30))|0;
  $33 = (24151 + ($32)|0);
  $34 = HEAP8[$33>>0]|0;
  $35 = $34&255;
  $36 = ((($0)) + 25|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = $37 << 24 >> 24;
  $39 = (($31) + ($38))|0;
  $40 = (24227 + ($39)|0);
  $41 = HEAP8[$40>>0]|0;
  $42 = $41 << 24 >> 24;
  $43 = $42 | $35;
  $44 = ($43|0)==(0);
  if ($44) {
   return;
  }
  $45 = ((($0)) + 32|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ((($46)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  FUNCTION_TABLE_viiiii[$48 & 15]($1,$2,$3,$35,$42);
  return;
 }
 $12 = ((($0)) + 25|0);
 $13 = ((($0)) + 32|0);
 $14 = HEAP8[$11>>0]|0;
 $15 = $14 << 24 >> 24;
 $16 = (($7) + 12)|0;
 $17 = (($16) + ($15))|0;
 $18 = (24151 + ($17)|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19&255;
 $21 = HEAP8[$12>>0]|0;
 $22 = $21 << 24 >> 24;
 $23 = (($16) + ($22))|0;
 $24 = (24227 + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25 << 24 >> 24;
 $27 = $26 | $20;
 $28 = ($27|0)==(0);
 if ($28) {
  $53 = $9;$55 = $14;$62 = $21;
 } else {
  $49 = HEAP32[$13>>2]|0;
  $50 = ((($49)) + 36|0);
  $51 = HEAP32[$50>>2]|0;
  FUNCTION_TABLE_viiii[$51 & 31]($1,$3,$20,$26);
  $$pre = HEAP8[$8>>0]|0;
  $$pre44 = HEAP8[$11>>0]|0;
  $$pre45 = HEAP8[$12>>0]|0;
  $53 = $$pre;$55 = $$pre44;$62 = $$pre45;
 }
 $52 = $53 << 24 >> 24;
 $54 = $55 << 24 >> 24;
 $56 = (($52) + 12)|0;
 $57 = (($56) + ($54))|0;
 $58 = (24151 + ($57)|0);
 $59 = HEAP8[$58>>0]|0;
 $60 = $59&255;
 $61 = $62 << 24 >> 24;
 $63 = (($56) + ($61))|0;
 $64 = (24227 + ($63)|0);
 $65 = HEAP8[$64>>0]|0;
 $66 = $65 << 24 >> 24;
 $67 = $66 | $60;
 $68 = ($67|0)==(0);
 if ($68) {
  return;
 }
 $69 = HEAP32[$13>>2]|0;
 $70 = ((($69)) + 36|0);
 $71 = HEAP32[$70>>2]|0;
 FUNCTION_TABLE_viiii[$71 & 31]($2,$3,$60,$66);
 return;
}
function __ZN7WelsDec20FilteringEdgeChromaHEPNS_19tagDeblockingFilterEPhS2_iS2_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$pre = 0, $$pre72 = 0, $$pre73 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $5 = sp;
 $6 = ((($5)) + 15|0);
 $7 = $6;
 $8 = $7 & 15;
 $9 = (0 - ($8))|0;
 $10 = (($6) + ($9)|0);
 $11 = ((($0)) + 26|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12 << 24 >> 24;
 $14 = ((($0)) + 27|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ($12<<24>>24)==($15<<24>>24);
 $17 = ((($0)) + 24|0);
 if ($16) {
  $41 = HEAP8[$17>>0]|0;
  $42 = $41 << 24 >> 24;
  $43 = (($13) + 12)|0;
  $44 = (($43) + ($42))|0;
  $45 = (24151 + ($44)|0);
  $46 = HEAP8[$45>>0]|0;
  $47 = $46&255;
  $48 = ((($0)) + 25|0);
  $49 = HEAP8[$48>>0]|0;
  $50 = $49 << 24 >> 24;
  $51 = (($43) + ($50))|0;
  $52 = (24227 + ($51)|0);
  $53 = HEAP8[$52>>0]|0;
  $54 = $53 << 24 >> 24;
  $55 = $54 | $47;
  $56 = ($55|0)==(0);
  if ($56) {
   STACKTOP = sp;return;
  }
  $57 = HEAP8[$4>>0]|0;
  $58 = $57&255;
  $59 = ((24303 + ($44<<2)|0) + ($58)|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = $60&255;
  $62 = (($61) + 1)|0;
  $63 = $62&255;
  HEAP8[$10>>0] = $63;
  $64 = ((($4)) + 1|0);
  $65 = HEAP8[$64>>0]|0;
  $66 = $65&255;
  $67 = ((24303 + ($44<<2)|0) + ($66)|0);
  $68 = HEAP8[$67>>0]|0;
  $69 = $68&255;
  $70 = (($69) + 1)|0;
  $71 = $70&255;
  $72 = ((($10)) + 1|0);
  HEAP8[$72>>0] = $71;
  $73 = ((($4)) + 2|0);
  $74 = HEAP8[$73>>0]|0;
  $75 = $74&255;
  $76 = ((24303 + ($44<<2)|0) + ($75)|0);
  $77 = HEAP8[$76>>0]|0;
  $78 = $77&255;
  $79 = (($78) + 1)|0;
  $80 = $79&255;
  $81 = ((($10)) + 2|0);
  HEAP8[$81>>0] = $80;
  $82 = ((($4)) + 3|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = $83&255;
  $85 = ((24303 + ($44<<2)|0) + ($84)|0);
  $86 = HEAP8[$85>>0]|0;
  $87 = $86&255;
  $88 = (($87) + 1)|0;
  $89 = $88&255;
  $90 = ((($10)) + 3|0);
  HEAP8[$90>>0] = $89;
  $91 = ((($0)) + 32|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ((($92)) + 16|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_viiiiii[$94 & 31]($1,$2,$3,$47,$54,$10);
  STACKTOP = sp;return;
 }
 $18 = ((($0)) + 25|0);
 $19 = ((($4)) + 1|0);
 $20 = ((($10)) + 1|0);
 $21 = ((($4)) + 2|0);
 $22 = ((($10)) + 2|0);
 $23 = ((($4)) + 3|0);
 $24 = ((($10)) + 3|0);
 $25 = ((($0)) + 32|0);
 $26 = HEAP8[$17>>0]|0;
 $27 = $26 << 24 >> 24;
 $28 = (($13) + 12)|0;
 $29 = (($28) + ($27))|0;
 $30 = (24151 + ($29)|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = HEAP8[$18>>0]|0;
 $34 = $33 << 24 >> 24;
 $35 = (($28) + ($34))|0;
 $36 = (24227 + ($35)|0);
 $37 = HEAP8[$36>>0]|0;
 $38 = $37 << 24 >> 24;
 $39 = $38 | $32;
 $40 = ($39|0)==(0);
 if ($40) {
  $127 = $15;$129 = $26;$136 = $33;
 } else {
  $95 = HEAP8[$4>>0]|0;
  $96 = $95&255;
  $97 = ((24303 + ($29<<2)|0) + ($96)|0);
  $98 = HEAP8[$97>>0]|0;
  $99 = $98&255;
  $100 = (($99) + 1)|0;
  $101 = $100&255;
  HEAP8[$10>>0] = $101;
  $102 = HEAP8[$19>>0]|0;
  $103 = $102&255;
  $104 = ((24303 + ($29<<2)|0) + ($103)|0);
  $105 = HEAP8[$104>>0]|0;
  $106 = $105&255;
  $107 = (($106) + 1)|0;
  $108 = $107&255;
  HEAP8[$20>>0] = $108;
  $109 = HEAP8[$21>>0]|0;
  $110 = $109&255;
  $111 = ((24303 + ($29<<2)|0) + ($110)|0);
  $112 = HEAP8[$111>>0]|0;
  $113 = $112&255;
  $114 = (($113) + 1)|0;
  $115 = $114&255;
  HEAP8[$22>>0] = $115;
  $116 = HEAP8[$23>>0]|0;
  $117 = $116&255;
  $118 = ((24303 + ($29<<2)|0) + ($117)|0);
  $119 = HEAP8[$118>>0]|0;
  $120 = $119&255;
  $121 = (($120) + 1)|0;
  $122 = $121&255;
  HEAP8[$24>>0] = $122;
  $123 = HEAP32[$25>>2]|0;
  $124 = ((($123)) + 32|0);
  $125 = HEAP32[$124>>2]|0;
  FUNCTION_TABLE_viiiii[$125 & 15]($1,$3,$32,$38,$10);
  $$pre = HEAP8[$14>>0]|0;
  $$pre72 = HEAP8[$17>>0]|0;
  $$pre73 = HEAP8[$18>>0]|0;
  $127 = $$pre;$129 = $$pre72;$136 = $$pre73;
 }
 $126 = $127 << 24 >> 24;
 $128 = $129 << 24 >> 24;
 $130 = (($126) + 12)|0;
 $131 = (($130) + ($128))|0;
 $132 = (24151 + ($131)|0);
 $133 = HEAP8[$132>>0]|0;
 $134 = $133&255;
 $135 = $136 << 24 >> 24;
 $137 = (($130) + ($135))|0;
 $138 = (24227 + ($137)|0);
 $139 = HEAP8[$138>>0]|0;
 $140 = $139 << 24 >> 24;
 $141 = $140 | $134;
 $142 = ($141|0)==(0);
 if ($142) {
  STACKTOP = sp;return;
 }
 $143 = HEAP8[$4>>0]|0;
 $144 = $143&255;
 $145 = ((24303 + ($131<<2)|0) + ($144)|0);
 $146 = HEAP8[$145>>0]|0;
 $147 = $146&255;
 $148 = (($147) + 1)|0;
 $149 = $148&255;
 HEAP8[$10>>0] = $149;
 $150 = HEAP8[$19>>0]|0;
 $151 = $150&255;
 $152 = ((24303 + ($131<<2)|0) + ($151)|0);
 $153 = HEAP8[$152>>0]|0;
 $154 = $153&255;
 $155 = (($154) + 1)|0;
 $156 = $155&255;
 HEAP8[$20>>0] = $156;
 $157 = HEAP8[$21>>0]|0;
 $158 = $157&255;
 $159 = ((24303 + ($131<<2)|0) + ($158)|0);
 $160 = HEAP8[$159>>0]|0;
 $161 = $160&255;
 $162 = (($161) + 1)|0;
 $163 = $162&255;
 HEAP8[$22>>0] = $163;
 $164 = HEAP8[$23>>0]|0;
 $165 = $164&255;
 $166 = ((24303 + ($131<<2)|0) + ($165)|0);
 $167 = HEAP8[$166>>0]|0;
 $168 = $167&255;
 $169 = (($168) + 1)|0;
 $170 = $169&255;
 HEAP8[$24>>0] = $170;
 $171 = HEAP32[$25>>2]|0;
 $172 = ((($171)) + 32|0);
 $173 = HEAP32[$172>>2]|0;
 FUNCTION_TABLE_viiiii[$173 & 15]($2,$3,$134,$140,$10);
 STACKTOP = sp;return;
}
function __ZN7WelsDec33WelsMbIntraPredictionConstructionEPNS_21TagWelsDecoderContextEPNS_10TagDqLayerEb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$phi$trans$insert = 0, $$pre = 0, $$pre30 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 4040|0);
 $4 = HEAP32[$3>>2]|0;
 __ZN7WelsDec23WelsFillRecNeededMbInfoEPNS_21TagWelsDecoderContextEbPNS_10TagDqLayerE($0,$2,$1);
 $5 = ((($1)) + 3908|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + ($4<<1)|0);
 $8 = HEAP16[$7>>1]|0;
 switch ($8<<16>>16) {
 case 2:  {
  $9 = ((($1)) + 3988|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($10) + (($4*768)|0)|0);
  $12 = ((($1)) + 3948|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + ($4)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15 << 24 >> 24;
  __ZN7WelsDec21WelsLumaDcDequantIdctEPsiPNS_21TagWelsDecoderContextE($11,$16,$0);
  $17 = HEAP32[$9>>2]|0;
  $18 = (($17) + (($4*768)|0)|0);
  (__ZN7WelsDec11RecI16x16MbEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($4,$0,$18,$1)|0);
  return 0;
  break;
 }
 case 4:  {
  $19 = ((($1)) + 3988|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + (($4*768)|0)|0);
  (__ZN7WelsDec9RecI8x8MbEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($4,$0,$21,$1)|0);
  $$pre = HEAP32[$5>>2]|0;
  $$phi$trans$insert = (($$pre) + ($4<<1)|0);
  $$pre30 = HEAP16[$$phi$trans$insert>>1]|0;
  $22 = $$pre30;
  break;
 }
 default: {
  $22 = $8;
 }
 }
 $23 = ($22<<16>>16)==(1);
 if (!($23)) {
  return 0;
 }
 $24 = ((($1)) + 3988|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25) + (($4*768)|0)|0);
 (__ZN7WelsDec9RecI4x4MbEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($4,$0,$26,$1)|0);
 return 0;
}
function __ZN7WelsDec12GetInterPredEPhS0_S0_PNS_21TagWelsDecoderContextE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$i = 0, $$$i281 = 0, $$$i284 = 0, $$$i287 = 0, $$$i290 = 0, $$$i293 = 0, $$$i296 = 0, $$$i299 = 0, $$$i302 = 0, $$$i305 = 0, $$$i308 = 0, $$0280335 = 0, $$0336 = 0, $$80$i = 0, $$80$i282 = 0, $$80$i285 = 0, $$80$i288 = 0, $$80$i291 = 0, $$80$i294 = 0, $$80$i297 = 0;
 var $$80$i300 = 0, $$80$i303 = 0, $$80$i306 = 0, $$80$i309 = 0, $$pre = 0, $$pre338 = 0, $$pre339 = 0, $$pre340 = 0, $$pre341 = 0, $$pre342 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0;
 var $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0;
 var $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0;
 var $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond337 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = ((($3)) + 241932|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4040|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($6)) + 3908|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + ($8<<1)|0);
 $12 = HEAP16[$11>>1]|0;
 $13 = $12 << 16 >> 16;
 $14 = ((($6)) + 4032|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 << 4;
 $17 = ((($6)) + 4036|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 << 4;
 $20 = ((($3)) + 5464|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 32|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($21)) + 36|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($6)) + 1156|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = $27 << 4;
 $29 = ((($4)) + 40|0);
 HEAP32[$29>>2] = $28;
 $30 = ((($6)) + 1160|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = $31 << 4;
 $33 = ((($4)) + 44|0);
 HEAP32[$33>>2] = $32;
 HEAP32[$4>>2] = $0;
 $34 = ((($4)) + 4|0);
 HEAP32[$34>>2] = $1;
 $35 = ((($4)) + 8|0);
 HEAP32[$35>>2] = $2;
 $36 = ((($4)) + 32|0);
 HEAP32[$36>>2] = $23;
 $37 = ((($4)) + 36|0);
 HEAP32[$37>>2] = $25;
 switch ($13|0) {
 case 8: case 256:  {
  $51 = ((($6)) + 3916|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (($52) + ($8<<6)|0);
  $54 = HEAP16[$53>>1]|0;
  $55 = (((($52) + ($8<<6)|0)) + 2|0);
  $56 = HEAP16[$55>>1]|0;
  $57 = ((($6)) + 3932|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (($58) + ($8<<4)|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = $60 << 24 >> 24;
  $62 = (((($3)) + 5468|0) + ($61<<2)|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = ((($63)) + 32|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($4)) + 24|0);
  HEAP32[$66>>2] = $65;
  $67 = ((($63)) + 36|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ((($4)) + 28|0);
  HEAP32[$69>>2] = $68;
  $70 = ((($63)) + 16|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ((($4)) + 12|0);
  HEAP32[$72>>2] = $71;
  $73 = ((($63)) + 20|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ((($4)) + 16|0);
  HEAP32[$75>>2] = $74;
  $76 = ((($63)) + 24|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ((($4)) + 20|0);
  HEAP32[$78>>2] = $77;
  $79 = $15 << 6;
  $80 = $54 << 16 >> 16;
  $81 = (($80) + ($79))|0;
  $82 = $18 << 6;
  $83 = $56 << 16 >> 16;
  $84 = (($83) + ($82))|0;
  $85 = ($81|0)<(-120);
  $86 = $71;
  $87 = $74;
  $88 = $77;
  if ($85) {
   $97 = -120;
  } else {
   $89 = $27 << 6;
   $90 = $89 | 52;
   $91 = ($81|0)>($90|0);
   $$$i = $91 ? $90 : $81;
   $97 = $$$i;
  }
  $92 = ($84|0)<(-120);
  if ($92) {
   $99 = -120;
  } else {
   $93 = $31 << 6;
   $94 = $93 | 52;
   $95 = ($84|0)>($94|0);
   $$80$i = $95 ? $94 : $84;
   $99 = $$80$i;
  }
  $96 = $97 >> 2;
  $98 = $99 >> 2;
  $100 = Math_imul($98, $65)|0;
  $101 = (($100) + ($96))|0;
  $102 = $97 >> 3;
  $103 = $99 >> 3;
  $104 = Math_imul($68, $103)|0;
  $105 = (($104) + ($102))|0;
  $106 = (($86) + ($101)|0);
  $107 = (($87) + ($105)|0);
  $108 = (($88) + ($105)|0);
  $109 = ((($3)) + 316988|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = $97&65535;
  $112 = $99&65535;
  FUNCTION_TABLE_viiiiiiii[$110 & 3]($106,$65,$0,$23,$111,$112,16,16);
  $113 = ((($3)) + 316984|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$114 & 3]($107,$68,$1,$25,$111,$112,8,8);
  $115 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$115 & 3]($108,$68,$2,$25,$111,$112,8,8);
  $116 = ((($6)) + 4104|0);
  $117 = HEAP8[$116>>0]|0;
  $118 = ($117<<24>>24)==(0);
  if ($118) {
   STACKTOP = sp;return;
  }
  $119 = HEAP32[$57>>2]|0;
  $120 = (($119) + ($8<<4)|0);
  $121 = HEAP8[$120>>0]|0;
  $122 = $121 << 24 >> 24;
  __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$122,16,16);
  STACKTOP = sp;return;
  break;
 }
 case 16:  {
  $123 = ((($6)) + 3916|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = (($124) + ($8<<6)|0);
  $126 = HEAP16[$125>>1]|0;
  $127 = (((($124) + ($8<<6)|0)) + 2|0);
  $128 = HEAP16[$127>>1]|0;
  $129 = ((($6)) + 3932|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = (($130) + ($8<<4)|0);
  $132 = HEAP8[$131>>0]|0;
  $133 = $132 << 24 >> 24;
  $134 = (((($3)) + 5468|0) + ($133<<2)|0);
  $135 = HEAP32[$134>>2]|0;
  $136 = ((($135)) + 32|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = ((($4)) + 24|0);
  HEAP32[$138>>2] = $137;
  $139 = ((($135)) + 36|0);
  $140 = HEAP32[$139>>2]|0;
  $141 = ((($4)) + 28|0);
  HEAP32[$141>>2] = $140;
  $142 = ((($135)) + 16|0);
  $143 = HEAP32[$142>>2]|0;
  $144 = ((($4)) + 12|0);
  HEAP32[$144>>2] = $143;
  $145 = ((($135)) + 20|0);
  $146 = HEAP32[$145>>2]|0;
  $147 = ((($4)) + 16|0);
  HEAP32[$147>>2] = $146;
  $148 = ((($135)) + 24|0);
  $149 = HEAP32[$148>>2]|0;
  $150 = ((($4)) + 20|0);
  HEAP32[$150>>2] = $149;
  $151 = $15 << 6;
  $152 = $126 << 16 >> 16;
  $153 = (($152) + ($151))|0;
  $154 = $18 << 6;
  $155 = $128 << 16 >> 16;
  $156 = (($155) + ($154))|0;
  $157 = ($153|0)<(-120);
  $158 = $143;
  $159 = $146;
  $160 = $149;
  if ($157) {
   $169 = -120;
  } else {
   $161 = $27 << 6;
   $162 = $161 | 52;
   $163 = ($153|0)>($162|0);
   $$$i281 = $163 ? $162 : $153;
   $169 = $$$i281;
  }
  $164 = ($156|0)<(-120);
  if ($164) {
   $171 = -120;
  } else {
   $165 = $31 << 6;
   $166 = $165 | 52;
   $167 = ($156|0)>($166|0);
   $$80$i282 = $167 ? $166 : $156;
   $171 = $$80$i282;
  }
  $168 = $169 >> 2;
  $170 = $171 >> 2;
  $172 = Math_imul($170, $137)|0;
  $173 = (($172) + ($168))|0;
  $174 = $169 >> 3;
  $175 = $171 >> 3;
  $176 = Math_imul($140, $175)|0;
  $177 = (($176) + ($174))|0;
  $178 = (($158) + ($173)|0);
  $179 = (($159) + ($177)|0);
  $180 = (($160) + ($177)|0);
  $181 = ((($3)) + 316988|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = $169&65535;
  $184 = $171&65535;
  FUNCTION_TABLE_viiiiiiii[$182 & 3]($178,$137,$0,$23,$183,$184,16,8);
  $185 = ((($3)) + 316984|0);
  $186 = HEAP32[$185>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$186 & 3]($179,$140,$1,$25,$183,$184,8,4);
  $187 = HEAP32[$185>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$187 & 3]($180,$140,$2,$25,$183,$184,8,4);
  $188 = ((($6)) + 4104|0);
  $189 = HEAP8[$188>>0]|0;
  $190 = ($189<<24>>24)==(0);
  if (!($190)) {
   $191 = HEAP32[$129>>2]|0;
   $192 = (($191) + ($8<<4)|0);
   $193 = HEAP8[$192>>0]|0;
   $194 = $193 << 24 >> 24;
   __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$194,16,8);
  }
  $195 = HEAP32[$123>>2]|0;
  $196 = (((($195) + ($8<<6)|0)) + 32|0);
  $197 = HEAP16[$196>>1]|0;
  $198 = (((($195) + ($8<<6)|0)) + 34|0);
  $199 = HEAP16[$198>>1]|0;
  $200 = HEAP32[$129>>2]|0;
  $201 = (((($200) + ($8<<4)|0)) + 8|0);
  $202 = HEAP8[$201>>0]|0;
  $203 = $202 << 24 >> 24;
  $204 = (((($3)) + 5468|0) + ($203<<2)|0);
  $205 = HEAP32[$204>>2]|0;
  $206 = ((($205)) + 32|0);
  $207 = HEAP32[$206>>2]|0;
  HEAP32[$138>>2] = $207;
  $208 = ((($205)) + 36|0);
  $209 = HEAP32[$208>>2]|0;
  HEAP32[$141>>2] = $209;
  $210 = ((($205)) + 16|0);
  $211 = HEAP32[$210>>2]|0;
  HEAP32[$144>>2] = $211;
  $212 = ((($205)) + 20|0);
  $213 = HEAP32[$212>>2]|0;
  HEAP32[$147>>2] = $213;
  $214 = ((($205)) + 24|0);
  $215 = HEAP32[$214>>2]|0;
  HEAP32[$150>>2] = $215;
  $216 = $23 << 3;
  $217 = (($0) + ($216)|0);
  HEAP32[$4>>2] = $217;
  $218 = $25 << 2;
  $219 = (($1) + ($218)|0);
  HEAP32[$34>>2] = $219;
  $220 = (($2) + ($218)|0);
  HEAP32[$35>>2] = $220;
  $221 = $197 << 16 >> 16;
  $222 = (($221) + ($151))|0;
  $223 = $154 | 32;
  $224 = $199 << 16 >> 16;
  $225 = (($224) + ($223))|0;
  $226 = ($222|0)<(-120);
  $227 = $211;
  $228 = $213;
  $229 = $215;
  if ($226) {
   $240 = -120;
  } else {
   $230 = HEAP32[$29>>2]|0;
   $231 = $230 << 2;
   $232 = (($231) + 52)|0;
   $233 = ($222|0)>($232|0);
   $$$i284 = $233 ? $232 : $222;
   $240 = $$$i284;
  }
  $234 = ($225|0)<(-120);
  if ($234) {
   $242 = -120;
  } else {
   $235 = HEAP32[$33>>2]|0;
   $236 = $235 << 2;
   $237 = (($236) + 52)|0;
   $238 = ($225|0)>($237|0);
   $$80$i285 = $238 ? $237 : $225;
   $242 = $$80$i285;
  }
  $239 = $240 >> 2;
  $241 = $242 >> 2;
  $243 = Math_imul($241, $207)|0;
  $244 = (($243) + ($239))|0;
  $245 = $240 >> 3;
  $246 = $242 >> 3;
  $247 = Math_imul($209, $246)|0;
  $248 = (($247) + ($245))|0;
  $249 = (($227) + ($244)|0);
  $250 = (($228) + ($248)|0);
  $251 = (($229) + ($248)|0);
  $252 = HEAP32[$181>>2]|0;
  $253 = HEAP32[$36>>2]|0;
  $254 = $240&65535;
  $255 = $242&65535;
  FUNCTION_TABLE_viiiiiiii[$252 & 3]($249,$207,$217,$253,$254,$255,16,8);
  $256 = HEAP32[$185>>2]|0;
  $257 = HEAP32[$37>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$256 & 3]($250,$209,$219,$257,$254,$255,8,4);
  $258 = HEAP32[$185>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$258 & 3]($251,$209,$220,$257,$254,$255,8,4);
  $259 = HEAP8[$188>>0]|0;
  $260 = ($259<<24>>24)==(0);
  if ($260) {
   STACKTOP = sp;return;
  }
  $261 = HEAP32[$129>>2]|0;
  $262 = (((($261) + ($8<<4)|0)) + 8|0);
  $263 = HEAP8[$262>>0]|0;
  $264 = $263 << 24 >> 24;
  __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$264,16,8);
  STACKTOP = sp;return;
  break;
 }
 case 32:  {
  $265 = ((($6)) + 3916|0);
  $266 = HEAP32[$265>>2]|0;
  $267 = (($266) + ($8<<6)|0);
  $268 = HEAP16[$267>>1]|0;
  $269 = (((($266) + ($8<<6)|0)) + 2|0);
  $270 = HEAP16[$269>>1]|0;
  $271 = ((($6)) + 3932|0);
  $272 = HEAP32[$271>>2]|0;
  $273 = (($272) + ($8<<4)|0);
  $274 = HEAP8[$273>>0]|0;
  $275 = $274 << 24 >> 24;
  $276 = (((($3)) + 5468|0) + ($275<<2)|0);
  $277 = HEAP32[$276>>2]|0;
  $278 = ((($277)) + 32|0);
  $279 = HEAP32[$278>>2]|0;
  $280 = ((($4)) + 24|0);
  HEAP32[$280>>2] = $279;
  $281 = ((($277)) + 36|0);
  $282 = HEAP32[$281>>2]|0;
  $283 = ((($4)) + 28|0);
  HEAP32[$283>>2] = $282;
  $284 = ((($277)) + 16|0);
  $285 = HEAP32[$284>>2]|0;
  $286 = ((($4)) + 12|0);
  HEAP32[$286>>2] = $285;
  $287 = ((($277)) + 20|0);
  $288 = HEAP32[$287>>2]|0;
  $289 = ((($4)) + 16|0);
  HEAP32[$289>>2] = $288;
  $290 = ((($277)) + 24|0);
  $291 = HEAP32[$290>>2]|0;
  $292 = ((($4)) + 20|0);
  HEAP32[$292>>2] = $291;
  $293 = $15 << 6;
  $294 = $268 << 16 >> 16;
  $295 = (($294) + ($293))|0;
  $296 = $18 << 6;
  $297 = $270 << 16 >> 16;
  $298 = (($297) + ($296))|0;
  $299 = ($295|0)<(-120);
  $300 = $285;
  $301 = $288;
  $302 = $291;
  if ($299) {
   $311 = -120;
  } else {
   $303 = $27 << 6;
   $304 = $303 | 52;
   $305 = ($295|0)>($304|0);
   $$$i287 = $305 ? $304 : $295;
   $311 = $$$i287;
  }
  $306 = ($298|0)<(-120);
  if ($306) {
   $313 = -120;
  } else {
   $307 = $31 << 6;
   $308 = $307 | 52;
   $309 = ($298|0)>($308|0);
   $$80$i288 = $309 ? $308 : $298;
   $313 = $$80$i288;
  }
  $310 = $311 >> 2;
  $312 = $313 >> 2;
  $314 = Math_imul($312, $279)|0;
  $315 = (($314) + ($310))|0;
  $316 = $311 >> 3;
  $317 = $313 >> 3;
  $318 = Math_imul($282, $317)|0;
  $319 = (($318) + ($316))|0;
  $320 = (($300) + ($315)|0);
  $321 = (($301) + ($319)|0);
  $322 = (($302) + ($319)|0);
  $323 = ((($3)) + 316988|0);
  $324 = HEAP32[$323>>2]|0;
  $325 = $311&65535;
  $326 = $313&65535;
  FUNCTION_TABLE_viiiiiiii[$324 & 3]($320,$279,$0,$23,$325,$326,8,16);
  $327 = ((($3)) + 316984|0);
  $328 = HEAP32[$327>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$328 & 3]($321,$282,$1,$25,$325,$326,4,8);
  $329 = HEAP32[$327>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$329 & 3]($322,$282,$2,$25,$325,$326,4,8);
  $330 = ((($6)) + 4104|0);
  $331 = HEAP8[$330>>0]|0;
  $332 = ($331<<24>>24)==(0);
  if (!($332)) {
   $333 = HEAP32[$271>>2]|0;
   $334 = (($333) + ($8<<4)|0);
   $335 = HEAP8[$334>>0]|0;
   $336 = $335 << 24 >> 24;
   __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$336,8,16);
  }
  $337 = HEAP32[$265>>2]|0;
  $338 = (((($337) + ($8<<6)|0)) + 8|0);
  $339 = HEAP16[$338>>1]|0;
  $340 = (((($337) + ($8<<6)|0)) + 10|0);
  $341 = HEAP16[$340>>1]|0;
  $342 = HEAP32[$271>>2]|0;
  $343 = (((($342) + ($8<<4)|0)) + 2|0);
  $344 = HEAP8[$343>>0]|0;
  $345 = $344 << 24 >> 24;
  $346 = (((($3)) + 5468|0) + ($345<<2)|0);
  $347 = HEAP32[$346>>2]|0;
  $348 = ((($347)) + 32|0);
  $349 = HEAP32[$348>>2]|0;
  HEAP32[$280>>2] = $349;
  $350 = ((($347)) + 36|0);
  $351 = HEAP32[$350>>2]|0;
  HEAP32[$283>>2] = $351;
  $352 = ((($347)) + 16|0);
  $353 = HEAP32[$352>>2]|0;
  HEAP32[$286>>2] = $353;
  $354 = ((($347)) + 20|0);
  $355 = HEAP32[$354>>2]|0;
  HEAP32[$289>>2] = $355;
  $356 = ((($347)) + 24|0);
  $357 = HEAP32[$356>>2]|0;
  HEAP32[$292>>2] = $357;
  $358 = ((($0)) + 8|0);
  HEAP32[$4>>2] = $358;
  $359 = ((($1)) + 4|0);
  HEAP32[$34>>2] = $359;
  $360 = ((($2)) + 4|0);
  HEAP32[$35>>2] = $360;
  $361 = $293 | 32;
  $362 = $339 << 16 >> 16;
  $363 = (($362) + ($361))|0;
  $364 = $341 << 16 >> 16;
  $365 = (($364) + ($296))|0;
  $366 = ($363|0)<(-120);
  $367 = $353;
  $368 = $355;
  $369 = $357;
  if ($366) {
   $380 = -120;
  } else {
   $370 = HEAP32[$29>>2]|0;
   $371 = $370 << 2;
   $372 = (($371) + 52)|0;
   $373 = ($363|0)>($372|0);
   $$$i290 = $373 ? $372 : $363;
   $380 = $$$i290;
  }
  $374 = ($365|0)<(-120);
  if ($374) {
   $382 = -120;
  } else {
   $375 = HEAP32[$33>>2]|0;
   $376 = $375 << 2;
   $377 = (($376) + 52)|0;
   $378 = ($365|0)>($377|0);
   $$80$i291 = $378 ? $377 : $365;
   $382 = $$80$i291;
  }
  $379 = $380 >> 2;
  $381 = $382 >> 2;
  $383 = Math_imul($381, $349)|0;
  $384 = (($383) + ($379))|0;
  $385 = $380 >> 3;
  $386 = $382 >> 3;
  $387 = Math_imul($351, $386)|0;
  $388 = (($387) + ($385))|0;
  $389 = (($367) + ($384)|0);
  $390 = (($368) + ($388)|0);
  $391 = (($369) + ($388)|0);
  $392 = HEAP32[$323>>2]|0;
  $393 = HEAP32[$36>>2]|0;
  $394 = $380&65535;
  $395 = $382&65535;
  FUNCTION_TABLE_viiiiiiii[$392 & 3]($389,$349,$358,$393,$394,$395,8,16);
  $396 = HEAP32[$327>>2]|0;
  $397 = HEAP32[$37>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$396 & 3]($390,$351,$359,$397,$394,$395,4,8);
  $398 = HEAP32[$327>>2]|0;
  FUNCTION_TABLE_viiiiiiii[$398 & 3]($391,$351,$360,$397,$394,$395,4,8);
  $399 = HEAP8[$330>>0]|0;
  $400 = ($399<<24>>24)==(0);
  if ($400) {
   STACKTOP = sp;return;
  }
  $401 = HEAP32[$271>>2]|0;
  $402 = (((($401) + ($8<<4)|0)) + 2|0);
  $403 = HEAP8[$402>>0]|0;
  $404 = $403 << 24 >> 24;
  __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$404,8,16);
  STACKTOP = sp;return;
  break;
 }
 case 128: case 64:  {
  $38 = ((($6)) + 4008|0);
  $39 = ((($6)) + 3932|0);
  $40 = ((($4)) + 24|0);
  $41 = ((($4)) + 28|0);
  $42 = ((($4)) + 12|0);
  $43 = ((($4)) + 16|0);
  $44 = ((($4)) + 20|0);
  $45 = ((($6)) + 4104|0);
  $46 = ((($6)) + 3916|0);
  $47 = ((($3)) + 316988|0);
  $48 = ((($3)) + 316984|0);
  $49 = $23 << 2;
  $50 = $25 << 1;
  $$0336 = 0;
  while(1) {
   $405 = HEAP32[$38>>2]|0;
   $406 = ((($405) + ($8<<2)|0) + ($$0336)|0);
   $407 = HEAP8[$406>>0]|0;
   $408 = $407 << 24 >> 24;
   $409 = $$0336 & 1;
   $410 = $409 << 3;
   $411 = $$0336 >>> 1;
   $412 = $411 << 3;
   $413 = $410 | $16;
   $414 = (($412) + ($19))|0;
   $415 = $409 << 1;
   $416 = $412 | $415;
   $417 = HEAP32[$39>>2]|0;
   $418 = ((($417) + ($8<<4)|0) + ($416)|0);
   $419 = HEAP8[$418>>0]|0;
   $420 = $419 << 24 >> 24;
   $421 = (((($3)) + 5468|0) + ($420<<2)|0);
   $422 = HEAP32[$421>>2]|0;
   $423 = ((($422)) + 32|0);
   $424 = HEAP32[$423>>2]|0;
   HEAP32[$40>>2] = $424;
   $425 = ((($422)) + 36|0);
   $426 = HEAP32[$425>>2]|0;
   HEAP32[$41>>2] = $426;
   $427 = ((($422)) + 16|0);
   $428 = HEAP32[$427>>2]|0;
   HEAP32[$42>>2] = $428;
   $429 = ((($422)) + 20|0);
   $430 = HEAP32[$429>>2]|0;
   HEAP32[$43>>2] = $430;
   $431 = ((($422)) + 24|0);
   $432 = HEAP32[$431>>2]|0;
   HEAP32[$44>>2] = $432;
   $433 = HEAP8[$45>>0]|0;
   $434 = ($433<<24>>24)==(0);
   $435 = $428;
   $436 = $430;
   $437 = $432;
   if ($434) {
    $493 = 0;
   } else {
    $438 = HEAP8[$418>>0]|0;
    $439 = $438 << 24 >> 24;
    $493 = $439;
   }
   $440 = (($0) + ($410)|0);
   $441 = Math_imul($412, $23)|0;
   $442 = (($440) + ($441)|0);
   $443 = $409 << 2;
   $444 = (($1) + ($443)|0);
   $445 = $412 >> 1;
   $446 = Math_imul($445, $25)|0;
   $447 = (($444) + ($446)|0);
   $448 = (($2) + ($443)|0);
   $449 = (($448) + ($446)|0);
   HEAP32[$4>>2] = $442;
   HEAP32[$34>>2] = $447;
   HEAP32[$35>>2] = $449;
   switch ($408|0) {
   case 1:  {
    $450 = HEAP32[$46>>2]|0;
    $451 = ((($450) + ($8<<6)|0) + ($416<<2)|0);
    $452 = HEAP16[$451>>1]|0;
    $453 = ((((($450) + ($8<<6)|0) + ($416<<2)|0)) + 2|0);
    $454 = HEAP16[$453>>1]|0;
    $455 = $413 << 2;
    $456 = $452 << 16 >> 16;
    $457 = (($456) + ($455))|0;
    $458 = $414 << 2;
    $459 = $454 << 16 >> 16;
    $460 = (($459) + ($458))|0;
    $461 = ($457|0)<(-120);
    if ($461) {
     $472 = -120;
    } else {
     $462 = HEAP32[$29>>2]|0;
     $463 = $462 << 2;
     $464 = (($463) + 52)|0;
     $465 = ($457|0)>($464|0);
     $$$i293 = $465 ? $464 : $457;
     $472 = $$$i293;
    }
    $466 = ($460|0)<(-120);
    if ($466) {
     $474 = -120;
    } else {
     $467 = HEAP32[$33>>2]|0;
     $468 = $467 << 2;
     $469 = (($468) + 52)|0;
     $470 = ($460|0)>($469|0);
     $$80$i294 = $470 ? $469 : $460;
     $474 = $$80$i294;
    }
    $471 = $472 >> 2;
    $473 = $474 >> 2;
    $475 = Math_imul($473, $424)|0;
    $476 = (($475) + ($471))|0;
    $477 = $472 >> 3;
    $478 = $474 >> 3;
    $479 = Math_imul($426, $478)|0;
    $480 = (($479) + ($477))|0;
    $481 = (($435) + ($476)|0);
    $482 = (($436) + ($480)|0);
    $483 = (($437) + ($480)|0);
    $484 = HEAP32[$47>>2]|0;
    $485 = HEAP32[$36>>2]|0;
    $486 = $472&65535;
    $487 = $474&65535;
    FUNCTION_TABLE_viiiiiiii[$484 & 3]($481,$424,$442,$485,$486,$487,8,8);
    $488 = HEAP32[$48>>2]|0;
    $489 = HEAP32[$37>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$488 & 3]($482,$426,$447,$489,$486,$487,4,4);
    $490 = HEAP32[$48>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$490 & 3]($483,$426,$449,$489,$486,$487,4,4);
    $491 = HEAP8[$45>>0]|0;
    $492 = ($491<<24>>24)==(0);
    if (!($492)) {
     __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$493,8,8);
    }
    break;
   }
   case 2:  {
    $494 = HEAP32[$46>>2]|0;
    $495 = ((($494) + ($8<<6)|0) + ($416<<2)|0);
    $496 = HEAP16[$495>>1]|0;
    $497 = ((((($494) + ($8<<6)|0) + ($416<<2)|0)) + 2|0);
    $498 = HEAP16[$497>>1]|0;
    $499 = $413 << 2;
    $500 = $496 << 16 >> 16;
    $501 = (($500) + ($499))|0;
    $502 = $414 << 2;
    $503 = $498 << 16 >> 16;
    $504 = (($503) + ($502))|0;
    $505 = ($501|0)<(-120);
    if ($505) {
     $516 = -120;
    } else {
     $506 = HEAP32[$29>>2]|0;
     $507 = $506 << 2;
     $508 = (($507) + 52)|0;
     $509 = ($501|0)>($508|0);
     $$$i296 = $509 ? $508 : $501;
     $516 = $$$i296;
    }
    $510 = ($504|0)<(-120);
    if ($510) {
     $518 = -120;
    } else {
     $511 = HEAP32[$33>>2]|0;
     $512 = $511 << 2;
     $513 = (($512) + 52)|0;
     $514 = ($504|0)>($513|0);
     $$80$i297 = $514 ? $513 : $504;
     $518 = $$80$i297;
    }
    $515 = $516 >> 2;
    $517 = $518 >> 2;
    $519 = Math_imul($517, $424)|0;
    $520 = (($519) + ($515))|0;
    $521 = $516 >> 3;
    $522 = $518 >> 3;
    $523 = Math_imul($426, $522)|0;
    $524 = (($523) + ($521))|0;
    $525 = (($435) + ($520)|0);
    $526 = (($436) + ($524)|0);
    $527 = (($437) + ($524)|0);
    $528 = HEAP32[$47>>2]|0;
    $529 = HEAP32[$36>>2]|0;
    $530 = $516&65535;
    $531 = $518&65535;
    FUNCTION_TABLE_viiiiiiii[$528 & 3]($525,$424,$442,$529,$530,$531,8,4);
    $532 = HEAP32[$48>>2]|0;
    $533 = HEAP32[$37>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$532 & 3]($526,$426,$447,$533,$530,$531,4,2);
    $534 = HEAP32[$48>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$534 & 3]($527,$426,$449,$533,$530,$531,4,2);
    $535 = HEAP8[$45>>0]|0;
    $536 = ($535<<24>>24)==(0);
    if ($536) {
     $544 = $442;$546 = $447;$548 = $449;
    } else {
     __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$493,8,4);
     $$pre340 = HEAP32[$4>>2]|0;
     $$pre341 = HEAP32[$34>>2]|0;
     $$pre342 = HEAP32[$35>>2]|0;
     $544 = $$pre340;$546 = $$pre341;$548 = $$pre342;
    }
    $537 = HEAP32[$46>>2]|0;
    $538 = $416 | 4;
    $539 = ((($537) + ($8<<6)|0) + ($538<<2)|0);
    $540 = HEAP16[$539>>1]|0;
    $541 = ((((($537) + ($8<<6)|0) + ($538<<2)|0)) + 2|0);
    $542 = HEAP16[$541>>1]|0;
    $543 = (($544) + ($49)|0);
    HEAP32[$4>>2] = $543;
    $545 = (($546) + ($50)|0);
    HEAP32[$34>>2] = $545;
    $547 = (($548) + ($50)|0);
    HEAP32[$35>>2] = $547;
    $549 = $540 << 16 >> 16;
    $550 = (($549) + ($499))|0;
    $551 = $502 | 16;
    $552 = $542 << 16 >> 16;
    $553 = (($552) + ($551))|0;
    $554 = ($550|0)<(-120);
    if ($554) {
     $565 = -120;
    } else {
     $555 = HEAP32[$29>>2]|0;
     $556 = $555 << 2;
     $557 = (($556) + 52)|0;
     $558 = ($550|0)>($557|0);
     $$$i299 = $558 ? $557 : $550;
     $565 = $$$i299;
    }
    $559 = ($553|0)<(-120);
    if ($559) {
     $567 = -120;
    } else {
     $560 = HEAP32[$33>>2]|0;
     $561 = $560 << 2;
     $562 = (($561) + 52)|0;
     $563 = ($553|0)>($562|0);
     $$80$i300 = $563 ? $562 : $553;
     $567 = $$80$i300;
    }
    $564 = $565 >> 2;
    $566 = $567 >> 2;
    $568 = HEAP32[$40>>2]|0;
    $569 = Math_imul($566, $568)|0;
    $570 = (($569) + ($564))|0;
    $571 = $565 >> 3;
    $572 = $567 >> 3;
    $573 = HEAP32[$41>>2]|0;
    $574 = Math_imul($573, $572)|0;
    $575 = (($574) + ($571))|0;
    $576 = HEAP32[$42>>2]|0;
    $577 = (($576) + ($570)|0);
    $578 = HEAP32[$43>>2]|0;
    $579 = (($578) + ($575)|0);
    $580 = HEAP32[$44>>2]|0;
    $581 = (($580) + ($575)|0);
    $582 = HEAP32[$47>>2]|0;
    $583 = HEAP32[$36>>2]|0;
    $584 = $565&65535;
    $585 = $567&65535;
    FUNCTION_TABLE_viiiiiiii[$582 & 3]($577,$568,$543,$583,$584,$585,8,4);
    $586 = HEAP32[$48>>2]|0;
    $587 = HEAP32[$37>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$586 & 3]($579,$573,$545,$587,$584,$585,4,2);
    $588 = HEAP32[$48>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$588 & 3]($581,$573,$547,$587,$584,$585,4,2);
    $589 = HEAP8[$45>>0]|0;
    $590 = ($589<<24>>24)==(0);
    if (!($590)) {
     __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$493,8,4);
    }
    break;
   }
   case 4:  {
    $591 = HEAP32[$46>>2]|0;
    $592 = ((($591) + ($8<<6)|0) + ($416<<2)|0);
    $593 = HEAP16[$592>>1]|0;
    $594 = ((((($591) + ($8<<6)|0) + ($416<<2)|0)) + 2|0);
    $595 = HEAP16[$594>>1]|0;
    $596 = $413 << 2;
    $597 = $593 << 16 >> 16;
    $598 = (($597) + ($596))|0;
    $599 = $414 << 2;
    $600 = $595 << 16 >> 16;
    $601 = (($600) + ($599))|0;
    $602 = ($598|0)<(-120);
    if ($602) {
     $613 = -120;
    } else {
     $603 = HEAP32[$29>>2]|0;
     $604 = $603 << 2;
     $605 = (($604) + 52)|0;
     $606 = ($598|0)>($605|0);
     $$$i302 = $606 ? $605 : $598;
     $613 = $$$i302;
    }
    $607 = ($601|0)<(-120);
    if ($607) {
     $615 = -120;
    } else {
     $608 = HEAP32[$33>>2]|0;
     $609 = $608 << 2;
     $610 = (($609) + 52)|0;
     $611 = ($601|0)>($610|0);
     $$80$i303 = $611 ? $610 : $601;
     $615 = $$80$i303;
    }
    $612 = $613 >> 2;
    $614 = $615 >> 2;
    $616 = Math_imul($614, $424)|0;
    $617 = (($616) + ($612))|0;
    $618 = $613 >> 3;
    $619 = $615 >> 3;
    $620 = Math_imul($426, $619)|0;
    $621 = (($620) + ($618))|0;
    $622 = (($435) + ($617)|0);
    $623 = (($436) + ($621)|0);
    $624 = (($437) + ($621)|0);
    $625 = HEAP32[$47>>2]|0;
    $626 = HEAP32[$36>>2]|0;
    $627 = $613&65535;
    $628 = $615&65535;
    FUNCTION_TABLE_viiiiiiii[$625 & 3]($622,$424,$442,$626,$627,$628,4,8);
    $629 = HEAP32[$48>>2]|0;
    $630 = HEAP32[$37>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$629 & 3]($623,$426,$447,$630,$627,$628,2,4);
    $631 = HEAP32[$48>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$631 & 3]($624,$426,$449,$630,$627,$628,2,4);
    $632 = HEAP8[$45>>0]|0;
    $633 = ($632<<24>>24)==(0);
    if ($633) {
     $641 = $442;$643 = $447;$645 = $449;
    } else {
     __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$493,4,8);
     $$pre = HEAP32[$4>>2]|0;
     $$pre338 = HEAP32[$34>>2]|0;
     $$pre339 = HEAP32[$35>>2]|0;
     $641 = $$pre;$643 = $$pre338;$645 = $$pre339;
    }
    $634 = HEAP32[$46>>2]|0;
    $635 = $416 | 1;
    $636 = ((($634) + ($8<<6)|0) + ($635<<2)|0);
    $637 = HEAP16[$636>>1]|0;
    $638 = ((((($634) + ($8<<6)|0) + ($635<<2)|0)) + 2|0);
    $639 = HEAP16[$638>>1]|0;
    $640 = ((($641)) + 4|0);
    HEAP32[$4>>2] = $640;
    $642 = ((($643)) + 2|0);
    HEAP32[$34>>2] = $642;
    $644 = ((($645)) + 2|0);
    HEAP32[$35>>2] = $644;
    $646 = $596 | 16;
    $647 = $637 << 16 >> 16;
    $648 = (($647) + ($646))|0;
    $649 = $639 << 16 >> 16;
    $650 = (($649) + ($599))|0;
    $651 = ($648|0)<(-120);
    if ($651) {
     $662 = -120;
    } else {
     $652 = HEAP32[$29>>2]|0;
     $653 = $652 << 2;
     $654 = (($653) + 52)|0;
     $655 = ($648|0)>($654|0);
     $$$i305 = $655 ? $654 : $648;
     $662 = $$$i305;
    }
    $656 = ($650|0)<(-120);
    if ($656) {
     $664 = -120;
    } else {
     $657 = HEAP32[$33>>2]|0;
     $658 = $657 << 2;
     $659 = (($658) + 52)|0;
     $660 = ($650|0)>($659|0);
     $$80$i306 = $660 ? $659 : $650;
     $664 = $$80$i306;
    }
    $661 = $662 >> 2;
    $663 = $664 >> 2;
    $665 = HEAP32[$40>>2]|0;
    $666 = Math_imul($663, $665)|0;
    $667 = (($666) + ($661))|0;
    $668 = $662 >> 3;
    $669 = $664 >> 3;
    $670 = HEAP32[$41>>2]|0;
    $671 = Math_imul($670, $669)|0;
    $672 = (($671) + ($668))|0;
    $673 = HEAP32[$42>>2]|0;
    $674 = (($673) + ($667)|0);
    $675 = HEAP32[$43>>2]|0;
    $676 = (($675) + ($672)|0);
    $677 = HEAP32[$44>>2]|0;
    $678 = (($677) + ($672)|0);
    $679 = HEAP32[$47>>2]|0;
    $680 = HEAP32[$36>>2]|0;
    $681 = $662&65535;
    $682 = $664&65535;
    FUNCTION_TABLE_viiiiiiii[$679 & 3]($674,$665,$640,$680,$681,$682,4,8);
    $683 = HEAP32[$48>>2]|0;
    $684 = HEAP32[$37>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$683 & 3]($676,$670,$642,$684,$681,$682,2,4);
    $685 = HEAP32[$48>>2]|0;
    FUNCTION_TABLE_viiiiiiii[$685 & 3]($678,$670,$644,$684,$681,$682,2,4);
    $686 = HEAP8[$45>>0]|0;
    $687 = ($686<<24>>24)==(0);
    if (!($687)) {
     __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$493,4,8);
    }
    break;
   }
   case 8:  {
    $$0280335 = 0;
    while(1) {
     $688 = $$0280335 >>> 1;
     $689 = $688 << 2;
     $690 = $$0280335 & 1;
     $691 = $689 | $690;
     $692 = $690 << 2;
     $693 = $690 << 1;
     $694 = $689 >> 1;
     $695 = Math_imul($694, $25)|0;
     $696 = (($695) + ($693))|0;
     $697 = (($442) + ($692)|0);
     $698 = Math_imul($689, $23)|0;
     $699 = (($697) + ($698)|0);
     HEAP32[$4>>2] = $699;
     $700 = (($447) + ($696)|0);
     HEAP32[$34>>2] = $700;
     $701 = (($449) + ($696)|0);
     HEAP32[$35>>2] = $701;
     $702 = HEAP32[$46>>2]|0;
     $703 = (($691) + ($416))|0;
     $704 = ((($702) + ($8<<6)|0) + ($703<<2)|0);
     $705 = HEAP16[$704>>1]|0;
     $706 = ((((($702) + ($8<<6)|0) + ($703<<2)|0)) + 2|0);
     $707 = HEAP16[$706>>1]|0;
     $708 = $692 | $413;
     $709 = (($689) + ($414))|0;
     $710 = $708 << 2;
     $711 = $705 << 16 >> 16;
     $712 = (($711) + ($710))|0;
     $713 = $709 << 2;
     $714 = $707 << 16 >> 16;
     $715 = (($714) + ($713))|0;
     $716 = ($712|0)<(-120);
     if ($716) {
      $727 = -120;
     } else {
      $717 = HEAP32[$29>>2]|0;
      $718 = $717 << 2;
      $719 = (($718) + 52)|0;
      $720 = ($712|0)>($719|0);
      $$$i308 = $720 ? $719 : $712;
      $727 = $$$i308;
     }
     $721 = ($715|0)<(-120);
     if ($721) {
      $729 = -120;
     } else {
      $722 = HEAP32[$33>>2]|0;
      $723 = $722 << 2;
      $724 = (($723) + 52)|0;
      $725 = ($715|0)>($724|0);
      $$80$i309 = $725 ? $724 : $715;
      $729 = $$80$i309;
     }
     $726 = $727 >> 2;
     $728 = $729 >> 2;
     $730 = HEAP32[$40>>2]|0;
     $731 = Math_imul($728, $730)|0;
     $732 = (($731) + ($726))|0;
     $733 = $727 >> 3;
     $734 = $729 >> 3;
     $735 = HEAP32[$41>>2]|0;
     $736 = Math_imul($735, $734)|0;
     $737 = (($736) + ($733))|0;
     $738 = HEAP32[$42>>2]|0;
     $739 = (($738) + ($732)|0);
     $740 = HEAP32[$43>>2]|0;
     $741 = (($740) + ($737)|0);
     $742 = HEAP32[$44>>2]|0;
     $743 = (($742) + ($737)|0);
     $744 = HEAP32[$47>>2]|0;
     $745 = HEAP32[$36>>2]|0;
     $746 = $727&65535;
     $747 = $729&65535;
     FUNCTION_TABLE_viiiiiiii[$744 & 3]($739,$730,$699,$745,$746,$747,4,4);
     $748 = HEAP32[$48>>2]|0;
     $749 = HEAP32[$37>>2]|0;
     FUNCTION_TABLE_viiiiiiii[$748 & 3]($741,$735,$700,$749,$746,$747,2,2);
     $750 = HEAP32[$48>>2]|0;
     FUNCTION_TABLE_viiiiiiii[$750 & 3]($743,$735,$701,$749,$746,$747,2,2);
     $751 = HEAP8[$45>>0]|0;
     $752 = ($751<<24>>24)==(0);
     if (!($752)) {
      __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($6,$4,$493,4,4);
     }
     $753 = (($$0280335) + 1)|0;
     $exitcond = ($753|0)==(4);
     if ($exitcond) {
      break;
     } else {
      $$0280335 = $753;
     }
    }
    break;
   }
   default: {
   }
   }
   $754 = (($$0336) + 1)|0;
   $exitcond337 = ($754|0)==(4);
   if ($exitcond337) {
    break;
   } else {
    $$0336 = $754;
   }
  }
  STACKTOP = sp;return;
  break;
 }
 default: {
  STACKTOP = sp;return;
 }
 }
}
function __ZN7WelsDec29WelsMbInterSampleConstructionEPNS_21TagWelsDecoderContextEPNS_10TagDqLayerEPhS4_S4_ii($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$095 = 0, $$194 = 0, $$293 = 0, $$pre$phiZ2D = 0, $$pre100 = 0, $$pre101 = 0, $$pre99 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond97 = 0, $exitcond98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ((($1)) + 4040|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($1)) + 3988|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (((($10) + (($8*768)|0)|0)) + 512|0);
 $12 = HEAP16[$11>>1]|0;
 $13 = $12 << 16 >> 16;
 $14 = (((($10) + (($8*768)|0)|0)) + 544|0);
 $15 = HEAP16[$14>>1]|0;
 $16 = $15 << 16 >> 16;
 $17 = (((($10) + (($8*768)|0)|0)) + 576|0);
 $18 = HEAP16[$17>>1]|0;
 $19 = $18 << 16 >> 16;
 $20 = (((($10) + (($8*768)|0)|0)) + 608|0);
 $21 = HEAP16[$20>>1]|0;
 $22 = $21 << 16 >> 16;
 $23 = (($13) - ($16))|0;
 $24 = (($16) + ($13))|0;
 $25 = (($19) - ($22))|0;
 $26 = (($22) + ($19))|0;
 $27 = (($26) + ($24))|0;
 $28 = $27 >>> 1;
 $29 = $28&65535;
 HEAP16[$11>>1] = $29;
 $30 = (($25) + ($23))|0;
 $31 = $30 >>> 1;
 $32 = $31&65535;
 HEAP16[$14>>1] = $32;
 $33 = (($24) - ($26))|0;
 $34 = $33 >>> 1;
 $35 = $34&65535;
 HEAP16[$17>>1] = $35;
 $36 = (($23) - ($25))|0;
 $37 = $36 >>> 1;
 $38 = $37&65535;
 HEAP16[$20>>1] = $38;
 $39 = HEAP32[$9>>2]|0;
 $40 = (((($39) + (($8*768)|0)|0)) + 640|0);
 $41 = HEAP16[$40>>1]|0;
 $42 = $41 << 16 >> 16;
 $43 = (((($39) + (($8*768)|0)|0)) + 672|0);
 $44 = HEAP16[$43>>1]|0;
 $45 = $44 << 16 >> 16;
 $46 = (((($39) + (($8*768)|0)|0)) + 704|0);
 $47 = HEAP16[$46>>1]|0;
 $48 = $47 << 16 >> 16;
 $49 = (((($39) + (($8*768)|0)|0)) + 736|0);
 $50 = HEAP16[$49>>1]|0;
 $51 = $50 << 16 >> 16;
 $52 = (($42) - ($45))|0;
 $53 = (($45) + ($42))|0;
 $54 = (($48) - ($51))|0;
 $55 = (($51) + ($48))|0;
 $56 = (($55) + ($53))|0;
 $57 = $56 >>> 1;
 $58 = $57&65535;
 HEAP16[$40>>1] = $58;
 $59 = (($54) + ($52))|0;
 $60 = $59 >>> 1;
 $61 = $60&65535;
 HEAP16[$43>>1] = $61;
 $62 = (($53) - ($55))|0;
 $63 = $62 >>> 1;
 $64 = $63&65535;
 HEAP16[$46>>1] = $64;
 $65 = (($52) - ($54))|0;
 $66 = $65 >>> 1;
 $67 = $66&65535;
 HEAP16[$49>>1] = $67;
 $68 = ((($1)) + 3944|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = (($69) + ($8)|0);
 $71 = HEAP8[$70>>0]|0;
 $72 = ($71<<24>>24)==(0);
 $73 = ((($1)) + 3964|0);
 if ($72) {
  $75 = ((($0)) + 316968|0);
  $$194 = 0;
  while(1) {
   $108 = (11079 + ($$194)|0);
   $109 = HEAP8[$108>>0]|0;
   $110 = $109&255;
   $111 = HEAP32[$73>>2]|0;
   $112 = ((($111) + (($8*24)|0)|0) + ($110)|0);
   $113 = HEAP8[$112>>0]|0;
   $114 = ($113<<24>>24)==(0);
   if (!($114)) {
    $115 = $110 & 252;
    $116 = Math_imul($115, $5)|0;
    $117 = ($109 << 2)&255;
    $118 = $117 & 12;
    $119 = $118&255;
    $120 = (($116) + ($119))|0;
    $121 = HEAP32[$75>>2]|0;
    $122 = (($2) + ($120)|0);
    $123 = HEAP32[$9>>2]|0;
    $124 = $$194 << 4;
    $125 = ((($123) + (($8*768)|0)|0) + ($124<<1)|0);
    FUNCTION_TABLE_viii[$121 & 7]($122,$5,$125);
   }
   $126 = (($$194) + 1)|0;
   $exitcond97 = ($126|0)==(16);
   if ($exitcond97) {
    $$pre$phiZ2D = $75;
    break;
   } else {
    $$194 = $126;
   }
  }
 } else {
  $74 = ((($0)) + 317052|0);
  $$095 = 0;
  while(1) {
   $76 = $$095 << 2;
   $77 = (11079 + ($76)|0);
   $78 = HEAP8[$77>>0]|0;
   $79 = $78&255;
   $80 = HEAP32[$73>>2]|0;
   $81 = ((($80) + (($8*24)|0)|0) + ($79)|0);
   $82 = HEAP8[$81>>0]|0;
   $83 = ($82<<24>>24)==(0);
   if ($83) {
    $84 = (($79) + 1)|0;
    $85 = ((($80) + (($8*24)|0)|0) + ($84)|0);
    $86 = HEAP8[$85>>0]|0;
    $87 = ($86<<24>>24)==(0);
    if ($87) {
     $88 = (($79) + 4)|0;
     $89 = ((($80) + (($8*24)|0)|0) + ($88)|0);
     $90 = HEAP8[$89>>0]|0;
     $91 = ($90<<24>>24)==(0);
     if ($91) {
      $92 = (($79) + 5)|0;
      $93 = ((($80) + (($8*24)|0)|0) + ($92)|0);
      $94 = HEAP8[$93>>0]|0;
      $95 = ($94<<24>>24)==(0);
      if (!($95)) {
       label = 10;
      }
     } else {
      label = 10;
     }
    } else {
     label = 10;
    }
   } else {
    label = 10;
   }
   if ((label|0) == 10) {
    label = 0;
    $96 = $79 & 252;
    $97 = Math_imul($96, $5)|0;
    $98 = ($78 << 2)&255;
    $99 = $98 & 12;
    $100 = $99&255;
    $101 = (($97) + ($100))|0;
    $102 = HEAP32[$74>>2]|0;
    $103 = (($2) + ($101)|0);
    $104 = HEAP32[$9>>2]|0;
    $105 = $$095 << 6;
    $106 = ((($104) + (($8*768)|0)|0) + ($105<<1)|0);
    FUNCTION_TABLE_viii[$102 & 7]($103,$5,$106);
   }
   $107 = (($$095) + 1)|0;
   $exitcond98 = ($107|0)==(4);
   if ($exitcond98) {
    break;
   } else {
    $$095 = $107;
   }
  }
  $$pre101 = ((($0)) + 316968|0);
  $$pre$phiZ2D = $$pre101;
 }
 $$293 = 0;
 while(1) {
  $127 = (($$293) + 16)|0;
  $128 = (11079 + ($127)|0);
  $129 = HEAP8[$128>>0]|0;
  $130 = $129&255;
  $131 = HEAP32[$73>>2]|0;
  $132 = ((($131) + (($8*24)|0)|0) + ($130)|0);
  $133 = HEAP8[$132>>0]|0;
  $134 = ($133<<24>>24)==(0);
  $135 = $127 << 4;
  $136 = HEAP32[$9>>2]|0;
  if ($134) {
   $137 = ((($136) + (($8*768)|0)|0) + ($135<<1)|0);
   $138 = HEAP16[$137>>1]|0;
   $139 = ($138<<16>>16)==(0);
   if ($139) {
    $154 = $131;$159 = $136;
   } else {
    label = 17;
   }
  } else {
   label = 17;
  }
  if ((label|0) == 17) {
   label = 0;
   $140 = (($130) + -16)|0;
   $141 = $140 & -4;
   $142 = Math_imul($141, $6)|0;
   $143 = (($140|0) % 4)&-1;
   $144 = $143 << 2;
   $145 = (($142) + ($144))|0;
   $146 = HEAP32[$$pre$phiZ2D>>2]|0;
   $147 = (($3) + ($145)|0);
   $148 = ((($136) + (($8*768)|0)|0) + ($135<<1)|0);
   FUNCTION_TABLE_viii[$146 & 7]($147,$6,$148);
   $$pre99 = HEAP32[$73>>2]|0;
   $$pre100 = HEAP32[$9>>2]|0;
   $154 = $$pre99;$159 = $$pre100;
  }
  $149 = (($$293) + 20)|0;
  $150 = (11079 + ($149)|0);
  $151 = HEAP8[$150>>0]|0;
  $152 = $151&255;
  $153 = ((($154) + (($8*24)|0)|0) + ($152)|0);
  $155 = HEAP8[$153>>0]|0;
  $156 = ($155<<24>>24)==(0);
  $157 = $149 << 4;
  $158 = ((($159) + (($8*768)|0)|0) + ($157<<1)|0);
  if ($156) {
   $160 = HEAP16[$158>>1]|0;
   $161 = ($160<<16>>16)==(0);
   if (!($161)) {
    label = 20;
   }
  } else {
   label = 20;
  }
  if ((label|0) == 20) {
   label = 0;
   $162 = (($152) + -18)|0;
   $163 = $162 & -4;
   $164 = Math_imul($163, $6)|0;
   $165 = (($162|0) % 4)&-1;
   $166 = $165 << 2;
   $167 = (($164) + ($166))|0;
   $168 = HEAP32[$$pre$phiZ2D>>2]|0;
   $169 = (($4) + ($167)|0);
   FUNCTION_TABLE_viii[$168 & 7]($169,$6,$158);
  }
  $170 = (($$293) + 1)|0;
  $exitcond = ($170|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$293 = $170;
  }
 }
 return 0;
}
function __ZN7WelsDec16WeightPredictionEPNS_10TagDqLayerEPNS_14TagMCRefMemberEiii($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0100121$us = 0, $$0100121$us$1 = 0, $$0102128$us$us = 0, $$0102128$us133 = 0, $$0103131$us = 0, $$0120$us$us = 0, $$0120$us$us$1 = 0, $$0120$us123 = 0, $$0120$us123$1 = 0, $$pre = 0, $$pre148 = 0, $$sink$us$us = 0, $$sink$us134 = 0, $$sink3$us$us = 0, $$sink3$us$us$1 = 0, $$sink3$us124 = 0, $$sink3$us124$1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$demorgan = 0, $brmerge156$demorgan = 0, $exitcond = 0, $exitcond$1 = 0, $exitcond141 = 0;
 var $exitcond141$1 = 0, $exitcond142 = 0, $exitcond142$1 = 0, $exitcond144 = 0, $exitcond145 = 0, $exitcond146 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4084|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (((($6)) + 8|0) + ($2<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (((($6)) + 72|0) + ($2<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($1)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($4|0)>(0);
 if ($14) {
  $15 = ($3|0)>(0);
  $16 = ($7|0)>(0);
  $17 = (($7) + -1)|0;
  $18 = 1 << $17;
  if ($15) {
   $$0103131$us = 0;
   while(1) {
    $19 = Math_imul($$0103131$us, $13)|0;
    if ($16) {
     $$0102128$us$us = 0;
     while(1) {
      $33 = (($$0102128$us$us) + ($19))|0;
      $34 = HEAP32[$1>>2]|0;
      $35 = (($34) + ($33)|0);
      $36 = HEAP8[$35>>0]|0;
      $37 = $36&255;
      $38 = Math_imul($37, $9)|0;
      $39 = (($38) + ($18))|0;
      $40 = $39 >> $7;
      $41 = (($40) + ($11))|0;
      $42 = ($41|0)<(0);
      $43 = ($41|0)<(255);
      $44 = $43 ? $41 : 255;
      $45 = $44&255;
      $$sink$us$us = $42 ? 0 : $45;
      HEAP8[$35>>0] = $$sink$us$us;
      $46 = (($$0102128$us$us) + 1)|0;
      $exitcond145 = ($46|0)==($3|0);
      if ($exitcond145) {
       break;
      } else {
       $$0102128$us$us = $46;
      }
     }
    } else {
     $$0102128$us133 = 0;
     while(1) {
      $20 = (($$0102128$us133) + ($19))|0;
      $21 = HEAP32[$1>>2]|0;
      $22 = (($21) + ($20)|0);
      $23 = HEAP8[$22>>0]|0;
      $24 = $23&255;
      $25 = Math_imul($24, $9)|0;
      $26 = (($25) + ($11))|0;
      $27 = ($26|0)<(0);
      $28 = ($26|0)<(255);
      $29 = $28 ? $26 : 255;
      $30 = $29&255;
      $$sink$us134 = $27 ? 0 : $30;
      HEAP8[$22>>0] = $$sink$us134;
      $31 = (($$0102128$us133) + 1)|0;
      $exitcond144 = ($31|0)==($3|0);
      if ($exitcond144) {
       break;
      } else {
       $$0102128$us133 = $31;
      }
     }
    }
    $32 = (($$0103131$us) + 1)|0;
    $exitcond146 = ($32|0)==($4|0);
    if ($exitcond146) {
     break;
    } else {
     $$0103131$us = $32;
    }
   }
   $$pre = HEAP32[$5>>2]|0;
   $50 = $$pre;
  } else {
   $50 = $6;
  }
 } else {
  $50 = $6;
 }
 $47 = $3 >> 2;
 $48 = $4 >> 2;
 $49 = ((($50)) + 4|0);
 $51 = HEAP32[$49>>2]|0;
 $52 = ((($1)) + 36|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = ((($1)) + 4|0);
 $55 = ((($1)) + 8|0);
 $56 = ($48|0)>(0);
 $57 = ($47|0)>(0);
 $58 = ($51|0)>(0);
 $59 = (($51) + -1)|0;
 $60 = 1 << $59;
 $61 = (((($50)) + 136|0) + ($2<<3)|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = (((($50)) + 264|0) + ($2<<3)|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = HEAP32[$54>>2]|0;
 $brmerge156$demorgan = $56 & $57;
 if ($brmerge156$demorgan) {
  $$0100121$us = 0;
 } else {
  return;
 }
 while(1) {
  $66 = Math_imul($$0100121$us, $53)|0;
  if ($58) {
   $$0120$us$us = 0;
   while(1) {
    $79 = (($$0120$us$us) + ($66))|0;
    $80 = (($65) + ($79)|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = $81&255;
    $83 = Math_imul($82, $62)|0;
    $84 = (($83) + ($60))|0;
    $85 = $84 >> $51;
    $86 = (($85) + ($64))|0;
    $87 = ($86|0)<(0);
    $88 = ($86|0)<(255);
    $89 = $88 ? $86 : 255;
    $90 = $89&255;
    $$sink3$us$us = $87 ? 0 : $90;
    HEAP8[$80>>0] = $$sink3$us$us;
    $91 = (($$0120$us$us) + 1)|0;
    $exitcond141 = ($91|0)==($47|0);
    if ($exitcond141) {
     break;
    } else {
     $$0120$us$us = $91;
    }
   }
  } else {
   $$0120$us123 = 0;
   while(1) {
    $67 = (($$0120$us123) + ($66))|0;
    $68 = (($65) + ($67)|0);
    $69 = HEAP8[$68>>0]|0;
    $70 = $69&255;
    $71 = Math_imul($70, $62)|0;
    $72 = (($71) + ($64))|0;
    $73 = ($72|0)<(0);
    $74 = ($72|0)<(255);
    $75 = $74 ? $72 : 255;
    $76 = $75&255;
    $$sink3$us124 = $73 ? 0 : $76;
    HEAP8[$68>>0] = $$sink3$us124;
    $77 = (($$0120$us123) + 1)|0;
    $exitcond = ($77|0)==($47|0);
    if ($exitcond) {
     break;
    } else {
     $$0120$us123 = $77;
    }
   }
  }
  $78 = (($$0100121$us) + 1)|0;
  $exitcond142 = ($78|0)==($48|0);
  if ($exitcond142) {
   break;
  } else {
   $$0100121$us = $78;
  }
 }
 $$pre148 = HEAP32[$5>>2]|0;
 $92 = (((((($$pre148)) + 136|0) + ($2<<3)|0)) + 4|0);
 $93 = HEAP32[$92>>2]|0;
 $94 = (((((($$pre148)) + 264|0) + ($2<<3)|0)) + 4|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = HEAP32[$55>>2]|0;
 $brmerge$demorgan = $56 & $57;
 if ($brmerge$demorgan) {
  $$0100121$us$1 = 0;
 } else {
  return;
 }
 while(1) {
  $97 = Math_imul($$0100121$us$1, $53)|0;
  if ($58) {
   $$0120$us$us$1 = 0;
   while(1) {
    $109 = (($$0120$us$us$1) + ($97))|0;
    $110 = (($96) + ($109)|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111&255;
    $113 = Math_imul($112, $93)|0;
    $114 = (($113) + ($60))|0;
    $115 = $114 >> $51;
    $116 = (($115) + ($95))|0;
    $117 = ($116|0)<(0);
    $118 = ($116|0)<(255);
    $119 = $118 ? $116 : 255;
    $120 = $119&255;
    $$sink3$us$us$1 = $117 ? 0 : $120;
    HEAP8[$110>>0] = $$sink3$us$us$1;
    $121 = (($$0120$us$us$1) + 1)|0;
    $exitcond141$1 = ($121|0)==($47|0);
    if ($exitcond141$1) {
     break;
    } else {
     $$0120$us$us$1 = $121;
    }
   }
  } else {
   $$0120$us123$1 = 0;
   while(1) {
    $98 = (($$0120$us123$1) + ($97))|0;
    $99 = (($96) + ($98)|0);
    $100 = HEAP8[$99>>0]|0;
    $101 = $100&255;
    $102 = Math_imul($101, $93)|0;
    $103 = (($102) + ($95))|0;
    $104 = ($103|0)<(0);
    $105 = ($103|0)<(255);
    $106 = $105 ? $103 : 255;
    $107 = $106&255;
    $$sink3$us124$1 = $104 ? 0 : $107;
    HEAP8[$99>>0] = $$sink3$us124$1;
    $108 = (($$0120$us123$1) + 1)|0;
    $exitcond$1 = ($108|0)==($47|0);
    if ($exitcond$1) {
     break;
    } else {
     $$0120$us123$1 = $108;
    }
   }
  }
  $122 = (($$0100121$us$1) + 1)|0;
  $exitcond142$1 = ($122|0)==($48|0);
  if ($exitcond142$1) {
   break;
  } else {
   $$0100121$us$1 = $122;
  }
 }
 return;
}
function __ZN7WelsDec23WelsFillRecNeededMbInfoEPNS_21TagWelsDecoderContextEbPNS_10TagDqLayerE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 5464|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 36|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($2)) + 4032|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($2)) + 4036|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($2)) + 4012|0);
 HEAP32[$13>>2] = $6;
 $14 = ((($2)) + 4016|0);
 HEAP32[$14>>2] = $8;
 if (!($1)) {
  return;
 }
 $15 = ((($4)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = Math_imul($12, $6)|0;
 $18 = (($17) + ($10))|0;
 $19 = $18 << 4;
 $20 = (($16) + ($19)|0);
 $21 = ((($2)) + 4020|0);
 HEAP32[$21>>2] = $20;
 $22 = ((($4)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = Math_imul($12, $8)|0;
 $25 = (($24) + ($10))|0;
 $26 = $25 << 3;
 $27 = (($23) + ($26)|0);
 $28 = ((($2)) + 4024|0);
 HEAP32[$28>>2] = $27;
 $29 = ((($4)) + 24|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($30) + ($26)|0);
 $32 = ((($2)) + 4028|0);
 HEAP32[$32>>2] = $31;
 return;
}
function __ZN7WelsDec21WelsLumaDcDequantIdctEPsiPNS_21TagWelsDecoderContextE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $3 = sp;
 $4 = ((($2)) + 562526|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 if ($6) {
  $13 = (16 + ($1<<4)|0);
  $14 = HEAP16[$13>>1]|0;
  $15 = $14&65535;
  $116 = $15;
 } else {
  $7 = ((($2)) + 562472|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (($8) + ($1<<5)|0);
  $10 = HEAP16[$9>>1]|0;
  $11 = $10&65535;
  $12 = $11 >>> 4;
  $116 = $12;
 }
 $16 = HEAP16[$0>>1]|0;
 $17 = $16 << 16 >> 16;
 $18 = ((($0)) + 128|0);
 $19 = HEAP16[$18>>1]|0;
 $20 = $19 << 16 >> 16;
 $21 = (($20) + ($17))|0;
 $22 = (($17) - ($20))|0;
 $23 = ((($0)) + 32|0);
 $24 = HEAP16[$23>>1]|0;
 $25 = $24 << 16 >> 16;
 $26 = ((($0)) + 160|0);
 $27 = HEAP16[$26>>1]|0;
 $28 = $27 << 16 >> 16;
 $29 = (($25) - ($28))|0;
 $30 = (($28) + ($25))|0;
 $31 = (($30) + ($21))|0;
 HEAP32[$3>>2] = $31;
 $32 = (($29) + ($22))|0;
 $33 = ((($3)) + 4|0);
 HEAP32[$33>>2] = $32;
 $34 = (($22) - ($29))|0;
 $35 = ((($3)) + 8|0);
 HEAP32[$35>>2] = $34;
 $36 = (($21) - ($30))|0;
 $37 = ((($3)) + 12|0);
 HEAP32[$37>>2] = $36;
 $38 = ((($0)) + 64|0);
 $39 = HEAP16[$38>>1]|0;
 $40 = $39 << 16 >> 16;
 $41 = ((($0)) + 192|0);
 $42 = HEAP16[$41>>1]|0;
 $43 = $42 << 16 >> 16;
 $44 = (($43) + ($40))|0;
 $45 = (($40) - ($43))|0;
 $46 = ((($0)) + 96|0);
 $47 = HEAP16[$46>>1]|0;
 $48 = $47 << 16 >> 16;
 $49 = ((($0)) + 224|0);
 $50 = HEAP16[$49>>1]|0;
 $51 = $50 << 16 >> 16;
 $52 = (($48) - ($51))|0;
 $53 = (($51) + ($48))|0;
 $54 = (($53) + ($44))|0;
 $55 = ((($3)) + 16|0);
 HEAP32[$55>>2] = $54;
 $56 = (($52) + ($45))|0;
 $57 = ((($3)) + 20|0);
 HEAP32[$57>>2] = $56;
 $58 = (($45) - ($52))|0;
 $59 = ((($3)) + 24|0);
 HEAP32[$59>>2] = $58;
 $60 = (($44) - ($53))|0;
 $61 = ((($3)) + 28|0);
 HEAP32[$61>>2] = $60;
 $62 = ((($0)) + 256|0);
 $63 = HEAP16[$62>>1]|0;
 $64 = $63 << 16 >> 16;
 $65 = ((($0)) + 384|0);
 $66 = HEAP16[$65>>1]|0;
 $67 = $66 << 16 >> 16;
 $68 = (($67) + ($64))|0;
 $69 = (($64) - ($67))|0;
 $70 = ((($0)) + 288|0);
 $71 = HEAP16[$70>>1]|0;
 $72 = $71 << 16 >> 16;
 $73 = ((($0)) + 416|0);
 $74 = HEAP16[$73>>1]|0;
 $75 = $74 << 16 >> 16;
 $76 = (($72) - ($75))|0;
 $77 = (($75) + ($72))|0;
 $78 = (($77) + ($68))|0;
 $79 = ((($3)) + 32|0);
 HEAP32[$79>>2] = $78;
 $80 = (($76) + ($69))|0;
 $81 = ((($3)) + 36|0);
 HEAP32[$81>>2] = $80;
 $82 = (($69) - ($76))|0;
 $83 = ((($3)) + 40|0);
 HEAP32[$83>>2] = $82;
 $84 = (($68) - ($77))|0;
 $85 = ((($3)) + 44|0);
 HEAP32[$85>>2] = $84;
 $86 = ((($0)) + 320|0);
 $87 = HEAP16[$86>>1]|0;
 $88 = $87 << 16 >> 16;
 $89 = ((($0)) + 448|0);
 $90 = HEAP16[$89>>1]|0;
 $91 = $90 << 16 >> 16;
 $92 = (($91) + ($88))|0;
 $93 = (($88) - ($91))|0;
 $94 = ((($0)) + 352|0);
 $95 = HEAP16[$94>>1]|0;
 $96 = $95 << 16 >> 16;
 $97 = ((($0)) + 480|0);
 $98 = HEAP16[$97>>1]|0;
 $99 = $98 << 16 >> 16;
 $100 = (($96) - ($99))|0;
 $101 = (($99) + ($96))|0;
 $102 = (($101) + ($92))|0;
 $103 = ((($3)) + 48|0);
 HEAP32[$103>>2] = $102;
 $104 = (($100) + ($93))|0;
 $105 = ((($3)) + 52|0);
 HEAP32[$105>>2] = $104;
 $106 = (($93) - ($100))|0;
 $107 = ((($3)) + 56|0);
 HEAP32[$107>>2] = $106;
 $108 = (($92) - ($101))|0;
 $109 = ((($3)) + 60|0);
 HEAP32[$109>>2] = $108;
 $110 = (($78) + ($31))|0;
 $111 = (($31) - ($78))|0;
 $112 = (($54) - ($102))|0;
 $113 = (($102) + ($54))|0;
 $114 = (($113) + ($110))|0;
 $115 = Math_imul($114, $116)|0;
 $117 = (($115) + 2)|0;
 $118 = $117 >>> 2;
 $119 = $118&65535;
 HEAP16[$0>>1] = $119;
 $120 = (($112) + ($111))|0;
 $121 = Math_imul($120, $116)|0;
 $122 = (($121) + 2)|0;
 $123 = $122 >>> 2;
 $124 = $123&65535;
 HEAP16[$38>>1] = $124;
 $125 = (($111) - ($112))|0;
 $126 = Math_imul($125, $116)|0;
 $127 = (($126) + 2)|0;
 $128 = $127 >>> 2;
 $129 = $128&65535;
 HEAP16[$62>>1] = $129;
 $130 = (($110) - ($113))|0;
 $131 = Math_imul($130, $116)|0;
 $132 = (($131) + 2)|0;
 $133 = $132 >>> 2;
 $134 = $133&65535;
 HEAP16[$86>>1] = $134;
 $135 = HEAP32[$33>>2]|0;
 $136 = (($80) + ($135))|0;
 $137 = (($135) - ($80))|0;
 $138 = (($56) - ($104))|0;
 $139 = (($104) + ($56))|0;
 $140 = (($139) + ($136))|0;
 $141 = Math_imul($140, $116)|0;
 $142 = (($141) + 2)|0;
 $143 = $142 >>> 2;
 $144 = $143&65535;
 HEAP16[$23>>1] = $144;
 $145 = (($138) + ($137))|0;
 $146 = Math_imul($145, $116)|0;
 $147 = (($146) + 2)|0;
 $148 = $147 >>> 2;
 $149 = $148&65535;
 HEAP16[$46>>1] = $149;
 $150 = (($137) - ($138))|0;
 $151 = Math_imul($150, $116)|0;
 $152 = (($151) + 2)|0;
 $153 = $152 >>> 2;
 $154 = $153&65535;
 HEAP16[$70>>1] = $154;
 $155 = (($136) - ($139))|0;
 $156 = Math_imul($155, $116)|0;
 $157 = (($156) + 2)|0;
 $158 = $157 >>> 2;
 $159 = $158&65535;
 HEAP16[$94>>1] = $159;
 $160 = HEAP32[$35>>2]|0;
 $161 = (($82) + ($160))|0;
 $162 = (($160) - ($82))|0;
 $163 = HEAP32[$59>>2]|0;
 $164 = (($163) - ($106))|0;
 $165 = (($106) + ($163))|0;
 $166 = (($165) + ($161))|0;
 $167 = Math_imul($166, $116)|0;
 $168 = (($167) + 2)|0;
 $169 = $168 >>> 2;
 $170 = $169&65535;
 HEAP16[$18>>1] = $170;
 $171 = (($164) + ($162))|0;
 $172 = Math_imul($171, $116)|0;
 $173 = (($172) + 2)|0;
 $174 = $173 >>> 2;
 $175 = $174&65535;
 HEAP16[$41>>1] = $175;
 $176 = (($162) - ($164))|0;
 $177 = Math_imul($176, $116)|0;
 $178 = (($177) + 2)|0;
 $179 = $178 >>> 2;
 $180 = $179&65535;
 HEAP16[$65>>1] = $180;
 $181 = (($161) - ($165))|0;
 $182 = Math_imul($181, $116)|0;
 $183 = (($182) + 2)|0;
 $184 = $183 >>> 2;
 $185 = $184&65535;
 HEAP16[$89>>1] = $185;
 $186 = HEAP32[$37>>2]|0;
 $187 = HEAP32[$85>>2]|0;
 $188 = (($187) + ($186))|0;
 $189 = (($186) - ($187))|0;
 $190 = HEAP32[$61>>2]|0;
 $191 = (($190) - ($108))|0;
 $192 = (($108) + ($190))|0;
 $193 = (($192) + ($188))|0;
 $194 = Math_imul($193, $116)|0;
 $195 = (($194) + 2)|0;
 $196 = $195 >>> 2;
 $197 = $196&65535;
 HEAP16[$26>>1] = $197;
 $198 = (($191) + ($189))|0;
 $199 = Math_imul($198, $116)|0;
 $200 = (($199) + 2)|0;
 $201 = $200 >>> 2;
 $202 = $201&65535;
 HEAP16[$49>>1] = $202;
 $203 = (($189) - ($191))|0;
 $204 = Math_imul($203, $116)|0;
 $205 = (($204) + 2)|0;
 $206 = $205 >>> 2;
 $207 = $206&65535;
 HEAP16[$73>>1] = $207;
 $208 = (($188) - ($192))|0;
 $209 = Math_imul($208, $116)|0;
 $210 = (($209) + 2)|0;
 $211 = $210 >>> 2;
 $212 = $211&65535;
 HEAP16[$97>>1] = $212;
 STACKTOP = sp;return;
}
function __ZN7WelsDec11RecI16x16MbEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($3)) + 3992|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (((($5) + ($0<<3)|0)) + 7|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ((($3)) + 4004|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($0)|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ((($1)) + 241932|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 4100|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($3)) + 4012|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($3)) + 4020|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($1)) + 316968|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $7 << 24 >> 24;
 $25 = (((($1)) + 316856|0) + ($24<<2)|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_vii[$26 & 63]($21,$19);
 $27 = ((($3)) + 3964|0);
 $indvars$iv = 0;
 while(1) {
  $28 = $indvars$iv << 4;
  $29 = (($2) + ($28<<1)|0);
  $30 = (((($1)) + 5248|0) + ($indvars$iv<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = (($21) + ($31)|0);
  $33 = HEAP32[$27>>2]|0;
  $34 = (11079 + ($indvars$iv)|0);
  $35 = HEAP8[$34>>0]|0;
  $36 = $35&255;
  $37 = ((($33) + (($0*24)|0)|0) + ($36)|0);
  $38 = HEAP8[$37>>0]|0;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $40 = HEAP16[$29>>1]|0;
   $41 = ($40<<16>>16)==(0);
   if (!($41)) {
    label = 4;
   }
  } else {
   label = 4;
  }
  if ((label|0) == 4) {
   label = 0;
   FUNCTION_TABLE_viii[$23 & 7]($32,$19,$29);
  }
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $exitcond = ($indvars$iv$next|0)==(16);
  if ($exitcond) {
   break;
  } else {
   $indvars$iv = $indvars$iv$next;
  }
 }
 $42 = ((($3)) + 4024|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = $11 << 24 >> 24;
 $45 = (((($1)) + 316940|0) + ($44<<2)|0);
 $46 = HEAP32[$45>>2]|0;
 FUNCTION_TABLE_vii[$46 & 63]($43,$17);
 $47 = ((($3)) + 4028|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = HEAP32[$45>>2]|0;
 FUNCTION_TABLE_vii[$49 & 63]($48,$17);
 (__ZN7WelsDec9RecChromaEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3)|0);
 return 0;
}
function __ZN7WelsDec9RecI8x8MbEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (__ZN7WelsDec11RecI8x8LumaEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3)|0);
 $4 = ((($1)) + 241932|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4100|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 36|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($3)) + 4004|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + ($0)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ((($3)) + 4024|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $13 << 24 >> 24;
 $17 = (((($1)) + 316940|0) + ($16<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 FUNCTION_TABLE_vii[$18 & 63]($15,$9);
 $19 = ((($3)) + 4028|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAP32[$17>>2]|0;
 FUNCTION_TABLE_vii[$21 & 63]($20,$9);
 (__ZN7WelsDec9RecChromaEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3)|0);
 return 0;
}
function __ZN7WelsDec9RecI4x4MbEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $indvars$iv$i = 0, $indvars$iv$next$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($3)) + 4020|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($3)) + 4012|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($3)) + 3996|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($1)) + 316968|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($3)) + 3964|0);
 $indvars$iv$i = 0;
 while(1) {
  $13 = (((($1)) + 5248|0) + ($indvars$iv$i<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($5) + ($14)|0);
  $16 = (15567 + ($indvars$iv$i)|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17&255;
  $19 = ((($9) + ($0<<4)|0) + ($18)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20&255;
  $22 = (((($1)) + 316884|0) + ($21<<2)|0);
  $23 = HEAP32[$22>>2]|0;
  FUNCTION_TABLE_vii[$23 & 63]($15,$7);
  $24 = HEAP32[$12>>2]|0;
  $25 = (11079 + ($indvars$iv$i)|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = $26&255;
  $28 = ((($24) + (($0*24)|0)|0) + ($27)|0);
  $29 = HEAP8[$28>>0]|0;
  $30 = ($29<<24>>24)==(0);
  if (!($30)) {
   $31 = $indvars$iv$i << 4;
   $32 = (($2) + ($31<<1)|0);
   FUNCTION_TABLE_viii[$11 & 7]($15,$7,$32);
  }
  $indvars$iv$next$i = (($indvars$iv$i) + 1)|0;
  $exitcond$i = ($indvars$iv$next$i|0)==(16);
  if ($exitcond$i) {
   break;
  } else {
   $indvars$iv$i = $indvars$iv$next$i;
  }
 }
 $33 = ((($1)) + 241932|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 4100|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ((($36)) + 36|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($3)) + 4004|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (($40) + ($0)|0);
 $42 = HEAP8[$41>>0]|0;
 $43 = ((($3)) + 4024|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = $42 << 24 >> 24;
 $46 = (((($1)) + 316940|0) + ($45<<2)|0);
 $47 = HEAP32[$46>>2]|0;
 FUNCTION_TABLE_vii[$47 & 63]($44,$38);
 $48 = ((($3)) + 4028|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = HEAP32[$46>>2]|0;
 FUNCTION_TABLE_vii[$50 & 63]($49,$38);
 (__ZN7WelsDec9RecChromaEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3)|0);
 return 0;
}
function __ZN7WelsDec9RecChromaEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$off = 0, $$pre = 0, $$pre47 = 0, $$pre48 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $exitcond = 0, $indvars$iv = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 241932|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4100|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 36|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($1)) + 316968|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($3)) + 3956|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($0)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15 << 24 >> 24;
 $17 = $16 >>> 4;
 $18 = $17 & 255;
 $$off = (($18) + -1)|0;
 $switch = ($$off>>>0)<(2);
 if (!($switch)) {
  return 0;
 }
 $19 = ((($2)) + 512|0);
 __ZN7WelsDec16WelsChromaDcIdctEPs($19);
 $20 = ((($2)) + 640|0);
 __ZN7WelsDec16WelsChromaDcIdctEPs($20);
 $21 = ((($3)) + 3964|0);
 $indvars$iv = 0;
 while(1) {
  $22 = $indvars$iv << 6;
  $23 = (($19) + ($22<<1)|0);
  $24 = (($indvars$iv) + 1)|0;
  $25 = (((($3)) + 4020|0) + ($24<<2)|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ($indvars$iv|0)==(0);
  $$sink = $27 ? 16 : 20;
  $28 = (((($1)) + 5248|0) + ($$sink<<2)|0);
  $29 = $indvars$iv << 2;
  $30 = (($29) + 16)|0;
  $31 = HEAP32[$28>>2]|0;
  $32 = (($26) + ($31)|0);
  $33 = HEAP32[$21>>2]|0;
  $34 = (11079 + ($30)|0);
  $35 = HEAP8[$34>>0]|0;
  $36 = $35&255;
  $37 = ((($33) + (($0*24)|0)|0) + ($36)|0);
  $38 = HEAP8[$37>>0]|0;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $40 = HEAP16[$23>>1]|0;
   $41 = ($40<<16>>16)==(0);
   if ($41) {
    $51 = $33;
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
  if ((label|0) == 5) {
   label = 0;
   FUNCTION_TABLE_viii[$11 & 7]($32,$9,$23);
   $$pre = HEAP32[$21>>2]|0;
   $51 = $$pre;
  }
  $42 = ((($23)) + 32|0);
  $43 = ((($28)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = (($26) + ($44)|0);
  $46 = (($29) + 17)|0;
  $47 = (11079 + ($46)|0);
  $48 = HEAP8[$47>>0]|0;
  $49 = $48&255;
  $50 = ((($51) + (($0*24)|0)|0) + ($49)|0);
  $52 = HEAP8[$50>>0]|0;
  $53 = ($52<<24>>24)==(0);
  if ($53) {
   $54 = HEAP16[$42>>1]|0;
   $55 = ($54<<16>>16)==(0);
   if ($55) {
    $65 = $51;
   } else {
    label = 9;
   }
  } else {
   label = 9;
  }
  if ((label|0) == 9) {
   label = 0;
   FUNCTION_TABLE_viii[$11 & 7]($45,$9,$42);
   $$pre47 = HEAP32[$21>>2]|0;
   $65 = $$pre47;
  }
  $56 = ((($23)) + 64|0);
  $57 = ((($28)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (($26) + ($58)|0);
  $60 = (($29) + 18)|0;
  $61 = (11079 + ($60)|0);
  $62 = HEAP8[$61>>0]|0;
  $63 = $62&255;
  $64 = ((($65) + (($0*24)|0)|0) + ($63)|0);
  $66 = HEAP8[$64>>0]|0;
  $67 = ($66<<24>>24)==(0);
  if ($67) {
   $68 = HEAP16[$56>>1]|0;
   $69 = ($68<<16>>16)==(0);
   if ($69) {
    $79 = $65;
   } else {
    label = 12;
   }
  } else {
   label = 12;
  }
  if ((label|0) == 12) {
   label = 0;
   FUNCTION_TABLE_viii[$11 & 7]($59,$9,$56);
   $$pre48 = HEAP32[$21>>2]|0;
   $79 = $$pre48;
  }
  $70 = ((($23)) + 96|0);
  $71 = ((($28)) + 12|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = (($26) + ($72)|0);
  $74 = (($29) + 19)|0;
  $75 = (11079 + ($74)|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76&255;
  $78 = ((($79) + (($0*24)|0)|0) + ($77)|0);
  $80 = HEAP8[$78>>0]|0;
  $81 = ($80<<24>>24)==(0);
  if ($81) {
   $82 = HEAP16[$70>>1]|0;
   $83 = ($82<<16>>16)==(0);
   if (!($83)) {
    label = 15;
   }
  } else {
   label = 15;
  }
  if ((label|0) == 15) {
   label = 0;
   FUNCTION_TABLE_viii[$11 & 7]($73,$9,$70);
  }
  $exitcond = ($24|0)==(2);
  if ($exitcond) {
   break;
  } else {
   $indvars$iv = $24;
  }
 }
 return 0;
}
function __ZN7WelsDec16WelsChromaDcIdctEPs($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP16[$0>>1]|0;
 $2 = $1 << 16 >> 16;
 $3 = ((($0)) + 32|0);
 $4 = HEAP16[$3>>1]|0;
 $5 = $4 << 16 >> 16;
 $6 = ((($0)) + 64|0);
 $7 = HEAP16[$6>>1]|0;
 $8 = $7 << 16 >> 16;
 $9 = ((($0)) + 96|0);
 $10 = HEAP16[$9>>1]|0;
 $11 = $10 << 16 >> 16;
 $12 = (($2) - ($5))|0;
 $13 = (($5) + ($2))|0;
 $14 = (($8) - ($11))|0;
 $15 = (($11) + ($8))|0;
 $16 = (($15) + ($13))|0;
 $17 = $16 >>> 1;
 $18 = $17&65535;
 HEAP16[$0>>1] = $18;
 $19 = (($14) + ($12))|0;
 $20 = $19 >>> 1;
 $21 = $20&65535;
 HEAP16[$3>>1] = $21;
 $22 = (($13) - ($15))|0;
 $23 = $22 >>> 1;
 $24 = $23&65535;
 HEAP16[$6>>1] = $24;
 $25 = (($12) - ($14))|0;
 $26 = $25 >>> 1;
 $27 = $26&65535;
 HEAP16[$9>>1] = $27;
 return;
}
function __ZN7WelsDec11RecI8x8LumaEiPNS_21TagWelsDecoderContextEPsPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$lobit = 0, $$lobit68 = 0, $$lobit69 = 0, $$phi$trans$insert = 0, $$phi$trans$insert71 = 0, $$pre = 0, $$pre72 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = ((($3)) + 4020|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($3)) + 4012|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($3)) + 3996|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($1)) + 317052|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($3)) + 4000|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + ($0)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ($17&255) >>> 1;
 $$lobit = $18 & 1;
 HEAP8[$4>>0] = $$lobit;
 $19 = $17 & 1;
 $20 = ((($4)) + 1|0);
 HEAP8[$20>>0] = $19;
 $21 = ((($4)) + 2|0);
 $22 = ($17&255) >>> 2;
 $$lobit68 = $22 & 1;
 HEAP8[$21>>0] = $$lobit68;
 $23 = ((($4)) + 3|0);
 HEAP8[$23>>0] = 1;
 HEAP8[$5>>0] = $19;
 $24 = ((($5)) + 1|0);
 $25 = ($17&255) >>> 3;
 $$lobit69 = $25 & 1;
 HEAP8[$24>>0] = $$lobit69;
 $26 = ((($5)) + 2|0);
 HEAP8[$26>>0] = 1;
 $27 = ((($5)) + 3|0);
 HEAP8[$27>>0] = 0;
 $28 = ((($3)) + 3964|0);
 $41 = $$lobit;$43 = $19;$indvars$iv = 0;
 while(1) {
  $29 = $indvars$iv << 2;
  $30 = (((($1)) + 5248|0) + ($29<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = (($7) + ($31)|0);
  $33 = (15567 + ($29)|0);
  $34 = HEAP8[$33>>0]|0;
  $35 = $34&255;
  $36 = ((($11) + ($0<<4)|0) + ($35)|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = $37&255;
  $39 = (((($1)) + 316996|0) + ($38<<2)|0);
  $40 = HEAP32[$39>>2]|0;
  $42 = ($41<<24>>24)!=(0);
  $44 = ($43<<24>>24)!=(0);
  FUNCTION_TABLE_viiii[$40 & 31]($32,$9,$42,$44);
  $45 = (11079 + ($29)|0);
  $46 = HEAP8[$45>>0]|0;
  $47 = $46&255;
  $48 = HEAP32[$28>>2]|0;
  $49 = ((($48) + (($0*24)|0)|0) + ($47)|0);
  $50 = HEAP8[$49>>0]|0;
  $51 = ($50<<24>>24)==(0);
  if ($51) {
   $52 = (($47) + 1)|0;
   $53 = ((($48) + (($0*24)|0)|0) + ($52)|0);
   $54 = HEAP8[$53>>0]|0;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $56 = (($47) + 4)|0;
    $57 = ((($48) + (($0*24)|0)|0) + ($56)|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = ($58<<24>>24)==(0);
    if ($59) {
     $60 = (($47) + 5)|0;
     $61 = ((($48) + (($0*24)|0)|0) + ($60)|0);
     $62 = HEAP8[$61>>0]|0;
     $63 = ($62<<24>>24)==(0);
     if (!($63)) {
      label = 6;
     }
    } else {
     label = 6;
    }
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $64 = $indvars$iv << 6;
   $65 = (($2) + ($64<<1)|0);
   FUNCTION_TABLE_viii[$13 & 7]($32,$9,$65);
  }
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $exitcond = ($indvars$iv$next|0)==(4);
  if ($exitcond) {
   break;
  }
  $$phi$trans$insert = (($4) + ($indvars$iv$next)|0);
  $$pre = HEAP8[$$phi$trans$insert>>0]|0;
  $$phi$trans$insert71 = (($5) + ($indvars$iv$next)|0);
  $$pre72 = HEAP8[$$phi$trans$insert71>>0]|0;
  $41 = $$pre;$43 = $$pre72;$indvars$iv = $indvars$iv$next;
 }
 STACKTOP = sp;return 0;
}
function __ZN7WelsDec23WelsDecodeMbCabacPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$107 = 0, $$107$1 = 0, $$4 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = ((($0)) + 241932|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 5468|0);
 $9 = ((($7)) + 4040|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($7)) + 3956|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + ($10)|0);
 HEAP8[$13>>0] = 0;
 $14 = ((($7)) + 3960|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + ($10<<1)|0);
 HEAP16[$16>>1] = 0;
 $17 = ((($7)) + 4004|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($18) + ($10)|0);
 HEAP8[$19>>0] = 0;
 $20 = ((($7)) + 3940|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (($21) + ($10)|0);
 HEAP8[$22>>0] = 1;
 $23 = ((($7)) + 3944|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($24) + ($10)|0);
 HEAP8[$25>>0] = 0;
 __ZN7WelsDec22GetNeighborAvailMbTypeEPNS_16TagNeighborAvailEPNS_10TagDqLayerE($4,$7);
 $26 = (__ZN7WelsDec18ParseSkipFlagCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$4,$3)|0);
 $27 = ($26|0)==(0);
 if (!($27)) {
  $$4 = $26;
  STACKTOP = sp;return ($$4|0);
 }
 $28 = HEAP32[$3>>2]|0;
 $29 = ($28|0)==(0);
 if ($29) {
  $186 = (__ZN7WelsDec32WelsDecodeMbCabacPSliceBaseMode0EPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$4,$2)|0);
  $$4 = $186;
  STACKTOP = sp;return ($$4|0);
 }
 HEAP32[$5>>2] = 0;
 $30 = ((($7)) + 3908|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (($31) + ($10<<1)|0);
 HEAP16[$32>>1] = 256;
 $33 = ((($7)) + 3964|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($34) + (($10*24)|0)|0);
 HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=(0>>8)&255;HEAP8[$35+2>>0]=(0>>16)&255;HEAP8[$35+3>>0]=0>>24;
 $36 = HEAP32[$33>>2]|0;
 $37 = (((($36) + (($10*24)|0)|0)) + 4|0);
 HEAP8[$37>>0]=0&255;HEAP8[$37+1>>0]=(0>>8)&255;HEAP8[$37+2>>0]=(0>>16)&255;HEAP8[$37+3>>0]=0>>24;
 $38 = HEAP32[$33>>2]|0;
 $39 = (((($38) + (($10*24)|0)|0)) + 8|0);
 HEAP8[$39>>0]=0&255;HEAP8[$39+1>>0]=(0>>8)&255;HEAP8[$39+2>>0]=(0>>16)&255;HEAP8[$39+3>>0]=0>>24;
 $40 = HEAP32[$33>>2]|0;
 $41 = (((($40) + (($10*24)|0)|0)) + 12|0);
 HEAP8[$41>>0]=0&255;HEAP8[$41+1>>0]=(0>>8)&255;HEAP8[$41+2>>0]=(0>>16)&255;HEAP8[$41+3>>0]=0>>24;
 $42 = HEAP32[$33>>2]|0;
 $43 = (((($42) + (($10*24)|0)|0)) + 16|0);
 HEAP8[$43>>0]=0&255;HEAP8[$43+1>>0]=(0>>8)&255;HEAP8[$43+2>>0]=(0>>16)&255;HEAP8[$43+3>>0]=0>>24;
 $44 = HEAP32[$33>>2]|0;
 $45 = (((($44) + (($10*24)|0)|0)) + 20|0);
 HEAP8[$45>>0]=0&255;HEAP8[$45+1>>0]=(0>>8)&255;HEAP8[$45+2>>0]=(0>>16)&255;HEAP8[$45+3>>0]=0>>24;
 $46 = ((($7)) + 3976|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = (($47) + ($10)|0);
 HEAP8[$48>>0] = 0;
 $49 = ((($7)) + 3932|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = (($50) + ($10<<4)|0);
 dest=$51; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $52 = ((($0)) + 512345|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = ($53<<24>>24)==(0);
 $55 = ((($0)) + 512344|0);
 if ($54) {
  $56 = HEAP8[$55>>0]|0;
  $57 = ($56<<24>>24)==(0);
  if ($57) {
   $58 = HEAP32[$8>>2]|0;
   $59 = ($58|0)==(0|0);
   if ($59) {
    $63 = 1;
   } else {
    $60 = ((($58)) + 72|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61 ^ 1;
    $63 = $62;
   }
  } else {
   $63 = 1;
  }
 } else {
  $63 = 1;
 }
 HEAP8[$55>>0] = $63;
 __ZN7WelsDec23PredPSkipMvFromNeighborEPNS_10TagDqLayerEPs($7,$5);
 $64 = ((($7)) + 3916|0);
 $65 = ((($7)) + 3924|0);
 $66 = HEAP32[$5>>2]|0;
 $67 = HEAP32[$64>>2]|0;
 $68 = (($67) + ($10<<6)|0);
 HEAP8[$68>>0]=$66&255;HEAP8[$68+1>>0]=($66>>8)&255;HEAP8[$68+2>>0]=($66>>16)&255;HEAP8[$68+3>>0]=$66>>24;
 $69 = HEAP32[$65>>2]|0;
 $70 = (($69) + ($10<<6)|0);
 HEAP8[$70>>0]=0&255;HEAP8[$70+1>>0]=(0>>8)&255;HEAP8[$70+2>>0]=(0>>16)&255;HEAP8[$70+3>>0]=0>>24;
 $71 = HEAP32[$5>>2]|0;
 $72 = HEAP32[$64>>2]|0;
 $73 = (((($72) + ($10<<6)|0)) + 4|0);
 HEAP8[$73>>0]=$71&255;HEAP8[$73+1>>0]=($71>>8)&255;HEAP8[$73+2>>0]=($71>>16)&255;HEAP8[$73+3>>0]=$71>>24;
 $74 = HEAP32[$65>>2]|0;
 $75 = (((($74) + ($10<<6)|0)) + 4|0);
 HEAP8[$75>>0]=0&255;HEAP8[$75+1>>0]=(0>>8)&255;HEAP8[$75+2>>0]=(0>>16)&255;HEAP8[$75+3>>0]=0>>24;
 $76 = HEAP32[$5>>2]|0;
 $77 = HEAP32[$64>>2]|0;
 $78 = (((($77) + ($10<<6)|0)) + 8|0);
 HEAP8[$78>>0]=$76&255;HEAP8[$78+1>>0]=($76>>8)&255;HEAP8[$78+2>>0]=($76>>16)&255;HEAP8[$78+3>>0]=$76>>24;
 $79 = HEAP32[$65>>2]|0;
 $80 = (((($79) + ($10<<6)|0)) + 8|0);
 HEAP8[$80>>0]=0&255;HEAP8[$80+1>>0]=(0>>8)&255;HEAP8[$80+2>>0]=(0>>16)&255;HEAP8[$80+3>>0]=0>>24;
 $81 = HEAP32[$5>>2]|0;
 $82 = HEAP32[$64>>2]|0;
 $83 = (((($82) + ($10<<6)|0)) + 12|0);
 HEAP8[$83>>0]=$81&255;HEAP8[$83+1>>0]=($81>>8)&255;HEAP8[$83+2>>0]=($81>>16)&255;HEAP8[$83+3>>0]=$81>>24;
 $84 = HEAP32[$65>>2]|0;
 $85 = (((($84) + ($10<<6)|0)) + 12|0);
 HEAP8[$85>>0]=0&255;HEAP8[$85+1>>0]=(0>>8)&255;HEAP8[$85+2>>0]=(0>>16)&255;HEAP8[$85+3>>0]=0>>24;
 $86 = HEAP32[$5>>2]|0;
 $87 = HEAP32[$64>>2]|0;
 $88 = (((($87) + ($10<<6)|0)) + 16|0);
 HEAP8[$88>>0]=$86&255;HEAP8[$88+1>>0]=($86>>8)&255;HEAP8[$88+2>>0]=($86>>16)&255;HEAP8[$88+3>>0]=$86>>24;
 $89 = HEAP32[$65>>2]|0;
 $90 = (((($89) + ($10<<6)|0)) + 16|0);
 HEAP8[$90>>0]=0&255;HEAP8[$90+1>>0]=(0>>8)&255;HEAP8[$90+2>>0]=(0>>16)&255;HEAP8[$90+3>>0]=0>>24;
 $91 = HEAP32[$5>>2]|0;
 $92 = HEAP32[$64>>2]|0;
 $93 = (((($92) + ($10<<6)|0)) + 20|0);
 HEAP8[$93>>0]=$91&255;HEAP8[$93+1>>0]=($91>>8)&255;HEAP8[$93+2>>0]=($91>>16)&255;HEAP8[$93+3>>0]=$91>>24;
 $94 = HEAP32[$65>>2]|0;
 $95 = (((($94) + ($10<<6)|0)) + 20|0);
 HEAP8[$95>>0]=0&255;HEAP8[$95+1>>0]=(0>>8)&255;HEAP8[$95+2>>0]=(0>>16)&255;HEAP8[$95+3>>0]=0>>24;
 $96 = HEAP32[$5>>2]|0;
 $97 = HEAP32[$64>>2]|0;
 $98 = (((($97) + ($10<<6)|0)) + 24|0);
 HEAP8[$98>>0]=$96&255;HEAP8[$98+1>>0]=($96>>8)&255;HEAP8[$98+2>>0]=($96>>16)&255;HEAP8[$98+3>>0]=$96>>24;
 $99 = HEAP32[$65>>2]|0;
 $100 = (((($99) + ($10<<6)|0)) + 24|0);
 HEAP8[$100>>0]=0&255;HEAP8[$100+1>>0]=(0>>8)&255;HEAP8[$100+2>>0]=(0>>16)&255;HEAP8[$100+3>>0]=0>>24;
 $101 = HEAP32[$5>>2]|0;
 $102 = HEAP32[$64>>2]|0;
 $103 = (((($102) + ($10<<6)|0)) + 28|0);
 HEAP8[$103>>0]=$101&255;HEAP8[$103+1>>0]=($101>>8)&255;HEAP8[$103+2>>0]=($101>>16)&255;HEAP8[$103+3>>0]=$101>>24;
 $104 = HEAP32[$65>>2]|0;
 $105 = (((($104) + ($10<<6)|0)) + 28|0);
 HEAP8[$105>>0]=0&255;HEAP8[$105+1>>0]=(0>>8)&255;HEAP8[$105+2>>0]=(0>>16)&255;HEAP8[$105+3>>0]=0>>24;
 $106 = HEAP32[$5>>2]|0;
 $107 = HEAP32[$64>>2]|0;
 $108 = (((($107) + ($10<<6)|0)) + 32|0);
 HEAP8[$108>>0]=$106&255;HEAP8[$108+1>>0]=($106>>8)&255;HEAP8[$108+2>>0]=($106>>16)&255;HEAP8[$108+3>>0]=$106>>24;
 $109 = HEAP32[$65>>2]|0;
 $110 = (((($109) + ($10<<6)|0)) + 32|0);
 HEAP8[$110>>0]=0&255;HEAP8[$110+1>>0]=(0>>8)&255;HEAP8[$110+2>>0]=(0>>16)&255;HEAP8[$110+3>>0]=0>>24;
 $111 = HEAP32[$5>>2]|0;
 $112 = HEAP32[$64>>2]|0;
 $113 = (((($112) + ($10<<6)|0)) + 36|0);
 HEAP8[$113>>0]=$111&255;HEAP8[$113+1>>0]=($111>>8)&255;HEAP8[$113+2>>0]=($111>>16)&255;HEAP8[$113+3>>0]=$111>>24;
 $114 = HEAP32[$65>>2]|0;
 $115 = (((($114) + ($10<<6)|0)) + 36|0);
 HEAP8[$115>>0]=0&255;HEAP8[$115+1>>0]=(0>>8)&255;HEAP8[$115+2>>0]=(0>>16)&255;HEAP8[$115+3>>0]=0>>24;
 $116 = HEAP32[$5>>2]|0;
 $117 = HEAP32[$64>>2]|0;
 $118 = (((($117) + ($10<<6)|0)) + 40|0);
 HEAP8[$118>>0]=$116&255;HEAP8[$118+1>>0]=($116>>8)&255;HEAP8[$118+2>>0]=($116>>16)&255;HEAP8[$118+3>>0]=$116>>24;
 $119 = HEAP32[$65>>2]|0;
 $120 = (((($119) + ($10<<6)|0)) + 40|0);
 HEAP8[$120>>0]=0&255;HEAP8[$120+1>>0]=(0>>8)&255;HEAP8[$120+2>>0]=(0>>16)&255;HEAP8[$120+3>>0]=0>>24;
 $121 = HEAP32[$5>>2]|0;
 $122 = HEAP32[$64>>2]|0;
 $123 = (((($122) + ($10<<6)|0)) + 44|0);
 HEAP8[$123>>0]=$121&255;HEAP8[$123+1>>0]=($121>>8)&255;HEAP8[$123+2>>0]=($121>>16)&255;HEAP8[$123+3>>0]=$121>>24;
 $124 = HEAP32[$65>>2]|0;
 $125 = (((($124) + ($10<<6)|0)) + 44|0);
 HEAP8[$125>>0]=0&255;HEAP8[$125+1>>0]=(0>>8)&255;HEAP8[$125+2>>0]=(0>>16)&255;HEAP8[$125+3>>0]=0>>24;
 $126 = HEAP32[$5>>2]|0;
 $127 = HEAP32[$64>>2]|0;
 $128 = (((($127) + ($10<<6)|0)) + 48|0);
 HEAP8[$128>>0]=$126&255;HEAP8[$128+1>>0]=($126>>8)&255;HEAP8[$128+2>>0]=($126>>16)&255;HEAP8[$128+3>>0]=$126>>24;
 $129 = HEAP32[$65>>2]|0;
 $130 = (((($129) + ($10<<6)|0)) + 48|0);
 HEAP8[$130>>0]=0&255;HEAP8[$130+1>>0]=(0>>8)&255;HEAP8[$130+2>>0]=(0>>16)&255;HEAP8[$130+3>>0]=0>>24;
 $131 = HEAP32[$5>>2]|0;
 $132 = HEAP32[$64>>2]|0;
 $133 = (((($132) + ($10<<6)|0)) + 52|0);
 HEAP8[$133>>0]=$131&255;HEAP8[$133+1>>0]=($131>>8)&255;HEAP8[$133+2>>0]=($131>>16)&255;HEAP8[$133+3>>0]=$131>>24;
 $134 = HEAP32[$65>>2]|0;
 $135 = (((($134) + ($10<<6)|0)) + 52|0);
 HEAP8[$135>>0]=0&255;HEAP8[$135+1>>0]=(0>>8)&255;HEAP8[$135+2>>0]=(0>>16)&255;HEAP8[$135+3>>0]=0>>24;
 $136 = HEAP32[$5>>2]|0;
 $137 = HEAP32[$64>>2]|0;
 $138 = (((($137) + ($10<<6)|0)) + 56|0);
 HEAP8[$138>>0]=$136&255;HEAP8[$138+1>>0]=($136>>8)&255;HEAP8[$138+2>>0]=($136>>16)&255;HEAP8[$138+3>>0]=$136>>24;
 $139 = HEAP32[$65>>2]|0;
 $140 = (((($139) + ($10<<6)|0)) + 56|0);
 HEAP8[$140>>0]=0&255;HEAP8[$140+1>>0]=(0>>8)&255;HEAP8[$140+2>>0]=(0>>16)&255;HEAP8[$140+3>>0]=0>>24;
 $141 = HEAP32[$5>>2]|0;
 $142 = HEAP32[$64>>2]|0;
 $143 = (((($142) + ($10<<6)|0)) + 60|0);
 HEAP8[$143>>0]=$141&255;HEAP8[$143+1>>0]=($141>>8)&255;HEAP8[$143+2>>0]=($141>>16)&255;HEAP8[$143+3>>0]=$141>>24;
 $144 = HEAP32[$65>>2]|0;
 $145 = (((($144) + ($10<<6)|0)) + 60|0);
 HEAP8[$145>>0]=0&255;HEAP8[$145+1>>0]=(0>>8)&255;HEAP8[$145+2>>0]=(0>>16)&255;HEAP8[$145+3>>0]=0>>24;
 $146 = ((($7)) + 3868|0);
 $147 = HEAP32[$146>>2]|0;
 $148 = $147&255;
 $149 = ((($7)) + 3948|0);
 $150 = HEAP32[$149>>2]|0;
 $151 = (($150) + ($10)|0);
 HEAP8[$151>>0] = $148;
 $152 = ((($7)) + 92|0);
 $153 = ((($7)) + 3952|0);
 $154 = HEAP32[$149>>2]|0;
 $155 = (($154) + ($10)|0);
 $156 = HEAP8[$155>>0]|0;
 $157 = $156 << 24 >> 24;
 $158 = HEAP32[$152>>2]|0;
 $159 = ((($158)) + 168|0);
 $160 = HEAP32[$159>>2]|0;
 $161 = (($160) + ($157))|0;
 $162 = ($161|0)<(0);
 $163 = ($161|0)<(51);
 $$107 = $163 ? $161 : 51;
 $164 = $162 ? 0 : $$107;
 $165 = (11027 + ($164)|0);
 $166 = HEAP8[$165>>0]|0;
 $167 = HEAP32[$153>>2]|0;
 $168 = (($167) + ($10<<1)|0);
 HEAP8[$168>>0] = $166;
 $169 = HEAP32[$149>>2]|0;
 $170 = (($169) + ($10)|0);
 $171 = HEAP8[$170>>0]|0;
 $172 = $171 << 24 >> 24;
 $173 = HEAP32[$152>>2]|0;
 $174 = ((($173)) + 172|0);
 $175 = HEAP32[$174>>2]|0;
 $176 = (($175) + ($172))|0;
 $177 = ($176|0)<(0);
 $178 = ($176|0)<(51);
 $$107$1 = $178 ? $176 : 51;
 $179 = $177 ? 0 : $$107$1;
 $180 = (11027 + ($179)|0);
 $181 = HEAP8[$180>>0]|0;
 $182 = HEAP32[$153>>2]|0;
 $183 = (((($182) + ($10<<1)|0)) + 1|0);
 HEAP8[$183>>0] = $181;
 $184 = ((($7)) + 3884|0);
 HEAP32[$184>>2] = 0;
 $185 = (__ZN7WelsDec20ParseEndOfSliceCabacEPNS_21TagWelsDecoderContextERj($0,$2)|0);
 $$4 = $185;
 STACKTOP = sp;return ($$4|0);
}
function __ZN7WelsDec23WelsDecodeMbCabacISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN7WelsDec32WelsDecodeMbCabacISliceBaseMode0EPNS_21TagWelsDecoderContextERj($0,$2)|0);
 return ($3|0);
}
function __ZN7WelsDec23WelsDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0119 = 0, $$122 = 0, $$122$1 = 0, $$3 = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr4 = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 28|0;
 $4 = sp + 24|0;
 $5 = ((($0)) + 241932|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 3900|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 5468|0);
 $10 = ((($6)) + 4040|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($6)) + 3964|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + (($11*24)|0)|0);
 $15 = ((($6)) + 3940|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($16) + ($11)|0);
 HEAP8[$17>>0] = 1;
 $18 = ((($6)) + 3944|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19) + ($11)|0);
 HEAP8[$20>>0] = 0;
 $21 = ((($6)) + 3872|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(-1);
 if ($23) {
  $24 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($8,$3)|0);
  $25 = ($24|0)==(0);
  if (!($25)) {
   $$3 = $24;
   STACKTOP = sp;return ($$3|0);
  }
  $26 = HEAP32[$3>>2]|0;
  HEAP32[$21>>2] = $26;
  $27 = ($26|0)==(-1);
  if ($27) {
   $$3 = -1;
   STACKTOP = sp;return ($$3|0);
  } else {
   $29 = $26;
  }
 } else {
  $29 = $22;
 }
 $28 = (($29) + -1)|0;
 HEAP32[$21>>2] = $28;
 $30 = ($29|0)==(0);
 do {
  if ($30) {
   $151 = ((($6)) + 3856|0);
   $152 = HEAP8[$151>>0]|0;
   $153 = ($152<<24>>24)==(0);
   if ($153) {
    $183 = ((($6)) + 3857|0);
    $184 = HEAP8[$183>>0]|0;
    $185 = $184&255;
    $$0119 = $185;
   } else {
    $154 = ((($8)) + 20|0);
    $155 = HEAP32[$154>>2]|0;
    $156 = $155 >>> 31;
    $157 = ((($8)) + 4|0);
    $158 = HEAP32[$157>>2]|0;
    $159 = HEAP32[$8>>2]|0;
    $160 = ((($8)) + 16|0);
    $161 = HEAP32[$160>>2]|0;
    $162 = $155 << 1;
    HEAP32[$154>>2] = $162;
    $163 = ((($8)) + 24|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = (($164) + 1)|0;
    HEAP32[$163>>2] = $165;
    $166 = ($164|0)>(-1);
    do {
     if ($166) {
      $167 = $161;
      $168 = (($167) - ($159))|0;
      $169 = (($158) + 1)|0;
      $170 = (($169) - ($159))|0;
      $171 = ($168|0)>($170|0);
      if ($171) {
       $$3 = 11;
       STACKTOP = sp;return ($$3|0);
      } else {
       $172 = HEAP8[$161>>0]|0;
       $173 = $172&255;
       $174 = $173 << 8;
       $175 = ((($161)) + 1|0);
       $176 = HEAP8[$175>>0]|0;
       $177 = $176&255;
       $178 = $174 | $177;
       $179 = $178 << $165;
       $180 = $179 | $162;
       HEAP32[$154>>2] = $180;
       $181 = (($164) + -15)|0;
       HEAP32[$163>>2] = $181;
       $182 = ((($161)) + 2|0);
       HEAP32[$160>>2] = $182;
       break;
      }
     }
    } while(0);
    HEAP32[$3>>2] = $156;
    $$0119 = $156;
   }
   $186 = ($$0119|0)==(0);
   if ($186) {
    $187 = (__ZN7WelsDec29WelsActualDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextE($0)|0);
    $188 = ($187|0)==(0);
    if ($188) {
     break;
    } else {
     $$3 = $187;
    }
    STACKTOP = sp;return ($$3|0);
   } else {
    HEAP32[$vararg_buffer>>2] = $$0119;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,25161,$vararg_buffer);
    $$3 = 328742;
    STACKTOP = sp;return ($$3|0);
   }
  } else {
   $31 = ((($6)) + 3908|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (($32) + ($11<<1)|0);
   HEAP16[$33>>1] = 256;
   $34 = ((($6)) + 3976|0);
   ;HEAP32[$14>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;HEAP32[$14+12>>2]=0|0;HEAP32[$14+16>>2]=0|0;HEAP32[$14+20>>2]=0|0;
   $35 = HEAP32[$34>>2]|0;
   $36 = (($35) + ($11)|0);
   HEAP8[$36>>0] = 0;
   $37 = ((($6)) + 3932|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = (($38) + ($11<<4)|0);
   dest=$39; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   $40 = ((($0)) + 512345|0);
   $41 = HEAP8[$40>>0]|0;
   $42 = ($41<<24>>24)==(0);
   $43 = ((($0)) + 512344|0);
   if ($42) {
    $44 = HEAP8[$43>>0]|0;
    $45 = ($44<<24>>24)==(0);
    if ($45) {
     $46 = HEAP32[$9>>2]|0;
     $47 = ($46|0)==(0|0);
     if ($47) {
      $51 = 1;
     } else {
      $48 = ((($46)) + 72|0);
      $49 = HEAP8[$48>>0]|0;
      $50 = $49 ^ 1;
      $51 = $50;
     }
    } else {
     $51 = 1;
    }
   } else {
    $51 = 1;
   }
   HEAP8[$43>>0] = $51;
   __ZN7WelsDec23PredPSkipMvFromNeighborEPNS_10TagDqLayerEPs($6,$4);
   $52 = ((($6)) + 3916|0);
   $53 = HEAP32[$4>>2]|0;
   $54 = HEAP32[$52>>2]|0;
   $55 = (($54) + ($11<<6)|0);
   HEAP32[$55>>2] = $53;
   $56 = HEAP32[$4>>2]|0;
   $57 = HEAP32[$52>>2]|0;
   $58 = (((($57) + ($11<<6)|0)) + 4|0);
   HEAP32[$58>>2] = $56;
   $59 = HEAP32[$4>>2]|0;
   $60 = HEAP32[$52>>2]|0;
   $61 = (((($60) + ($11<<6)|0)) + 8|0);
   HEAP32[$61>>2] = $59;
   $62 = HEAP32[$4>>2]|0;
   $63 = HEAP32[$52>>2]|0;
   $64 = (((($63) + ($11<<6)|0)) + 12|0);
   HEAP32[$64>>2] = $62;
   $65 = HEAP32[$4>>2]|0;
   $66 = HEAP32[$52>>2]|0;
   $67 = (((($66) + ($11<<6)|0)) + 16|0);
   HEAP32[$67>>2] = $65;
   $68 = HEAP32[$4>>2]|0;
   $69 = HEAP32[$52>>2]|0;
   $70 = (((($69) + ($11<<6)|0)) + 20|0);
   HEAP32[$70>>2] = $68;
   $71 = HEAP32[$4>>2]|0;
   $72 = HEAP32[$52>>2]|0;
   $73 = (((($72) + ($11<<6)|0)) + 24|0);
   HEAP32[$73>>2] = $71;
   $74 = HEAP32[$4>>2]|0;
   $75 = HEAP32[$52>>2]|0;
   $76 = (((($75) + ($11<<6)|0)) + 28|0);
   HEAP32[$76>>2] = $74;
   $77 = HEAP32[$4>>2]|0;
   $78 = HEAP32[$52>>2]|0;
   $79 = (((($78) + ($11<<6)|0)) + 32|0);
   HEAP32[$79>>2] = $77;
   $80 = HEAP32[$4>>2]|0;
   $81 = HEAP32[$52>>2]|0;
   $82 = (((($81) + ($11<<6)|0)) + 36|0);
   HEAP32[$82>>2] = $80;
   $83 = HEAP32[$4>>2]|0;
   $84 = HEAP32[$52>>2]|0;
   $85 = (((($84) + ($11<<6)|0)) + 40|0);
   HEAP32[$85>>2] = $83;
   $86 = HEAP32[$4>>2]|0;
   $87 = HEAP32[$52>>2]|0;
   $88 = (((($87) + ($11<<6)|0)) + 44|0);
   HEAP32[$88>>2] = $86;
   $89 = HEAP32[$4>>2]|0;
   $90 = HEAP32[$52>>2]|0;
   $91 = (((($90) + ($11<<6)|0)) + 48|0);
   HEAP32[$91>>2] = $89;
   $92 = HEAP32[$4>>2]|0;
   $93 = HEAP32[$52>>2]|0;
   $94 = (((($93) + ($11<<6)|0)) + 52|0);
   HEAP32[$94>>2] = $92;
   $95 = HEAP32[$4>>2]|0;
   $96 = HEAP32[$52>>2]|0;
   $97 = (((($96) + ($11<<6)|0)) + 56|0);
   HEAP32[$97>>2] = $95;
   $98 = HEAP32[$4>>2]|0;
   $99 = HEAP32[$52>>2]|0;
   $100 = (((($99) + ($11<<6)|0)) + 60|0);
   HEAP32[$100>>2] = $98;
   $101 = ((($6)) + 3861|0);
   $102 = HEAP8[$101>>0]|0;
   $103 = ($102<<24>>24)==(0);
   if ($103) {
    label = 12;
   } else {
    $104 = ((($1)) + 16|0);
    $105 = HEAP8[$104>>0]|0;
    $106 = ($105<<24>>24)==(0);
    if ($106) {
     $107 = ((($1)) + 15|0);
     $108 = HEAP8[$107>>0]|0;
     $109 = ($108<<24>>24)==(0);
     if ($109) {
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $110 = ((($6)) + 3868|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = $111&255;
    $113 = ((($6)) + 3948|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = (($114) + ($11)|0);
    HEAP8[$115>>0] = $112;
    $116 = ((($6)) + 92|0);
    $117 = ((($6)) + 3952|0);
    $118 = HEAP32[$113>>2]|0;
    $119 = (($118) + ($11)|0);
    $120 = HEAP8[$119>>0]|0;
    $121 = $120 << 24 >> 24;
    $122 = HEAP32[$116>>2]|0;
    $123 = ((($122)) + 168|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($124) + ($121))|0;
    $126 = ($125|0)<(0);
    $127 = ($125|0)<(51);
    $$122 = $127 ? $125 : 51;
    $128 = $126 ? 0 : $$122;
    $129 = (11027 + ($128)|0);
    $130 = HEAP8[$129>>0]|0;
    $131 = HEAP32[$117>>2]|0;
    $132 = (($131) + ($11<<1)|0);
    HEAP8[$132>>0] = $130;
    $133 = HEAP32[$113>>2]|0;
    $134 = (($133) + ($11)|0);
    $135 = HEAP8[$134>>0]|0;
    $136 = $135 << 24 >> 24;
    $137 = HEAP32[$116>>2]|0;
    $138 = ((($137)) + 172|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (($139) + ($136))|0;
    $141 = ($140|0)<(0);
    $142 = ($140|0)<(51);
    $$122$1 = $142 ? $140 : 51;
    $143 = $141 ? 0 : $$122$1;
    $144 = (11027 + ($143)|0);
    $145 = HEAP8[$144>>0]|0;
    $146 = HEAP32[$117>>2]|0;
    $147 = (((($146) + ($11<<1)|0)) + 1|0);
    HEAP8[$147>>0] = $145;
   }
   $148 = ((($6)) + 3956|0);
   $149 = HEAP32[$148>>2]|0;
   $150 = (($149) + ($11)|0);
   HEAP8[$150>>0] = 0;
  }
 } while(0);
 $189 = ((($8)) + 16|0);
 $190 = HEAP32[$189>>2]|0;
 $191 = HEAP32[$8>>2]|0;
 $192 = (($190) - ($191))|0;
 $193 = $192 << 3;
 $194 = ((($8)) + 24|0);
 $195 = HEAP32[$194>>2]|0;
 $196 = (($195) + -16)|0;
 $197 = (($196) + ($193))|0;
 $198 = ((($8)) + 8|0);
 $199 = HEAP32[$198>>2]|0;
 $200 = (($199) + -1)|0;
 $201 = ($197|0)==($200|0);
 if ($201) {
  $202 = HEAP32[$21>>2]|0;
  $203 = ($202|0)<(1);
  if ($203) {
   HEAP32[$2>>2] = 1;
   $$pre = HEAP32[$198>>2]|0;
   $205 = $$pre;
  } else {
   $205 = $199;
  }
 } else {
  $205 = $199;
 }
 $204 = ($197|0)<($205|0);
 if ($204) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $206 = ($197|0)<(0);
 $207 = $206 << 31 >> 31;
 $208 = $vararg_buffer1;
 $209 = $208;
 HEAP32[$209>>2] = $197;
 $210 = (($208) + 4)|0;
 $211 = $210;
 HEAP32[$211>>2] = $207;
 $vararg_ptr4 = ((($vararg_buffer1)) + 8|0);
 HEAP32[$vararg_ptr4>>2] = $205;
 __Z7WelsLogP13TagLogContextiPKcz($0,2,25224,$vararg_buffer1);
 $$3 = -1;
 STACKTOP = sp;return ($$3|0);
}
function __ZN7WelsDec23WelsDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$040 = 0, $$1 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 241932|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 3900|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 3856|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = ($8<<24>>24)==(0);
 do {
  if ($9) {
   $39 = ((($4)) + 3857|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = $40&255;
   $$040 = $41;
  } else {
   $10 = ((($6)) + 20|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = $11 >>> 31;
   $13 = ((($6)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = HEAP32[$6>>2]|0;
   $16 = ((($6)) + 16|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = $11 << 1;
   HEAP32[$10>>2] = $18;
   $19 = ((($6)) + 24|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($20) + 1)|0;
   HEAP32[$19>>2] = $21;
   $22 = ($20|0)>(-1);
   if ($22) {
    $23 = $17;
    $24 = (($23) - ($15))|0;
    $25 = (($14) + 1)|0;
    $26 = (($25) - ($15))|0;
    $27 = ($24|0)>($26|0);
    if ($27) {
     $$1 = 11;
     STACKTOP = sp;return ($$1|0);
    } else {
     $28 = HEAP8[$17>>0]|0;
     $29 = $28&255;
     $30 = $29 << 8;
     $31 = ((($17)) + 1|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32&255;
     $34 = $30 | $33;
     $35 = $34 << $21;
     $36 = $35 | $18;
     HEAP32[$10>>2] = $36;
     $37 = (($20) + -15)|0;
     HEAP32[$19>>2] = $37;
     $38 = ((($17)) + 2|0);
     HEAP32[$16>>2] = $38;
     $$040 = $12;
     break;
    }
   } else {
    $$040 = $12;
   }
  }
 } while(0);
 $42 = ($$040|0)==(0);
 if (!($42)) {
  HEAP32[$vararg_buffer>>2] = $$040;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,25161,$vararg_buffer);
  $$1 = 328742;
  STACKTOP = sp;return ($$1|0);
 }
 $43 = (__ZN7WelsDec29WelsActualDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextE($0)|0);
 $44 = ($43|0)==(0);
 if (!($44)) {
  $$1 = $43;
  STACKTOP = sp;return ($$1|0);
 }
 $45 = ((($6)) + 16|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = HEAP32[$6>>2]|0;
 $48 = (($46) - ($47))|0;
 $49 = $48 << 3;
 $50 = ((($6)) + 24|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51) + -16)|0;
 $53 = (($52) + ($49))|0;
 $54 = ((($6)) + 8|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = (($55) + -1)|0;
 $57 = ($53|0)==($56|0);
 if ($57) {
  $58 = ((($4)) + 3872|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = ($59|0)<(1);
  if ($60) {
   HEAP32[$2>>2] = 1;
   $$pre = HEAP32[$54>>2]|0;
   $62 = $$pre;
  } else {
   $62 = $55;
  }
 } else {
  $62 = $55;
 }
 $61 = ($53|0)<($62|0);
 if ($61) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $63 = ($53|0)<(0);
 $64 = $63 << 31 >> 31;
 $65 = $vararg_buffer1;
 $66 = $65;
 HEAP32[$66>>2] = $53;
 $67 = (($65) + 4)|0;
 $68 = $67;
 HEAP32[$68>>2] = $64;
 $vararg_ptr4 = ((($vararg_buffer1)) + 8|0);
 HEAP32[$vararg_ptr4>>2] = $62;
 __Z7WelsLogP13TagLogContextiPKcz($0,2,25224,$vararg_buffer1);
 $$1 = -1;
 STACKTOP = sp;return ($$1|0);
}
function __ZN7WelsDec31WelsFillCacheConstrain0IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$sink = 0, $$045$sink = 0, $$51 = 0, $$52 = 0, $$sink50 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($3)) + 4040|0);
 $5 = HEAP32[$4>>2]|0;
 __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($0,$1,$3);
 $6 = HEAP32[$0>>2]|0;
 $7 = ($6|0)==(0);
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 $11 = (($5) + -1)|0;
 $$52 = $10 ? 0 : $11;
 L1: do {
  if ($7) {
   $$045$sink = -1;
  } else {
   $12 = ((($0)) + 20|0);
   $13 = HEAP32[$12>>2]|0;
   switch ($13|0) {
   case 4: case 1:  {
    break;
   }
   default: {
    $$045$sink = 33686018;
    break L1;
   }
   }
   $14 = ((($3)) + 4044|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (($5) - ($15))|0;
   $17 = ((($3)) + 3992|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (($18) + ($16<<3)|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $$045$sink = $20;
  }
 } while(0);
 $21 = ((($2)) + 1|0);
 HEAP8[$21>>0]=$$045$sink&255;HEAP8[$21+1>>0]=($$045$sink>>8)&255;HEAP8[$21+2>>0]=($$045$sink>>16)&255;HEAP8[$21+3>>0]=$$045$sink>>24;
 $22 = HEAP32[$8>>2]|0;
 $23 = ($22|0)!=(0);
 L5: do {
  if ($23) {
   $24 = ((($0)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   switch ($25|0) {
   case 4: case 1:  {
    break;
   }
   default: {
    break L5;
   }
   }
   $26 = ((($3)) + 3992|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (((($27) + ($$52<<3)|0)) + 4|0);
   $29 = HEAP8[$28>>0]|0;
   $30 = ((($2)) + 8|0);
   HEAP8[$30>>0] = $29;
   $31 = HEAP32[$26>>2]|0;
   $32 = (((($31) + ($$52<<3)|0)) + 5|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = ((($2)) + 16|0);
   HEAP8[$34>>0] = $33;
   $35 = HEAP32[$26>>2]|0;
   $36 = (((($35) + ($$52<<3)|0)) + 6|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = ((($2)) + 24|0);
   HEAP8[$38>>0] = $37;
   $39 = HEAP32[$26>>2]|0;
   $40 = (((($39) + ($$52<<3)|0)) + 3|0);
   $41 = HEAP8[$40>>0]|0;
   $$0$sink = $41;$$sink50 = 32;
   $45 = (($2) + ($$sink50)|0);
   HEAP8[$45>>0] = $$0$sink;
   return;
  }
 } while(0);
 $$51 = $23 ? 2 : -1;
 $42 = ((($2)) + 32|0);
 HEAP8[$42>>0] = $$51;
 $43 = ((($2)) + 24|0);
 HEAP8[$43>>0] = $$51;
 $44 = ((($2)) + 16|0);
 HEAP8[$44>>0] = $$51;
 $$0$sink = $$51;$$sink50 = 8;
 $45 = (($2) + ($$sink50)|0);
 HEAP8[$45>>0] = $$0$sink;
 return;
}
function __ZN7WelsDec31WelsFillCacheConstrain1IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$0$sink = 0, $$045$sink = 0, $$047 = 0, $$sink50 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond49 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($3)) + 4040|0);
 $5 = HEAP32[$4>>2]|0;
 __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($0,$1,$3);
 $6 = HEAP32[$0>>2]|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $$047 = 0;
 } else {
  $8 = ((($3)) + 4044|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($5) - ($9))|0;
  $$047 = $10;
 }
 $11 = ((($0)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0);
 $14 = (($5) + -1)|0;
 $$ = $13 ? 0 : $14;
 $15 = ($6|0)!=(0);
 $16 = ((($0)) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(1);
 $or$cond = $15 & $18;
 L4: do {
  if ($or$cond) {
   $19 = ((($3)) + 3992|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($20) + ($$047<<3)|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $$045$sink = $22;
  } else {
   switch ($17|0) {
   case 512: case 2:  {
    $$045$sink = 33686018;
    break L4;
    break;
   }
   default: {
   }
   }
   $$045$sink = -1;
  }
 } while(0);
 $23 = ((($2)) + 1|0);
 HEAP8[$23>>0]=$$045$sink&255;HEAP8[$23+1>>0]=($$045$sink>>8)&255;HEAP8[$23+2>>0]=($$045$sink>>16)&255;HEAP8[$23+3>>0]=$$045$sink>>24;
 $24 = HEAP32[$11>>2]|0;
 $25 = ($24|0)!=(0);
 $26 = ((($0)) + 16|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)==(1);
 $or$cond49 = $25 & $28;
 if ($or$cond49) {
  $29 = ((($3)) + 3992|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = (((($30) + ($$<<3)|0)) + 4|0);
  $32 = HEAP8[$31>>0]|0;
  $33 = ((($2)) + 8|0);
  HEAP8[$33>>0] = $32;
  $34 = HEAP32[$29>>2]|0;
  $35 = (((($34) + ($$<<3)|0)) + 5|0);
  $36 = HEAP8[$35>>0]|0;
  $37 = ((($2)) + 16|0);
  HEAP8[$37>>0] = $36;
  $38 = HEAP32[$29>>2]|0;
  $39 = (((($38) + ($$<<3)|0)) + 6|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = ((($2)) + 24|0);
  HEAP8[$41>>0] = $40;
  $42 = HEAP32[$29>>2]|0;
  $43 = (((($42) + ($$<<3)|0)) + 3|0);
  $44 = HEAP8[$43>>0]|0;
  $$0$sink = $44;$$sink50 = 32;
  $48 = (($2) + ($$sink50)|0);
  HEAP8[$48>>0] = $$0$sink;
  return;
 }
 switch ($27|0) {
 case 512: case 2:  {
  $$0 = 2;
  break;
 }
 default: {
  $$0 = -1;
 }
 }
 $45 = ((($2)) + 32|0);
 HEAP8[$45>>0] = $$0;
 $46 = ((($2)) + 24|0);
 HEAP8[$46>>0] = $$0;
 $47 = ((($2)) + 16|0);
 HEAP8[$47>>0] = $$0;
 $$0$sink = $$0;$$sink50 = 8;
 $48 = (($2) + ($$sink50)|0);
 HEAP8[$48>>0] = $$0$sink;
 return;
}
function __ZN7WelsDec29WelsMapNxNNeighToSampleNormalEPNS_16TagNeighborAvailEPi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = ((($1)) + 96|0);
  HEAP32[$5>>2] = 1;
  $6 = ((($1)) + 72|0);
  HEAP32[$6>>2] = 1;
  $7 = ((($1)) + 48|0);
  HEAP32[$7>>2] = 1;
  $8 = ((($1)) + 24|0);
  HEAP32[$8>>2] = 1;
 }
 $9 = ((($0)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0);
 if (!($11)) {
  HEAP32[$1>>2] = 1;
 }
 $12 = HEAP32[$0>>2]|0;
 $13 = ($12|0)==(0);
 if (!($13)) {
  $14 = ((($1)) + 16|0);
  HEAP32[$14>>2] = 1;
  $15 = ((($1)) + 12|0);
  HEAP32[$15>>2] = 1;
  $16 = ((($1)) + 8|0);
  HEAP32[$16>>2] = 1;
  $17 = ((($1)) + 4|0);
  HEAP32[$17>>2] = 1;
 }
 $18 = ((($0)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0);
 if ($20) {
  return;
 }
 $21 = ((($1)) + 20|0);
 HEAP32[$21>>2] = 1;
 return;
}
function __ZN7WelsDec33WelsMapNxNNeighToSampleConstrain1EPNS_16TagNeighborAvailEPi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = ((($0)) + 16|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = $6 & 519;
  $8 = ($7|0)==(0);
  if (!($8)) {
   $9 = ((($1)) + 96|0);
   HEAP32[$9>>2] = 1;
   $10 = ((($1)) + 72|0);
   HEAP32[$10>>2] = 1;
   $11 = ((($1)) + 48|0);
   HEAP32[$11>>2] = 1;
   $12 = ((($1)) + 24|0);
   HEAP32[$12>>2] = 1;
  }
 }
 $13 = ((($0)) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = ((($0)) + 24|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = $17 & 519;
  $19 = ($18|0)==(0);
  if (!($19)) {
   HEAP32[$1>>2] = 1;
  }
 }
 $20 = HEAP32[$0>>2]|0;
 $21 = ($20|0)==(0);
 if (!($21)) {
  $22 = ((($0)) + 20|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 519;
  $25 = ($24|0)==(0);
  if (!($25)) {
   $26 = ((($1)) + 16|0);
   HEAP32[$26>>2] = 1;
   $27 = ((($1)) + 12|0);
   HEAP32[$27>>2] = 1;
   $28 = ((($1)) + 8|0);
   HEAP32[$28>>2] = 1;
   $29 = ((($1)) + 4|0);
   HEAP32[$29>>2] = 1;
  }
 }
 $30 = ((($0)) + 8|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0);
 if ($32) {
  return;
 }
 $33 = ((($0)) + 28|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = $34 & 519;
 $36 = ($35|0)==(0);
 if ($36) {
  return;
 }
 $37 = ((($1)) + 20|0);
 HEAP32[$37>>2] = 1;
 return;
}
function __ZN7WelsDec31WelsMap16x16NeighToSampleNormalEPNS_16TagNeighborAvailEPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  HEAP8[$1>>0] = 4;
 }
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  $8 = HEAP8[$1>>0]|0;
  $9 = $8 | 2;
  HEAP8[$1>>0] = $9;
 }
 $10 = HEAP32[$0>>2]|0;
 $11 = ($10|0)==(0);
 if ($11) {
  return;
 }
 $12 = HEAP8[$1>>0]|0;
 $13 = $12 | 1;
 HEAP8[$1>>0] = $13;
 return;
}
function __ZN7WelsDec35WelsMap16x16NeighToSampleConstrain1EPNS_16TagNeighborAvailEPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = ((($0)) + 16|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = $6 & 519;
  $8 = ($7|0)==(0);
  if (!($8)) {
   HEAP8[$1>>0] = 4;
  }
 }
 $9 = ((($0)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0);
 if (!($11)) {
  $12 = ((($0)) + 24|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $13 & 519;
  $15 = ($14|0)==(0);
  if (!($15)) {
   $16 = HEAP8[$1>>0]|0;
   $17 = $16 | 2;
   HEAP8[$1>>0] = $17;
  }
 }
 $18 = HEAP32[$0>>2]|0;
 $19 = ($18|0)==(0);
 if ($19) {
  return;
 }
 $20 = ((($0)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $21 & 519;
 $23 = ($22|0)==(0);
 if ($23) {
  return;
 }
 $24 = HEAP8[$1>>0]|0;
 $25 = $24 | 1;
 HEAP8[$1>>0] = $25;
 return;
}
function __ZN7WelsDec20WelsCabacContextInitEPNS_21TagWelsDecoderContextEhii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 100|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(2);
 $7 = (($2) + 1)|0;
 $8 = $6 ? 0 : $7;
 $9 = ((($0)) + 511308|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  __ZN7WelsDec19WelsCabacGlobalInitEPNS_21TagWelsDecoderContextE($0);
 }
 $12 = ((($0)) + 511309|0);
 $13 = ((((($0)) + 319948|0) + (($8*47840)|0)|0) + (($3*920)|0)|0);
 _memcpy(($12|0),($13|0),920)|0;
 return;
}
function __ZN7WelsDec24InitCabacDecEngineFromBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (0 - ($3))|0;
 $5 = $4 >> 3;
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (-2 - ($5))|0;
 $9 = (($7) + ($8)|0);
 $10 = ((($1)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + -1|0);
 $13 = ($9>>>0)<($12>>>0);
 if (!($13)) {
  $$0 = 2;
  return ($$0|0);
 }
 $14 = HEAP8[$9>>0]|0;
 $15 = $14&255;
 $16 = $15 << 16;
 $17 = ((($9)) + 1|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = $19 << 8;
 $21 = $20 | $16;
 $22 = ((($9)) + 2|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = $21 | $24;
 $26 = ((($0)) + 8|0);
 $27 = (_bitshift64Shl(($25|0),0,16)|0);
 $28 = tempRet0;
 $29 = $26;
 $30 = $29;
 HEAP32[$30>>2] = $27;
 $31 = (($29) + 4)|0;
 $32 = $31;
 HEAP32[$32>>2] = $28;
 $33 = ((($9)) + 3|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = $34&255;
 $36 = $35 << 8;
 $37 = ((($9)) + 4|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = $36 | $39;
 $41 = $40 | $27;
 $42 = $26;
 $43 = $42;
 HEAP32[$43>>2] = $41;
 $44 = (($42) + 4)|0;
 $45 = $44;
 HEAP32[$45>>2] = $28;
 $46 = ((($0)) + 16|0);
 HEAP32[$46>>2] = 31;
 $47 = ((($9)) + 5|0);
 $48 = ((($0)) + 24|0);
 HEAP32[$48>>2] = $47;
 $49 = $0;
 $50 = $49;
 HEAP32[$50>>2] = 510;
 $51 = (($49) + 4)|0;
 $52 = $51;
 HEAP32[$52>>2] = 0;
 $53 = HEAP32[$1>>2]|0;
 $54 = ((($0)) + 20|0);
 HEAP32[$54>>2] = $53;
 $55 = HEAP32[$10>>2]|0;
 $56 = ((($0)) + 28|0);
 HEAP32[$56>>2] = $55;
 HEAP32[$2>>2] = 0;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec27WelsCalcDeqCoeffScalingListEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0106 = 0, $$096105 = 0, $$097107 = 0, $$098109 = 0, $$1108 = 0, $$pre = 0, $$sink = 0, $$sink101 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $exitcond = 0, $exitcond111 = 0, $exitcond112 = 0, $exitcond113 = 0, $exitcond114 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241924|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 335|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = ((($0)) + 241928|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ((($7)) + 185|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = ($9<<24>>24)==(0);
  if ($10) {
   $92 = ((($0)) + 562526|0);
   HEAP8[$92>>0] = 0;
   return 0;
  }
 }
 $11 = ((($0)) + 562526|0);
 HEAP8[$11>>0] = 1;
 $12 = ((($0)) + 562524|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)==(0);
 if (!($14)) {
  $15 = ((($0)) + 562520|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($0)) + 241928|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($18)) + 4|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($16|0)==($20|0);
  if ($21) {
   return 0;
  }
 }
 $22 = ((($0)) + 562525|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = ($23<<24>>24)==(0);
 $$pre = ((($0)) + 241928|0);
 if ($24) {
  $$1108 = 0;
 } else {
  $$098109 = 0;
  while(1) {
   $25 = HEAP32[$$pre>>2]|0;
   $26 = (((($25)) + 186|0) + ($$098109)|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = ($27<<24>>24)==(0);
   L13: do {
    if ($28) {
     $29 = ($$098109|0)<(6);
     if ($29) {
      $30 = (((($25)) + 198|0) + ($$098109<<4)|0);
      switch ($$098109|0) {
      case 0: case 3:  {
       $31 = HEAP32[$1>>2]|0;
       $32 = (((($31)) + 348|0) + ($$098109<<4)|0);
       ;HEAP16[$30>>1]=HEAP16[$32>>1]|0;HEAP16[$30+2>>1]=HEAP16[$32+2>>1]|0;HEAP16[$30+4>>1]=HEAP16[$32+4>>1]|0;HEAP16[$30+6>>1]=HEAP16[$32+6>>1]|0;HEAP16[$30+8>>1]=HEAP16[$32+8>>1]|0;HEAP16[$30+10>>1]=HEAP16[$32+10>>1]|0;HEAP16[$30+12>>1]=HEAP16[$32+12>>1]|0;HEAP16[$30+14>>1]=HEAP16[$32+14>>1]|0;
       break L13;
       break;
      }
      default: {
       $33 = (($$098109) + -1)|0;
       $34 = (((($25)) + 198|0) + ($33<<4)|0);
       ;HEAP16[$30>>1]=HEAP16[$34>>1]|0;HEAP16[$30+2>>1]=HEAP16[$34+2>>1]|0;HEAP16[$30+4>>1]=HEAP16[$34+4>>1]|0;HEAP16[$30+6>>1]=HEAP16[$34+6>>1]|0;HEAP16[$30+8>>1]=HEAP16[$34+8>>1]|0;HEAP16[$30+10>>1]=HEAP16[$34+10>>1]|0;HEAP16[$30+12>>1]=HEAP16[$34+12>>1]|0;HEAP16[$30+14>>1]=HEAP16[$34+14>>1]|0;
       break L13;
      }
      }
     } else {
      $35 = $$098109 | 1;
      $36 = ($35|0)==(7);
      $37 = (($$098109) + -6)|0;
      $38 = (((($25)) + 294|0) + ($37<<6)|0);
      if ($36) {
       $39 = HEAP32[$1>>2]|0;
       $40 = (((($39)) + 444|0) + ($37<<6)|0);
       dest=$38; src=$40; stop=dest+64|0; do { HEAP16[dest>>1]=HEAP16[src>>1]|0; dest=dest+2|0; src=src+2|0; } while ((dest|0) < (stop|0));
       break;
      } else {
       $41 = (($$098109) + -8)|0;
       $42 = (((($25)) + 294|0) + ($41<<6)|0);
       dest=$38; src=$42; stop=dest+64|0; do { HEAP16[dest>>1]=HEAP16[src>>1]|0; dest=dest+2|0; src=src+2|0; } while ((dest|0) < (stop|0));
       break;
      }
     }
    }
   } while(0);
   $43 = (($$098109) + 1)|0;
   $exitcond114 = ($43|0)==(12);
   if ($exitcond114) {
    $$1108 = 0;
    break;
   } else {
    $$098109 = $43;
   }
  }
 }
 while(1) {
  $44 = (((($0)) + 512552|0) + (($$1108*1664)|0)|0);
  $45 = (((($0)) + 562472|0) + ($$1108<<2)|0);
  HEAP32[$45>>2] = $44;
  $46 = (((($0)) + 522536|0) + (($$1108*6656)|0)|0);
  $47 = (((($0)) + 562496|0) + ($$1108<<2)|0);
  HEAP32[$47>>2] = $46;
  $$097107 = 0;
  while(1) {
   $$096105 = 0;
   while(1) {
    $49 = HEAP32[$$pre>>2]|0;
    $50 = ((($49)) + 185|0);
    $51 = HEAP8[$50>>0]|0;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = HEAP32[$1>>2]|0;
     $55 = ((((($54)) + 348|0) + ($$1108<<4)|0) + ($$096105)|0);
     $$sink = $55;
    } else {
     $53 = ((((($49)) + 198|0) + ($$1108<<4)|0) + ($$096105)|0);
     $$sink = $53;
    }
    $56 = HEAP8[$$sink>>0]|0;
    $57 = $56&255;
    $58 = $$096105 & 7;
    $59 = ((16 + ($$097107<<4)|0) + ($58<<1)|0);
    $60 = HEAP16[$59>>1]|0;
    $61 = $60&65535;
    $62 = Math_imul($61, $57)|0;
    $63 = $62&65535;
    $64 = HEAP32[$45>>2]|0;
    $65 = ((($64) + ($$097107<<5)|0) + ($$096105<<1)|0);
    HEAP16[$65>>1] = $63;
    $66 = (($$096105) + 1)|0;
    $exitcond = ($66|0)==(16);
    if ($exitcond) {
     break;
    } else {
     $$096105 = $66;
    }
   }
   $48 = (($$097107|0) % 6)&-1;
   $$0106 = 0;
   while(1) {
    $67 = HEAP32[$$pre>>2]|0;
    $68 = ((($67)) + 185|0);
    $69 = HEAP8[$68>>0]|0;
    $70 = ($69<<24>>24)==(0);
    $71 = (($$0106|0) / 8)&-1;
    if ($70) {
     $73 = HEAP32[$1>>2]|0;
     $74 = ((((($73)) + 444|0) + ($$1108<<6)|0) + ($$0106)|0);
     $$sink101 = $74;
    } else {
     $72 = ((((($67)) + 294|0) + ($$1108<<6)|0) + ($$0106)|0);
     $$sink101 = $72;
    }
    $75 = HEAP8[$$sink101>>0]|0;
    $76 = $75&255;
    $77 = (($$0106|0) % 8)&-1;
    $78 = (((24777 + ($48<<6)|0) + ($71<<3)|0) + ($77)|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = $79&255;
    $81 = Math_imul($80, $76)|0;
    $82 = $81&65535;
    $83 = HEAP32[$47>>2]|0;
    $84 = ((($83) + ($$097107<<7)|0) + ($$0106<<1)|0);
    HEAP16[$84>>1] = $82;
    $85 = (($$0106) + 1)|0;
    $exitcond111 = ($85|0)==(64);
    if ($exitcond111) {
     break;
    } else {
     $$0106 = $85;
    }
   }
   $86 = (($$097107) + 1)|0;
   $exitcond112 = ($86|0)==(51);
   if ($exitcond112) {
    break;
   } else {
    $$097107 = $86;
   }
  }
  $87 = (($$1108) + 1)|0;
  $exitcond113 = ($87|0)==(6);
  if ($exitcond113) {
   break;
  } else {
   $$1108 = $87;
  }
 }
 HEAP8[$12>>0] = 1;
 $88 = HEAP32[$$pre>>2]|0;
 $89 = ((($88)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($0)) + 562520|0);
 HEAP32[$91>>2] = $90;
 return 0;
}
function __ZN7WelsDec19WelsCabacGlobalInitEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$ = 0, $$$1 = 0, $$$2 = 0, $$$3 = 0, $$0 = 0, $$0$1 = 0, $$0$2 = 0, $$0$3 = 0, $$0$in = 0, $$0$in$1 = 0, $$0$in$2 = 0, $$0$in$3 = 0, $$042 = 0, $$042$1 = 0, $$042$2 = 0, $$042$3 = 0, $$04448 = 0, $$04448$1 = 0, $$04448$2 = 0, $$04448$3 = 0;
 var $$04547 = 0, $$04547$1 = 0, $$04547$2 = 0, $$04547$3 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0;
 var $9 = 0, $exitcond = 0, $exitcond$1 = 0, $exitcond$2 = 0, $exitcond$3 = 0, $exitcond50 = 0, $exitcond50$1 = 0, $exitcond50$2 = 0, $exitcond50$3 = 0, $not$ = 0, $not$$1 = 0, $not$$2 = 0, $not$$3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$04448 = 0;
 while(1) {
  $$04547 = 0;
  while(1) {
   $2 = (11143 + ($$04547<<3)|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = $3 << 24 >> 24;
   $5 = (((11143 + ($$04547<<3)|0)) + 1|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = $6 << 24 >> 24;
   $8 = Math_imul($4, $$04448)|0;
   $9 = $8 >> 4;
   $10 = (($9) + ($7))|0;
   $11 = ($10|0)<(1);
   $12 = ($10|0)<(126);
   $$ = $12 ? $10 : 126;
   $13 = $11 ? 1 : $$;
   $14 = ($13|0)<(64);
   $15 = (63 - ($13))|0;
   $16 = (($13) + 192)|0;
   $not$ = $14 ^ 1;
   $$042 = $not$&1;
   $$0$in = $14 ? $15 : $16;
   $$0 = $$0$in&255;
   $17 = ((((($0)) + 319948|0) + (($$04448*920)|0)|0) + ($$04547<<1)|0);
   HEAP8[$17>>0] = $$0;
   $18 = ((((((($0)) + 319948|0) + (($$04448*920)|0)|0) + ($$04547<<1)|0)) + 1|0);
   HEAP8[$18>>0] = $$042;
   $19 = (($$04547) + 1)|0;
   $exitcond = ($19|0)==(460);
   if ($exitcond) {
    break;
   } else {
    $$04547 = $19;
   }
  }
  $1 = (($$04448) + 1)|0;
  $exitcond50 = ($1|0)==(52);
  if ($exitcond50) {
   $$04448$1 = 0;
   break;
  } else {
   $$04448 = $1;
  }
 }
 while(1) {
  $$04547$1 = 0;
  while(1) {
   $20 = (((11143 + ($$04547$1<<3)|0)) + 2|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21 << 24 >> 24;
   $23 = (((11143 + ($$04547$1<<3)|0)) + 3|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = $24 << 24 >> 24;
   $26 = Math_imul($22, $$04448$1)|0;
   $27 = $26 >> 4;
   $28 = (($27) + ($25))|0;
   $29 = ($28|0)<(1);
   $30 = ($28|0)<(126);
   $$$1 = $30 ? $28 : 126;
   $31 = $29 ? 1 : $$$1;
   $32 = ($31|0)<(64);
   $33 = (63 - ($31))|0;
   $34 = (($31) + 192)|0;
   $not$$1 = $32 ^ 1;
   $$042$1 = $not$$1&1;
   $$0$in$1 = $32 ? $33 : $34;
   $$0$1 = $$0$in$1&255;
   $35 = ((((($0)) + 367788|0) + (($$04448$1*920)|0)|0) + ($$04547$1<<1)|0);
   HEAP8[$35>>0] = $$0$1;
   $36 = ((((((($0)) + 367788|0) + (($$04448$1*920)|0)|0) + ($$04547$1<<1)|0)) + 1|0);
   HEAP8[$36>>0] = $$042$1;
   $37 = (($$04547$1) + 1)|0;
   $exitcond$1 = ($37|0)==(460);
   if ($exitcond$1) {
    break;
   } else {
    $$04547$1 = $37;
   }
  }
  $38 = (($$04448$1) + 1)|0;
  $exitcond50$1 = ($38|0)==(52);
  if ($exitcond50$1) {
   $$04448$2 = 0;
   break;
  } else {
   $$04448$1 = $38;
  }
 }
 while(1) {
  $$04547$2 = 0;
  while(1) {
   $39 = (((11143 + ($$04547$2<<3)|0)) + 4|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = $40 << 24 >> 24;
   $42 = (((11143 + ($$04547$2<<3)|0)) + 5|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = $43 << 24 >> 24;
   $45 = Math_imul($41, $$04448$2)|0;
   $46 = $45 >> 4;
   $47 = (($46) + ($44))|0;
   $48 = ($47|0)<(1);
   $49 = ($47|0)<(126);
   $$$2 = $49 ? $47 : 126;
   $50 = $48 ? 1 : $$$2;
   $51 = ($50|0)<(64);
   $52 = (63 - ($50))|0;
   $53 = (($50) + 192)|0;
   $not$$2 = $51 ^ 1;
   $$042$2 = $not$$2&1;
   $$0$in$2 = $51 ? $52 : $53;
   $$0$2 = $$0$in$2&255;
   $54 = ((((($0)) + 415628|0) + (($$04448$2*920)|0)|0) + ($$04547$2<<1)|0);
   HEAP8[$54>>0] = $$0$2;
   $55 = ((((((($0)) + 415628|0) + (($$04448$2*920)|0)|0) + ($$04547$2<<1)|0)) + 1|0);
   HEAP8[$55>>0] = $$042$2;
   $56 = (($$04547$2) + 1)|0;
   $exitcond$2 = ($56|0)==(460);
   if ($exitcond$2) {
    break;
   } else {
    $$04547$2 = $56;
   }
  }
  $57 = (($$04448$2) + 1)|0;
  $exitcond50$2 = ($57|0)==(52);
  if ($exitcond50$2) {
   $$04448$3 = 0;
   break;
  } else {
   $$04448$2 = $57;
  }
 }
 while(1) {
  $$04547$3 = 0;
  while(1) {
   $58 = (((11143 + ($$04547$3<<3)|0)) + 6|0);
   $59 = HEAP8[$58>>0]|0;
   $60 = $59 << 24 >> 24;
   $61 = (((11143 + ($$04547$3<<3)|0)) + 7|0);
   $62 = HEAP8[$61>>0]|0;
   $63 = $62 << 24 >> 24;
   $64 = Math_imul($60, $$04448$3)|0;
   $65 = $64 >> 4;
   $66 = (($65) + ($63))|0;
   $67 = ($66|0)<(1);
   $68 = ($66|0)<(126);
   $$$3 = $68 ? $66 : 126;
   $69 = $67 ? 1 : $$$3;
   $70 = ($69|0)<(64);
   $71 = (63 - ($69))|0;
   $72 = (($69) + 192)|0;
   $not$$3 = $70 ^ 1;
   $$042$3 = $not$$3&1;
   $$0$in$3 = $70 ? $71 : $72;
   $$0$3 = $$0$in$3&255;
   $73 = ((((($0)) + 463468|0) + (($$04448$3*920)|0)|0) + ($$04547$3<<1)|0);
   HEAP8[$73>>0] = $$0$3;
   $74 = ((((((($0)) + 463468|0) + (($$04448$3*920)|0)|0) + ($$04547$3<<1)|0)) + 1|0);
   HEAP8[$74>>0] = $$042$3;
   $75 = (($$04547$3) + 1)|0;
   $exitcond$3 = ($75|0)==(460);
   if ($exitcond$3) {
    break;
   } else {
    $$04547$3 = $75;
   }
  }
  $76 = (($$04448$3) + 1)|0;
  $exitcond50$3 = ($76|0)==(52);
  if ($exitcond50$3) {
   break;
  } else {
   $$04448$3 = $76;
  }
 }
 $77 = ((($0)) + 511308|0);
 HEAP8[$77>>0] = 1;
 return;
}
function __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$70 = 0, $$72 = 0, $$sink = 0, $$sink5 = 0, $$sink69 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4040|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $28 = ((($0)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ($29|0)==(0);
  $31 = (($4) + -1)|0;
  $$ = $30 ? 0 : $31;
  $32 = ((($1)) + 29|0);
  HEAP8[$32>>0] = -1;
  $33 = $1;
  $34 = $33;
  HEAP8[$34>>0]=-1&255;HEAP8[$34+1>>0]=(-1>>8)&255;HEAP8[$34+2>>0]=(-1>>16)&255;HEAP8[$34+3>>0]=-1>>24;
  $35 = (($33) + 4)|0;
  $36 = $35;
  HEAP8[$36>>0]=-1&255;HEAP8[$36+1>>0]=(-1>>8)&255;HEAP8[$36+2>>0]=(-1>>16)&255;HEAP8[$36+3>>0]=-1>>24;
  $$72 = $$;$$sink = -1;$39 = $28;
 } else {
  $7 = ((($2)) + 4044|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (($4) - ($8))|0;
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  $13 = (($4) + -1)|0;
  $$70 = $12 ? 0 : $13;
  $14 = ((($2)) + 3964|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (((($15) + (($9*24)|0)|0)) + 12|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = ((($1)) + 1|0);
  HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
  $19 = ((($1)) + 29|0);
  HEAP8[$19>>0] = 0;
  $20 = ((($1)) + 5|0);
  HEAP8[$20>>0] = 0;
  HEAP8[$1>>0] = 0;
  $21 = HEAP32[$14>>2]|0;
  $22 = (((($21) + (($9*24)|0)|0)) + 20|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8);
  $24 = ((($1)) + 6|0);
  HEAP8[$24>>0]=$23&255;HEAP8[$24+1>>0]=$23>>8;
  $25 = HEAP32[$14>>2]|0;
  $26 = (((($25) + (($9*24)|0)|0)) + 22|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
  $$72 = $$70;$$sink = $27;$39 = $10;
 }
 $37 = ((($1)) + 30|0);
 HEAP8[$37>>0]=$$sink&255;HEAP8[$37+1>>0]=$$sink>>8;
 $38 = HEAP32[$39>>2]|0;
 $40 = ($38|0)==(0);
 if ($40) {
  $73 = ((($1)) + 32|0);
  HEAP8[$73>>0] = -1;
  $74 = ((($1)) + 24|0);
  HEAP8[$74>>0] = -1;
  $75 = ((($1)) + 16|0);
  HEAP8[$75>>0] = -1;
  $76 = ((($1)) + 8|0);
  HEAP8[$76>>0] = -1;
  $77 = ((($1)) + 21|0);
  HEAP8[$77>>0] = -1;
  $78 = ((($1)) + 13|0);
  HEAP8[$78>>0] = -1;
  $79 = ((($1)) + 45|0);
  HEAP8[$79>>0] = -1;
  $$sink5 = -1;$$sink69 = 37;
  $80 = (($1) + ($$sink69)|0);
  HEAP8[$80>>0] = $$sink5;
  return;
 } else {
  $41 = ((($2)) + 3964|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (((($42) + (($$72*24)|0)|0)) + 3|0);
  $44 = HEAP8[$43>>0]|0;
  $45 = ((($1)) + 8|0);
  HEAP8[$45>>0] = $44;
  $46 = HEAP32[$41>>2]|0;
  $47 = (((($46) + (($$72*24)|0)|0)) + 7|0);
  $48 = HEAP8[$47>>0]|0;
  $49 = ((($1)) + 16|0);
  HEAP8[$49>>0] = $48;
  $50 = HEAP32[$41>>2]|0;
  $51 = (((($50) + (($$72*24)|0)|0)) + 11|0);
  $52 = HEAP8[$51>>0]|0;
  $53 = ((($1)) + 24|0);
  HEAP8[$53>>0] = $52;
  $54 = HEAP32[$41>>2]|0;
  $55 = (((($54) + (($$72*24)|0)|0)) + 15|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = ((($1)) + 32|0);
  HEAP8[$57>>0] = $56;
  $58 = HEAP32[$41>>2]|0;
  $59 = (((($58) + (($$72*24)|0)|0)) + 17|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = ((($1)) + 13|0);
  HEAP8[$61>>0] = $60;
  $62 = HEAP32[$41>>2]|0;
  $63 = (((($62) + (($$72*24)|0)|0)) + 21|0);
  $64 = HEAP8[$63>>0]|0;
  $65 = ((($1)) + 21|0);
  HEAP8[$65>>0] = $64;
  $66 = HEAP32[$41>>2]|0;
  $67 = (((($66) + (($$72*24)|0)|0)) + 19|0);
  $68 = HEAP8[$67>>0]|0;
  $69 = ((($1)) + 37|0);
  HEAP8[$69>>0] = $68;
  $70 = HEAP32[$41>>2]|0;
  $71 = (((($70) + (($$72*24)|0)|0)) + 23|0);
  $72 = HEAP8[$71>>0]|0;
  $$sink5 = $72;$$sink69 = 45;
  $80 = (($1) + ($$sink69)|0);
  HEAP8[$80>>0] = $$sink5;
  return;
 }
}
function __ZN7WelsDec29WelsActualDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0516622 = 0, $$1517619 = 0, $$1525 = 0, $$1525$in = 0, $$1527 = 0, $$1527$off = 0, $$25 = 0, $$2520616 = 0, $$4522614 = 0, $$562 = 0, $$563 = 0, $$563$1 = 0, $$565 = 0, $$565$1 = 0, $$9 = 0, $$9$ph = 0, $$off551 = 0, $$phi$trans$insert = 0, $$phi$trans$insert652 = 0, $$pre = 0;
 var $$pre$phiZ2D = 0, $$pre650 = 0, $$pre651 = 0, $$pre653 = 0, $$sink26 = 0, $$sink26$in$in = 0, $$sink561 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0;
 var $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0;
 var $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0;
 var $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond17 = 0, $or$cond19 = 0, $scevgep = 0, $scevgep648 = 0, $storemerge$i = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $1 = sp + 40|0;
 $2 = sp + 4|0;
 $3 = sp;
 $4 = sp + 103|0;
 $5 = ((($0)) + 5864|0);
 $6 = ((($0)) + 241932|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 3900|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 3866|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = ((($7)) + 3867|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = ((($7)) + 4032|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($7)) + 4036|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($7)) + 4040|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($7)) + 3964|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (($23) + (($21*24)|0)|0);
 $25 = ((($4)) + 15|0);
 $26 = $25;
 $27 = $26 & 15;
 $28 = (0 - ($27))|0;
 $29 = (($25) + ($28)|0);
 __ZN7WelsDec22GetNeighborAvailMbTypeEPNS_16TagNeighborAvailEPNS_10TagDqLayerE($2,$7);
 $30 = ((($7)) + 3976|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (($31) + ($21)|0);
 HEAP8[$32>>0] = 0;
 $33 = ((($7)) + 3861|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = ((($7)) + 3972|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (($36) + ($21)|0);
 HEAP8[$37>>0] = $34;
 $38 = ((($7)) + 3940|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (($39) + ($21)|0);
 HEAP8[$40>>0] = 1;
 $41 = ((($7)) + 3944|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = (($42) + ($21)|0);
 HEAP8[$43>>0] = 0;
 $44 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($9,$3)|0);
 $45 = ($44|0)==(0);
 if (!($45)) {
  $$25 = $44;
  STACKTOP = sp;return ($$25|0);
 }
 $46 = HEAP32[$3>>2]|0;
 $47 = ($46>>>0)>(25);
 if ($47) {
  $$25 = 1035;
  STACKTOP = sp;return ($$25|0);
 }
 $48 = ((($0)) + 241924|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ((($49)) + 318|0);
 $51 = HEAP8[$50>>0]|0;
 $52 = ($51<<24>>24)==(0);
 L7: do {
  if ($52) {
   switch ($46|0) {
   case 25:  {
    label = 6;
    break L7;
    break;
   }
   case 0:  {
    label = 7;
    break L7;
    break;
   }
   case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24:  {
    $$25 = 1035;
    break;
   }
   default: {
    label = 22;
    break L7;
   }
   }
   STACKTOP = sp;return ($$25|0);
  } else {
   switch ($46|0) {
   case 25:  {
    label = 6;
    break;
   }
   case 0:  {
    label = 7;
    break;
   }
   default: {
    label = 22;
   }
   }
  }
 } while(0);
 L11: do {
  if ((label|0) == 6) {
   $53 = ((($7)) + 4100|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($54)) + 32|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($54)) + 36|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = Math_imul($56, $19)|0;
   $60 = (($59) + ($17))|0;
   $61 = $60 << 4;
   $62 = Math_imul($58, $19)|0;
   $63 = (($62) + ($17))|0;
   $64 = ((($54)) + 16|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = (($65) + ($61)|0);
   $67 = ((($54)) + 20|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ((($54)) + 24|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($9)) + 24|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (0 - ($72))|0;
   $74 = $73 >> 3;
   $75 = ((($7)) + 3908|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = (($76) + ($21<<1)|0);
   HEAP16[$77>>1] = 512;
   $78 = ((($9)) + 16|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = (-2 - ($74))|0;
   $81 = (($79) + ($80)|0);
   HEAP32[$78>>2] = $81;
   $82 = (254 - ($74))|0;
   dest=$66; src=$81; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $83 = (($66) + ($56)|0);
   $84 = ((($81)) + 16|0);
   dest=$83; src=$84; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $85 = (($83) + ($56)|0);
   $86 = ((($84)) + 16|0);
   dest=$85; src=$86; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $87 = (($85) + ($56)|0);
   $88 = ((($86)) + 16|0);
   dest=$87; src=$88; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $89 = (($87) + ($56)|0);
   $90 = ((($88)) + 16|0);
   dest=$89; src=$90; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $91 = (($89) + ($56)|0);
   $92 = ((($90)) + 16|0);
   dest=$91; src=$92; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $93 = (($91) + ($56)|0);
   $94 = ((($92)) + 16|0);
   dest=$93; src=$94; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $95 = (($93) + ($56)|0);
   $96 = ((($94)) + 16|0);
   dest=$95; src=$96; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $97 = (($95) + ($56)|0);
   $98 = ((($96)) + 16|0);
   dest=$97; src=$98; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $99 = (($97) + ($56)|0);
   $100 = ((($98)) + 16|0);
   dest=$99; src=$100; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $101 = (($99) + ($56)|0);
   $102 = ((($100)) + 16|0);
   dest=$101; src=$102; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $103 = (($101) + ($56)|0);
   $104 = ((($102)) + 16|0);
   dest=$103; src=$104; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $105 = (($103) + ($56)|0);
   $106 = ((($104)) + 16|0);
   dest=$105; src=$106; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $107 = (($105) + ($56)|0);
   $108 = ((($106)) + 16|0);
   dest=$107; src=$108; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $109 = (($107) + ($56)|0);
   $110 = ((($108)) + 16|0);
   dest=$109; src=$110; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $111 = (($109) + ($56)|0);
   $112 = ((($110)) + 16|0);
   dest=$111; src=$112; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $113 = $63 << 3;
   $114 = (($68) + ($113)|0);
   $115 = (($70) + ($113)|0);
   $scevgep648 = (($79) + ($82)|0);
   $116 = $scevgep648;
   $117 = $116;
   $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
   $119 = (($116) + 4)|0;
   $120 = $119;
   $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
   $122 = $114;
   $123 = $122;
   HEAP8[$123>>0]=$118&255;HEAP8[$123+1>>0]=($118>>8)&255;HEAP8[$123+2>>0]=($118>>16)&255;HEAP8[$123+3>>0]=$118>>24;
   $124 = (($122) + 4)|0;
   $125 = $124;
   HEAP8[$125>>0]=$121&255;HEAP8[$125+1>>0]=($121>>8)&255;HEAP8[$125+2>>0]=($121>>16)&255;HEAP8[$125+3>>0]=$121>>24;
   $126 = (($114) + ($58)|0);
   $127 = ((($scevgep648)) + 8|0);
   $128 = $127;
   $129 = $128;
   $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
   $131 = (($128) + 4)|0;
   $132 = $131;
   $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
   $134 = $126;
   $135 = $134;
   HEAP8[$135>>0]=$130&255;HEAP8[$135+1>>0]=($130>>8)&255;HEAP8[$135+2>>0]=($130>>16)&255;HEAP8[$135+3>>0]=$130>>24;
   $136 = (($134) + 4)|0;
   $137 = $136;
   HEAP8[$137>>0]=$133&255;HEAP8[$137+1>>0]=($133>>8)&255;HEAP8[$137+2>>0]=($133>>16)&255;HEAP8[$137+3>>0]=$133>>24;
   $138 = (($126) + ($58)|0);
   $139 = ((($127)) + 8|0);
   $140 = $139;
   $141 = $140;
   $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
   $143 = (($140) + 4)|0;
   $144 = $143;
   $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
   $146 = $138;
   $147 = $146;
   HEAP8[$147>>0]=$142&255;HEAP8[$147+1>>0]=($142>>8)&255;HEAP8[$147+2>>0]=($142>>16)&255;HEAP8[$147+3>>0]=$142>>24;
   $148 = (($146) + 4)|0;
   $149 = $148;
   HEAP8[$149>>0]=$145&255;HEAP8[$149+1>>0]=($145>>8)&255;HEAP8[$149+2>>0]=($145>>16)&255;HEAP8[$149+3>>0]=$145>>24;
   $150 = (($138) + ($58)|0);
   $151 = ((($139)) + 8|0);
   $152 = $151;
   $153 = $152;
   $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
   $155 = (($152) + 4)|0;
   $156 = $155;
   $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
   $158 = $150;
   $159 = $158;
   HEAP8[$159>>0]=$154&255;HEAP8[$159+1>>0]=($154>>8)&255;HEAP8[$159+2>>0]=($154>>16)&255;HEAP8[$159+3>>0]=$154>>24;
   $160 = (($158) + 4)|0;
   $161 = $160;
   HEAP8[$161>>0]=$157&255;HEAP8[$161+1>>0]=($157>>8)&255;HEAP8[$161+2>>0]=($157>>16)&255;HEAP8[$161+3>>0]=$157>>24;
   $162 = (($150) + ($58)|0);
   $163 = ((($151)) + 8|0);
   $164 = $163;
   $165 = $164;
   $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
   $167 = (($164) + 4)|0;
   $168 = $167;
   $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
   $170 = $162;
   $171 = $170;
   HEAP8[$171>>0]=$166&255;HEAP8[$171+1>>0]=($166>>8)&255;HEAP8[$171+2>>0]=($166>>16)&255;HEAP8[$171+3>>0]=$166>>24;
   $172 = (($170) + 4)|0;
   $173 = $172;
   HEAP8[$173>>0]=$169&255;HEAP8[$173+1>>0]=($169>>8)&255;HEAP8[$173+2>>0]=($169>>16)&255;HEAP8[$173+3>>0]=$169>>24;
   $174 = (($162) + ($58)|0);
   $175 = ((($163)) + 8|0);
   $176 = $175;
   $177 = $176;
   $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
   $179 = (($176) + 4)|0;
   $180 = $179;
   $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
   $182 = $174;
   $183 = $182;
   HEAP8[$183>>0]=$178&255;HEAP8[$183+1>>0]=($178>>8)&255;HEAP8[$183+2>>0]=($178>>16)&255;HEAP8[$183+3>>0]=$178>>24;
   $184 = (($182) + 4)|0;
   $185 = $184;
   HEAP8[$185>>0]=$181&255;HEAP8[$185+1>>0]=($181>>8)&255;HEAP8[$185+2>>0]=($181>>16)&255;HEAP8[$185+3>>0]=$181>>24;
   $186 = (($174) + ($58)|0);
   $187 = ((($175)) + 8|0);
   $188 = $187;
   $189 = $188;
   $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
   $191 = (($188) + 4)|0;
   $192 = $191;
   $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
   $194 = $186;
   $195 = $194;
   HEAP8[$195>>0]=$190&255;HEAP8[$195+1>>0]=($190>>8)&255;HEAP8[$195+2>>0]=($190>>16)&255;HEAP8[$195+3>>0]=$190>>24;
   $196 = (($194) + 4)|0;
   $197 = $196;
   HEAP8[$197>>0]=$193&255;HEAP8[$197+1>>0]=($193>>8)&255;HEAP8[$197+2>>0]=($193>>16)&255;HEAP8[$197+3>>0]=$193>>24;
   $198 = (($186) + ($58)|0);
   $199 = ((($187)) + 8|0);
   $200 = $199;
   $201 = $200;
   $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
   $203 = (($200) + 4)|0;
   $204 = $203;
   $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
   $206 = $198;
   $207 = $206;
   HEAP8[$207>>0]=$202&255;HEAP8[$207+1>>0]=($202>>8)&255;HEAP8[$207+2>>0]=($202>>16)&255;HEAP8[$207+3>>0]=$202>>24;
   $208 = (($206) + 4)|0;
   $209 = $208;
   HEAP8[$209>>0]=$205&255;HEAP8[$209+1>>0]=($205>>8)&255;HEAP8[$209+2>>0]=($205>>16)&255;HEAP8[$209+3>>0]=$205>>24;
   $scevgep = ((($scevgep648)) + 64|0);
   $210 = $scevgep;
   $211 = $210;
   $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
   $213 = (($210) + 4)|0;
   $214 = $213;
   $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
   $216 = $115;
   $217 = $216;
   HEAP8[$217>>0]=$212&255;HEAP8[$217+1>>0]=($212>>8)&255;HEAP8[$217+2>>0]=($212>>16)&255;HEAP8[$217+3>>0]=$212>>24;
   $218 = (($216) + 4)|0;
   $219 = $218;
   HEAP8[$219>>0]=$215&255;HEAP8[$219+1>>0]=($215>>8)&255;HEAP8[$219+2>>0]=($215>>16)&255;HEAP8[$219+3>>0]=$215>>24;
   $220 = (($115) + ($58)|0);
   $221 = ((($scevgep)) + 8|0);
   $222 = $221;
   $223 = $222;
   $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
   $225 = (($222) + 4)|0;
   $226 = $225;
   $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
   $228 = $220;
   $229 = $228;
   HEAP8[$229>>0]=$224&255;HEAP8[$229+1>>0]=($224>>8)&255;HEAP8[$229+2>>0]=($224>>16)&255;HEAP8[$229+3>>0]=$224>>24;
   $230 = (($228) + 4)|0;
   $231 = $230;
   HEAP8[$231>>0]=$227&255;HEAP8[$231+1>>0]=($227>>8)&255;HEAP8[$231+2>>0]=($227>>16)&255;HEAP8[$231+3>>0]=$227>>24;
   $232 = (($220) + ($58)|0);
   $233 = ((($221)) + 8|0);
   $234 = $233;
   $235 = $234;
   $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
   $237 = (($234) + 4)|0;
   $238 = $237;
   $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
   $240 = $232;
   $241 = $240;
   HEAP8[$241>>0]=$236&255;HEAP8[$241+1>>0]=($236>>8)&255;HEAP8[$241+2>>0]=($236>>16)&255;HEAP8[$241+3>>0]=$236>>24;
   $242 = (($240) + 4)|0;
   $243 = $242;
   HEAP8[$243>>0]=$239&255;HEAP8[$243+1>>0]=($239>>8)&255;HEAP8[$243+2>>0]=($239>>16)&255;HEAP8[$243+3>>0]=$239>>24;
   $244 = (($232) + ($58)|0);
   $245 = ((($233)) + 8|0);
   $246 = $245;
   $247 = $246;
   $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
   $249 = (($246) + 4)|0;
   $250 = $249;
   $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
   $252 = $244;
   $253 = $252;
   HEAP8[$253>>0]=$248&255;HEAP8[$253+1>>0]=($248>>8)&255;HEAP8[$253+2>>0]=($248>>16)&255;HEAP8[$253+3>>0]=$248>>24;
   $254 = (($252) + 4)|0;
   $255 = $254;
   HEAP8[$255>>0]=$251&255;HEAP8[$255+1>>0]=($251>>8)&255;HEAP8[$255+2>>0]=($251>>16)&255;HEAP8[$255+3>>0]=$251>>24;
   $256 = (($244) + ($58)|0);
   $257 = ((($245)) + 8|0);
   $258 = $257;
   $259 = $258;
   $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
   $261 = (($258) + 4)|0;
   $262 = $261;
   $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
   $264 = $256;
   $265 = $264;
   HEAP8[$265>>0]=$260&255;HEAP8[$265+1>>0]=($260>>8)&255;HEAP8[$265+2>>0]=($260>>16)&255;HEAP8[$265+3>>0]=$260>>24;
   $266 = (($264) + 4)|0;
   $267 = $266;
   HEAP8[$267>>0]=$263&255;HEAP8[$267+1>>0]=($263>>8)&255;HEAP8[$267+2>>0]=($263>>16)&255;HEAP8[$267+3>>0]=$263>>24;
   $268 = (($256) + ($58)|0);
   $269 = ((($257)) + 8|0);
   $270 = $269;
   $271 = $270;
   $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
   $273 = (($270) + 4)|0;
   $274 = $273;
   $275 = HEAPU8[$274>>0]|(HEAPU8[$274+1>>0]<<8)|(HEAPU8[$274+2>>0]<<16)|(HEAPU8[$274+3>>0]<<24);
   $276 = $268;
   $277 = $276;
   HEAP8[$277>>0]=$272&255;HEAP8[$277+1>>0]=($272>>8)&255;HEAP8[$277+2>>0]=($272>>16)&255;HEAP8[$277+3>>0]=$272>>24;
   $278 = (($276) + 4)|0;
   $279 = $278;
   HEAP8[$279>>0]=$275&255;HEAP8[$279+1>>0]=($275>>8)&255;HEAP8[$279+2>>0]=($275>>16)&255;HEAP8[$279+3>>0]=$275>>24;
   $280 = (($268) + ($58)|0);
   $281 = ((($269)) + 8|0);
   $282 = $281;
   $283 = $282;
   $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
   $285 = (($282) + 4)|0;
   $286 = $285;
   $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
   $288 = $280;
   $289 = $288;
   HEAP8[$289>>0]=$284&255;HEAP8[$289+1>>0]=($284>>8)&255;HEAP8[$289+2>>0]=($284>>16)&255;HEAP8[$289+3>>0]=$284>>24;
   $290 = (($288) + 4)|0;
   $291 = $290;
   HEAP8[$291>>0]=$287&255;HEAP8[$291+1>>0]=($287>>8)&255;HEAP8[$291+2>>0]=($287>>16)&255;HEAP8[$291+3>>0]=$287>>24;
   $292 = (($280) + ($58)|0);
   $293 = ((($281)) + 8|0);
   $294 = $293;
   $295 = $294;
   $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
   $297 = (($294) + 4)|0;
   $298 = $297;
   $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
   $300 = $292;
   $301 = $300;
   HEAP8[$301>>0]=$296&255;HEAP8[$301+1>>0]=($296>>8)&255;HEAP8[$301+2>>0]=($296>>16)&255;HEAP8[$301+3>>0]=$296>>24;
   $302 = (($300) + 4)|0;
   $303 = $302;
   HEAP8[$303>>0]=$299&255;HEAP8[$303+1>>0]=($299>>8)&255;HEAP8[$303+2>>0]=($299>>16)&255;HEAP8[$303+3>>0]=$299>>24;
   $304 = HEAP32[$78>>2]|0;
   $305 = ((($304)) + 384|0);
   HEAP32[$78>>2] = $305;
   $306 = ((($7)) + 3948|0);
   $307 = HEAP32[$306>>2]|0;
   $308 = (($307) + ($21)|0);
   HEAP8[$308>>0] = 0;
   $309 = ((($7)) + 3952|0);
   $310 = HEAP32[$309>>2]|0;
   $311 = (($310) + ($21<<1)|0);
   HEAP8[$311>>0]=0&255;HEAP8[$311+1>>0]=0>>8;
   dest=$24; stop=dest+24|0; do { HEAP8[dest>>0]=16|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   $312 = (__ZN7WelsDec12InitReadBitsEPN10WelsCommon15TagBitStringAuxEi($9,0)|0);
   $$25 = $312;
   STACKTOP = sp;return ($$25|0);
  }
  else if ((label|0) == 7) {
   $313 = ((($1)) + 15|0);
   $314 = $313;
   $315 = $314 & 15;
   $316 = (0 - ($315))|0;
   $317 = (($313) + ($316)|0);
   $318 = ((($7)) + 3908|0);
   $319 = HEAP32[$318>>2]|0;
   $320 = (($319) + ($21<<1)|0);
   HEAP16[$320>>1] = 1;
   $321 = ((($0)) + 241928|0);
   $322 = HEAP32[$321>>2]|0;
   $323 = ((($322)) + 184|0);
   $324 = HEAP8[$323>>0]|0;
   $325 = ($324<<24>>24)==(0);
   do {
    if ($325) {
     label = 13;
    } else {
     $326 = ((($9)) + 20|0);
     $327 = HEAP32[$326>>2]|0;
     $328 = $327 >>> 31;
     $329 = ((($9)) + 4|0);
     $330 = HEAP32[$329>>2]|0;
     $331 = HEAP32[$9>>2]|0;
     $332 = ((($9)) + 16|0);
     $333 = HEAP32[$332>>2]|0;
     $334 = $327 << 1;
     HEAP32[$326>>2] = $334;
     $335 = ((($9)) + 24|0);
     $336 = HEAP32[$335>>2]|0;
     $337 = (($336) + 1)|0;
     HEAP32[$335>>2] = $337;
     $338 = ($336|0)>(-1);
     if ($338) {
      $339 = $333;
      $340 = (($339) - ($331))|0;
      $341 = (($330) + 1)|0;
      $342 = (($341) - ($331))|0;
      $343 = ($340|0)>($342|0);
      if ($343) {
       $$9$ph = 11;
       break;
      }
      $344 = HEAP8[$333>>0]|0;
      $345 = $344&255;
      $346 = $345 << 8;
      $347 = ((($333)) + 1|0);
      $348 = HEAP8[$347>>0]|0;
      $349 = $348&255;
      $350 = $346 | $349;
      $351 = $350 << $337;
      $352 = $351 | $334;
      HEAP32[$326>>2] = $352;
      $353 = (($336) + -15)|0;
      HEAP32[$335>>2] = $353;
      $354 = ((($333)) + 2|0);
      HEAP32[$332>>2] = $354;
     }
     HEAP32[$3>>2] = $328;
     $355 = HEAP32[$41>>2]|0;
     $356 = (($355) + ($21)|0);
     $357 = $328&255;
     HEAP8[$356>>0] = $357;
     $358 = HEAP32[$41>>2]|0;
     $359 = (($358) + ($21)|0);
     $360 = HEAP8[$359>>0]|0;
     $361 = ($360<<24>>24)==(0);
     if ($361) {
      label = 13;
     } else {
      $362 = HEAP32[$318>>2]|0;
      $363 = (($362) + ($21<<1)|0);
      HEAP16[$363>>1] = 4;
      label = 13;
     }
    }
   } while(0);
   do {
    if ((label|0) == 13) {
     $364 = HEAP32[$41>>2]|0;
     $365 = (($364) + ($21)|0);
     $366 = HEAP8[$365>>0]|0;
     $367 = ($366<<24>>24)==(0);
     $368 = ((($0)) + 317148|0);
     $369 = HEAP32[$368>>2]|0;
     FUNCTION_TABLE_viiii[$369 & 31]($2,$29,$317,$7);
     if ($367) {
      $370 = (__ZN7WelsDec17ParseIntra4x4ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$317,$9,$7)|0);
      $371 = ($370|0)==(0);
      if ($371) {
       label = 16;
      } else {
       $$9 = $370;
      }
     } else {
      $372 = (__ZN7WelsDec17ParseIntra8x8ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$317,$9,$7)|0);
      $373 = ($372|0)==(0);
      if ($373) {
       label = 16;
      } else {
       $$9 = $372;
      }
     }
     if ((label|0) == 16) {
      $374 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($9,$3)|0);
      $375 = ($374|0)==(0);
      if ($375) {
       $376 = HEAP32[$3>>2]|0;
       $377 = HEAP32[$48>>2]|0;
       $378 = ((($377)) + 318|0);
       $379 = HEAP8[$378>>0]|0;
       $380 = ($379<<24>>24)!=(0);
       $381 = ($376>>>0)>(47);
       $or$cond17 = $381 & $380;
       if ($or$cond17) {
        $$9$ph = 1042;
        break;
       }
       $382 = ($379<<24>>24)==(0);
       $383 = ($376>>>0)>(15);
       $or$cond19 = $383 & $382;
       if ($or$cond19) {
        $$9$ph = 1042;
        break;
       }
       $384 = (15702 + ($376)|0);
       $385 = (15654 + ($376)|0);
       $$sink561 = $380 ? $385 : $384;
       $386 = HEAP8[$$sink561>>0]|0;
       $387 = $386&255;
       $388 = ((($7)) + 3956|0);
       $389 = HEAP32[$388>>2]|0;
       $390 = (($389) + ($21)|0);
       HEAP8[$390>>0] = $386;
       $391 = $387 >>> 4;
       $$1525$in = $387;$$1527 = $391;$$pre$phiZ2D = $388;
       break L11;
      } else {
       $$9 = $374;
      }
     }
     $$25 = $$9;
     STACKTOP = sp;return ($$25|0);
    }
   } while(0);
   $$25 = $$9$ph;
   STACKTOP = sp;return ($$25|0);
  }
  else if ((label|0) == 22) {
   $392 = ((($7)) + 3908|0);
   $393 = HEAP32[$392>>2]|0;
   $394 = (($393) + ($21<<1)|0);
   HEAP16[$394>>1] = 2;
   $395 = HEAP32[$41>>2]|0;
   $396 = (($395) + ($21)|0);
   HEAP8[$396>>0] = 0;
   $397 = HEAP32[$38>>2]|0;
   $398 = (($397) + ($21)|0);
   HEAP8[$398>>0] = 1;
   $399 = (($46) + -1)|0;
   $400 = $399 & 3;
   $401 = $400&255;
   $402 = ((($7)) + 3992|0);
   $403 = HEAP32[$402>>2]|0;
   $404 = (((($403) + ($21<<3)|0)) + 7|0);
   HEAP8[$404>>0] = $401;
   $405 = $399 >>> 2;
   $406 = (25321 + ($405)|0);
   $407 = HEAP8[$406>>0]|0;
   $408 = ((($7)) + 3956|0);
   $409 = HEAP32[$408>>2]|0;
   $410 = (($409) + ($21)|0);
   HEAP8[$410>>0] = $407;
   $411 = HEAP32[$48>>2]|0;
   $412 = ((($411)) + 318|0);
   $413 = HEAP8[$412>>0]|0;
   $414 = ($413<<24>>24)==(0);
   $415 = HEAP32[$408>>2]|0;
   $416 = (($415) + ($21)|0);
   $417 = HEAP8[$416>>0]|0;
   $418 = $417 << 24 >> 24;
   $419 = $418 >> 4;
   $$562 = $414 ? 0 : $419;
   __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($2,$29,$7);
   $420 = (__ZN7WelsDec19ParseIntra16x16ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$9,$7)|0);
   $421 = ($420|0)==(0);
   if ($421) {
    $$1525$in = $418;$$1527 = $$562;$$pre$phiZ2D = $408;
   } else {
    $$25 = $420;
    STACKTOP = sp;return ($$25|0);
   }
  }
 } while(0);
 $$1525 = $$1525$in & 15;
 $422 = (((($23) + (($21*24)|0)|0)) + 4|0);
 $423 = (((($23) + (($21*24)|0)|0)) + 8|0);
 $424 = (((($23) + (($21*24)|0)|0)) + 12|0);
 $425 = (((($23) + (($21*24)|0)|0)) + 16|0);
 $426 = (((($23) + (($21*24)|0)|0)) + 20|0);
 ;HEAP32[$24>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;HEAP32[$24+12>>2]=0|0;HEAP32[$24+16>>2]=0|0;HEAP32[$24+20>>2]=0|0;
 $427 = HEAP32[$$pre$phiZ2D>>2]|0;
 $428 = (($427) + ($21)|0);
 $429 = HEAP8[$428>>0]|0;
 $430 = ($429<<24>>24)==(0);
 do {
  if ($430) {
   $431 = ((($7)) + 3908|0);
   $432 = HEAP32[$431>>2]|0;
   $433 = (($432) + ($21<<1)|0);
   $434 = HEAP16[$433>>1]|0;
   $435 = ($434<<16>>16)==(1);
   if ($435) {
    $436 = ((($7)) + 3868|0);
    $437 = HEAP32[$436>>2]|0;
    $438 = $437&255;
    $439 = ((($7)) + 3948|0);
    $440 = HEAP32[$439>>2]|0;
    $441 = (($440) + ($21)|0);
    HEAP8[$441>>0] = $438;
    $442 = ((($7)) + 92|0);
    $443 = ((($7)) + 3952|0);
    $444 = HEAP32[$439>>2]|0;
    $445 = (($444) + ($21)|0);
    $446 = HEAP8[$445>>0]|0;
    $447 = $446 << 24 >> 24;
    $448 = HEAP32[$442>>2]|0;
    $449 = ((($448)) + 168|0);
    $450 = HEAP32[$449>>2]|0;
    $451 = (($450) + ($447))|0;
    $452 = ($451|0)<(0);
    $453 = ($451|0)<(51);
    $$563 = $453 ? $451 : 51;
    $454 = $452 ? 0 : $$563;
    $455 = (11027 + ($454)|0);
    $456 = HEAP8[$455>>0]|0;
    $457 = HEAP32[$443>>2]|0;
    $458 = (($457) + ($21<<1)|0);
    HEAP8[$458>>0] = $456;
    $459 = HEAP32[$439>>2]|0;
    $460 = (($459) + ($21)|0);
    $461 = HEAP8[$460>>0]|0;
    $462 = $461 << 24 >> 24;
    $463 = HEAP32[$442>>2]|0;
    $464 = ((($463)) + 172|0);
    $465 = HEAP32[$464>>2]|0;
    $466 = (($465) + ($462))|0;
    $467 = ($466|0)<(0);
    $468 = ($466|0)<(51);
    $$563$1 = $468 ? $466 : 51;
    $469 = $467 ? 0 : $$563$1;
    $470 = (11027 + ($469)|0);
    $471 = HEAP8[$470>>0]|0;
    $472 = HEAP32[$443>>2]|0;
    $473 = (((($472) + ($21<<1)|0)) + 1|0);
    HEAP8[$473>>0] = $471;
    $$pre = HEAP32[$$pre$phiZ2D>>2]|0;
    $$phi$trans$insert = (($$pre) + ($21)|0);
    $$pre650 = HEAP8[$$phi$trans$insert>>0]|0;
    $474 = ($$pre650<<24>>24)==(0);
    if (!($474)) {
     break;
    }
   }
   $475 = ((($7)) + 3908|0);
   $476 = HEAP32[$475>>2]|0;
   $477 = (($476) + ($21<<1)|0);
   $478 = HEAP16[$477>>1]|0;
   $479 = ($478<<16>>16)==(2);
   if (!($479)) {
    $$25 = 0;
    STACKTOP = sp;return ($$25|0);
   }
  }
 } while(0);
 $480 = ((($7)) + 3988|0);
 $481 = HEAP32[$480>>2]|0;
 $482 = (($481) + (($21*768)|0)|0);
 _memset(($482|0),0,768)|0;
 $483 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($9,$1)|0);
 $484 = ($483|0)==(0);
 if (!($484)) {
  $$25 = $483;
  STACKTOP = sp;return ($$25|0);
 }
 $485 = HEAP32[$1>>2]|0;
 $486 = $485 & 1;
 $487 = ($486|0)==(0);
 $488 = $485 >>> 1;
 $489 = (0 - ($488))|0;
 $490 = (($485) + 1)|0;
 $491 = $490 >>> 1;
 $storemerge$i = $487 ? $489 : $491;
 $$off551 = (($storemerge$i) + 26)|0;
 $492 = ($$off551>>>0)>(51);
 if ($492) {
  $$25 = 1027;
  STACKTOP = sp;return ($$25|0);
 }
 $493 = ((($7)) + 3868|0);
 $494 = HEAP32[$493>>2]|0;
 $495 = (($storemerge$i) + 52)|0;
 $496 = (($495) + ($494))|0;
 $497 = (($496|0) % 52)&-1;
 $498 = $497&255;
 $499 = ((($7)) + 3948|0);
 $500 = HEAP32[$499>>2]|0;
 $501 = (($500) + ($21)|0);
 HEAP8[$501>>0] = $498;
 $502 = HEAP32[$499>>2]|0;
 $503 = (($502) + ($21)|0);
 $504 = HEAP8[$503>>0]|0;
 $505 = $504 << 24 >> 24;
 HEAP32[$493>>2] = $505;
 $506 = ((($7)) + 92|0);
 $507 = ((($7)) + 3952|0);
 $508 = HEAP32[$506>>2]|0;
 $509 = ((($508)) + 168|0);
 $510 = HEAP32[$509>>2]|0;
 $511 = (($510) + ($505))|0;
 $512 = ($511|0)<(0);
 $513 = ($511|0)<(51);
 $$565 = $513 ? $511 : 51;
 $514 = $512 ? 0 : $$565;
 $515 = (11027 + ($514)|0);
 $516 = HEAP8[$515>>0]|0;
 $517 = HEAP32[$507>>2]|0;
 $518 = (($517) + ($21<<1)|0);
 HEAP8[$518>>0] = $516;
 $519 = HEAP32[$493>>2]|0;
 $520 = HEAP32[$506>>2]|0;
 $521 = ((($520)) + 172|0);
 $522 = HEAP32[$521>>2]|0;
 $523 = (($522) + ($519))|0;
 $524 = ($523|0)<(0);
 $525 = ($523|0)<(51);
 $$565$1 = $525 ? $523 : 51;
 $526 = $524 ? 0 : $$565$1;
 $527 = (11027 + ($526)|0);
 $528 = HEAP8[$527>>0]|0;
 $529 = HEAP32[$507>>2]|0;
 $530 = (((($529) + ($21<<1)|0)) + 1|0);
 HEAP8[$530>>0] = $528;
 __ZN7WelsDec12BsStartCavlcEPN10WelsCommon15TagBitStringAuxE($9);
 $531 = ((($7)) + 3908|0);
 $532 = HEAP32[$531>>2]|0;
 $533 = (($532) + ($21<<1)|0);
 $534 = HEAP16[$533>>1]|0;
 $535 = ($534<<16>>16)==(2);
 L53: do {
  if ($535) {
   $536 = HEAP32[$480>>2]|0;
   $537 = (($536) + (($21*768)|0)|0);
   $538 = HEAP32[$499>>2]|0;
   $539 = (($538) + ($21)|0);
   $540 = HEAP8[$539>>0]|0;
   $541 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,0,16,15634,1,$537,$540,$0)|0);
   $542 = ($541|0)==(0);
   if (!($542)) {
    $$25 = -1;
    STACKTOP = sp;return ($$25|0);
   }
   $543 = ($$1525|0)==(0);
   if (!($543)) {
    $544 = ($12>>>0)>(1);
    $545 = $544 ? $12 : 1;
    $546 = (($15) + 1)|0;
    $547 = (($546) - ($545))|0;
    $548 = (27122 + ($545)|0);
    $$2520616 = 0;
    while(1) {
     $551 = HEAP32[$480>>2]|0;
     $552 = $$2520616 << 4;
     $553 = ((($551) + (($21*768)|0)|0) + ($552<<1)|0);
     $554 = HEAP32[$499>>2]|0;
     $555 = (($554) + ($21)|0);
     $556 = HEAP8[$555>>0]|0;
     $557 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$$2520616,$547,$548,2,$553,$556,$0)|0);
     $558 = ($557|0)==(0);
     $549 = (($$2520616) + 1)|0;
     if (!($558)) {
      $$25 = -1;
      break;
     }
     $550 = ($549|0)<(16);
     if ($550) {
      $$2520616 = $549;
     } else {
      label = 50;
      break L53;
     }
    }
    STACKTOP = sp;return ($$25|0);
   }
  } else {
   $559 = HEAP32[$41>>2]|0;
   $560 = (($559) + ($21)|0);
   $561 = HEAP8[$560>>0]|0;
   $562 = ($561<<24>>24)==(0);
   $563 = (1 - ($12))|0;
   $564 = (($563) + ($15))|0;
   if ($562) {
    $566 = (27122 + ($12)|0);
    $$1517619 = 0;
    while(1) {
     $602 = 1 << $$1517619;
     $603 = $602 & $$1525;
     $604 = ($603|0)==(0);
     $605 = $$1517619 << 2;
     if ($604) {
      $623 = (11119 + ($605)|0);
      $624 = HEAP8[$623>>0]|0;
      $625 = $624&255;
      $626 = (($29) + ($625)|0);
      HEAP8[$626>>0]=0&255;HEAP8[$626+1>>0]=0>>8;
      $627 = $605 | 2;
      $628 = (11119 + ($627)|0);
      $629 = HEAP8[$628>>0]|0;
      $630 = $629&255;
      $631 = (($29) + ($630)|0);
      HEAP8[$631>>0]=0&255;HEAP8[$631+1>>0]=0>>8;
     } else {
      $606 = HEAP32[$480>>2]|0;
      $607 = $$1517619 << 6;
      $608 = ((($606) + (($21*768)|0)|0) + ($607<<1)|0);
      $609 = HEAP32[$499>>2]|0;
      $610 = (($609) + ($21)|0);
      $611 = HEAP8[$610>>0]|0;
      $612 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$605,$564,$566,11,$608,$611,$0)|0);
      $613 = ($612|0)==(0);
      if (!($613)) {
       $$25 = -1;
       label = 60;
       break;
      }
      $614 = $605 | 1;
      $615 = HEAP32[$480>>2]|0;
      $616 = $614 << 4;
      $617 = ((($615) + (($21*768)|0)|0) + ($616<<1)|0);
      $618 = HEAP32[$499>>2]|0;
      $619 = (($618) + ($21)|0);
      $620 = HEAP8[$619>>0]|0;
      $621 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$614,$564,$566,11,$617,$620,$0)|0);
      $622 = ($621|0)==(0);
      if (!($622)) {
       $$25 = -1;
       label = 60;
       break;
      }
      $712 = (($614) + 1)|0;
      $713 = HEAP32[$480>>2]|0;
      $714 = $712 << 4;
      $715 = ((($713) + (($21*768)|0)|0) + ($714<<1)|0);
      $716 = HEAP32[$499>>2]|0;
      $717 = (($716) + ($21)|0);
      $718 = HEAP8[$717>>0]|0;
      $719 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$712,$564,$566,11,$715,$718,$0)|0);
      $720 = ($719|0)==(0);
      if (!($720)) {
       $$25 = -1;
       label = 60;
       break;
      }
      $721 = $605 | 3;
      $722 = HEAP32[$480>>2]|0;
      $723 = $721 << 4;
      $724 = ((($722) + (($21*768)|0)|0) + ($723<<1)|0);
      $725 = HEAP32[$499>>2]|0;
      $726 = (($725) + ($21)|0);
      $727 = HEAP8[$726>>0]|0;
      $728 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$721,$564,$566,11,$724,$727,$0)|0);
      $729 = ($728|0)==(0);
      if (!($729)) {
       $$25 = -1;
       label = 60;
       break;
      }
     }
     $632 = (($$1517619) + 1)|0;
     $633 = ($632|0)<(4);
     if ($633) {
      $$1517619 = $632;
     } else {
      label = 50;
      break L53;
     }
    }
    if ((label|0) == 60) {
     STACKTOP = sp;return ($$25|0);
    }
   }
   $565 = (27138 + ($12)|0);
   $$0516622 = 0;$568 = $534;
   while(1) {
    $567 = $568 & 519;
    $569 = ($567<<16>>16)!=(0);
    $570 = $569 ? 11 : 12;
    $571 = 1 << $$0516622;
    $572 = $571 & $$1525;
    $573 = ($572|0)==(0);
    $574 = $$0516622 << 2;
    if ($573) {
     $591 = (11119 + ($574)|0);
     $592 = HEAP8[$591>>0]|0;
     $593 = $592&255;
     $594 = (($29) + ($593)|0);
     HEAP8[$594>>0]=0&255;HEAP8[$594+1>>0]=0>>8;
     $595 = $574 | 2;
     $596 = (11119 + ($595)|0);
     $597 = HEAP8[$596>>0]|0;
     $598 = $597&255;
     $599 = (($29) + ($598)|0);
     HEAP8[$599>>0]=0&255;HEAP8[$599+1>>0]=0>>8;
    } else {
     $575 = $$0516622 << 6;
     $576 = HEAP32[$480>>2]|0;
     $577 = ((($576) + (($21*768)|0)|0) + ($575<<1)|0);
     $578 = HEAP32[$499>>2]|0;
     $579 = (($578) + ($21)|0);
     $580 = HEAP8[$579>>0]|0;
     $581 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($5,$29,$9,$574,$564,$565,$570,$577,0,$580,$0)|0);
     $582 = ($581|0)==(0);
     if (!($582)) {
      $$25 = -1;
      label = 60;
      break;
     }
     $583 = $574 | 1;
     $584 = HEAP32[$480>>2]|0;
     $585 = ((($584) + (($21*768)|0)|0) + ($575<<1)|0);
     $586 = HEAP32[$499>>2]|0;
     $587 = (($586) + ($21)|0);
     $588 = HEAP8[$587>>0]|0;
     $589 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($5,$29,$9,$583,$564,$565,$570,$585,1,$588,$0)|0);
     $590 = ($589|0)==(0);
     if (!($590)) {
      $$25 = -1;
      label = 60;
      break;
     }
     $730 = (($583) + 1)|0;
     $731 = HEAP32[$480>>2]|0;
     $732 = ((($731) + (($21*768)|0)|0) + ($575<<1)|0);
     $733 = HEAP32[$499>>2]|0;
     $734 = (($733) + ($21)|0);
     $735 = HEAP8[$734>>0]|0;
     $736 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($5,$29,$9,$730,$564,$565,$570,$732,2,$735,$0)|0);
     $737 = ($736|0)==(0);
     if (!($737)) {
      $$25 = -1;
      label = 60;
      break;
     }
     $738 = $574 | 3;
     $739 = HEAP32[$480>>2]|0;
     $740 = ((($739) + (($21*768)|0)|0) + ($575<<1)|0);
     $741 = HEAP32[$499>>2]|0;
     $742 = (($741) + ($21)|0);
     $743 = HEAP8[$742>>0]|0;
     $744 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($5,$29,$9,$738,$564,$565,$570,$740,3,$743,$0)|0);
     $745 = ($744|0)==(0);
     if (!($745)) {
      $$25 = -1;
      label = 60;
      break;
     }
    }
    $600 = (($$0516622) + 1)|0;
    $601 = ($600|0)<(4);
    if (!($601)) {
     label = 50;
     break L53;
    }
    $$pre651 = HEAP32[$531>>2]|0;
    $$phi$trans$insert652 = (($$pre651) + ($21<<1)|0);
    $$pre653 = HEAP16[$$phi$trans$insert652>>1]|0;
    $$0516622 = $600;$568 = $$pre653;
   }
   if ((label|0) == 60) {
    STACKTOP = sp;return ($$25|0);
   }
  }
 } while(0);
 if ((label|0) == 50) {
  $634 = ((($29)) + 9|0);
  $635 = HEAPU8[$634>>0]|(HEAPU8[$634+1>>0]<<8)|(HEAPU8[$634+2>>0]<<16)|(HEAPU8[$634+3>>0]<<24);
  HEAP32[$24>>2] = $635;
  $636 = ((($29)) + 17|0);
  $637 = HEAPU8[$636>>0]|(HEAPU8[$636+1>>0]<<8)|(HEAPU8[$636+2>>0]<<16)|(HEAPU8[$636+3>>0]<<24);
  HEAP32[$422>>2] = $637;
  $638 = ((($29)) + 25|0);
  $639 = HEAPU8[$638>>0]|(HEAPU8[$638+1>>0]<<8)|(HEAPU8[$638+2>>0]<<16)|(HEAPU8[$638+3>>0]<<24);
  HEAP32[$423>>2] = $639;
  $$sink26$in$in = ((($29)) + 33|0);
  $$sink26 = HEAPU8[$$sink26$in$in>>0]|(HEAPU8[$$sink26$in$in+1>>0]<<8)|(HEAPU8[$$sink26$in$in+2>>0]<<16)|(HEAPU8[$$sink26$in$in+3>>0]<<24);
  HEAP32[$424>>2] = $$sink26;
 }
 $640 = ($$1527|0)==(2);
 $$1527$off = (($$1527) + -1)|0;
 $641 = ($$1527$off>>>0)<(2);
 if ($641) {
  $642 = HEAP32[$480>>2]|0;
  $643 = (((($642) + (($21*768)|0)|0)) + 512|0);
  $644 = HEAP32[$507>>2]|0;
  $645 = (($644) + ($21<<1)|0);
  $646 = HEAP8[$645>>0]|0;
  $647 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,16,4,15650,7,$643,$646,$0)|0);
  $648 = ($647|0)==(0);
  if (!($648)) {
   $$25 = -1;
   STACKTOP = sp;return ($$25|0);
  }
  $649 = HEAP32[$480>>2]|0;
  $650 = (((($649) + (($21*768)|0)|0)) + 640|0);
  $651 = HEAP32[$507>>2]|0;
  $652 = (((($651) + ($21<<1)|0)) + 1|0);
  $653 = HEAP8[$652>>0]|0;
  $654 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,20,4,15650,8,$650,$653,$0)|0);
  $655 = ($654|0)==(0);
  if (!($655)) {
   $$25 = -1;
   STACKTOP = sp;return ($$25|0);
  }
 }
 do {
  if ($640) {
   $656 = ($12>>>0)>(1);
   $657 = $656 ? $12 : 1;
   $658 = (($15) + 1)|0;
   $659 = (($658) - ($657))|0;
   $660 = (27122 + ($657)|0);
   $$4522614 = 0;
   while(1) {
    $661 = ($$4522614|0)!=(0);
    $662 = $661 ? 10 : 9;
    $663 = $$4522614 << 2;
    $664 = (($663) + 16)|0;
    $665 = HEAP32[$480>>2]|0;
    $666 = $664 << 4;
    $667 = ((($665) + (($21*768)|0)|0) + ($666<<1)|0);
    $668 = HEAP32[$507>>2]|0;
    $669 = ((($668) + ($21<<1)|0) + ($$4522614)|0);
    $670 = HEAP8[$669>>0]|0;
    $671 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$664,$659,$660,$662,$667,$670,$0)|0);
    $672 = ($671|0)==(0);
    if (!($672)) {
     $$25 = -1;
     label = 60;
     break;
    }
    $673 = (($663) + 17)|0;
    $674 = HEAP32[$480>>2]|0;
    $675 = $673 << 4;
    $676 = ((($674) + (($21*768)|0)|0) + ($675<<1)|0);
    $677 = HEAP32[$507>>2]|0;
    $678 = ((($677) + ($21<<1)|0) + ($$4522614)|0);
    $679 = HEAP8[$678>>0]|0;
    $680 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$673,$659,$660,$662,$676,$679,$0)|0);
    $681 = ($680|0)==(0);
    if (!($681)) {
     $$25 = -1;
     label = 60;
     break;
    }
    $692 = (($663) + 18)|0;
    $693 = HEAP32[$480>>2]|0;
    $694 = $692 << 4;
    $695 = ((($693) + (($21*768)|0)|0) + ($694<<1)|0);
    $696 = HEAP32[$507>>2]|0;
    $697 = ((($696) + ($21<<1)|0) + ($$4522614)|0);
    $698 = HEAP8[$697>>0]|0;
    $699 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$692,$659,$660,$662,$695,$698,$0)|0);
    $700 = ($699|0)==(0);
    if (!($700)) {
     $$25 = -1;
     label = 60;
     break;
    }
    $701 = (($663) + 19)|0;
    $702 = HEAP32[$480>>2]|0;
    $703 = $701 << 4;
    $704 = ((($702) + (($21*768)|0)|0) + ($703<<1)|0);
    $705 = HEAP32[$507>>2]|0;
    $706 = ((($705) + ($21<<1)|0) + ($$4522614)|0);
    $707 = HEAP8[$706>>0]|0;
    $708 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($5,$29,$9,$701,$659,$660,$662,$704,$707,$0)|0);
    $709 = ($708|0)==(0);
    if (!($709)) {
     $$25 = -1;
     label = 60;
     break;
    }
    $710 = (($$4522614) + 1)|0;
    $711 = ($710|0)<(2);
    if ($711) {
     $$4522614 = $710;
    } else {
     label = 58;
     break;
    }
   }
   if ((label|0) == 58) {
    $682 = ((($29)) + 14|0);
    $683 = HEAP16[$682>>1]|0;
    HEAP16[$425>>1] = $683;
    $684 = ((($29)) + 22|0);
    $685 = HEAP16[$684>>1]|0;
    HEAP16[$426>>1] = $685;
    $686 = ((($29)) + 38|0);
    $687 = HEAP16[$686>>1]|0;
    $688 = (((($23) + (($21*24)|0)|0)) + 18|0);
    HEAP16[$688>>1] = $687;
    $689 = ((($29)) + 46|0);
    $690 = HEAP16[$689>>1]|0;
    $691 = (((($23) + (($21*24)|0)|0)) + 22|0);
    HEAP16[$691>>1] = $690;
    break;
   }
   else if ((label|0) == 60) {
    STACKTOP = sp;return ($$25|0);
   }
  }
 } while(0);
 __ZN7WelsDec10BsEndCavlcEPN10WelsCommon15TagBitStringAuxE($9);
 $$25 = 0;
 STACKTOP = sp;return ($$25|0);
}
function __ZN7WelsDec22GetNeighborAvailMbTypeEPNS_16TagNeighborAvailEPNS_10TagDqLayerE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0100 = 0, $$098 = 0, $$099 = 0, $$1 = 0, $$1101 = 0, $$sink = 0, $$sink3 = 0, $$sink6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 4040|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 4032|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 4036|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 3912|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($3<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($5|0)!=(0);
 if ($12) {
  $13 = (($3) + -1)|0;
  $14 = (($9) + ($13<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==($11|0);
  $17 = $16&1;
  $18 = ((($0)) + 4|0);
  HEAP32[$18>>2] = $17;
  if ($16) {
   $19 = ((($1)) + 3956|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($20) + ($13)|0);
   $22 = HEAP8[$21>>0]|0;
   $$098 = $13;$$sink = $22;$61 = $17;
  } else {
   $$098 = $13;$$sink = 0;$61 = $17;
  }
 } else {
  $23 = ((($0)) + 4|0);
  HEAP32[$23>>2] = 0;
  $24 = ((($0)) + 12|0);
  HEAP32[$24>>2] = 0;
  $$098 = 0;$$sink = 0;$61 = 0;
 }
 $25 = ((($0)) + 33|0);
 HEAP8[$25>>0] = $$sink;
 $26 = ($7|0)==(0);
 if ($26) {
  HEAP32[$0>>2] = 0;
  $58 = ((($0)) + 12|0);
  HEAP32[$58>>2] = 0;
  $59 = ((($0)) + 8|0);
  HEAP32[$59>>2] = 0;
  $60 = ((($0)) + 32|0);
  HEAP8[$60>>0] = 0;
  $$0 = 0;$$1 = 0;$$1101 = 0;$70 = 0;$79 = 0;$88 = 0;
 } else {
  $27 = ((($1)) + 4044|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (($3) - ($28))|0;
  $30 = HEAP32[$8>>2]|0;
  $31 = (($30) + ($29<<2)|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ($32|0)==($11|0);
  $34 = $33&1;
  HEAP32[$0>>2] = $34;
  if ($33) {
   $35 = ((($1)) + 3956|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = (($36) + ($29)|0);
   $38 = HEAP8[$37>>0]|0;
   $40 = $38;
  } else {
   $40 = 0;
  }
  $39 = ((($0)) + 32|0);
  HEAP8[$39>>0] = $40;
  if ($12) {
   $41 = (($29) + -1)|0;
   $42 = HEAP32[$8>>2]|0;
   $43 = (($42) + ($41<<2)|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ($44|0)==($11|0);
   $46 = $45&1;
   $$0100 = $41;$$sink3 = $46;
  } else {
   $$0100 = 0;$$sink3 = 0;
  }
  $47 = ((($0)) + 12|0);
  HEAP32[$47>>2] = $$sink3;
  $48 = HEAP32[$27>>2]|0;
  $49 = (($48) + -1)|0;
  $50 = ($5|0)==($49|0);
  if ($50) {
   $$099 = 0;$$sink6 = 0;
  } else {
   $51 = (($29) + 1)|0;
   $52 = HEAP32[$8>>2]|0;
   $53 = (($52) + ($51<<2)|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($54|0)==($11|0);
   $56 = $55&1;
   $$099 = $51;$$sink6 = $56;
  }
  $57 = ((($0)) + 8|0);
  HEAP32[$57>>2] = $$sink6;
  $$0 = $29;$$1 = $$099;$$1101 = $$0100;$70 = $34;$79 = $$sink3;$88 = $$sink6;
 }
 $62 = ($61|0)==(0);
 if ($62) {
  $69 = 0;
 } else {
  $63 = ((($1)) + 3908|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = (($64) + ($$098<<1)|0);
  $66 = HEAP16[$65>>1]|0;
  $67 = $66 << 16 >> 16;
  $69 = $67;
 }
 $68 = ((($0)) + 16|0);
 HEAP32[$68>>2] = $69;
 $71 = ($70|0)==(0);
 if ($71) {
  $78 = 0;
 } else {
  $72 = ((($1)) + 3908|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (($73) + ($$0<<1)|0);
  $75 = HEAP16[$74>>1]|0;
  $76 = $75 << 16 >> 16;
  $78 = $76;
 }
 $77 = ((($0)) + 20|0);
 HEAP32[$77>>2] = $78;
 $80 = ($79|0)==(0);
 if ($80) {
  $87 = 0;
 } else {
  $81 = ((($1)) + 3908|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (($82) + ($$1101<<1)|0);
  $84 = HEAP16[$83>>1]|0;
  $85 = $84 << 16 >> 16;
  $87 = $85;
 }
 $86 = ((($0)) + 24|0);
 HEAP32[$86>>2] = $87;
 $89 = ($88|0)==(0);
 if ($89) {
  $96 = 0;
  $95 = ((($0)) + 28|0);
  HEAP32[$95>>2] = $96;
  return;
 }
 $90 = ((($1)) + 3908|0);
 $91 = HEAP32[$90>>2]|0;
 $92 = (($91) + ($$1<<1)|0);
 $93 = HEAP16[$92>>1]|0;
 $94 = $93 << 16 >> 16;
 $96 = $94;
 $95 = ((($0)) + 28|0);
 HEAP32[$95>>2] = $96;
 return;
}
function __ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$ph = 0, $$0$i7678 = 0, $$074 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >>> 24;
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   $9 = $3 >>> 16;
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (15782 + ($9)|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = (($13) + 8)|0;
    $$0$i$ph = $14;
    break;
   }
   $15 = $3 >>> 8;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = (15782 + ($15)|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = (($19) + 16)|0;
    $$0$i$ph = $20;
    break;
   }
   $21 = ($3|0)==(0);
   if ($21) {
    $$0 = 12;
    return ($$0|0);
   } else {
    $22 = (15782 + ($3)|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = (($24) + 24)|0;
    $$0$i$ph = $25;
    break;
   }
  } else {
   $6 = (15782 + ($4)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = $7&255;
   $$0$i$ph = $8;
  }
 } while(0);
 $26 = ((($0)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = HEAP32[$0>>2]|0;
 $29 = (($27) - ($28))|0;
 $30 = ($$0$i$ph|0)>(16);
 $31 = ((($0)) + 16|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32;
 $34 = (($33) - ($28))|0;
 do {
  if ($30) {
   $35 = $3 << 16;
   HEAP32[$2>>2] = $35;
   $36 = ((($0)) + 24|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37) + 16)|0;
   HEAP32[$36>>2] = $38;
   $39 = ($37|0)>(-16);
   do {
    if ($39) {
     $40 = (($29) + 1)|0;
     $41 = ($34|0)>($40|0);
     if ($41) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $42 = HEAP8[$32>>0]|0;
      $43 = $42&255;
      $44 = $43 << 8;
      $45 = ((($32)) + 1|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = $46&255;
      $48 = $44 | $47;
      $49 = $48 << $38;
      $50 = $49 | $35;
      HEAP32[$2>>2] = $50;
      HEAP32[$36>>2] = $37;
      $51 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $51;
      $54 = $50;$56 = $37;$58 = $51;
      break;
     }
    } else {
     $54 = $35;$56 = $38;$58 = $32;
    }
   } while(0);
   $52 = (($$0$i$ph) + -15)|0;
   $53 = $54 << $52;
   HEAP32[$2>>2] = $53;
   $55 = (($56) + ($52))|0;
   HEAP32[$36>>2] = $55;
   $57 = ($55|0)>(0);
   if ($57) {
    $59 = $58;
    $60 = (($59) - ($28))|0;
    $61 = (($29) + 1)|0;
    $62 = ($60|0)>($61|0);
    if ($62) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $63 = HEAP8[$58>>0]|0;
     $64 = $63&255;
     $65 = $64 << 8;
     $66 = ((($58)) + 1|0);
     $67 = HEAP8[$66>>0]|0;
     $68 = $67&255;
     $69 = $65 | $68;
     $70 = $69 << $55;
     $71 = $70 | $53;
     HEAP32[$2>>2] = $71;
     $72 = (($55) + -16)|0;
     HEAP32[$36>>2] = $72;
     $73 = ((($58)) + 2|0);
     HEAP32[$31>>2] = $73;
     $$pre$phiZ2D = $36;$101 = $73;$96 = $71;$99 = $72;
     label = 20;
     break;
    }
   } else {
    $$pre$phiZ2D = $36;$101 = $58;$96 = $53;$99 = $55;
    label = 20;
   }
  } else {
   $74 = (($$0$i$ph) + 1)|0;
   $75 = $3 << $74;
   HEAP32[$2>>2] = $75;
   $76 = ((($0)) + 24|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = (($77) + ($74))|0;
   HEAP32[$76>>2] = $78;
   $79 = ($78|0)>(0);
   do {
    if ($79) {
     $80 = (($29) + 1)|0;
     $81 = ($34|0)>($80|0);
     if ($81) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $82 = HEAP8[$32>>0]|0;
      $83 = $82&255;
      $84 = $83 << 8;
      $85 = ((($32)) + 1|0);
      $86 = HEAP8[$85>>0]|0;
      $87 = $86&255;
      $88 = $84 | $87;
      $89 = $88 << $78;
      $90 = $89 | $75;
      HEAP32[$2>>2] = $90;
      $91 = (($78) + -16)|0;
      HEAP32[$76>>2] = $91;
      $92 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $92;
      $120 = $91;$121 = $92;$122 = $90;
      break;
     }
    } else {
     $120 = $78;$121 = $32;$122 = $75;
    }
   } while(0);
   $93 = ($$0$i$ph|0)==(0);
   if ($93) {
    $$0$i7678 = 0;$$074 = 0;
   } else {
    $$pre$phiZ2D = $76;$101 = $121;$96 = $122;$99 = $120;
    label = 20;
   }
  }
 } while(0);
 do {
  if ((label|0) == 20) {
   $94 = (32 - ($$0$i$ph))|0;
   $95 = $96 >>> $94;
   $97 = $96 << $$0$i$ph;
   HEAP32[$2>>2] = $97;
   $98 = (($99) + ($$0$i$ph))|0;
   HEAP32[$$pre$phiZ2D>>2] = $98;
   $100 = ($98|0)>(0);
   if ($100) {
    $102 = $101;
    $103 = (($102) - ($28))|0;
    $104 = (($29) + 1)|0;
    $105 = ($103|0)>($104|0);
    if ($105) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $106 = HEAP8[$101>>0]|0;
     $107 = $106&255;
     $108 = $107 << 8;
     $109 = ((($101)) + 1|0);
     $110 = HEAP8[$109>>0]|0;
     $111 = $110&255;
     $112 = $108 | $111;
     $113 = $112 << $98;
     $114 = $113 | $97;
     HEAP32[$2>>2] = $114;
     $115 = (($98) + -16)|0;
     HEAP32[$$pre$phiZ2D>>2] = $115;
     $116 = ((($101)) + 2|0);
     HEAP32[$31>>2] = $116;
     $$0$i7678 = $$0$i$ph;$$074 = $95;
     break;
    }
   } else {
    $$0$i7678 = $$0$i$ph;$$074 = $95;
   }
  }
 } while(0);
 $117 = 1 << $$0$i7678;
 $118 = (($117) + -1)|0;
 $119 = (($118) + ($$074))|0;
 HEAP32[$1>>2] = $119;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec12InitReadBitsEPN10WelsCommon15TagBitStringAuxEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (0 - ($1))|0;
 $7 = (($5) + ($6)|0);
 $8 = ($3>>>0)<($7>>>0);
 if (!($8)) {
  $$0 = 2;
  return ($$0|0);
 }
 $9 = HEAP8[$3>>0]|0;
 $10 = $9&255;
 $11 = $10 << 24;
 $12 = ((($3)) + 1|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = $14 << 16;
 $16 = $15 | $11;
 $17 = ((($3)) + 2|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = $19 << 8;
 $21 = $16 | $20;
 $22 = ((($3)) + 3|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = $21 | $24;
 $26 = ((($0)) + 20|0);
 HEAP32[$26>>2] = $25;
 $27 = ((($3)) + 4|0);
 HEAP32[$2>>2] = $27;
 $28 = ((($0)) + 24|0);
 HEAP32[$28>>2] = -16;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec17ParseIntra4x4ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$095123 = 0, $$096 = 0, $$096$pre = 0, $$10 = 0, $$10$ph = 0, $$111 = 0, $$6$ph = 0, $$pn = 0, $$pn$in = 0, $$promoted = 0, $$sink = 0, $$sink$in = 0, $$sink6 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = sp + 128|0;
 dest=$5; stop=dest+120|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $9 = ((($4)) + 4040|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 317152|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($1,$5);
 $13 = ((($5)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14 << 2;
 $16 = HEAP32[$5>>2]|0;
 $17 = $16 << 1;
 $18 = $17 | $15;
 $19 = ((($5)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $18 | $20;
 $22 = $21&255;
 $23 = ((($4)) + 3896|0);
 $24 = ((($3)) + 20|0);
 $25 = ((($3)) + 4|0);
 $26 = ((($3)) + 16|0);
 $27 = ((($3)) + 24|0);
 $28 = ((($4)) + 3996|0);
 $$promoted = HEAP32[$6>>2]|0;
 $$095123 = 0;$163 = $$promoted;
 L1: while(1) {
  $47 = HEAP32[$23>>2]|0;
  $48 = ((($47)) + 176|0);
  $49 = HEAP8[$48>>0]|0;
  $50 = ($49<<24>>24)==(0);
  if ($50) {
   $53 = HEAP32[$24>>2]|0;
   $54 = $53 >>> 31;
   $55 = HEAP32[$25>>2]|0;
   $56 = HEAP32[$3>>2]|0;
   $57 = HEAP32[$26>>2]|0;
   $58 = $53 << 1;
   HEAP32[$24>>2] = $58;
   $59 = HEAP32[$27>>2]|0;
   $60 = (($59) + 1)|0;
   HEAP32[$27>>2] = $60;
   $61 = ($59|0)>(-1);
   if ($61) {
    $62 = $57;
    $63 = (($62) - ($56))|0;
    $64 = (($55) + 1)|0;
    $65 = (($64) - ($56))|0;
    $66 = ($63|0)>($65|0);
    if ($66) {
     $$10$ph = 11;
     label = 29;
     break;
    }
    $67 = HEAP8[$57>>0]|0;
    $68 = $67&255;
    $69 = $68 << 8;
    $70 = ((($57)) + 1|0);
    $71 = HEAP8[$70>>0]|0;
    $72 = $71&255;
    $73 = $69 | $72;
    $74 = $73 << $60;
    $75 = $74 | $58;
    HEAP32[$24>>2] = $75;
    $76 = (($59) + -15)|0;
    HEAP32[$27>>2] = $76;
    $77 = ((($57)) + 2|0);
    HEAP32[$26>>2] = $77;
    $$096 = $54;$164 = $54;
   } else {
    $$096 = $54;$164 = $54;
   }
  } else {
   $51 = (__ZN7WelsDec27ParseIntraPredModeLumaCabacEPNS_21TagWelsDecoderContextERi($0,$7)|0);
   $52 = ($51|0)==(0);
   if (!($52)) {
    $$10$ph = $51;
    label = 29;
    break;
   }
   $$096$pre = HEAP32[$7>>2]|0;
   $$096 = $$096$pre;$164 = $163;
  }
  $78 = (__ZN7WelsDec16PredIntra4x4ModeEPai($2,$$095123)|0);
  $79 = HEAP32[$23>>2]|0;
  $80 = ((($79)) + 176|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = ($81<<24>>24)==(0);
  do {
   if ($82) {
    $89 = ($$096|0)==(0);
    if (!($89)) {
     $90 = $78&255;
     HEAP8[$8>>0] = $90;
     $122 = $164;
     break;
    }
    $91 = HEAP32[$24>>2]|0;
    $92 = $91 >>> 29;
    $93 = HEAP32[$25>>2]|0;
    $94 = HEAP32[$3>>2]|0;
    $95 = HEAP32[$26>>2]|0;
    $96 = $91 << 3;
    HEAP32[$24>>2] = $96;
    $97 = HEAP32[$27>>2]|0;
    $98 = (($97) + 3)|0;
    HEAP32[$27>>2] = $98;
    $99 = ($97|0)>(-3);
    if ($99) {
     $100 = $95;
     $101 = (($100) - ($94))|0;
     $102 = (($93) + 1)|0;
     $103 = (($102) - ($94))|0;
     $104 = ($101|0)>($103|0);
     if ($104) {
      $$6$ph = 11;$121 = $164;
      label = 20;
      break L1;
     }
     $105 = HEAP8[$95>>0]|0;
     $106 = $105&255;
     $107 = $106 << 8;
     $108 = ((($95)) + 1|0);
     $109 = HEAP8[$108>>0]|0;
     $110 = $109&255;
     $111 = $107 | $110;
     $112 = $111 << $98;
     $113 = $112 | $96;
     HEAP32[$24>>2] = $113;
     $114 = (($97) + -13)|0;
     HEAP32[$27>>2] = $114;
     $115 = ((($95)) + 2|0);
     HEAP32[$26>>2] = $115;
    }
    $116 = ($92|0)>=($78|0);
    $117 = $116&1;
    $118 = (($117) + ($92))|0;
    $119 = $118&255;
    HEAP8[$8>>0] = $119;
    $122 = $92;
   } else {
    $83 = ($$096|0)==(-1);
    if ($83) {
     $84 = $78&255;
     HEAP8[$8>>0] = $84;
     $122 = $164;
     break;
    } else {
     $85 = ($$096|0)>=($78|0);
     $86 = $85&1;
     $87 = (($86) + ($$096))|0;
     $88 = $87&255;
     HEAP8[$8>>0] = $88;
     $122 = $164;
     break;
    }
   }
  } while(0);
  $30 = (__ZN7WelsDec21CheckIntraNxNPredModeEPiPaib($5,$8,$$095123,0)|0);
  $120 = ($30|0)==(-1);
  if ($120) {
   $$6$ph = 1050;$121 = $122;
   label = 20;
   break;
  }
  $29 = $30&255;
  $31 = HEAP32[$28>>2]|0;
  $32 = (15567 + ($$095123)|0);
  $33 = HEAP8[$32>>0]|0;
  $34 = $33&255;
  $35 = ((($31) + ($10<<4)|0) + ($34)|0);
  HEAP8[$35>>0] = $29;
  $36 = HEAP8[$8>>0]|0;
  $37 = (15610 + ($$095123)|0);
  $38 = HEAP8[$37>>0]|0;
  $39 = $38&255;
  $40 = (($2) + ($39)|0);
  HEAP8[$40>>0] = $36;
  $41 = (11103 + ($$095123)|0);
  $42 = HEAP8[$41>>0]|0;
  $43 = $42&255;
  $44 = (($5) + ($43<<2)|0);
  HEAP32[$44>>2] = 1;
  $45 = (($$095123) + 1)|0;
  $46 = ($45|0)<(16);
  if ($46) {
   $$095123 = $45;$163 = $122;
  } else {
   label = 21;
   break;
  }
 }
 if ((label|0) == 20) {
  HEAP32[$6>>2] = $121;
  $$10 = $$6$ph;
  STACKTOP = sp;return ($$10|0);
 }
 else if ((label|0) == 21) {
  HEAP32[$6>>2] = $122;
  $123 = ((($2)) + 33|0);
  $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
  $125 = ((($4)) + 3992|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = (($126) + ($10<<3)|0);
  HEAP8[$127>>0]=$124&255;HEAP8[$127+1>>0]=($124>>8)&255;HEAP8[$127+2>>0]=($124>>16)&255;HEAP8[$127+3>>0]=$124>>24;
  $128 = ((($2)) + 12|0);
  $129 = HEAP8[$128>>0]|0;
  $130 = HEAP32[$125>>2]|0;
  $131 = (((($130) + ($10<<3)|0)) + 4|0);
  HEAP8[$131>>0] = $129;
  $132 = ((($2)) + 20|0);
  $133 = HEAP8[$132>>0]|0;
  $134 = HEAP32[$125>>2]|0;
  $135 = (((($134) + ($10<<3)|0)) + 5|0);
  HEAP8[$135>>0] = $133;
  $136 = ((($2)) + 28|0);
  $137 = HEAP8[$136>>0]|0;
  $138 = HEAP32[$125>>2]|0;
  $139 = (((($138) + ($10<<3)|0)) + 6|0);
  HEAP8[$139>>0] = $137;
  $140 = ((($0)) + 241924|0);
  $141 = HEAP32[$140>>2]|0;
  $142 = ((($141)) + 318|0);
  $143 = HEAP8[$142>>0]|0;
  $144 = ($143<<24>>24)==(0);
  if ($144) {
   $$10 = 0;
   STACKTOP = sp;return ($$10|0);
  }
  $145 = HEAP32[$23>>2]|0;
  $146 = ((($145)) + 176|0);
  $147 = HEAP8[$146>>0]|0;
  $148 = ($147<<24>>24)==(0);
  if ($148) {
   $153 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($3,$6)|0);
   $154 = ($153|0)==(0);
   if (!($154)) {
    $$10 = $153;
    STACKTOP = sp;return ($$10|0);
   }
   $155 = HEAP32[$6>>2]|0;
   $156 = ($155>>>0)>(3);
   if ($156) {
    $$10 = 1052;
    STACKTOP = sp;return ($$10|0);
   } else {
    $$sink$in = $155;
   }
  } else {
   $149 = (__ZN7WelsDec29ParseIntraPredModeChromaCabacEPNS_21TagWelsDecoderContextEhRi($0,$22,$7)|0);
   $150 = ($149|0)==(0);
   if (!($150)) {
    $$10 = $149;
    STACKTOP = sp;return ($$10|0);
   }
   $151 = HEAP32[$7>>2]|0;
   $152 = ($151|0)>(3);
   if ($152) {
    $$10 = 1052;
    STACKTOP = sp;return ($$10|0);
   } else {
    $$sink$in = $151;
   }
  }
  $$pn$in = ((($4)) + 4004|0);
  $$pn = HEAP32[$$pn$in>>2]|0;
  $$sink = $$sink$in&255;
  $$sink6 = (($$pn) + ($10)|0);
  HEAP8[$$sink6>>0] = $$sink;
  $157 = HEAP32[$$pn$in>>2]|0;
  $158 = (($157) + ($10)|0);
  $159 = HEAP8[$158>>0]|0;
  $160 = ($159<<24>>24)==(-1);
  if ($160) {
   $$10 = 1052;
   STACKTOP = sp;return ($$10|0);
  }
  $161 = (__ZN7WelsDec24CheckIntraChromaPredModeEhPa($22,$158)|0);
  $162 = ($161|0)==(0);
  $$111 = $162 ? 0 : 1052;
  $$10 = $$111;
  STACKTOP = sp;return ($$10|0);
 }
 else if ((label|0) == 29) {
  HEAP32[$6>>2] = $163;
  $$10 = $$10$ph;
  STACKTOP = sp;return ($$10|0);
 }
 return (0)|0;
}
function __ZN7WelsDec17ParseIntra8x8ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0104134 = 0, $$0106 = 0, $$0106$pre = 0, $$10 = 0, $$10$ph = 0, $$121 = 0, $$6$ph = 0, $$pn = 0, $$pn$in = 0, $$promoted = 0, $$sink = 0, $$sink$in = 0, $$sink6 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = sp + 128|0;
 dest=$5; stop=dest+120|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $9 = ((($4)) + 4040|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 317152|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 63]($1,$5);
 $13 = ((($5)) + 20|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14 << 3;
 $16 = ((($5)) + 24|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 << 2;
 $19 = $18 | $15;
 $20 = HEAP32[$5>>2]|0;
 $21 = $20 << 1;
 $22 = $19 | $21;
 $23 = ((($5)) + 4|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $22 | $24;
 $26 = $25&255;
 $27 = ((($4)) + 4000|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + ($10)|0);
 HEAP8[$29>>0] = $26;
 $30 = ((($4)) + 3896|0);
 $31 = ((($3)) + 20|0);
 $32 = ((($3)) + 4|0);
 $33 = ((($3)) + 16|0);
 $34 = ((($3)) + 24|0);
 $35 = ((($4)) + 3996|0);
 $$promoted = HEAP32[$6>>2]|0;
 $$0104134 = 0;$211 = $$promoted;
 L1: while(1) {
  $100 = HEAP32[$30>>2]|0;
  $101 = ((($100)) + 176|0);
  $102 = HEAP8[$101>>0]|0;
  $103 = ($102<<24>>24)==(0);
  if ($103) {
   $106 = HEAP32[$31>>2]|0;
   $107 = $106 >>> 31;
   $108 = HEAP32[$32>>2]|0;
   $109 = HEAP32[$3>>2]|0;
   $110 = HEAP32[$33>>2]|0;
   $111 = $106 << 1;
   HEAP32[$31>>2] = $111;
   $112 = HEAP32[$34>>2]|0;
   $113 = (($112) + 1)|0;
   HEAP32[$34>>2] = $113;
   $114 = ($112|0)>(-1);
   if ($114) {
    $115 = $110;
    $116 = (($115) - ($109))|0;
    $117 = (($108) + 1)|0;
    $118 = (($117) - ($109))|0;
    $119 = ($116|0)>($118|0);
    if ($119) {
     $$10$ph = 11;
     label = 28;
     break;
    }
    $120 = HEAP8[$110>>0]|0;
    $121 = $120&255;
    $122 = $121 << 8;
    $123 = ((($110)) + 1|0);
    $124 = HEAP8[$123>>0]|0;
    $125 = $124&255;
    $126 = $122 | $125;
    $127 = $126 << $113;
    $128 = $127 | $111;
    HEAP32[$31>>2] = $128;
    $129 = (($112) + -15)|0;
    HEAP32[$34>>2] = $129;
    $130 = ((($110)) + 2|0);
    HEAP32[$33>>2] = $130;
    $$0106 = $107;$212 = $107;
   } else {
    $$0106 = $107;$212 = $107;
   }
  } else {
   $104 = (__ZN7WelsDec27ParseIntraPredModeLumaCabacEPNS_21TagWelsDecoderContextERi($0,$7)|0);
   $105 = ($104|0)==(0);
   if (!($105)) {
    $$10$ph = $104;
    label = 28;
    break;
   }
   $$0106$pre = HEAP32[$7>>2]|0;
   $$0106 = $$0106$pre;$212 = $211;
  }
  $40 = $$0104134 << 2;
  $131 = (__ZN7WelsDec16PredIntra4x4ModeEPai($2,$40)|0);
  $132 = HEAP32[$30>>2]|0;
  $133 = ((($132)) + 176|0);
  $134 = HEAP8[$133>>0]|0;
  $135 = ($134<<24>>24)==(0);
  do {
   if ($135) {
    $142 = ($$0106|0)==(0);
    if (!($142)) {
     $143 = $131&255;
     HEAP8[$8>>0] = $143;
     $175 = $212;
     break;
    }
    $144 = HEAP32[$31>>2]|0;
    $145 = $144 >>> 29;
    $146 = HEAP32[$32>>2]|0;
    $147 = HEAP32[$3>>2]|0;
    $148 = HEAP32[$33>>2]|0;
    $149 = $144 << 3;
    HEAP32[$31>>2] = $149;
    $150 = HEAP32[$34>>2]|0;
    $151 = (($150) + 3)|0;
    HEAP32[$34>>2] = $151;
    $152 = ($150|0)>(-3);
    if ($152) {
     $153 = $148;
     $154 = (($153) - ($147))|0;
     $155 = (($146) + 1)|0;
     $156 = (($155) - ($147))|0;
     $157 = ($154|0)>($156|0);
     if ($157) {
      $$6$ph = 11;$174 = $212;
      label = 20;
      break L1;
     }
     $158 = HEAP8[$148>>0]|0;
     $159 = $158&255;
     $160 = $159 << 8;
     $161 = ((($148)) + 1|0);
     $162 = HEAP8[$161>>0]|0;
     $163 = $162&255;
     $164 = $160 | $163;
     $165 = $164 << $151;
     $166 = $165 | $149;
     HEAP32[$31>>2] = $166;
     $167 = (($150) + -13)|0;
     HEAP32[$34>>2] = $167;
     $168 = ((($148)) + 2|0);
     HEAP32[$33>>2] = $168;
    }
    $169 = ($145|0)>=($131|0);
    $170 = $169&1;
    $171 = (($170) + ($145))|0;
    $172 = $171&255;
    HEAP8[$8>>0] = $172;
    $175 = $145;
   } else {
    $136 = ($$0106|0)==(-1);
    if ($136) {
     $137 = $131&255;
     HEAP8[$8>>0] = $137;
     $175 = $212;
     break;
    } else {
     $138 = ($$0106|0)>=($131|0);
     $139 = $138&1;
     $140 = (($139) + ($$0106))|0;
     $141 = $140&255;
     HEAP8[$8>>0] = $141;
     $175 = $212;
     break;
    }
   }
  } while(0);
  $37 = (__ZN7WelsDec21CheckIntraNxNPredModeEPiPaib($5,$8,$40,1)|0);
  $173 = ($37|0)==(-1);
  if ($173) {
   $$6$ph = 1050;$174 = $175;
   label = 20;
   break;
  }
  $36 = $37&255;
  $38 = HEAP32[$35>>2]|0;
  $39 = (15567 + ($40)|0);
  $41 = HEAP8[$39>>0]|0;
  $42 = $41&255;
  $43 = ((($38) + ($10<<4)|0) + ($42)|0);
  HEAP8[$43>>0] = $36;
  $44 = HEAP8[$8>>0]|0;
  $45 = (15610 + ($40)|0);
  $46 = HEAP8[$45>>0]|0;
  $47 = $46&255;
  $48 = (($2) + ($47)|0);
  HEAP8[$48>>0] = $44;
  $49 = (11103 + ($40)|0);
  $50 = HEAP8[$49>>0]|0;
  $51 = $50&255;
  $52 = (($5) + ($51<<2)|0);
  HEAP32[$52>>2] = 1;
  $53 = HEAP32[$35>>2]|0;
  $54 = $40 | 1;
  $55 = (15567 + ($54)|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = $56&255;
  $58 = ((($53) + ($10<<4)|0) + ($57)|0);
  HEAP8[$58>>0] = $36;
  $59 = HEAP8[$8>>0]|0;
  $60 = (15610 + ($54)|0);
  $61 = HEAP8[$60>>0]|0;
  $62 = $61&255;
  $63 = (($2) + ($62)|0);
  HEAP8[$63>>0] = $59;
  $64 = (11103 + ($54)|0);
  $65 = HEAP8[$64>>0]|0;
  $66 = $65&255;
  $67 = (($5) + ($66<<2)|0);
  HEAP32[$67>>2] = 1;
  $68 = HEAP32[$35>>2]|0;
  $69 = $40 | 2;
  $70 = (15567 + ($69)|0);
  $71 = HEAP8[$70>>0]|0;
  $72 = $71&255;
  $73 = ((($68) + ($10<<4)|0) + ($72)|0);
  HEAP8[$73>>0] = $36;
  $74 = HEAP8[$8>>0]|0;
  $75 = (15610 + ($69)|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76&255;
  $78 = (($2) + ($77)|0);
  HEAP8[$78>>0] = $74;
  $79 = (11103 + ($69)|0);
  $80 = HEAP8[$79>>0]|0;
  $81 = $80&255;
  $82 = (($5) + ($81<<2)|0);
  HEAP32[$82>>2] = 1;
  $83 = HEAP32[$35>>2]|0;
  $84 = $40 | 3;
  $85 = (15567 + ($84)|0);
  $86 = HEAP8[$85>>0]|0;
  $87 = $86&255;
  $88 = ((($83) + ($10<<4)|0) + ($87)|0);
  HEAP8[$88>>0] = $36;
  $89 = HEAP8[$8>>0]|0;
  $90 = (15610 + ($84)|0);
  $91 = HEAP8[$90>>0]|0;
  $92 = $91&255;
  $93 = (($2) + ($92)|0);
  HEAP8[$93>>0] = $89;
  $94 = (11103 + ($84)|0);
  $95 = HEAP8[$94>>0]|0;
  $96 = $95&255;
  $97 = (($5) + ($96<<2)|0);
  HEAP32[$97>>2] = 1;
  $98 = (($$0104134) + 1)|0;
  $99 = ($98|0)<(4);
  if ($99) {
   $$0104134 = $98;$211 = $175;
  } else {
   label = 21;
   break;
  }
 }
 if ((label|0) == 20) {
  HEAP32[$6>>2] = $174;
  $$10 = $$6$ph;
  STACKTOP = sp;return ($$10|0);
 }
 else if ((label|0) == 21) {
  HEAP32[$6>>2] = $175;
  $176 = ((($2)) + 33|0);
  $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
  $178 = ((($4)) + 3992|0);
  $179 = HEAP32[$178>>2]|0;
  $180 = (($179) + ($10<<3)|0);
  HEAP8[$180>>0]=$177&255;HEAP8[$180+1>>0]=($177>>8)&255;HEAP8[$180+2>>0]=($177>>16)&255;HEAP8[$180+3>>0]=$177>>24;
  $181 = ((($2)) + 12|0);
  $182 = HEAP8[$181>>0]|0;
  $183 = HEAP32[$178>>2]|0;
  $184 = (((($183) + ($10<<3)|0)) + 4|0);
  HEAP8[$184>>0] = $182;
  $185 = ((($2)) + 20|0);
  $186 = HEAP8[$185>>0]|0;
  $187 = HEAP32[$178>>2]|0;
  $188 = (((($187) + ($10<<3)|0)) + 5|0);
  HEAP8[$188>>0] = $186;
  $189 = ((($2)) + 28|0);
  $190 = HEAP8[$189>>0]|0;
  $191 = HEAP32[$178>>2]|0;
  $192 = (((($191) + ($10<<3)|0)) + 6|0);
  HEAP8[$192>>0] = $190;
  $193 = HEAP32[$30>>2]|0;
  $194 = ((($193)) + 176|0);
  $195 = HEAP8[$194>>0]|0;
  $196 = ($195<<24>>24)==(0);
  if ($196) {
   $201 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($3,$6)|0);
   $202 = ($201|0)==(0);
   if (!($202)) {
    $$10 = $201;
    STACKTOP = sp;return ($$10|0);
   }
   $203 = HEAP32[$6>>2]|0;
   $204 = ($203>>>0)>(3);
   if ($204) {
    $$10 = 1052;
    STACKTOP = sp;return ($$10|0);
   } else {
    $$sink$in = $203;
   }
  } else {
   $197 = (__ZN7WelsDec29ParseIntraPredModeChromaCabacEPNS_21TagWelsDecoderContextEhRi($0,$26,$7)|0);
   $198 = ($197|0)==(0);
   if (!($198)) {
    $$10 = $197;
    STACKTOP = sp;return ($$10|0);
   }
   $199 = HEAP32[$7>>2]|0;
   $200 = ($199|0)>(3);
   if ($200) {
    $$10 = 1052;
    STACKTOP = sp;return ($$10|0);
   } else {
    $$sink$in = $199;
   }
  }
  $$pn$in = ((($4)) + 4004|0);
  $$pn = HEAP32[$$pn$in>>2]|0;
  $$sink = $$sink$in&255;
  $$sink6 = (($$pn) + ($10)|0);
  HEAP8[$$sink6>>0] = $$sink;
  $205 = HEAP32[$$pn$in>>2]|0;
  $206 = (($205) + ($10)|0);
  $207 = HEAP8[$206>>0]|0;
  $208 = ($207<<24>>24)==(-1);
  if ($208) {
   $$10 = 1052;
   STACKTOP = sp;return ($$10|0);
  }
  $209 = (__ZN7WelsDec24CheckIntraChromaPredModeEhPa($26,$206)|0);
  $210 = ($209|0)==(0);
  $$121 = $210 ? 0 : 1052;
  $$10 = $$121;
  STACKTOP = sp;return ($$10|0);
 }
 else if ((label|0) == 28) {
  HEAP32[$6>>2] = $211;
  $$10 = $$10$ph;
  STACKTOP = sp;return ($$10|0);
 }
 return (0)|0;
}
function __ZN7WelsDec19ParseIntra16x16ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$2 = 0, $$33 = 0, $$pn = 0, $$pn$in = 0, $$sink = 0, $$sink$in = 0, $$sink2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp;
 $7 = ((($3)) + 4040|0);
 $8 = HEAP32[$7>>2]|0;
 HEAP8[$4>>0] = 0;
 $9 = ((($0)) + 317156|0);
 $10 = HEAP32[$9>>2]|0;
 FUNCTION_TABLE_vii[$10 & 63]($1,$4);
 $11 = HEAP8[$4>>0]|0;
 $12 = ((($3)) + 3992|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (((($13) + ($8<<3)|0)) + 7|0);
 $15 = (__ZN7WelsDec23CheckIntra16x16PredModeEhPa($11,$14)|0);
 $16 = ($15|0)==(0);
 if (!($16)) {
  $$2 = 1051;
  STACKTOP = sp;return ($$2|0);
 }
 $17 = ((($0)) + 241924|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 318|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)==(0);
 if ($21) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $22 = ((($3)) + 3896|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 176|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = ($25<<24>>24)==(0);
 if ($26) {
  $32 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($2,$5)|0);
  $33 = ($32|0)==(0);
  if (!($33)) {
   $$2 = $32;
   STACKTOP = sp;return ($$2|0);
  }
  $34 = HEAP32[$5>>2]|0;
  $35 = ($34>>>0)>(3);
  if ($35) {
   $$2 = 1052;
   STACKTOP = sp;return ($$2|0);
  } else {
   $$sink$in = $34;
  }
 } else {
  $27 = HEAP8[$4>>0]|0;
  $28 = (__ZN7WelsDec29ParseIntraPredModeChromaCabacEPNS_21TagWelsDecoderContextEhRi($0,$27,$6)|0);
  $29 = ($28|0)==(0);
  if (!($29)) {
   $$2 = $28;
   STACKTOP = sp;return ($$2|0);
  }
  $30 = HEAP32[$6>>2]|0;
  $31 = ($30|0)>(3);
  if ($31) {
   $$2 = 1052;
   STACKTOP = sp;return ($$2|0);
  } else {
   $$sink$in = $30;
  }
 }
 $$pn$in = ((($3)) + 4004|0);
 $$pn = HEAP32[$$pn$in>>2]|0;
 $$sink = $$sink$in&255;
 $$sink2 = (($$pn) + ($8)|0);
 HEAP8[$$sink2>>0] = $$sink;
 $36 = HEAP32[$$pn$in>>2]|0;
 $37 = (($36) + ($8)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = ($38<<24>>24)==(-1);
 if ($39) {
  $$2 = 1052;
  STACKTOP = sp;return ($$2|0);
 }
 $40 = HEAP8[$4>>0]|0;
 $41 = (__ZN7WelsDec24CheckIntraChromaPredModeEhPa($40,$37)|0);
 $42 = ($41|0)==(0);
 $$33 = $42 ? 0 : 1052;
 $$2 = $$33;
 STACKTOP = sp;return ($$2|0);
}
function __ZN7WelsDec12BsStartCavlcEPN10WelsCommon15TagBitStringAuxE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 $5 = $4 << 3;
 $6 = ((($0)) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + -16)|0;
 $9 = (($8) + ($5))|0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = $9;
 return;
}
function __ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$ = 0, $$0 = 0, $$0$i = 0, $$0103126 = 0, $$0104125 = 0, $$0107 = 0, $$0116 = 0, $$0117 = 0, $$0118 = 0, $$039$i = 0, $$1105128 = 0, $$1129 = 0, $$2106123 = 0, $$2124 = 0, $$pre$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $10 = sp + 80|0;
 $11 = sp + 16|0;
 $12 = sp + 145|0;
 $13 = sp + 144|0;
 $14 = sp;
 do {
  switch ($6|0) {
  case 9:  {
   $$0116 = 1;$$0118 = 5;
   break;
  }
  case 10:  {
   $$0116 = 2;$$0118 = 5;
   break;
  }
  case 11:  {
   $$0116 = 0;$$0118 = 3;
   break;
  }
  case 7:  {
   $$0116 = 1;$$0118 = 4;
   break;
  }
  case 8:  {
   $$0116 = 2;$$0118 = 4;
   break;
  }
  case 18:  {
   $$0116 = 7;$$0118 = 6;
   break;
  }
  case 17:  {
   $$0116 = 6;$$0118 = 6;
   break;
  }
  case 12:  {
   $$0116 = 3;$$0118 = 3;
   break;
  }
  case 13:  {
   $$0116 = 4;$$0118 = 4;
   break;
  }
  case 14:  {
   $$0116 = 5;$$0118 = 4;
   break;
  }
  case 15:  {
   $$0116 = 4;$$0118 = 5;
   break;
  }
  case 16:  {
   $$0116 = 5;$$0118 = 5;
   break;
  }
  default: {
   $$0116 = 0;$$0118 = $6;
  }
  }
 } while(0);
 $15 = ((($9)) + 562526|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)==(0);
 $18 = $8&255;
 if ($17) {
  $22 = (16 + ($18<<4)|0);
  $149 = $22;
 } else {
  $19 = (((($9)) + 562472|0) + ($$0116<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + ($18<<5)|0);
  $149 = $21;
 }
 $23 = ((($2)) + 12|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = HEAP32[$2>>2]|0;
 $26 = $24 >> 3;
 $27 = (($25) + ($26)|0);
 $28 = ($$0118|0)==(4);
 $29 = HEAP8[$27>>0]|0;
 $30 = $29&255;
 $31 = $30 << 8;
 $32 = ((($27)) + 1|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = $33&255;
 $35 = $31 | $34;
 $36 = $35 << 16;
 $37 = ((($27)) + 2|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = $39 << 8;
 $41 = $36 | $40;
 $42 = ((($27)) + 3|0);
 $43 = HEAP8[$42>>0]|0;
 $44 = $43&255;
 $45 = $41 | $44;
 $46 = $24 & 7;
 $47 = $45 << $46;
 HEAP32[$14>>2] = $47;
 $48 = (32 - ($46))|0;
 $49 = $48&255;
 $50 = ((($14)) + 4|0);
 HEAP8[$50>>0] = $49;
 $51 = ((($14)) + 8|0);
 HEAP32[$51>>2] = $27;
 $52 = (11119 + ($3)|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = (($54) + -1)|0;
 $56 = (($1) + ($55)|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = (($54) + -8)|0;
 $59 = (($1) + ($58)|0);
 $60 = HEAP8[$59>>0]|0;
 $61 = $57&255;
 $62 = $60&255;
 $63 = (($62) + ($61))|0;
 $64 = ($60<<24>>24)!=(-1);
 $not$ = ($57<<24>>24)!=(-1);
 $$ = $not$ & $64;
 $65 = $$&1;
 $66 = $63 << 24;
 $sext = (($66) + 16777216)|0;
 $67 = $sext >> 24;
 $68 = $67 >> $65;
 $69 = $60 & $57;
 $70 = ($69<<24>>24)==(-1);
 $71 = $70&1;
 $72 = (($68) + ($71))|0;
 $73 = $72&255;
 $74 = (__ZN7WelsDecL33CavlcGetTrailingOnesAndTotalCoeffERhS0_PNS_16TagReadBitsCacheEPNS_11TagVlcTableEba($12,$13,$14,$0,$28,$73)|0);
 $75 = HEAP8[$12>>0]|0;
 switch ($$0118|0) {
 case 1: case 4:  {
  break;
 }
 default: {
  $76 = (($1) + ($54)|0);
  HEAP8[$76>>0] = $75;
 }
 }
 $77 = ($75<<24>>24)==(0);
 if ($77) {
  $78 = HEAP32[$23>>2]|0;
  $79 = (($78) + ($74))|0;
  HEAP32[$23>>2] = $79;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $80 = HEAP8[$13>>0]|0;
 $81 = ($80&255)>(3);
 $82 = ($75&255)>(16);
 $or$cond = $82 | $81;
 if ($or$cond) {
  $$0 = 1046;
  STACKTOP = sp;return ($$0|0);
 }
 $83 = (__ZN7WelsDecL16CavlcGetLevelValEPiPNS_16TagReadBitsCacheEhh($10,$14,$75,$80)|0);
 $84 = ($83|0)==(-1);
 if ($84) {
  $$0 = 1045;
  STACKTOP = sp;return ($$0|0);
 }
 $85 = (($83) + ($74))|0;
 $86 = $75&255;
 $87 = ($86|0)<($4|0);
 if ($87) {
  $$039$i = $28 ? 21221 : 21178;
  $$0$i = $28&1;
  $88 = (($86) + -1)|0;
  $89 = (($$039$i) + ($88)|0);
  $90 = HEAP8[$89>>0]|0;
  $91 = $90&255;
  $92 = HEAP8[$50>>0]|0;
  $93 = ($92&255)<($90&255);
  if ($93) {
   $94 = $92&255;
   $95 = HEAP32[$51>>2]|0;
   $96 = ((($95)) + 2|0);
   HEAP32[$51>>2] = $96;
   $97 = (($94) + 16)|0;
   $98 = $97&255;
   HEAP8[$50>>0] = $98;
   $99 = ((($95)) + 4|0);
   $100 = HEAP8[$99>>0]|0;
   $101 = $100&255;
   $102 = $101 << 8;
   $103 = ((($95)) + 5|0);
   $104 = HEAP8[$103>>0]|0;
   $105 = $104&255;
   $106 = $102 | $105;
   $107 = $97 & 255;
   $108 = (32 - ($107))|0;
   $109 = $106 << $108;
   $110 = HEAP32[$14>>2]|0;
   $111 = $109 | $110;
   HEAP32[$14>>2] = $111;
   $114 = $111;$122 = $98;
  } else {
   $$pre$i = HEAP32[$14>>2]|0;
   $114 = $$pre$i;$122 = $92;
  }
  $112 = (32 - ($91))|0;
  $113 = $114 >>> $112;
  $115 = ((((($0)) + 160|0) + (($$0$i*60)|0)|0) + ($88<<2)|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = (((($116) + ($113<<1)|0)) + 1|0);
  $118 = HEAP8[$117>>0]|0;
  $119 = $118&255;
  $120 = $114 << $119;
  HEAP32[$14>>2] = $120;
  $121 = $122&255;
  $123 = (($121) - ($119))|0;
  $124 = $123&255;
  HEAP8[$50>>0] = $124;
  $125 = (($116) + ($113<<1)|0);
  $126 = HEAP8[$125>>0]|0;
  $127 = $126&255;
  $128 = (($119) + ($85))|0;
  $$0107 = $128;$$0117 = $127;
 } else {
  $$0107 = $85;$$0117 = 0;
 }
 $129 = (($86) + ($$0117))|0;
 $130 = ($129|0)>($4|0);
 if ($130) {
  $$0 = 1047;
  STACKTOP = sp;return ($$0|0);
 }
 $131 = (__ZN7WelsDecL17CavlcGetRunBeforeEPiPNS_16TagReadBitsCacheEhPNS_11TagVlcTableEi($11,$14,$75,$0,$$0117)|0);
 $132 = ($131|0)==(-1);
 if ($132) {
  $$0 = 1048;
  STACKTOP = sp;return ($$0|0);
 }
 $133 = (($131) + ($$0107))|0;
 $134 = HEAP32[$23>>2]|0;
 $135 = (($133) + ($134))|0;
 HEAP32[$23>>2] = $135;
 $136 = (($86) + -1)|0;
 switch ($$0118|0) {
 case 4:  {
  $$0103126 = -1;$$0104125 = $136;
  while(1) {
   $137 = (($11) + ($$0104125<<2)|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = (($$0103126) + 1)|0;
   $140 = (($139) + ($138))|0;
   $141 = (($5) + ($140)|0);
   $142 = HEAP8[$141>>0]|0;
   $143 = $142&255;
   $144 = HEAP8[$15>>0]|0;
   $145 = ($144<<24>>24)!=(0);
   $146 = (($10) + ($$0104125<<2)|0);
   $147 = HEAP32[$146>>2]|0;
   $148 = HEAP16[$149>>1]|0;
   $150 = $148&65535;
   $151 = Math_imul($150, $147)|0;
   $152 = $151 >>> 4;
   $153 = $145 ? $152 : $151;
   $154 = $153&65535;
   $155 = (($7) + ($143<<1)|0);
   HEAP16[$155>>1] = $154;
   $156 = (($$0104125) + -1)|0;
   $157 = ($$0104125|0)>(0);
   if ($157) {
    $$0103126 = $140;$$0104125 = $156;
   } else {
    $$0 = 0;
    break;
   }
  }
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 1:  {
  $$1105128 = $136;$$1129 = -1;
  while(1) {
   $158 = (($11) + ($$1105128<<2)|0);
   $159 = HEAP32[$158>>2]|0;
   $160 = (($$1129) + 1)|0;
   $161 = (($160) + ($159))|0;
   $162 = (($5) + ($161)|0);
   $163 = HEAP8[$162>>0]|0;
   $164 = $163&255;
   $165 = (($10) + ($$1105128<<2)|0);
   $166 = HEAP32[$165>>2]|0;
   $167 = $166&65535;
   $168 = (($7) + ($164<<1)|0);
   HEAP16[$168>>1] = $167;
   $169 = (($$1105128) + -1)|0;
   $170 = ($$1105128|0)>(0);
   if ($170) {
    $$1105128 = $169;$$1129 = $161;
   } else {
    $$0 = 0;
    break;
   }
  }
  STACKTOP = sp;return ($$0|0);
  break;
 }
 default: {
  $$2106123 = $136;$$2124 = -1;
  while(1) {
   $171 = (($11) + ($$2106123<<2)|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = (($$2124) + 1)|0;
   $174 = (($173) + ($172))|0;
   $175 = (($5) + ($174)|0);
   $176 = HEAP8[$175>>0]|0;
   $177 = $176&255;
   $178 = HEAP8[$15>>0]|0;
   $179 = ($178<<24>>24)==(0);
   $180 = (($10) + ($$2106123<<2)|0);
   $181 = HEAP32[$180>>2]|0;
   if ($179) {
    $187 = $177 & 7;
    $188 = (($149) + ($187<<1)|0);
    $189 = HEAP16[$188>>1]|0;
    $190 = $189&65535;
    $191 = Math_imul($190, $181)|0;
    $193 = $191;
   } else {
    $182 = (($149) + ($177<<1)|0);
    $183 = HEAP16[$182>>1]|0;
    $184 = $183&65535;
    $185 = Math_imul($184, $181)|0;
    $186 = $185 >> 4;
    $193 = $186;
   }
   $192 = $193&65535;
   $194 = (($7) + ($177<<1)|0);
   HEAP16[$194>>1] = $192;
   $195 = (($$2106123) + -1)|0;
   $196 = ($$2106123|0)>(0);
   if ($196) {
    $$2106123 = $195;$$2124 = $174;
   } else {
    $$0 = 0;
    break;
   }
  }
  STACKTOP = sp;return ($$0|0);
 }
 }
 return (0)|0;
}
function __ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$0 = 0, $$0$i = 0, $$039$i = 0, $$08399 = 0, $$08399$us = 0, $$084 = 0, $$084$us = 0, $$084100 = 0, $$084100$us = 0, $$08498 = 0, $$085 = 0, $$094 = 0, $$095 = 0, $$096 = 0, $$pre$i = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $div = 0, $narrow = 0, $not$ = 0, $or$cond = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $11 = sp + 80|0;
 $12 = sp + 16|0;
 $13 = sp + 145|0;
 $14 = sp + 144|0;
 $15 = sp;
 do {
  switch ($6|0) {
  case 9:  {
   $$094 = -5;$$096 = 5;
   break;
  }
  case 10:  {
   $$094 = -4;$$096 = 5;
   break;
  }
  case 11:  {
   $$094 = -6;$$096 = 3;
   break;
  }
  case 7:  {
   $$094 = -5;$$096 = 4;
   break;
  }
  case 8:  {
   $$094 = -4;$$096 = 4;
   break;
  }
  case 18:  {
   $$094 = 1;$$096 = 6;
   break;
  }
  case 17:  {
   $$094 = 0;$$096 = 6;
   break;
  }
  case 12:  {
   $$094 = -3;$$096 = 3;
   break;
  }
  case 13:  {
   $$094 = -2;$$096 = 4;
   break;
  }
  case 14:  {
   $$094 = -1;$$096 = 4;
   break;
  }
  case 15:  {
   $$094 = -2;$$096 = 5;
   break;
  }
  case 16:  {
   $$094 = -1;$$096 = 5;
   break;
  }
  default: {
   $$094 = -6;$$096 = $6;
  }
  }
 } while(0);
 $16 = ((($10)) + 562526|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ($17<<24>>24)==(0);
 if ($18) {
  $23 = $9&255;
  $24 = (848 + ($23<<7)|0);
  $156 = $24;
 } else {
  $19 = (((($10)) + 562496|0) + ($$094<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = $9&255;
  $22 = (($20) + ($21<<7)|0);
  $156 = $22;
 }
 $25 = ((($2)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = HEAP32[$2>>2]|0;
 $28 = $26 >> 3;
 $29 = (($27) + ($28)|0);
 $30 = ($$096|0)==(4);
 $31 = HEAP8[$29>>0]|0;
 $32 = $31&255;
 $33 = $32 << 8;
 $34 = ((($29)) + 1|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = $35&255;
 $37 = $33 | $36;
 $38 = $37 << 16;
 $39 = ((($29)) + 2|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&255;
 $42 = $41 << 8;
 $43 = $38 | $42;
 $44 = ((($29)) + 3|0);
 $45 = HEAP8[$44>>0]|0;
 $46 = $45&255;
 $47 = $43 | $46;
 $48 = $26 & 7;
 $49 = $47 << $48;
 HEAP32[$15>>2] = $49;
 $50 = (32 - ($48))|0;
 $51 = $50&255;
 $52 = ((($15)) + 4|0);
 HEAP8[$52>>0] = $51;
 $53 = ((($15)) + 8|0);
 HEAP32[$53>>2] = $29;
 $54 = (11119 + ($3)|0);
 $55 = HEAP8[$54>>0]|0;
 $56 = $55&255;
 $57 = (($56) + -1)|0;
 $58 = (($1) + ($57)|0);
 $59 = HEAP8[$58>>0]|0;
 $60 = (($56) + -8)|0;
 $61 = (($1) + ($60)|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = $59&255;
 $64 = $62&255;
 $65 = (($64) + ($63))|0;
 $66 = ($62<<24>>24)!=(-1);
 $not$ = ($59<<24>>24)!=(-1);
 $narrow = $not$ & $66;
 $67 = $narrow&1;
 $68 = $65 << 24;
 $sext = (($68) + 16777216)|0;
 $69 = $sext >> 24;
 $70 = $69 >> $67;
 $71 = $62 & $59;
 $72 = ($71<<24>>24)==(-1);
 $73 = $72&1;
 $74 = (($70) + ($73))|0;
 $75 = $74&255;
 $76 = (__ZN7WelsDecL33CavlcGetTrailingOnesAndTotalCoeffERhS0_PNS_16TagReadBitsCacheEPNS_11TagVlcTableEba($13,$14,$15,$0,$30,$75)|0);
 $77 = HEAP8[$13>>0]|0;
 switch ($$096|0) {
 case 1: case 4:  {
  break;
 }
 default: {
  $78 = (($1) + ($56)|0);
  HEAP8[$78>>0] = $77;
 }
 }
 $79 = ($77<<24>>24)==(0);
 if ($79) {
  $80 = HEAP32[$25>>2]|0;
  $81 = (($80) + ($76))|0;
  HEAP32[$25>>2] = $81;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $82 = HEAP8[$14>>0]|0;
 $83 = ($82&255)>(3);
 $84 = ($77&255)>(16);
 $or$cond = $84 | $83;
 if ($or$cond) {
  $$0 = 1046;
  STACKTOP = sp;return ($$0|0);
 }
 $85 = (__ZN7WelsDecL16CavlcGetLevelValEPiPNS_16TagReadBitsCacheEhh($11,$15,$77,$82)|0);
 $86 = ($85|0)==(-1);
 if ($86) {
  $$0 = 1045;
  STACKTOP = sp;return ($$0|0);
 }
 $87 = (($85) + ($76))|0;
 $88 = $77&255;
 $89 = ($88|0)<($4|0);
 if ($89) {
  $$039$i = $30 ? 21221 : 21178;
  $$0$i = $30&1;
  $90 = (($88) + -1)|0;
  $91 = (($$039$i) + ($90)|0);
  $92 = HEAP8[$91>>0]|0;
  $93 = $92&255;
  $94 = HEAP8[$52>>0]|0;
  $95 = ($94&255)<($92&255);
  if ($95) {
   $96 = $94&255;
   $97 = HEAP32[$53>>2]|0;
   $98 = ((($97)) + 2|0);
   HEAP32[$53>>2] = $98;
   $99 = (($96) + 16)|0;
   $100 = $99&255;
   HEAP8[$52>>0] = $100;
   $101 = ((($97)) + 4|0);
   $102 = HEAP8[$101>>0]|0;
   $103 = $102&255;
   $104 = $103 << 8;
   $105 = ((($97)) + 5|0);
   $106 = HEAP8[$105>>0]|0;
   $107 = $106&255;
   $108 = $104 | $107;
   $109 = $99 & 255;
   $110 = (32 - ($109))|0;
   $111 = $108 << $110;
   $112 = HEAP32[$15>>2]|0;
   $113 = $111 | $112;
   HEAP32[$15>>2] = $113;
   $116 = $113;$124 = $100;
  } else {
   $$pre$i = HEAP32[$15>>2]|0;
   $116 = $$pre$i;$124 = $94;
  }
  $114 = (32 - ($93))|0;
  $115 = $116 >>> $114;
  $117 = ((((($0)) + 160|0) + (($$0$i*60)|0)|0) + ($90<<2)|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (((($118) + ($115<<1)|0)) + 1|0);
  $120 = HEAP8[$119>>0]|0;
  $121 = $120&255;
  $122 = $116 << $121;
  HEAP32[$15>>2] = $122;
  $123 = $124&255;
  $125 = (($123) - ($121))|0;
  $126 = $125&255;
  HEAP8[$52>>0] = $126;
  $127 = (($118) + ($115<<1)|0);
  $128 = HEAP8[$127>>0]|0;
  $129 = $128&255;
  $130 = (($121) + ($87))|0;
  $$085 = $130;$$095 = $129;
 } else {
  $$085 = $87;$$095 = 0;
 }
 $131 = (($88) + ($$095))|0;
 $132 = ($131|0)>($4|0);
 if ($132) {
  $$0 = 1047;
  STACKTOP = sp;return ($$0|0);
 }
 $133 = (__ZN7WelsDecL17CavlcGetRunBeforeEPiPNS_16TagReadBitsCacheEhPNS_11TagVlcTableEi($12,$15,$77,$0,$$095)|0);
 $134 = ($133|0)==(-1);
 if ($134) {
  $$0 = 1048;
  STACKTOP = sp;return ($$0|0);
 }
 $135 = (($133) + ($$085))|0;
 $136 = HEAP32[$25>>2]|0;
 $137 = (($135) + ($136))|0;
 HEAP32[$25>>2] = $137;
 $$08498 = (($88) + -1)|0;
 $138 = ($9&255)>(35);
 $div = (($9&255) / 6)&-1;
 $139 = $div&255;
 $140 = (($139) + -6)|0;
 $141 = (5 - ($139))|0;
 $142 = 1 << $141;
 $143 = (6 - ($139))|0;
 if ($138) {
  $$08399$us = -1;$$084100$us = $$08498;
  while(1) {
   $144 = (($12) + ($$084100$us<<2)|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = (($$08399$us) + 1)|0;
   $147 = (($146) + ($145))|0;
   $148 = $147 << 2;
   $149 = (($148) + ($8))|0;
   $150 = (($5) + ($149)|0);
   $151 = HEAP8[$150>>0]|0;
   $152 = $151&255;
   $153 = (($11) + ($$084100$us<<2)|0);
   $154 = HEAP32[$153>>2]|0;
   $155 = (($156) + ($152<<1)|0);
   $157 = HEAP16[$155>>1]|0;
   $158 = $157&65535;
   $159 = Math_imul($158, $154)|0;
   $160 = $159 << $140;
   $161 = $160&65535;
   $162 = (($7) + ($152<<1)|0);
   HEAP16[$162>>1] = $161;
   $$084$us = (($$084100$us) + -1)|0;
   $163 = ($$084100$us|0)>(0);
   if ($163) {
    $$08399$us = $147;$$084100$us = $$084$us;
   } else {
    $$0 = 0;
    break;
   }
  }
  STACKTOP = sp;return ($$0|0);
 } else {
  $$08399 = -1;$$084100 = $$08498;
  while(1) {
   $164 = (($12) + ($$084100<<2)|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = (($$08399) + 1)|0;
   $167 = (($166) + ($165))|0;
   $168 = $167 << 2;
   $169 = (($168) + ($8))|0;
   $170 = (($5) + ($169)|0);
   $171 = HEAP8[$170>>0]|0;
   $172 = $171&255;
   $173 = (($11) + ($$084100<<2)|0);
   $174 = HEAP32[$173>>2]|0;
   $175 = (($156) + ($172<<1)|0);
   $176 = HEAP16[$175>>1]|0;
   $177 = $176&65535;
   $178 = Math_imul($177, $174)|0;
   $179 = (($178) + ($142))|0;
   $180 = $179 >> $143;
   $181 = $180&65535;
   $182 = (($7) + ($172<<1)|0);
   HEAP16[$182>>1] = $181;
   $$084 = (($$084100) + -1)|0;
   $183 = ($$084100|0)>(0);
   if ($183) {
    $$08399 = $167;$$084100 = $$084;
   } else {
    $$0 = 0;
    break;
   }
  }
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN7WelsDec10BsEndCavlcEPN10WelsCommon15TagBitStringAuxE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >> 3;
 $5 = (($1) + ($4)|0);
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP8[$5>>0]|0;
 $8 = $7&255;
 $9 = $8 << 8;
 $10 = ((($5)) + 1|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = $9 | $12;
 $14 = $13 << 16;
 $15 = ((($5)) + 2|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = $17 << 8;
 $19 = $14 | $18;
 $20 = ((($5)) + 3|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 $23 = $19 | $22;
 $24 = $3 & 7;
 $25 = $23 << $24;
 $26 = ((($0)) + 20|0);
 HEAP32[$26>>2] = $25;
 $27 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $27;
 $28 = $24 | -16;
 $29 = ((($0)) + 24|0);
 HEAP32[$29>>2] = $28;
 return;
}
function __ZN7WelsDecL33CavlcGetTrailingOnesAndTotalCoeffERhS0_PNS_16TagReadBitsCacheEPNS_11TagVlcTableEba($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$075$pn77 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0;
 var $storemerge = 0, $storemerge$in = 0, $storemerge76 = 0, $storemerge76$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$2>>2]|0;
 do {
  if ($4) {
   $7 = $6 >>> 24;
   $8 = ((($3)) + 128|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (($9) + ($7<<1)|0);
   $11 = HEAP8[$10>>0]|0;
   $12 = $11&255;
   $13 = (((($9) + ($7<<1)|0)) + 1|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = $6 << $15;
   HEAP32[$2>>2] = $16;
   $17 = ((($2)) + 4|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = (($19) - ($15))|0;
   $21 = $20&255;
   HEAP8[$17>>0] = $21;
   $$075$pn77 = $12;$$1 = $15;
  } else {
   $22 = $5 << 24 >> 24;
   $23 = (18961 + ($22)|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = $24&255;
   $26 = ($24&255)<(3);
   if (!($26)) {
    $72 = $6 >>> 26;
    $73 = $6 << 6;
    HEAP32[$2>>2] = $73;
    $74 = ((($2)) + 4|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = $75&255;
    $77 = (($76) + 250)|0;
    $78 = $77&255;
    HEAP8[$74>>0] = $78;
    $79 = ((($3)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = (($80) + ($72<<1)|0);
    $82 = HEAP8[$81>>0]|0;
    $83 = $82&255;
    $$075$pn77 = $83;$$1 = 6;
    break;
   }
   $27 = $6 >>> 24;
   $28 = (18942 + ($25)|0);
   $29 = HEAP8[$28>>0]|0;
   $30 = $29&255;
   $31 = ($27>>>0)<($30>>>0);
   if ($31) {
    $32 = $6 << 8;
    HEAP32[$2>>2] = $32;
    $33 = ((($2)) + 4|0);
    $34 = HEAP8[$33>>0]|0;
    $35 = $34&255;
    $36 = (($35) + 248)|0;
    $37 = $36&255;
    HEAP8[$33>>0] = $37;
    $38 = (9356 + ($25<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (($39) + ($27)|0);
    $41 = HEAP8[$40>>0]|0;
    $42 = $41&255;
    $43 = (32 - ($42))|0;
    $44 = $32 >>> $43;
    $45 = (($25) + 1)|0;
    $46 = ((($3) + ($45<<5)|0) + ($27<<2)|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (($47) + ($44<<1)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = $49&255;
    $51 = (((($47) + ($44<<1)|0)) + 1|0);
    $52 = HEAP8[$51>>0]|0;
    $53 = $52&255;
    $54 = $32 << $53;
    HEAP32[$2>>2] = $54;
    $55 = (($36) - ($53))|0;
    $56 = $55&255;
    HEAP8[$33>>0] = $56;
    $57 = (($53) + 8)|0;
    $$075$pn77 = $50;$$1 = $57;
    break;
   } else {
    $58 = (($3) + ($25<<2)|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (($59) + ($27<<1)|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61&255;
    $63 = (((($59) + ($27<<1)|0)) + 1|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = $64&255;
    $66 = $6 << $65;
    HEAP32[$2>>2] = $66;
    $67 = ((($2)) + 4|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68&255;
    $70 = (($69) - ($65))|0;
    $71 = $70&255;
    HEAP8[$67>>0] = $71;
    $$075$pn77 = $62;$$1 = $65;
    break;
   }
  }
 } while(0);
 $storemerge76$in = (18978 + ($$075$pn77<<1)|0);
 $storemerge76 = HEAP8[$storemerge76$in>>0]|0;
 HEAP8[$1>>0] = $storemerge76;
 $storemerge$in = (((18978 + ($$075$pn77<<1)|0)) + 1|0);
 $storemerge = HEAP8[$storemerge$in>>0]|0;
 HEAP8[$0>>0] = $storemerge;
 return ($$1|0);
}
function __ZN7WelsDecL16CavlcGetLevelValEPiPNS_16TagReadBitsCacheEhh($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0101114 = 0, $$0102$lcssa = 0, $$0102122 = 0, $$0104118 = 0, $$0106113 = 0, $$0107117 = 0, $$1 = 0, $$1$i = 0, $$108 = 0, $$109 = 0, $$1103119 = 0, $$1105 = 0, $$112 = 0, $$114$i = 0, $$16$i = 0, $$2$i = 0, $$215$i = 0;
 var $$lcssa = 0, $$neg17$i = 0, $$pre = 0, $$pre134 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $fold = 0, $or$cond = 0, $or$cond111 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $3&255;
 $5 = ($3<<24>>24)==(0);
 $6 = HEAP32[$1>>2]|0;
 if ($5) {
  $$0102$lcssa = 0;$$lcssa = $6;
 } else {
  $$0102122 = 0;$9 = $6;
  while(1) {
   $7 = (30 - ($$0102122))|0;
   $8 = $9 >>> $7;
   $10 = $8 & 2;
   $11 = (1 - ($10))|0;
   $12 = (($0) + ($$0102122<<2)|0);
   HEAP32[$12>>2] = $11;
   $13 = (($$0102122) + 1)|0;
   $14 = HEAP32[$1>>2]|0;
   $exitcond = ($13|0)==($4|0);
   if ($exitcond) {
    $$0102$lcssa = $4;$$lcssa = $14;
    break;
   } else {
    $$0102122 = $13;$9 = $14;
   }
  }
 }
 $15 = $$lcssa << $4;
 HEAP32[$1>>2] = $15;
 $16 = ((($1)) + 4|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = (($18) - ($4))|0;
 $20 = $19&255;
 HEAP8[$16>>0] = $20;
 $21 = $2&255;
 $22 = ($3&255)<(3);
 $23 = ($$0102$lcssa>>>0)<($21>>>0);
 if (!($23)) {
  $$0 = $4;
  return ($$0|0);
 }
 $24 = ($2&255)>(10);
 $$ = $24 & $22;
 $25 = $$&1;
 $26 = ((($1)) + 8|0);
 $$0104118 = $4;$$0107117 = $25;$$1103119 = $$0102$lcssa;$27 = $20;
 while(1) {
  $28 = ($27&255)<(17);
  if ($28) {
   $29 = $27&255;
   $30 = HEAP32[$26>>2]|0;
   $31 = ((($30)) + 2|0);
   HEAP32[$26>>2] = $31;
   $32 = (($29) + 16)|0;
   $33 = $32&255;
   HEAP8[$16>>0] = $33;
   $34 = ((($30)) + 4|0);
   $35 = HEAP8[$34>>0]|0;
   $36 = $35&255;
   $37 = $36 << 8;
   $38 = ((($30)) + 5|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = $39&255;
   $41 = $37 | $40;
   $42 = $32 & 255;
   $43 = (32 - ($42))|0;
   $44 = $41 << $43;
   $45 = HEAP32[$1>>2]|0;
   $46 = $44 | $45;
   HEAP32[$1>>2] = $46;
   $47 = $46;$64 = $33;
  } else {
   $$pre134 = HEAP32[$1>>2]|0;
   $47 = $$pre134;$64 = $27;
  }
  $48 = ($47>>>0)>(65535);
  $49 = $47 >>> 16;
  $$$i = $48 ? $49 : $47;
  $$16$i = $48 ? 16 : 0;
  $50 = $$$i & 65280;
  $51 = ($50|0)==(0);
  $52 = $$$i >>> 8;
  $53 = $$16$i | 8;
  $$114$i = $51 ? $$$i : $52;
  $$1$i = $51 ? $$16$i : $53;
  $54 = $$114$i & 240;
  $55 = ($54|0)==(0);
  $56 = $$114$i >>> 4;
  $57 = $$1$i | 4;
  $$215$i = $55 ? $$114$i : $56;
  $$2$i = $55 ? $$1$i : $57;
  $58 = (9292 + ($$215$i<<2)|0);
  $59 = HEAP32[$58>>2]|0;
  $$neg17$i = (32 - ($$2$i))|0;
  $60 = (($$neg17$i) - ($59))|0;
  $61 = ($60|0)>(16);
  if ($61) {
   $$0 = -1;
   label = 18;
   break;
  }
  $62 = $47 << $60;
  HEAP32[$1>>2] = $62;
  $63 = $64&255;
  $65 = (($63) - ($60))|0;
  $66 = $65&255;
  HEAP8[$16>>0] = $66;
  $67 = (($60) + ($$0104118))|0;
  $68 = (($60) + -1)|0;
  $69 = $68 << $$0107117;
  $70 = ($68|0)>(13);
  if ($70) {
   $71 = ($68|0)==(14);
   $72 = ($$0107117|0)==(0);
   $or$cond = $72 & $71;
   if ($or$cond) {
    $$0101114 = $69;$$0106113 = 4;
    label = 13;
   } else {
    $73 = ($68|0)==(15);
    $74 = (($69) + 15)|0;
    $$108 = $72 ? $74 : $69;
    if ($73) {
     $$0101114 = $$108;$$0106113 = 12;
     label = 13;
    } else {
     label = 12;
    }
   }
  } else {
   label = 12;
  }
  if ((label|0) == 12) {
   label = 0;
   $75 = ($$0107117|0)>(0);
   if ($75) {
    $$0101114 = $69;$$0106113 = $$0107117;
    label = 13;
   } else {
    $$1 = $69;$$1105 = $67;
   }
  }
  if ((label|0) == 13) {
   label = 0;
   $76 = $65 & 255;
   $77 = ($76|0)>($$0106113|0);
   if ($77) {
    $100 = $65;$96 = $62;
   } else {
    $78 = HEAP32[$26>>2]|0;
    $79 = ((($78)) + 2|0);
    HEAP32[$26>>2] = $79;
    $80 = (($76) + 16)|0;
    $81 = $80&255;
    HEAP8[$16>>0] = $81;
    $82 = ((($78)) + 4|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83&255;
    $85 = $84 << 8;
    $86 = ((($78)) + 5|0);
    $87 = HEAP8[$86>>0]|0;
    $88 = $87&255;
    $89 = $85 | $88;
    $fold = (($65) + 16)|0;
    $90 = $fold & 255;
    $91 = (32 - ($90))|0;
    $92 = $89 << $91;
    $93 = $92 | $62;
    HEAP32[$1>>2] = $93;
    $100 = $80;$96 = $93;
   }
   $94 = (32 - ($$0106113))|0;
   $95 = $96 >>> $94;
   $97 = (($95) + ($$0101114))|0;
   $98 = $96 << $$0106113;
   HEAP32[$1>>2] = $98;
   $99 = (($100) - ($$0106113))|0;
   $101 = $99&255;
   HEAP8[$16>>0] = $101;
   $102 = (($$0106113) + ($67))|0;
   $$1 = $97;$$1105 = $102;
  }
  $103 = ($$1103119|0)==($4|0);
  $$109 = $22 & $103;
  $104 = $$109&1;
  $105 = $104 << 1;
  $106 = (($$1) + ($105))|0;
  $107 = (($106) + 2)|0;
  $108 = $107 >> 1;
  $109 = (($0) + ($$1103119<<2)|0);
  $110 = $108 << 1;
  $111 = $106 & 1;
  $112 = (0 - ($111))|0;
  $113 = $110 & $112;
  $114 = (($108) - ($113))|0;
  HEAP32[$109>>2] = $114;
  $115 = ($$0107117|0)==(0);
  $116 = $115&1;
  $117 = (($116) + ($$0107117))|0;
  $118 = (($117) + -1)|0;
  $119 = 3 << $118;
  $120 = (($$1103119) + 1)|0;
  $121 = ($120|0)<($21|0);
  if (!($121)) {
   $$0 = $$1105;
   label = 18;
   break;
  }
  $122 = ($117|0)<(6);
  $123 = ($114|0)>($119|0);
  $124 = (0 - ($119))|0;
  $125 = ($114|0)<($124|0);
  $or$cond111 = $123 | $125;
  $$112 = $122 & $or$cond111;
  $126 = $$112&1;
  $127 = (($126) + ($117))|0;
  $$pre = HEAP8[$16>>0]|0;
  $$0104118 = $$1105;$$0107117 = $127;$$1103119 = $120;$27 = $$pre;
 }
 if ((label|0) == 18) {
  return ($$0|0);
 }
 return (0)|0;
}
function __ZN7WelsDecL17CavlcGetRunBeforeEPiPNS_16TagReadBitsCacheEhPNS_11TagVlcTableEi($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i = 0, $$086 = 0, $$087$lcssa = 0, $$087106 = 0, $$088$lcssa = 0, $$088105 = 0, $$089103 = 0, $$1 = 0, $$1$i = 0, $$114$i = 0, $$16$i = 0, $$2$i = 0, $$215$i = 0, $$neg17$i = 0, $$pre = 0, $$pre118 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fold = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $2&255;
 $6 = (($5) + -1)|0;
 $7 = ($2&255)>(1);
 L1: do {
  if ($7) {
   $8 = ((($1)) + 4|0);
   $9 = ((($1)) + 8|0);
   $10 = ((($3)) + 156|0);
   $$087106 = $4;$$088105 = 0;$$089103 = 0;
   L3: while(1) {
    $11 = ($$087106|0)>(0);
    if (!($11)) {
     break;
    }
    $15 = (21308 + ($$087106)|0);
    $16 = HEAP8[$15>>0]|0;
    $17 = $16&255;
    $18 = HEAP8[$8>>0]|0;
    $19 = ($18&255)<($16&255);
    if ($19) {
     $20 = $18&255;
     $21 = HEAP32[$9>>2]|0;
     $22 = ((($21)) + 2|0);
     HEAP32[$9>>2] = $22;
     $23 = (($20) + 16)|0;
     $24 = $23&255;
     HEAP8[$8>>0] = $24;
     $25 = ((($21)) + 4|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = $26&255;
     $28 = $27 << 8;
     $29 = ((($21)) + 5|0);
     $30 = HEAP8[$29>>0]|0;
     $31 = $30&255;
     $32 = $28 | $31;
     $33 = $23 & 255;
     $34 = (32 - ($33))|0;
     $35 = $32 << $34;
     $36 = HEAP32[$1>>2]|0;
     $37 = $35 | $36;
     HEAP32[$1>>2] = $37;
     $40 = $37;$43 = $24;
    } else {
     $$pre = HEAP32[$1>>2]|0;
     $40 = $$pre;$43 = $18;
    }
    $38 = (32 - ($17))|0;
    $39 = $40 >>> $38;
    $41 = ($$087106|0)<(7);
    $42 = $43&255;
    do {
     if ($41) {
      $44 = (($$087106) + -1)|0;
      $45 = (((($3)) + 132|0) + ($44<<2)|0);
      $46 = HEAP32[$45>>2]|0;
      $47 = (((($46) + ($39<<1)|0)) + 1|0);
      $48 = HEAP8[$47>>0]|0;
      $49 = $48&255;
      $50 = $40 << $49;
      HEAP32[$1>>2] = $50;
      $51 = (($42) - ($49))|0;
      $52 = $51&255;
      HEAP8[$8>>0] = $52;
      $53 = (($49) + ($$088105))|0;
      $54 = HEAP32[$45>>2]|0;
      $55 = (($54) + ($39<<1)|0);
      $56 = HEAP8[$55>>0]|0;
      $57 = $56&255;
      $58 = (($0) + ($$089103<<2)|0);
      HEAP32[$58>>2] = $57;
      $$1 = $53;$112 = $57;
     } else {
      $59 = $40 << $17;
      HEAP32[$1>>2] = $59;
      $60 = (($42) - ($17))|0;
      $61 = $60&255;
      HEAP8[$8>>0] = $61;
      $62 = (($17) + ($$088105))|0;
      $63 = HEAP32[$10>>2]|0;
      $64 = (($63) + ($39<<1)|0);
      $65 = HEAP8[$64>>0]|0;
      $66 = ($65&255)<(7);
      if ($66) {
       $67 = $65&255;
       $68 = (($0) + ($$089103<<2)|0);
       HEAP32[$68>>2] = $67;
       $$1 = $62;$112 = $67;
       break;
      }
      $69 = $60 & 240;
      $70 = ($69>>>0)<(16);
      if ($70) {
       $71 = HEAP32[$9>>2]|0;
       $72 = ((($71)) + 2|0);
       HEAP32[$9>>2] = $72;
       $73 = (($60) + 16)|0;
       $74 = $73&255;
       HEAP8[$8>>0] = $74;
       $75 = ((($71)) + 4|0);
       $76 = HEAP8[$75>>0]|0;
       $77 = $76&255;
       $78 = $77 << 8;
       $79 = ((($71)) + 5|0);
       $80 = HEAP8[$79>>0]|0;
       $81 = $80&255;
       $82 = $78 | $81;
       $fold = (($60) + 16)|0;
       $83 = $fold & 255;
       $84 = (32 - ($83))|0;
       $85 = $82 << $84;
       $86 = $85 | $59;
       HEAP32[$1>>2] = $86;
       $87 = $86;
      } else {
       $87 = $59;
      }
      $88 = ($87>>>0)>(65535);
      $89 = $87 >>> 16;
      $$$i = $88 ? $89 : $87;
      $$16$i = $88 ? 16 : 0;
      $90 = $$$i & 65280;
      $91 = ($90|0)==(0);
      $92 = $$$i >>> 8;
      $93 = $$16$i | 8;
      $$114$i = $91 ? $$$i : $92;
      $$1$i = $91 ? $$16$i : $93;
      $94 = $$114$i & 240;
      $95 = ($94|0)==(0);
      $96 = $$114$i >>> 4;
      $97 = $$1$i | 4;
      $$215$i = $95 ? $$114$i : $96;
      $$2$i = $95 ? $$1$i : $97;
      $98 = (9292 + ($$215$i<<2)|0);
      $99 = HEAP32[$98>>2]|0;
      $$neg17$i = (32 - ($$2$i))|0;
      $100 = (($$neg17$i) - ($99))|0;
      $101 = (($100) + 6)|0;
      $102 = (($0) + ($$089103<<2)|0);
      HEAP32[$102>>2] = $101;
      $103 = ($101|0)>($$087106|0);
      if ($103) {
       $$086 = -1;
       label = 19;
       break L3;
      }
      $104 = HEAP32[$1>>2]|0;
      $105 = $104 << $100;
      HEAP32[$1>>2] = $105;
      $106 = HEAP8[$8>>0]|0;
      $107 = $106&255;
      $108 = (($107) - ($100))|0;
      $109 = $108&255;
      HEAP8[$8>>0] = $109;
      $110 = (($100) + ($62))|0;
      $$pre118 = HEAP32[$102>>2]|0;
      $$1 = $110;$112 = $$pre118;
     }
    } while(0);
    $111 = (($$087106) - ($112))|0;
    $113 = (($$089103) + 1)|0;
    $114 = ($113|0)<($6|0);
    if ($114) {
     $$087106 = $111;$$088105 = $$1;$$089103 = $113;
    } else {
     $$087$lcssa = $111;$$088$lcssa = $$1;
     break L1;
    }
   }
   if ((label|0) == 19) {
    return ($$086|0);
   }
   $12 = ($5|0)>($$089103|0);
   if (!($12)) {
    $$086 = $$088105;
    return ($$086|0);
   }
   $scevgep = (($0) + ($$089103<<2)|0);
   $13 = (($5) - ($$089103))|0;
   $14 = $13 << 2;
   _memset(($scevgep|0),0,($14|0))|0;
   $$086 = $$088105;
   return ($$086|0);
  } else {
   $$087$lcssa = $4;$$088$lcssa = 0;
  }
 } while(0);
 $115 = (($0) + ($6<<2)|0);
 HEAP32[$115>>2] = $$087$lcssa;
 $$086 = $$088$lcssa;
 return ($$086|0);
}
function __ZN7WelsDec23CheckIntra16x16PredModeEhPa($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0&255;
 $3 = $2 & 4;
 $4 = $2 & 2;
 $5 = $2 & 1;
 $6 = HEAP8[$1>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = ($6&255)>(3);
 if ($8) {
  $$1 = 1051;
  return ($$1|0);
 }
 $9 = ($6<<24>>24)==(2);
 if ($9) {
  $10 = $2 & 5;
  $11 = ($10|0)==(5);
  if ($11) {
   $$1 = 0;
   return ($$1|0);
  }
  $12 = ($3|0)==(0);
  $13 = $5&255;
  $14 = (6 - ($13))<<24>>24;
  $$sink = $12 ? $14 : 4;
  HEAP8[$1>>0] = $$sink;
  $$1 = 0;
  return ($$1|0);
 }
 $15 = (25599 + ($7<<2)|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($6<<24>>24)==($16<<24>>24);
 if ($17) {
  $18 = (((25599 + ($7<<2)|0)) + 1|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  $21 = ($3|0)<($20|0);
  if (!($21)) {
   $22 = (((25599 + ($7<<2)|0)) + 2|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23 << 24 >> 24;
   $25 = ($5|0)<($24|0);
   if (!($25)) {
    $26 = (((25599 + ($7<<2)|0)) + 3|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27 << 24 >> 24;
    $29 = ($4|0)<($28|0);
    if (!($29)) {
     $$1 = 0;
     return ($$1|0);
    }
   }
  }
 }
 $$1 = 1051;
 return ($$1|0);
}
function __ZN7WelsDec29ParseIntraPredModeChromaCabacEPNS_21TagWelsDecoderContextEhRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$4 = 0, $$5 = 0, $$off = 0, $$off81 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = ((($0)) + 241932|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4004|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($6)) + 3908|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1&255;
 $12 = $11 & 4;
 $13 = $11 & 1;
 $14 = ((($6)) + 4040|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($6)) + 4044|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($15) - ($17))|0;
 $19 = (($15) + -1)|0;
 HEAP32[$2>>2] = 0;
 $20 = ($13|0)==(0);
 if ($20) {
  $28 = 0;
 } else {
  $21 = (($8) + ($18)|0);
  $22 = HEAP8[$21>>0]|0;
  $$off = (($22) + -1)<<24>>24;
  $23 = ($$off&255)<(3);
  if ($23) {
   $24 = (($10) + ($18<<1)|0);
   $25 = HEAP16[$24>>1]|0;
   $26 = ($25<<16>>16)!=(512);
   $28 = $26;
  } else {
   $28 = 0;
  }
 }
 $27 = $28&1;
 $29 = ($12|0)==(0);
 if ($29) {
  $37 = 0;
 } else {
  $30 = (($8) + ($19)|0);
  $31 = HEAP8[$30>>0]|0;
  $$off81 = (($31) + -1)<<24>>24;
  $32 = ($$off81&255)<(3);
  if ($32) {
   $33 = (($10) + ($19<<1)|0);
   $34 = HEAP16[$33>>1]|0;
   $35 = ($34<<16>>16)!=(512);
   $37 = $35;
  } else {
   $37 = 0;
  }
 }
 $36 = $37&1;
 $38 = (($36) + ($27))|0;
 $39 = ((($0)) + 512232|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($0)) + 511437|0);
 $42 = (($41) + ($38<<1)|0);
 $43 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($40,$42,$3)|0);
 $44 = ($43|0)==(0);
 if (!($44)) {
  $$5 = $43;
  STACKTOP = sp;return ($$5|0);
 }
 $45 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $45;
 $46 = ($45|0)==(0);
 if ($46) {
  $$5 = 0;
  STACKTOP = sp;return ($$5|0);
 }
 $47 = HEAP32[$39>>2]|0;
 $48 = ((($0)) + 511443|0);
 $49 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($47,$48,$4)|0);
 $50 = ($49|0)==(0);
 L15: do {
  if ($50) {
   $51 = HEAP32[$4>>2]|0;
   $52 = ($51|0)==(0);
   if ($52) {
    HEAP32[$2>>2] = 1;
    $$4 = 0;
    break;
   }
   HEAP32[$4>>2] = 0;
   while(1) {
    $53 = HEAP32[$39>>2]|0;
    $54 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($53,$48,$3)|0);
    $55 = ($54|0)==(0);
    if (!($55)) {
     $$4 = $54;
     break L15;
    }
    $56 = HEAP32[$4>>2]|0;
    $57 = (($56) + 1)|0;
    HEAP32[$4>>2] = $57;
    $58 = HEAP32[$3>>2]|0;
    $59 = ($58|0)!=(0);
    $60 = ($57|0)==(0);
    $61 = $60 & $59;
    if (!($61)) {
     break;
    }
   }
   $62 = ($56|0)==(0);
   $or$cond = $62 & $59;
   if ($or$cond) {
    HEAP32[$4>>2] = 2;
    $64 = 2;
   } else {
    $64 = $57;
   }
   $63 = (($64) + 1)|0;
   HEAP32[$2>>2] = $63;
   $$4 = 0;
  } else {
   $$4 = $49;
  }
 } while(0);
 $$5 = $$4;
 STACKTOP = sp;return ($$5|0);
}
function __ZN7WelsDec24CheckIntraChromaPredModeEhPa($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0&255;
 $3 = $2 & 4;
 $4 = $2 & 2;
 $5 = $2 & 1;
 $6 = HEAP8[$1>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $8 = $2 & 5;
  $9 = ($8|0)==(5);
  if ($9) {
   $$1 = 0;
   return ($$1|0);
  }
  $10 = ($3|0)==(0);
  $11 = $5&255;
  $12 = (6 - ($11))<<24>>24;
  $$sink = $10 ? $12 : 4;
  HEAP8[$1>>0] = $$sink;
  $$1 = 0;
  return ($$1|0);
 }
 $13 = $6 << 24 >> 24;
 $14 = (25327 + ($13<<2)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ($6<<24>>24)==($15<<24>>24);
 if ($16) {
  $17 = (((25327 + ($13<<2)|0)) + 1|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = $18 << 24 >> 24;
  $20 = ($3|0)<($19|0);
  if (!($20)) {
   $21 = (((25327 + ($13<<2)|0)) + 2|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22 << 24 >> 24;
   $24 = ($5|0)<($23|0);
   if (!($24)) {
    $25 = (((25327 + ($13<<2)|0)) + 3|0);
    $26 = HEAP8[$25>>0]|0;
    $27 = $26 << 24 >> 24;
    $28 = ($4|0)<($27|0);
    if (!($28)) {
     $$1 = 0;
     return ($$1|0);
    }
   }
  }
 }
 $$1 = 1052;
 return ($$1|0);
}
function __ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$053 = 0, $$061 = 0, $$062 = 0, $$1 = 0, $$sink$i = 0, $$sink31$i = 0, $$sink32$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP8[$1>>0]|0;
 $4 = $3&255;
 $5 = ((($1)) + 1|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 HEAP32[$2>>2] = $7;
 $8 = ((($0)) + 8|0);
 $9 = $8;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $0;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($15) + 4)|0;
 $19 = $18;
 $20 = HEAP32[$19>>2]|0;
 $21 = (_bitshift64Lshr(($17|0),($20|0),6)|0);
 $22 = tempRet0;
 $23 = $21 & 3;
 $24 = ((14823 + ($4<<2)|0) + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = $25&255;
 $28 = (_i64Subtract(($17|0),($20|0),($27|0),0)|0);
 $29 = tempRet0;
 $30 = ((($0)) + 16|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (_bitshift64Shl(($28|0),($29|0),($31|0))|0);
 $33 = tempRet0;
 $34 = ($14>>>0)<($33>>>0);
 $35 = ($11>>>0)<($32>>>0);
 $36 = ($14|0)==($33|0);
 $37 = $36 & $35;
 $38 = $34 | $37;
 do {
  if ($38) {
   $51 = (((15079 + ($4<<1)|0)) + 1|0);
   $52 = HEAP8[$51>>0]|0;
   HEAP8[$1>>0] = $52;
   $53 = ($29>>>0)>(0);
   $54 = ($28>>>0)>(255);
   $55 = ($29|0)==(0);
   $56 = $55 & $54;
   $57 = $53 | $56;
   if (!($57)) {
    $62 = (_bitshift64Shl(($28|0),($29|0),1)|0);
    $63 = tempRet0;
    $$053 = 1;$66 = $62;$69 = $63;$75 = $11;$78 = $14;
    break;
   }
   $58 = $0;
   $59 = $58;
   HEAP32[$59>>2] = $28;
   $60 = (($58) + 4)|0;
   $61 = $60;
   HEAP32[$61>>2] = $29;
   $$1 = 0;
   return ($$1|0);
  } else {
   $39 = (_i64Subtract(($11|0),($14|0),($32|0),($33|0))|0);
   $40 = tempRet0;
   $41 = $7 ^ 1;
   HEAP32[$2>>2] = $41;
   $42 = ($3<<24>>24)==(0);
   if ($42) {
    $43 = HEAP8[$5>>0]|0;
    $44 = $43 ^ 1;
    HEAP8[$5>>0] = $44;
   }
   $45 = (15079 + ($4<<1)|0);
   $46 = HEAP8[$45>>0]|0;
   HEAP8[$1>>0] = $46;
   $47 = (25343 + ($26)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = $48&255;
   $50 = $26 << $49;
   $$053 = $49;$66 = $50;$69 = 0;$75 = $39;$78 = $40;
  }
 } while(0);
 $64 = $0;
 $65 = $64;
 HEAP32[$65>>2] = $66;
 $67 = (($64) + 4)|0;
 $68 = $67;
 HEAP32[$68>>2] = $69;
 $70 = HEAP32[$30>>2]|0;
 $71 = (($70) - ($$053))|0;
 HEAP32[$30>>2] = $71;
 $72 = ($71|0)>(0);
 if ($72) {
  $73 = $8;
  $74 = $73;
  HEAP32[$74>>2] = $75;
  $76 = (($73) + 4)|0;
  $77 = $76;
  HEAP32[$77>>2] = $78;
  $$1 = 0;
  return ($$1|0);
 }
 $79 = ((($0)) + 28|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ((($0)) + 24|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = (($80) - ($82))|0;
 $84 = ($83|0)<(1);
 $85 = $82;
 if ($84) {
  $$0$i = 10012;$$061 = 0;$$062 = 0;
 } else {
  switch ($83|0) {
  case 3:  {
   $86 = HEAP8[$85>>0]|0;
   $87 = $86&255;
   $88 = $87 << 16;
   $89 = ((($85)) + 1|0);
   $90 = HEAP8[$89>>0]|0;
   $91 = $90&255;
   $92 = $91 << 8;
   $93 = $92 | $88;
   $94 = ((($85)) + 2|0);
   $95 = HEAP8[$94>>0]|0;
   $96 = $95&255;
   $97 = $93 | $96;
   $$sink$i = 24;$$sink31$i = 3;$$sink32$i = $97;
   break;
  }
  case 2:  {
   $98 = HEAP8[$85>>0]|0;
   $99 = $98&255;
   $100 = $99 << 8;
   $101 = ((($85)) + 1|0);
   $102 = HEAP8[$101>>0]|0;
   $103 = $102&255;
   $104 = $100 | $103;
   $$sink$i = 16;$$sink31$i = 2;$$sink32$i = $104;
   break;
  }
  case 1:  {
   $105 = HEAP8[$85>>0]|0;
   $106 = $105&255;
   $$sink$i = 8;$$sink31$i = 1;$$sink32$i = $106;
   break;
  }
  default: {
   $107 = HEAP8[$85>>0]|0;
   $108 = $107&255;
   $109 = $108 << 24;
   $110 = ((($85)) + 1|0);
   $111 = HEAP8[$110>>0]|0;
   $112 = $111&255;
   $113 = $112 << 16;
   $114 = $113 | $109;
   $115 = ((($85)) + 2|0);
   $116 = HEAP8[$115>>0]|0;
   $117 = $116&255;
   $118 = $117 << 8;
   $119 = $114 | $118;
   $120 = ((($85)) + 3|0);
   $121 = HEAP8[$120>>0]|0;
   $122 = $121&255;
   $123 = $119 | $122;
   $$sink$i = 32;$$sink31$i = 4;$$sink32$i = $123;
  }
  }
  $124 = (($85) + ($$sink31$i)|0);
  HEAP32[$81>>2] = $124;
  $$0$i = 0;$$061 = $$sink$i;$$062 = $$sink32$i;
 }
 $125 = (_bitshift64Shl(($75|0),($78|0),($$061|0))|0);
 $126 = tempRet0;
 $127 = $125 | $$062;
 $128 = $8;
 $129 = $128;
 HEAP32[$129>>2] = $127;
 $130 = (($128) + 4)|0;
 $131 = $130;
 HEAP32[$131>>2] = $126;
 $132 = (($71) + ($$061))|0;
 HEAP32[$30>>2] = $132;
 $133 = ($$0$i|0)!=(0);
 $134 = ($132|0)<(0);
 $or$cond = $133 & $134;
 $$0 = $or$cond ? $$0$i : 0;
 $$1 = $$0;
 return ($$1|0);
}
function __ZN7WelsDec27ParseIntraPredModeLumaCabacEPNS_21TagWelsDecoderContextERi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$1>>2] = 0;
 $3 = ((($0)) + 512232|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 511445|0);
 $6 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($4,$5,$2)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  $$4 = $6;
  STACKTOP = sp;return ($$4|0);
 }
 $8 = HEAP32[$2>>2]|0;
 $9 = ($8|0)==(1);
 do {
  if ($9) {
   $storemerge = -1;
  } else {
   $10 = HEAP32[$3>>2]|0;
   $11 = ((($0)) + 511447|0);
   $12 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($10,$11,$2)|0);
   $13 = ($12|0)==(0);
   if (!($13)) {
    $$4 = $12;
    STACKTOP = sp;return ($$4|0);
   }
   $14 = HEAP32[$2>>2]|0;
   $15 = HEAP32[$1>>2]|0;
   $16 = $15 | $14;
   HEAP32[$1>>2] = $16;
   $17 = HEAP32[$3>>2]|0;
   $18 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($17,$11,$2)|0);
   $19 = ($18|0)==(0);
   if (!($19)) {
    $$4 = $18;
    STACKTOP = sp;return ($$4|0);
   }
   $20 = HEAP32[$2>>2]|0;
   $21 = $20 << 1;
   $22 = HEAP32[$1>>2]|0;
   $23 = $22 | $21;
   HEAP32[$1>>2] = $23;
   $24 = HEAP32[$3>>2]|0;
   $25 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($24,$11,$2)|0);
   $26 = ($25|0)==(0);
   if ($26) {
    $27 = HEAP32[$2>>2]|0;
    $28 = $27 << 2;
    $29 = HEAP32[$1>>2]|0;
    $30 = $29 | $28;
    $storemerge = $30;
    break;
   } else {
    $$4 = $25;
    STACKTOP = sp;return ($$4|0);
   }
  }
 } while(0);
 HEAP32[$1>>2] = $storemerge;
 $$4 = 0;
 STACKTOP = sp;return ($$4|0);
}
function __ZN7WelsDec16PredIntra4x4ModeEPai($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (15610 + ($1)|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&255;
 $5 = (($4) + -8)|0;
 $6 = (($0) + ($5)|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = (($4) + -1)|0;
 $9 = (($0) + ($8)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(-1);
 $12 = ($7<<24>>24)==(-1);
 $or$cond = $12 | $11;
 $13 = ($10<<24>>24)<($7<<24>>24);
 $14 = $13 ? $10 : $7;
 $15 = $14 << 24 >> 24;
 $16 = $or$cond ? 2 : $15;
 return ($16|0);
}
function __ZN7WelsDec21CheckIntraNxNPredModeEPiPaib($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$$ = 0, $$$52 = 0, $$1 = 0, $$2 = 0, $$52 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (11103 + ($2)|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5 << 24 >> 24;
 $7 = (($6) + -1)|0;
 $8 = (($0) + ($7<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($6) + -6)|0;
 $11 = (($0) + ($10<<2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($6) + -7)|0;
 $14 = (($0) + ($13<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $3 ? 4 : 5;
 $17 = (($6) - ($16))|0;
 $18 = (($0) + ($17<<2)|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = HEAP8[$1>>0]|0;
 $21 = $20 << 24 >> 24;
 $22 = ($20&255)>(8);
 if ($22) {
  $$1 = -1;
  return ($$1|0);
 }
 $23 = ($20<<24>>24)==(2);
 do {
  if ($23) {
   $24 = ($9|0)!=(0);
   $25 = ($12|0)!=(0);
   $or$cond = $24 & $25;
   if ($or$cond) {
    $$1 = $21;
    return ($$1|0);
   } else {
    $$ = $25 ? 10 : 11;
    $$$ = $24 ? 9 : $$;
    $$2 = $$$;
    break;
   }
  } else {
   $26 = (25615 + ($21<<2)|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = ($20<<24>>24)==($27<<24>>24);
   if (!($28)) {
    $$1 = -1;
    return ($$1|0);
   }
   $29 = (((25615 + ($21<<2)|0)) + 1|0);
   $30 = HEAP8[$29>>0]|0;
   $31 = $30 << 24 >> 24;
   $32 = ($9|0)<($31|0);
   if ($32) {
    $$1 = -1;
    return ($$1|0);
   }
   $33 = (((25615 + ($21<<2)|0)) + 2|0);
   $34 = HEAP8[$33>>0]|0;
   $35 = $34 << 24 >> 24;
   $36 = ($12|0)<($35|0);
   if ($36) {
    $$1 = -1;
    return ($$1|0);
   }
   $37 = (((25615 + ($21<<2)|0)) + 3|0);
   $38 = HEAP8[$37>>0]|0;
   $39 = $38 << 24 >> 24;
   $40 = ($15|0)<($39|0);
   if ($40) {
    $$1 = -1;
    return ($$1|0);
   } else {
    $41 = ($20<<24>>24)==(3);
    $42 = ($19|0)==(0);
    $or$cond3 = $42 & $41;
    $43 = ($20<<24>>24)==(7);
    $or$cond5 = $42 & $43;
    $$52 = $or$cond5 ? 13 : $20;
    $$$52 = $or$cond3 ? 12 : $$52;
    $$2 = $$$52;
    break;
   }
  }
 } while(0);
 $44 = $$2 << 24 >> 24;
 $$1 = $44;
 return ($$1|0);
}
function __ZN7WelsDec23PredPSkipMvFromNeighborEPNS_10TagDqLayerEPs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$20$i = 0, $$$20$i220 = 0, $$$i218245 = 0, $$$i242 = 0, $$0$off0 = 0, $$0$off0$not = 0, $$0184 = 0, $$0185 = 0, $$0186 = 0, $$0189 = 0, $$0191 = 0, $$0193 = 0, $$0195$off0 = 0, $$0195$off0$not = 0, $$0196$off0 = 0, $$0196$off0$not = 0, $$1 = 0, $$1$i = 0, $$1$i222 = 0, $$119$i221247 = 0;
 var $$119$i244 = 0, $$1194$off0 = 0, $$1194$off0$not = 0, $$20$i219246 = 0, $$20$i243 = 0, $$214 = 0, $$217 = 0, $$neg$i = 0, $$neg$i223 = 0, $$not = 0, $$not201 = 0, $$sink = 0, $$sink$sink = 0, $$sroa$0$0 = 0, $$sroa$010$0 = 0, $$sroa$010$0$extract$trunc = 0, $$sroa$010$0$extract$trunc11 = 0, $$sroa$010$0$insert$ext = 0, $$sroa$010$0$insert$insert = 0, $$sroa$010$1 = 0;
 var $$sroa$017$0$extract$trunc = 0, $$sroa$017$0$insert$ext = 0, $$sroa$017$0$insert$ext20 = 0, $$sroa$017$0$insert$insert = 0, $$sroa$017$0$insert$insert22 = 0, $$sroa$017$0236238 = 0, $$sroa$031$0$extract$trunc = 0, $$sroa$031$0$insert$ext = 0, $$sroa$031$0$insert$ext38 = 0, $$sroa$031$0$insert$insert = 0, $$sroa$031$0$insert$insert40 = 0, $$sroa$031$0227229 = 0, $$sroa$7$0 = 0, $$sroa$7$0$extract$shift = 0, $$sroa$7$0$extract$shift14 = 0, $$sroa$7$0$extract$trunc = 0, $$sroa$7$0$extract$trunc15 = 0, $$sroa$7$0$insert$ext = 0, $$sroa$7$0$insert$shift = 0, $$sroa$7$1 = 0;
 var $$sroa$724$0$extract$shift = 0, $$sroa$724$0$extract$trunc = 0, $$sroa$724$0$insert$ext26 = 0, $$sroa$724$0$insert$shift = 0, $$sroa$724$0$insert$shift27 = 0, $$sroa$724$0235239 = 0, $$sroa$8$0$extract$shift = 0, $$sroa$8$0$extract$trunc = 0, $$sroa$8$0$insert$ext48 = 0, $$sroa$8$0$insert$shift = 0, $$sroa$8$0$insert$shift49 = 0, $$sroa$8$0226230 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge202 = 0, $brmerge203 = 0, $brmerge204 = 0, $extract$t = 0, $extract$t197 = 0, $or$cond = 0, $or$cond$not = 0, $or$cond207 = 0, $or$cond210 = 0;
 var $or$cond213 = 0, $or$cond216 = 0, $or$cond3 = 0, $or$cond3$not = 0, $phitmp = 0, $phitmp200 = 0, $phitmp240 = 0, $phitmp241 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4040|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 4032|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 4036|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 3912|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($3<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($5|0)!=(0);
 $13 = (($3) + -1)|0;
 if ($12) {
  $14 = (($9) + ($13<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==($11|0);
  $$0196$off0 = $16;
 } else {
  $$0196$off0 = 0;
 }
 $17 = ($7|0)!=(0);
 do {
  if ($17) {
   $18 = ((($0)) + 4044|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = (($3) - ($19))|0;
   $21 = (($9) + ($20<<2)|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($22|0)==($11|0);
   $24 = (($20) + -1)|0;
   if ($12) {
    $25 = (($9) + ($24<<2)|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ($26|0)==($11|0);
    $28 = $27&1;
    $$0193 = $28;
   } else {
    $$0193 = 0;
   }
   $29 = (($19) + -1)|0;
   $30 = ($5|0)==($29|0);
   if ($30) {
    $extract$t197 = ($$0193<<24>>24)!=(0);
    $$0$off0 = $23;$$0189 = 0;$$0191 = $20;$$0195$off0 = 0;$$1 = $24;$$1194$off0 = $extract$t197;
    break;
   } else {
    $31 = (($20) + 1)|0;
    $32 = (($9) + ($31<<2)|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ($33|0)==($11|0);
    $extract$t = ($$0193<<24>>24)!=(0);
    $$0$off0 = $23;$$0189 = $31;$$0191 = $20;$$0195$off0 = $34;$$1 = $24;$$1194$off0 = $extract$t;
    break;
   }
  } else {
   $$0$off0 = 0;$$0189 = 0;$$0191 = 0;$$0195$off0 = 0;$$1 = 0;$$1194$off0 = 0;
  }
 } while(0);
 $$not = $12 ^ 1;
 $$0196$off0$not = $$0196$off0 ^ 1;
 $brmerge = $$not | $$0196$off0$not;
 if ($brmerge) {
  $59 = 0;
 } else {
  $35 = ((($0)) + 3908|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (($36) + ($13<<1)|0);
  $38 = HEAP16[$37>>1]|0;
  $39 = $38 & 504;
  $phitmp240 = $39&65535;
  $59 = $phitmp240;
 }
 $$not201 = $17 ^ 1;
 $$0$off0$not = $$0$off0 ^ 1;
 $brmerge202 = $$not201 | $$0$off0$not;
 if ($brmerge202) {
  $70 = 0;
 } else {
  $40 = ((($0)) + 3908|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (($41) + ($$0191<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 504;
  $phitmp241 = $44&65535;
  $70 = $phitmp241;
 }
 $or$cond = $12 & $17;
 $or$cond$not = $or$cond ^ 1;
 $$1194$off0$not = $$1194$off0 ^ 1;
 $brmerge203 = $or$cond$not | $$1194$off0$not;
 if ($brmerge203) {
  $91 = 0;
 } else {
  $45 = ((($0)) + 3908|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (($46) + ($$1<<1)|0);
  $48 = HEAP16[$47>>1]|0;
  $49 = $48 & 504;
  $phitmp = $49&65535;
  $91 = $phitmp;
 }
 $50 = ((($0)) + 4044|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($51) + -1)|0;
 $53 = ($5|0)!=($52|0);
 $or$cond3 = $17 & $53;
 $or$cond3$not = $or$cond3 ^ 1;
 $$0195$off0$not = $$0195$off0 ^ 1;
 $brmerge204 = $$0195$off0$not | $or$cond3$not;
 if ($brmerge204) {
  $81 = 0;
 } else {
  $54 = ((($0)) + 3908|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = (($55) + ($$0189<<1)|0);
  $57 = HEAP16[$56>>1]|0;
  $58 = $57 & 504;
  $phitmp200 = $58&65535;
  $81 = $phitmp200;
 }
 $60 = ($59|0)==(0);
 $or$cond207 = $60 | $$0196$off0$not;
 L25: do {
  if ($or$cond207) {
   if ($$0196$off0) {
    $$sroa$031$0227229 = 0;$$sroa$8$0226230 = 0;$103 = 0;
   } else {
    label = 21;
   }
  } else {
   $61 = ((($0)) + 3916|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (((($62) + ($13<<6)|0)) + 12|0);
   $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $$sroa$031$0$extract$trunc = $64&65535;
   $$sroa$8$0$extract$shift = $64 >>> 16;
   $$sroa$8$0$extract$trunc = $$sroa$8$0$extract$shift&65535;
   $65 = ((($0)) + 3932|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = (((($66) + ($13<<4)|0)) + 3|0);
   $68 = HEAP8[$67>>0]|0;
   switch ($68<<24>>24) {
   case -2:  {
    label = 21;
    break L25;
    break;
   }
   case 0:  {
    break;
   }
   default: {
    $$sroa$031$0227229 = $$sroa$031$0$extract$trunc;$$sroa$8$0226230 = $$sroa$8$0$extract$trunc;$103 = 0;
    break L25;
   }
   }
   $$sroa$8$0$insert$shift = $$sroa$8$0$extract$shift << 16;
   $$sroa$031$0$insert$ext = $64 & 65535;
   $$sroa$031$0$insert$insert = $$sroa$8$0$insert$shift | $$sroa$031$0$insert$ext;
   $69 = ($$sroa$031$0$insert$insert|0)==(0);
   if ($69) {
    label = 21;
   } else {
    $$sroa$031$0227229 = $$sroa$031$0$extract$trunc;$$sroa$8$0226230 = $$sroa$8$0$extract$trunc;$103 = 1;
   }
  }
 } while(0);
 if ((label|0) == 21) {
  HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
  return;
 }
 $71 = ($70|0)==(0);
 $or$cond210 = $71 | $$0$off0$not;
 L33: do {
  if ($or$cond210) {
   if ($$0$off0) {
    $$sroa$017$0236238 = 0;$$sroa$724$0235239 = 0;$105 = 0;
   } else {
    label = 26;
   }
  } else {
   $72 = ((($0)) + 3916|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (((($73) + ($$0191<<6)|0)) + 48|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $$sroa$017$0$extract$trunc = $75&65535;
   $$sroa$724$0$extract$shift = $75 >>> 16;
   $$sroa$724$0$extract$trunc = $$sroa$724$0$extract$shift&65535;
   $76 = ((($0)) + 3932|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = (((($77) + ($$0191<<4)|0)) + 12|0);
   $79 = HEAP8[$78>>0]|0;
   switch ($79<<24>>24) {
   case -2:  {
    label = 26;
    break L33;
    break;
   }
   case 0:  {
    break;
   }
   default: {
    $$sroa$017$0236238 = $$sroa$017$0$extract$trunc;$$sroa$724$0235239 = $$sroa$724$0$extract$trunc;$105 = 0;
    break L33;
   }
   }
   $$sroa$724$0$insert$shift = $$sroa$724$0$extract$shift << 16;
   $$sroa$017$0$insert$ext = $75 & 65535;
   $$sroa$017$0$insert$insert = $$sroa$724$0$insert$shift | $$sroa$017$0$insert$ext;
   $80 = ($$sroa$017$0$insert$insert|0)==(0);
   if ($80) {
    label = 26;
   } else {
    $$sroa$017$0236238 = $$sroa$017$0$extract$trunc;$$sroa$724$0235239 = $$sroa$724$0$extract$trunc;$105 = 1;
   }
  }
 } while(0);
 if ((label|0) == 26) {
  HEAP8[$1>>0]=0&255;HEAP8[$1+1>>0]=(0>>8)&255;HEAP8[$1+2>>0]=(0>>16)&255;HEAP8[$1+3>>0]=0>>24;
  return;
 }
 $82 = ($81|0)==(0);
 $or$cond213 = $82 | $$0195$off0$not;
 if ($or$cond213) {
  $$214 = $$0195$off0 ? -1 : -2;
  $$0186 = $$214;$$sroa$010$0 = 0;$$sroa$7$0 = 0;
 } else {
  $83 = ((($0)) + 3916|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = (((($84) + ($$0189<<6)|0)) + 48|0);
  $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
  $$sroa$010$0$extract$trunc = $86&65535;
  $$sroa$7$0$extract$shift = $86 >>> 16;
  $$sroa$7$0$extract$trunc = $$sroa$7$0$extract$shift&65535;
  $87 = ((($0)) + 3932|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = (((($88) + ($$0189<<4)|0)) + 12|0);
  $90 = HEAP8[$89>>0]|0;
  $$0186 = $90;$$sroa$010$0 = $$sroa$010$0$extract$trunc;$$sroa$7$0 = $$sroa$7$0$extract$trunc;
 }
 $92 = ($91|0)==(0);
 $or$cond216 = $92 | $$1194$off0$not;
 if ($or$cond216) {
  $$217 = $$1194$off0 ? -1 : -2;
  $$0185 = $$217;$$sroa$0$0 = 0;
 } else {
  $93 = ((($0)) + 3916|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (((($94) + ($$1<<6)|0)) + 60|0);
  $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
  $97 = ((($0)) + 3932|0);
  $98 = HEAP32[$97>>2]|0;
  $99 = (((($98) + ($$1<<4)|0)) + 15|0);
  $100 = HEAP8[$99>>0]|0;
  $$0185 = $100;$$sroa$0$0 = $96;
 }
 $101 = ($$0186<<24>>24)==(-2);
 $$sroa$7$0$extract$shift14 = $$sroa$0$0 >>> 16;
 $$sroa$010$0$extract$trunc11 = $$sroa$0$0&65535;
 $$sroa$7$0$extract$trunc15 = $$sroa$7$0$extract$shift14&65535;
 $$0184 = $101 ? $$0185 : $$0186;
 $$sroa$7$1 = $101 ? $$sroa$7$0$extract$trunc15 : $$sroa$7$0;
 $$sroa$010$1 = $101 ? $$sroa$010$0$extract$trunc11 : $$sroa$010$0;
 $102 = $103&1;
 $104 = $105&1;
 $106 = (($104) + ($102))|0;
 $107 = ($$0184<<24>>24)==(0);
 $108 = $107&1;
 $109 = (($106) + ($108))|0;
 $110 = ($109|0)==(1);
 if (!($110)) {
  $111 = $$sroa$031$0227229&65535;
  $112 = $$sroa$017$0236238&65535;
  $113 = $$sroa$010$1 << 16 >> 16;
  $114 = ($$sroa$017$0236238<<16>>16)<($$sroa$031$0227229<<16>>16);
  $$$i242 = $114 ? $$sroa$017$0236238 : $$sroa$031$0227229;
  $115 = ($$sroa$017$0236238<<16>>16)>($$sroa$031$0227229<<16>>16);
  $$20$i243 = $115 ? $$sroa$017$0236238 : $$sroa$031$0227229;
  $116 = $$20$i243 << 16 >> 16;
  $117 = ($$$i242<<16>>16)>($$sroa$010$1<<16>>16);
  $118 = ($116|0)<($113|0);
  $$$20$i = $118 ? $113 : $116;
  $119 = ($$$i242<<16>>16)<($$sroa$010$1<<16>>16);
  $$119$i244 = $119 ? $$$i242 : $$sroa$010$1;
  $120 = $$119$i244&65535;
  $$1$i = $117 ? $116 : $$$20$i;
  $$neg$i = (($112) + ($111))|0;
  $121 = (($$neg$i) + ($113))|0;
  $122 = (($121) - ($120))|0;
  $123 = (($122) - ($$1$i))|0;
  $124 = $123&65535;
  HEAP16[$1>>1] = $124;
  $125 = $$sroa$8$0226230&65535;
  $126 = $$sroa$724$0235239&65535;
  $127 = $$sroa$7$1 << 16 >> 16;
  $128 = ($$sroa$724$0235239<<16>>16)<($$sroa$8$0226230<<16>>16);
  $$$i218245 = $128 ? $$sroa$724$0235239 : $$sroa$8$0226230;
  $129 = ($$sroa$724$0235239<<16>>16)>($$sroa$8$0226230<<16>>16);
  $$20$i219246 = $129 ? $$sroa$724$0235239 : $$sroa$8$0226230;
  $130 = $$20$i219246 << 16 >> 16;
  $131 = ($$$i218245<<16>>16)>($$sroa$7$1<<16>>16);
  $132 = ($130|0)<($127|0);
  $$$20$i220 = $132 ? $127 : $130;
  $133 = ($$$i218245<<16>>16)<($$sroa$7$1<<16>>16);
  $$119$i221247 = $133 ? $$$i218245 : $$sroa$7$1;
  $134 = $$119$i221247&65535;
  $$1$i222 = $131 ? $130 : $$$20$i220;
  $$neg$i223 = (($126) + ($125))|0;
  $135 = (($$neg$i223) + ($127))|0;
  $136 = (($135) - ($134))|0;
  $137 = (($136) - ($$1$i222))|0;
  $138 = $137&65535;
  $139 = ((($1)) + 2|0);
  HEAP16[$139>>1] = $138;
  return;
 }
 if ($103) {
  $$sroa$8$0$insert$ext48 = $$sroa$8$0226230&65535;
  $$sroa$8$0$insert$shift49 = $$sroa$8$0$insert$ext48 << 16;
  $$sroa$031$0$insert$ext38 = $$sroa$031$0227229&65535;
  $$sroa$031$0$insert$insert40 = $$sroa$8$0$insert$shift49 | $$sroa$031$0$insert$ext38;
  $$sink$sink = $$sroa$031$0$insert$insert40;
 } else {
  $$sroa$7$0$insert$ext = $$sroa$7$1&65535;
  $$sroa$7$0$insert$shift = $$sroa$7$0$insert$ext << 16;
  $$sroa$010$0$insert$ext = $$sroa$010$1&65535;
  $$sroa$010$0$insert$insert = $$sroa$7$0$insert$shift | $$sroa$010$0$insert$ext;
  $$sroa$724$0$insert$ext26 = $$sroa$724$0235239&65535;
  $$sroa$724$0$insert$shift27 = $$sroa$724$0$insert$ext26 << 16;
  $$sroa$017$0$insert$ext20 = $$sroa$017$0236238&65535;
  $$sroa$017$0$insert$insert22 = $$sroa$724$0$insert$shift27 | $$sroa$017$0$insert$ext20;
  $$sink = $105 ? $$sroa$017$0$insert$insert22 : $$sroa$010$0$insert$insert;
  $$sink$sink = $$sink;
 }
 HEAP8[$1>>0]=$$sink$sink&255;HEAP8[$1+1>>0]=($$sink$sink>>8)&255;HEAP8[$1+2>>0]=($$sink$sink>>16)&255;HEAP8[$1+3>>0]=$$sink$sink>>24;
 return;
}
function __ZN7WelsDec29WelsActualDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0588730 = 0, $$0596 = 0, $$0598 = 0, $$0600 = 0, $$0600$1 = 0, $$11 = 0, $$1589727 = 0, $$1597 = 0, $$1599 = 0, $$1599$off = 0, $$1601 = 0, $$2592724 = 0, $$3$ph = 0, $$31 = 0, $$4594722 = 0, $$639 = 0, $$649 = 0, $$649$1 = 0, $$651 = 0, $$651$1 = 0;
 var $$off = 0, $$off628 = 0, $$phi$trans$insert = 0, $$phi$trans$insert760 = 0, $$phi$trans$insert763 = 0, $$pn = 0, $$pn$in = 0, $$pre = 0, $$pre$phi766Z2D = 0, $$pre$phi768Z2D = 0, $$pre$phiZ2D = 0, $$pre758 = 0, $$pre759 = 0, $$pre761 = 0, $$pre762 = 0, $$pre764 = 0, $$pre765 = 0, $$pre767 = 0, $$sink = 0, $$sink16 = 0;
 var $$sink25 = 0, $$sink35 = 0, $$sink35$in$in = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_ZN7WelsDec18g_kuiInterCbpTableE$sink = 0, $_ZN7WelsDec21g_kuiInterCbpTable400E$sink = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond27 = 0, $or$cond645 = 0;
 var $scevgep = 0, $scevgep756 = 0, $storemerge$i = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $vararg_buffer = sp;
 $1 = sp + 48|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp + 348|0;
 $5 = sp + 288|0;
 $6 = ((($0)) + 5864|0);
 $7 = ((($0)) + 241932|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 3900|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 3866|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12&255;
 $14 = ((($8)) + 3867|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15&255;
 $17 = ((($8)) + 4032|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($8)) + 4036|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($8)) + 4040|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($8)) + 3964|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($24) + (($22*24)|0)|0);
 __ZN7WelsDec22GetNeighborAvailMbTypeEPNS_16TagNeighborAvailEPNS_10TagDqLayerE($2,$8);
 $26 = ((($4)) + 15|0);
 $27 = $26;
 $28 = $27 & 15;
 $29 = (0 - ($28))|0;
 $30 = (($26) + ($29)|0);
 $31 = ((($8)) + 3976|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (($32) + ($22)|0);
 HEAP8[$33>>0] = 0;
 $34 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($10,$3)|0);
 $35 = ($34|0)==(0);
 if (!($35)) {
  $$31 = $34;
  STACKTOP = sp;return ($$31|0);
 }
 $36 = HEAP32[$3>>2]|0;
 $37 = ($36>>>0)<(5);
 L4: do {
  if ($37) {
   $38 = (9368 + ($36<<3)|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = $39&65535;
   $41 = ((($8)) + 3908|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = (($42) + ($22<<1)|0);
   HEAP16[$43>>1] = $40;
   __ZN7WelsDec18WelsFillCacheInterEPNS_16TagNeighborAvailEPhPA30_A2_sPA30_aPNS_10TagDqLayerE($2,$30,$1,$5,$8);
   $44 = (__ZN7WelsDec14ParseInterInfoEPNS_21TagWelsDecoderContextEPA30_A2_sPA30_aPN10WelsCommon15TagBitStringAuxE($0,$1,$5,$10)|0);
   $45 = ($44|0)==(0);
   do {
    if ($45) {
     $46 = ((($8)) + 3860|0);
     $47 = HEAP8[$46>>0]|0;
     $48 = ($47<<24>>24)==(0);
     if ($48) {
      $79 = ((($8)) + 3861|0);
      $80 = HEAP8[$79>>0]|0;
      $$sink = $80;
     } else {
      $49 = ((($10)) + 20|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = $50 >>> 31;
      $52 = ((($10)) + 4|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = HEAP32[$10>>2]|0;
      $55 = ((($10)) + 16|0);
      $56 = HEAP32[$55>>2]|0;
      $57 = $50 << 1;
      HEAP32[$49>>2] = $57;
      $58 = ((($10)) + 24|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = (($59) + 1)|0;
      HEAP32[$58>>2] = $60;
      $61 = ($59|0)>(-1);
      if ($61) {
       $62 = $56;
       $63 = (($62) - ($54))|0;
       $64 = (($53) + 1)|0;
       $65 = (($64) - ($54))|0;
       $66 = ($63|0)>($65|0);
       if ($66) {
        $$3$ph = 11;
        break;
       }
       $67 = HEAP8[$56>>0]|0;
       $68 = $67&255;
       $69 = $68 << 8;
       $70 = ((($56)) + 1|0);
       $71 = HEAP8[$70>>0]|0;
       $72 = $71&255;
       $73 = $69 | $72;
       $74 = $73 << $60;
       $75 = $74 | $57;
       HEAP32[$49>>2] = $75;
       $76 = (($59) + -15)|0;
       HEAP32[$58>>2] = $76;
       $77 = ((($56)) + 2|0);
       HEAP32[$55>>2] = $77;
      }
      HEAP32[$3>>2] = $51;
      $78 = $51&255;
      $$sink = $78;
     }
     $$pn$in = ((($8)) + 3972|0);
     $$pn = HEAP32[$$pn$in>>2]|0;
     $$sink16 = (($$pn) + ($22)|0);
     HEAP8[$$sink16>>0] = $$sink;
     $81 = HEAP32[$$pn$in>>2]|0;
     $82 = (($81) + ($22)|0);
     $83 = HEAP8[$82>>0]|0;
     $84 = ($83<<24>>24)==(0);
     if ($84) {
      $85 = HEAP32[$31>>2]|0;
      $86 = (($85) + ($22)|0);
      HEAP8[$86>>0] = 0;
      $$0596 = 0;$$0598 = 0;$$pre$phiZ2D = $41;
      break L4;
     } else {
      __Z7WelsLogP13TagLogContextiPKcz($0,2,25651,$vararg_buffer);
      $$3$ph = -1;
      break;
     }
    } else {
     $$3$ph = -1;
    }
   } while(0);
   $$31 = $$3$ph;
   STACKTOP = sp;return ($$31|0);
  } else {
   $87 = (($36) + -5)|0;
   $88 = ($87>>>0)>(25);
   if ($88) {
    $$31 = 1035;
    STACKTOP = sp;return ($$31|0);
   }
   $89 = ((($0)) + 241924|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = ((($90)) + 318|0);
   $92 = HEAP8[$91>>0]|0;
   $93 = ($92<<24>>24)==(0);
   L25: do {
    if ($93) {
     switch ($36|0) {
     case 30:  {
      label = 18;
      break L25;
      break;
     }
     case 5:  {
      label = 19;
      break L25;
      break;
     }
     case 10: case 11: case 12: case 13: case 14: case 15: case 16: case 17: case 22: case 23: case 24: case 25: case 26: case 27: case 28: case 29:  {
      $$31 = 1035;
      break;
     }
     default: {
      label = 32;
      break L25;
     }
     }
     STACKTOP = sp;return ($$31|0);
    } else {
     switch ($36|0) {
     case 30:  {
      label = 18;
      break;
     }
     case 5:  {
      label = 19;
      break;
     }
     default: {
      label = 32;
     }
     }
    }
   } while(0);
   if ((label|0) == 18) {
    $94 = ((($8)) + 4100|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ((($95)) + 32|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ((($95)) + 36|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = Math_imul($97, $20)|0;
    $101 = (($100) + ($18))|0;
    $102 = $101 << 4;
    $103 = Math_imul($99, $20)|0;
    $104 = (($103) + ($18))|0;
    $105 = ((($95)) + 16|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = (($106) + ($102)|0);
    $108 = ((($95)) + 20|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ((($95)) + 24|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = ((($10)) + 24|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = (0 - ($113))|0;
    $115 = $114 >> 3;
    $116 = ((($8)) + 3908|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = (($117) + ($22<<1)|0);
    HEAP16[$118>>1] = 512;
    $119 = ((($10)) + 16|0);
    $120 = HEAP32[$119>>2]|0;
    $121 = (-2 - ($115))|0;
    $122 = (($120) + ($121)|0);
    HEAP32[$119>>2] = $122;
    $123 = (254 - ($115))|0;
    dest=$107; src=$122; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $124 = (($107) + ($97)|0);
    $125 = ((($122)) + 16|0);
    dest=$124; src=$125; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $126 = (($124) + ($97)|0);
    $127 = ((($125)) + 16|0);
    dest=$126; src=$127; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $128 = (($126) + ($97)|0);
    $129 = ((($127)) + 16|0);
    dest=$128; src=$129; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $130 = (($128) + ($97)|0);
    $131 = ((($129)) + 16|0);
    dest=$130; src=$131; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $132 = (($130) + ($97)|0);
    $133 = ((($131)) + 16|0);
    dest=$132; src=$133; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $134 = (($132) + ($97)|0);
    $135 = ((($133)) + 16|0);
    dest=$134; src=$135; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $136 = (($134) + ($97)|0);
    $137 = ((($135)) + 16|0);
    dest=$136; src=$137; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $138 = (($136) + ($97)|0);
    $139 = ((($137)) + 16|0);
    dest=$138; src=$139; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $140 = (($138) + ($97)|0);
    $141 = ((($139)) + 16|0);
    dest=$140; src=$141; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $142 = (($140) + ($97)|0);
    $143 = ((($141)) + 16|0);
    dest=$142; src=$143; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $144 = (($142) + ($97)|0);
    $145 = ((($143)) + 16|0);
    dest=$144; src=$145; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $146 = (($144) + ($97)|0);
    $147 = ((($145)) + 16|0);
    dest=$146; src=$147; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $148 = (($146) + ($97)|0);
    $149 = ((($147)) + 16|0);
    dest=$148; src=$149; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $150 = (($148) + ($97)|0);
    $151 = ((($149)) + 16|0);
    dest=$150; src=$151; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $152 = (($150) + ($97)|0);
    $153 = ((($151)) + 16|0);
    dest=$152; src=$153; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $154 = $104 << 3;
    $155 = (($109) + ($154)|0);
    $156 = (($111) + ($154)|0);
    $scevgep756 = (($120) + ($123)|0);
    $157 = $scevgep756;
    $158 = $157;
    $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
    $160 = (($157) + 4)|0;
    $161 = $160;
    $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
    $163 = $155;
    $164 = $163;
    HEAP8[$164>>0]=$159&255;HEAP8[$164+1>>0]=($159>>8)&255;HEAP8[$164+2>>0]=($159>>16)&255;HEAP8[$164+3>>0]=$159>>24;
    $165 = (($163) + 4)|0;
    $166 = $165;
    HEAP8[$166>>0]=$162&255;HEAP8[$166+1>>0]=($162>>8)&255;HEAP8[$166+2>>0]=($162>>16)&255;HEAP8[$166+3>>0]=$162>>24;
    $167 = (($155) + ($99)|0);
    $168 = ((($scevgep756)) + 8|0);
    $169 = $168;
    $170 = $169;
    $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
    $172 = (($169) + 4)|0;
    $173 = $172;
    $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
    $175 = $167;
    $176 = $175;
    HEAP8[$176>>0]=$171&255;HEAP8[$176+1>>0]=($171>>8)&255;HEAP8[$176+2>>0]=($171>>16)&255;HEAP8[$176+3>>0]=$171>>24;
    $177 = (($175) + 4)|0;
    $178 = $177;
    HEAP8[$178>>0]=$174&255;HEAP8[$178+1>>0]=($174>>8)&255;HEAP8[$178+2>>0]=($174>>16)&255;HEAP8[$178+3>>0]=$174>>24;
    $179 = (($167) + ($99)|0);
    $180 = ((($168)) + 8|0);
    $181 = $180;
    $182 = $181;
    $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
    $184 = (($181) + 4)|0;
    $185 = $184;
    $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
    $187 = $179;
    $188 = $187;
    HEAP8[$188>>0]=$183&255;HEAP8[$188+1>>0]=($183>>8)&255;HEAP8[$188+2>>0]=($183>>16)&255;HEAP8[$188+3>>0]=$183>>24;
    $189 = (($187) + 4)|0;
    $190 = $189;
    HEAP8[$190>>0]=$186&255;HEAP8[$190+1>>0]=($186>>8)&255;HEAP8[$190+2>>0]=($186>>16)&255;HEAP8[$190+3>>0]=$186>>24;
    $191 = (($179) + ($99)|0);
    $192 = ((($180)) + 8|0);
    $193 = $192;
    $194 = $193;
    $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
    $196 = (($193) + 4)|0;
    $197 = $196;
    $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
    $199 = $191;
    $200 = $199;
    HEAP8[$200>>0]=$195&255;HEAP8[$200+1>>0]=($195>>8)&255;HEAP8[$200+2>>0]=($195>>16)&255;HEAP8[$200+3>>0]=$195>>24;
    $201 = (($199) + 4)|0;
    $202 = $201;
    HEAP8[$202>>0]=$198&255;HEAP8[$202+1>>0]=($198>>8)&255;HEAP8[$202+2>>0]=($198>>16)&255;HEAP8[$202+3>>0]=$198>>24;
    $203 = (($191) + ($99)|0);
    $204 = ((($192)) + 8|0);
    $205 = $204;
    $206 = $205;
    $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
    $208 = (($205) + 4)|0;
    $209 = $208;
    $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
    $211 = $203;
    $212 = $211;
    HEAP8[$212>>0]=$207&255;HEAP8[$212+1>>0]=($207>>8)&255;HEAP8[$212+2>>0]=($207>>16)&255;HEAP8[$212+3>>0]=$207>>24;
    $213 = (($211) + 4)|0;
    $214 = $213;
    HEAP8[$214>>0]=$210&255;HEAP8[$214+1>>0]=($210>>8)&255;HEAP8[$214+2>>0]=($210>>16)&255;HEAP8[$214+3>>0]=$210>>24;
    $215 = (($203) + ($99)|0);
    $216 = ((($204)) + 8|0);
    $217 = $216;
    $218 = $217;
    $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
    $220 = (($217) + 4)|0;
    $221 = $220;
    $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
    $223 = $215;
    $224 = $223;
    HEAP8[$224>>0]=$219&255;HEAP8[$224+1>>0]=($219>>8)&255;HEAP8[$224+2>>0]=($219>>16)&255;HEAP8[$224+3>>0]=$219>>24;
    $225 = (($223) + 4)|0;
    $226 = $225;
    HEAP8[$226>>0]=$222&255;HEAP8[$226+1>>0]=($222>>8)&255;HEAP8[$226+2>>0]=($222>>16)&255;HEAP8[$226+3>>0]=$222>>24;
    $227 = (($215) + ($99)|0);
    $228 = ((($216)) + 8|0);
    $229 = $228;
    $230 = $229;
    $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
    $232 = (($229) + 4)|0;
    $233 = $232;
    $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
    $235 = $227;
    $236 = $235;
    HEAP8[$236>>0]=$231&255;HEAP8[$236+1>>0]=($231>>8)&255;HEAP8[$236+2>>0]=($231>>16)&255;HEAP8[$236+3>>0]=$231>>24;
    $237 = (($235) + 4)|0;
    $238 = $237;
    HEAP8[$238>>0]=$234&255;HEAP8[$238+1>>0]=($234>>8)&255;HEAP8[$238+2>>0]=($234>>16)&255;HEAP8[$238+3>>0]=$234>>24;
    $239 = (($227) + ($99)|0);
    $240 = ((($228)) + 8|0);
    $241 = $240;
    $242 = $241;
    $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
    $244 = (($241) + 4)|0;
    $245 = $244;
    $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
    $247 = $239;
    $248 = $247;
    HEAP8[$248>>0]=$243&255;HEAP8[$248+1>>0]=($243>>8)&255;HEAP8[$248+2>>0]=($243>>16)&255;HEAP8[$248+3>>0]=$243>>24;
    $249 = (($247) + 4)|0;
    $250 = $249;
    HEAP8[$250>>0]=$246&255;HEAP8[$250+1>>0]=($246>>8)&255;HEAP8[$250+2>>0]=($246>>16)&255;HEAP8[$250+3>>0]=$246>>24;
    $scevgep = ((($scevgep756)) + 64|0);
    $251 = $scevgep;
    $252 = $251;
    $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
    $254 = (($251) + 4)|0;
    $255 = $254;
    $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
    $257 = $156;
    $258 = $257;
    HEAP8[$258>>0]=$253&255;HEAP8[$258+1>>0]=($253>>8)&255;HEAP8[$258+2>>0]=($253>>16)&255;HEAP8[$258+3>>0]=$253>>24;
    $259 = (($257) + 4)|0;
    $260 = $259;
    HEAP8[$260>>0]=$256&255;HEAP8[$260+1>>0]=($256>>8)&255;HEAP8[$260+2>>0]=($256>>16)&255;HEAP8[$260+3>>0]=$256>>24;
    $261 = (($156) + ($99)|0);
    $262 = ((($scevgep)) + 8|0);
    $263 = $262;
    $264 = $263;
    $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
    $266 = (($263) + 4)|0;
    $267 = $266;
    $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
    $269 = $261;
    $270 = $269;
    HEAP8[$270>>0]=$265&255;HEAP8[$270+1>>0]=($265>>8)&255;HEAP8[$270+2>>0]=($265>>16)&255;HEAP8[$270+3>>0]=$265>>24;
    $271 = (($269) + 4)|0;
    $272 = $271;
    HEAP8[$272>>0]=$268&255;HEAP8[$272+1>>0]=($268>>8)&255;HEAP8[$272+2>>0]=($268>>16)&255;HEAP8[$272+3>>0]=$268>>24;
    $273 = (($261) + ($99)|0);
    $274 = ((($262)) + 8|0);
    $275 = $274;
    $276 = $275;
    $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
    $278 = (($275) + 4)|0;
    $279 = $278;
    $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
    $281 = $273;
    $282 = $281;
    HEAP8[$282>>0]=$277&255;HEAP8[$282+1>>0]=($277>>8)&255;HEAP8[$282+2>>0]=($277>>16)&255;HEAP8[$282+3>>0]=$277>>24;
    $283 = (($281) + 4)|0;
    $284 = $283;
    HEAP8[$284>>0]=$280&255;HEAP8[$284+1>>0]=($280>>8)&255;HEAP8[$284+2>>0]=($280>>16)&255;HEAP8[$284+3>>0]=$280>>24;
    $285 = (($273) + ($99)|0);
    $286 = ((($274)) + 8|0);
    $287 = $286;
    $288 = $287;
    $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
    $290 = (($287) + 4)|0;
    $291 = $290;
    $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
    $293 = $285;
    $294 = $293;
    HEAP8[$294>>0]=$289&255;HEAP8[$294+1>>0]=($289>>8)&255;HEAP8[$294+2>>0]=($289>>16)&255;HEAP8[$294+3>>0]=$289>>24;
    $295 = (($293) + 4)|0;
    $296 = $295;
    HEAP8[$296>>0]=$292&255;HEAP8[$296+1>>0]=($292>>8)&255;HEAP8[$296+2>>0]=($292>>16)&255;HEAP8[$296+3>>0]=$292>>24;
    $297 = (($285) + ($99)|0);
    $298 = ((($286)) + 8|0);
    $299 = $298;
    $300 = $299;
    $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
    $302 = (($299) + 4)|0;
    $303 = $302;
    $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
    $305 = $297;
    $306 = $305;
    HEAP8[$306>>0]=$301&255;HEAP8[$306+1>>0]=($301>>8)&255;HEAP8[$306+2>>0]=($301>>16)&255;HEAP8[$306+3>>0]=$301>>24;
    $307 = (($305) + 4)|0;
    $308 = $307;
    HEAP8[$308>>0]=$304&255;HEAP8[$308+1>>0]=($304>>8)&255;HEAP8[$308+2>>0]=($304>>16)&255;HEAP8[$308+3>>0]=$304>>24;
    $309 = (($297) + ($99)|0);
    $310 = ((($298)) + 8|0);
    $311 = $310;
    $312 = $311;
    $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
    $314 = (($311) + 4)|0;
    $315 = $314;
    $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
    $317 = $309;
    $318 = $317;
    HEAP8[$318>>0]=$313&255;HEAP8[$318+1>>0]=($313>>8)&255;HEAP8[$318+2>>0]=($313>>16)&255;HEAP8[$318+3>>0]=$313>>24;
    $319 = (($317) + 4)|0;
    $320 = $319;
    HEAP8[$320>>0]=$316&255;HEAP8[$320+1>>0]=($316>>8)&255;HEAP8[$320+2>>0]=($316>>16)&255;HEAP8[$320+3>>0]=$316>>24;
    $321 = (($309) + ($99)|0);
    $322 = ((($310)) + 8|0);
    $323 = $322;
    $324 = $323;
    $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
    $326 = (($323) + 4)|0;
    $327 = $326;
    $328 = HEAPU8[$327>>0]|(HEAPU8[$327+1>>0]<<8)|(HEAPU8[$327+2>>0]<<16)|(HEAPU8[$327+3>>0]<<24);
    $329 = $321;
    $330 = $329;
    HEAP8[$330>>0]=$325&255;HEAP8[$330+1>>0]=($325>>8)&255;HEAP8[$330+2>>0]=($325>>16)&255;HEAP8[$330+3>>0]=$325>>24;
    $331 = (($329) + 4)|0;
    $332 = $331;
    HEAP8[$332>>0]=$328&255;HEAP8[$332+1>>0]=($328>>8)&255;HEAP8[$332+2>>0]=($328>>16)&255;HEAP8[$332+3>>0]=$328>>24;
    $333 = (($321) + ($99)|0);
    $334 = ((($322)) + 8|0);
    $335 = $334;
    $336 = $335;
    $337 = HEAPU8[$336>>0]|(HEAPU8[$336+1>>0]<<8)|(HEAPU8[$336+2>>0]<<16)|(HEAPU8[$336+3>>0]<<24);
    $338 = (($335) + 4)|0;
    $339 = $338;
    $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8)|(HEAPU8[$339+2>>0]<<16)|(HEAPU8[$339+3>>0]<<24);
    $341 = $333;
    $342 = $341;
    HEAP8[$342>>0]=$337&255;HEAP8[$342+1>>0]=($337>>8)&255;HEAP8[$342+2>>0]=($337>>16)&255;HEAP8[$342+3>>0]=$337>>24;
    $343 = (($341) + 4)|0;
    $344 = $343;
    HEAP8[$344>>0]=$340&255;HEAP8[$344+1>>0]=($340>>8)&255;HEAP8[$344+2>>0]=($340>>16)&255;HEAP8[$344+3>>0]=$340>>24;
    $345 = HEAP32[$119>>2]|0;
    $346 = ((($345)) + 384|0);
    HEAP32[$119>>2] = $346;
    $347 = ((($8)) + 3948|0);
    $348 = HEAP32[$347>>2]|0;
    $349 = (($348) + ($22)|0);
    HEAP8[$349>>0] = 0;
    $350 = ((($8)) + 3952|0);
    $351 = HEAP32[$350>>2]|0;
    $352 = (((($351) + ($22<<1)|0)) + 1|0);
    HEAP8[$352>>0] = 0;
    $353 = HEAP32[$350>>2]|0;
    $354 = (($353) + ($22<<1)|0);
    HEAP8[$354>>0] = 0;
    ;HEAP32[$25>>2]=269488144|0;HEAP32[$25+4>>2]=269488144|0;HEAP32[$25+8>>2]=269488144|0;HEAP32[$25+12>>2]=269488144|0;HEAP32[$25+16>>2]=269488144|0;HEAP32[$25+20>>2]=269488144|0;
    $355 = (__ZN7WelsDec12InitReadBitsEPN10WelsCommon15TagBitStringAuxEi($10,0)|0);
    $$31 = $355;
    STACKTOP = sp;return ($$31|0);
   }
   else if ((label|0) == 19) {
    $356 = ((($1)) + 15|0);
    $357 = $356;
    $358 = $357 & 15;
    $359 = (0 - ($358))|0;
    $360 = (($356) + ($359)|0);
    $361 = ((($8)) + 3908|0);
    $362 = HEAP32[$361>>2]|0;
    $363 = (($362) + ($22<<1)|0);
    HEAP16[$363>>1] = 1;
    $364 = ((($0)) + 241928|0);
    $365 = HEAP32[$364>>2]|0;
    $366 = ((($365)) + 184|0);
    $367 = HEAP8[$366>>0]|0;
    $368 = ($367<<24>>24)==(0);
    if ($368) {
     $$pre767 = ((($8)) + 3944|0);
     $$pre$phi768Z2D = $$pre767;
    } else {
     $369 = ((($10)) + 20|0);
     $370 = HEAP32[$369>>2]|0;
     $371 = $370 >>> 31;
     $372 = ((($10)) + 4|0);
     $373 = HEAP32[$372>>2]|0;
     $374 = HEAP32[$10>>2]|0;
     $375 = ((($10)) + 16|0);
     $376 = HEAP32[$375>>2]|0;
     $377 = $370 << 1;
     HEAP32[$369>>2] = $377;
     $378 = ((($10)) + 24|0);
     $379 = HEAP32[$378>>2]|0;
     $380 = (($379) + 1)|0;
     HEAP32[$378>>2] = $380;
     $381 = ($379|0)>(-1);
     do {
      if ($381) {
       $382 = $376;
       $383 = (($382) - ($374))|0;
       $384 = (($373) + 1)|0;
       $385 = (($384) - ($374))|0;
       $386 = ($383|0)>($385|0);
       if (!($386)) {
        $387 = HEAP8[$376>>0]|0;
        $388 = $387&255;
        $389 = $388 << 8;
        $390 = ((($376)) + 1|0);
        $391 = HEAP8[$390>>0]|0;
        $392 = $391&255;
        $393 = $389 | $392;
        $394 = $393 << $380;
        $395 = $394 | $377;
        HEAP32[$369>>2] = $395;
        $396 = (($379) + -15)|0;
        HEAP32[$378>>2] = $396;
        $397 = ((($376)) + 2|0);
        HEAP32[$375>>2] = $397;
        break;
       }
       $$31 = 11;
       STACKTOP = sp;return ($$31|0);
      }
     } while(0);
     HEAP32[$3>>2] = $371;
     $398 = ((($8)) + 3944|0);
     $399 = HEAP32[$398>>2]|0;
     $400 = (($399) + ($22)|0);
     $401 = $371&255;
     HEAP8[$400>>0] = $401;
     $402 = HEAP32[$398>>2]|0;
     $403 = (($402) + ($22)|0);
     $404 = HEAP8[$403>>0]|0;
     $405 = ($404<<24>>24)==(0);
     if ($405) {
      $$pre$phi768Z2D = $398;
     } else {
      $406 = HEAP32[$361>>2]|0;
      $407 = (($406) + ($22<<1)|0);
      HEAP16[$407>>1] = 4;
      $$pre$phi768Z2D = $398;
     }
    }
    $408 = HEAP32[$$pre$phi768Z2D>>2]|0;
    $409 = (($408) + ($22)|0);
    $410 = HEAP8[$409>>0]|0;
    $411 = ($410<<24>>24)==(0);
    $412 = ((($0)) + 317148|0);
    $413 = HEAP32[$412>>2]|0;
    FUNCTION_TABLE_viiii[$413 & 31]($2,$30,$360,$8);
    if ($411) {
     $414 = (__ZN7WelsDec17ParseIntra4x4ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$360,$10,$8)|0);
     $415 = ($414|0)==(0);
     if ($415) {
      label = 30;
     } else {
      $$11 = $414;
     }
    } else {
     $416 = (__ZN7WelsDec17ParseIntra8x8ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$360,$10,$8)|0);
     $417 = ($416|0)==(0);
     if ($417) {
      label = 30;
     } else {
      $$11 = $416;
     }
    }
    if ((label|0) == 30) {
     $$0596 = 0;$$0598 = 0;$$pre$phiZ2D = $361;
     break;
    }
    $$31 = $$11;
    STACKTOP = sp;return ($$31|0);
   }
   else if ((label|0) == 32) {
    $418 = ((($8)) + 3908|0);
    $419 = HEAP32[$418>>2]|0;
    $420 = (($419) + ($22<<1)|0);
    HEAP16[$420>>1] = 2;
    $421 = ((($8)) + 3944|0);
    $422 = HEAP32[$421>>2]|0;
    $423 = (($422) + ($22)|0);
    HEAP8[$423>>0] = 0;
    $424 = ((($8)) + 3940|0);
    $425 = HEAP32[$424>>2]|0;
    $426 = (($425) + ($22)|0);
    HEAP8[$426>>0] = 1;
    $427 = (($36) + -6)|0;
    $428 = $427 & 3;
    $429 = $428&255;
    $430 = ((($8)) + 3992|0);
    $431 = HEAP32[$430>>2]|0;
    $432 = (((($431) + ($22<<3)|0)) + 7|0);
    HEAP8[$432>>0] = $429;
    $433 = $427 >>> 2;
    $434 = (25321 + ($433)|0);
    $435 = HEAP8[$434>>0]|0;
    $436 = ((($8)) + 3956|0);
    $437 = HEAP32[$436>>2]|0;
    $438 = (($437) + ($22)|0);
    HEAP8[$438>>0] = $435;
    $439 = HEAP32[$89>>2]|0;
    $440 = ((($439)) + 318|0);
    $441 = HEAP8[$440>>0]|0;
    $442 = ($441<<24>>24)==(0);
    $443 = HEAP32[$436>>2]|0;
    $444 = (($443) + ($22)|0);
    $445 = HEAP8[$444>>0]|0;
    $446 = $445 << 24 >> 24;
    $447 = $446 >> 4;
    $$639 = $442 ? 0 : $447;
    $448 = $446 & 15;
    __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($2,$30,$8);
    $449 = (__ZN7WelsDec19ParseIntra16x16ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$10,$8)|0);
    $450 = ($449|0)==(0);
    if ($450) {
     $$0596 = $448;$$0598 = $$639;$$pre$phiZ2D = $418;
     break;
    } else {
     $$31 = -1;
    }
    STACKTOP = sp;return ($$31|0);
   }
  }
 } while(0);
 $451 = HEAP32[$$pre$phiZ2D>>2]|0;
 $452 = (($451) + ($22<<1)|0);
 $453 = HEAP16[$452>>1]|0;
 $454 = ($453<<16>>16)==(2);
 do {
  if ($454) {
   $$pre765 = ((($8)) + 3956|0);
   $$1597 = $$0596;$$1599 = $$0598;$$pre$phi766Z2D = $$pre765;
  } else {
   $455 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($10,$3)|0);
   $456 = ($455|0)==(0);
   if (!($456)) {
    $$31 = $455;
    STACKTOP = sp;return ($$31|0);
   }
   $457 = HEAP32[$3>>2]|0;
   $458 = ((($0)) + 241924|0);
   $459 = HEAP32[$458>>2]|0;
   $460 = ((($459)) + 318|0);
   $461 = HEAP8[$460>>0]|0;
   $462 = ($461<<24>>24)!=(0);
   $463 = ($457>>>0)>(47);
   $or$cond21 = $463 & $462;
   if ($or$cond21) {
    $$31 = 1042;
    STACKTOP = sp;return ($$31|0);
   }
   $464 = ($461<<24>>24)==(0);
   $465 = ($457>>>0)>(15);
   $or$cond23 = $465 & $464;
   if ($or$cond23) {
    $$31 = 1042;
    STACKTOP = sp;return ($$31|0);
   }
   $466 = HEAP32[$$pre$phiZ2D>>2]|0;
   $467 = (($466) + ($22<<1)|0);
   $468 = HEAP16[$467>>1]|0;
   switch ($468<<16>>16) {
   case 4: case 1:  {
    $_ZN7WelsDec18g_kuiInterCbpTableE$sink = 15654;$_ZN7WelsDec21g_kuiInterCbpTable400E$sink = 15702;
    break;
   }
   default: {
    $_ZN7WelsDec18g_kuiInterCbpTableE$sink = 15718;$_ZN7WelsDec21g_kuiInterCbpTable400E$sink = 15766;
   }
   }
   $469 = (($_ZN7WelsDec21g_kuiInterCbpTable400E$sink) + ($457)|0);
   $470 = (($_ZN7WelsDec18g_kuiInterCbpTableE$sink) + ($457)|0);
   $$sink25 = $462 ? $470 : $469;
   $471 = HEAP8[$$sink25>>0]|0;
   $472 = ((($8)) + 3956|0);
   $473 = HEAP32[$472>>2]|0;
   $474 = (($473) + ($22)|0);
   HEAP8[$474>>0] = $471;
   $475 = HEAP32[$472>>2]|0;
   $476 = (($475) + ($22)|0);
   $477 = HEAP8[$476>>0]|0;
   $478 = $477 << 24 >> 24;
   $479 = $478 >> 4;
   $480 = $478 & 15;
   $481 = HEAP32[$$pre$phiZ2D>>2]|0;
   $482 = (($481) + ($22<<1)|0);
   $483 = HEAP16[$482>>1]|0;
   $$off = (($483) + -8)<<16>>16;
   $484 = ($$off&65535)<(25);
   if (!($484)) {
    $485 = ((($8)) + 3940|0);
    $486 = HEAP32[$485>>2]|0;
    $487 = (($486) + ($22)|0);
    $488 = HEAP8[$487>>0]|0;
    $489 = ($488<<24>>24)==(0);
    $490 = ($483<<16>>16)==(4);
    $or$cond645 = $490 | $489;
    if ($or$cond645) {
     $$1597 = $480;$$1599 = $479;$$pre$phi766Z2D = $472;
     break;
    }
   }
   $491 = ($483<<16>>16)!=(1);
   $492 = ($480|0)!=(0);
   $or$cond27 = $491 & $492;
   if ($or$cond27) {
    $493 = ((($0)) + 241928|0);
    $494 = HEAP32[$493>>2]|0;
    $495 = ((($494)) + 184|0);
    $496 = HEAP8[$495>>0]|0;
    $497 = ($496<<24>>24)==(0);
    if ($497) {
     $$1597 = $480;$$1599 = $479;$$pre$phi766Z2D = $472;
    } else {
     $498 = ((($10)) + 20|0);
     $499 = HEAP32[$498>>2]|0;
     $500 = $499 >>> 31;
     $501 = ((($10)) + 4|0);
     $502 = HEAP32[$501>>2]|0;
     $503 = HEAP32[$10>>2]|0;
     $504 = ((($10)) + 16|0);
     $505 = HEAP32[$504>>2]|0;
     $506 = $499 << 1;
     HEAP32[$498>>2] = $506;
     $507 = ((($10)) + 24|0);
     $508 = HEAP32[$507>>2]|0;
     $509 = (($508) + 1)|0;
     HEAP32[$507>>2] = $509;
     $510 = ($508|0)>(-1);
     do {
      if ($510) {
       $511 = $505;
       $512 = (($511) - ($503))|0;
       $513 = (($502) + 1)|0;
       $514 = (($513) - ($503))|0;
       $515 = ($512|0)>($514|0);
       if ($515) {
        $$31 = 11;
        STACKTOP = sp;return ($$31|0);
       } else {
        $516 = HEAP8[$505>>0]|0;
        $517 = $516&255;
        $518 = $517 << 8;
        $519 = ((($505)) + 1|0);
        $520 = HEAP8[$519>>0]|0;
        $521 = $520&255;
        $522 = $518 | $521;
        $523 = $522 << $509;
        $524 = $523 | $506;
        HEAP32[$498>>2] = $524;
        $525 = (($508) + -15)|0;
        HEAP32[$507>>2] = $525;
        $526 = ((($505)) + 2|0);
        HEAP32[$504>>2] = $526;
        break;
       }
      }
     } while(0);
     HEAP32[$3>>2] = $500;
     $527 = ((($8)) + 3944|0);
     $528 = HEAP32[$527>>2]|0;
     $529 = (($528) + ($22)|0);
     $530 = $500&255;
     HEAP8[$529>>0] = $530;
     $$1597 = $480;$$1599 = $479;$$pre$phi766Z2D = $472;
    }
   } else {
    $$1597 = $480;$$1599 = $479;$$pre$phi766Z2D = $472;
   }
  }
 } while(0);
 $531 = (((($24) + (($22*24)|0)|0)) + 4|0);
 $532 = (((($24) + (($22*24)|0)|0)) + 8|0);
 $533 = (((($24) + (($22*24)|0)|0)) + 12|0);
 $534 = (((($24) + (($22*24)|0)|0)) + 16|0);
 $535 = (((($24) + (($22*24)|0)|0)) + 20|0);
 ;HEAP32[$25>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;HEAP32[$25+12>>2]=0|0;HEAP32[$25+16>>2]=0|0;HEAP32[$25+20>>2]=0|0;
 $536 = HEAP32[$$pre$phi766Z2D>>2]|0;
 $537 = (($536) + ($22)|0);
 $538 = HEAP8[$537>>0]|0;
 $539 = ($538<<24>>24)==(0);
 L82: do {
  if ($539) {
   $540 = HEAP32[$$pre$phiZ2D>>2]|0;
   $541 = (($540) + ($22<<1)|0);
   $542 = HEAP16[$541>>1]|0;
   switch ($542<<16>>16) {
   case 1024: case 2:  {
    break;
   }
   default: {
    $543 = ((($8)) + 3868|0);
    $544 = HEAP32[$543>>2]|0;
    $545 = $544&255;
    $546 = ((($8)) + 3948|0);
    $547 = HEAP32[$546>>2]|0;
    $548 = (($547) + ($22)|0);
    HEAP8[$548>>0] = $545;
    $549 = ((($8)) + 92|0);
    $550 = ((($8)) + 3952|0);
    $551 = HEAP32[$546>>2]|0;
    $552 = (($551) + ($22)|0);
    $553 = HEAP8[$552>>0]|0;
    $554 = $553 << 24 >> 24;
    $555 = HEAP32[$549>>2]|0;
    $556 = ((($555)) + 168|0);
    $557 = HEAP32[$556>>2]|0;
    $558 = (($557) + ($554))|0;
    $559 = ($558|0)<(0);
    $560 = ($558|0)<(51);
    $$649 = $560 ? $558 : 51;
    $561 = $559 ? 0 : $$649;
    $562 = (11027 + ($561)|0);
    $563 = HEAP8[$562>>0]|0;
    $564 = HEAP32[$550>>2]|0;
    $565 = (($564) + ($22<<1)|0);
    HEAP8[$565>>0] = $563;
    $566 = HEAP32[$546>>2]|0;
    $567 = (($566) + ($22)|0);
    $568 = HEAP8[$567>>0]|0;
    $569 = $568 << 24 >> 24;
    $570 = HEAP32[$549>>2]|0;
    $571 = ((($570)) + 172|0);
    $572 = HEAP32[$571>>2]|0;
    $573 = (($572) + ($569))|0;
    $574 = ($573|0)<(0);
    $575 = ($573|0)<(51);
    $$649$1 = $575 ? $573 : 51;
    $576 = $574 ? 0 : $$649$1;
    $577 = (11027 + ($576)|0);
    $578 = HEAP8[$577>>0]|0;
    $579 = HEAP32[$550>>2]|0;
    $580 = (((($579) + ($22<<1)|0)) + 1|0);
    HEAP8[$580>>0] = $578;
    $$pre = HEAP32[$$pre$phi766Z2D>>2]|0;
    $$phi$trans$insert = (($$pre) + ($22)|0);
    $$pre758 = HEAP8[$$phi$trans$insert>>0]|0;
    $581 = ($$pre758<<24>>24)==(0);
    if (!($581)) {
     break L82;
    }
   }
   }
   $582 = HEAP32[$$pre$phiZ2D>>2]|0;
   $583 = (($582) + ($22<<1)|0);
   $584 = HEAP16[$583>>1]|0;
   $585 = ($584<<16>>16)==(2);
   if (!($585)) {
    $$31 = 0;
    STACKTOP = sp;return ($$31|0);
   }
  }
 } while(0);
 $586 = ((($8)) + 3988|0);
 $587 = HEAP32[$586>>2]|0;
 $588 = (($587) + (($22*768)|0)|0);
 _memset(($588|0),0,768)|0;
 $589 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_565($10,$1)|0);
 $590 = ($589|0)==(0);
 if (!($590)) {
  $$31 = $589;
  STACKTOP = sp;return ($$31|0);
 }
 $591 = HEAP32[$1>>2]|0;
 $592 = $591 & 1;
 $593 = ($592|0)==(0);
 $594 = $591 >>> 1;
 $595 = (0 - ($594))|0;
 $596 = (($591) + 1)|0;
 $597 = $596 >>> 1;
 $storemerge$i = $593 ? $595 : $597;
 $$off628 = (($storemerge$i) + 26)|0;
 $598 = ($$off628>>>0)>(51);
 if ($598) {
  $$31 = 1027;
  STACKTOP = sp;return ($$31|0);
 }
 $599 = ((($8)) + 3868|0);
 $600 = HEAP32[$599>>2]|0;
 $601 = (($storemerge$i) + 52)|0;
 $602 = (($601) + ($600))|0;
 $603 = (($602|0) % 52)&-1;
 $604 = $603&255;
 $605 = ((($8)) + 3948|0);
 $606 = HEAP32[$605>>2]|0;
 $607 = (($606) + ($22)|0);
 HEAP8[$607>>0] = $604;
 $608 = HEAP32[$605>>2]|0;
 $609 = (($608) + ($22)|0);
 $610 = HEAP8[$609>>0]|0;
 $611 = $610 << 24 >> 24;
 HEAP32[$599>>2] = $611;
 $612 = ((($8)) + 92|0);
 $613 = ((($8)) + 3952|0);
 $614 = HEAP32[$612>>2]|0;
 $615 = ((($614)) + 168|0);
 $616 = HEAP32[$615>>2]|0;
 $617 = (($616) + ($611))|0;
 $618 = ($617|0)<(0);
 $619 = ($617|0)<(51);
 $$651 = $619 ? $617 : 51;
 $620 = $618 ? 0 : $$651;
 $621 = (11027 + ($620)|0);
 $622 = HEAP8[$621>>0]|0;
 $623 = HEAP32[$613>>2]|0;
 $624 = (($623) + ($22<<1)|0);
 HEAP8[$624>>0] = $622;
 $625 = HEAP32[$599>>2]|0;
 $626 = HEAP32[$612>>2]|0;
 $627 = ((($626)) + 172|0);
 $628 = HEAP32[$627>>2]|0;
 $629 = (($628) + ($625))|0;
 $630 = ($629|0)<(0);
 $631 = ($629|0)<(51);
 $$651$1 = $631 ? $629 : 51;
 $632 = $630 ? 0 : $$651$1;
 $633 = (11027 + ($632)|0);
 $634 = HEAP8[$633>>0]|0;
 $635 = HEAP32[$613>>2]|0;
 $636 = (((($635) + ($22<<1)|0)) + 1|0);
 HEAP8[$636>>0] = $634;
 __ZN7WelsDec12BsStartCavlcEPN10WelsCommon15TagBitStringAuxE($10);
 $637 = HEAP32[$$pre$phiZ2D>>2]|0;
 $638 = (($637) + ($22<<1)|0);
 $639 = HEAP16[$638>>1]|0;
 $640 = ($639<<16>>16)==(2);
 L96: do {
  if ($640) {
   $641 = HEAP32[$586>>2]|0;
   $642 = (($641) + (($22*768)|0)|0);
   $643 = HEAP32[$605>>2]|0;
   $644 = (($643) + ($22)|0);
   $645 = HEAP8[$644>>0]|0;
   $646 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,0,16,15634,1,$642,$645,$0)|0);
   $647 = ($646|0)==(0);
   if (!($647)) {
    $$31 = -1;
    STACKTOP = sp;return ($$31|0);
   }
   $648 = ($$1597|0)==(0);
   if (!($648)) {
    $649 = ($13>>>0)>(1);
    $650 = $649 ? $13 : 1;
    $651 = (($16) + 1)|0;
    $652 = (($651) - ($650))|0;
    $653 = (27122 + ($650)|0);
    $$2592724 = 0;
    while(1) {
     $656 = HEAP32[$586>>2]|0;
     $657 = $$2592724 << 4;
     $658 = ((($656) + (($22*768)|0)|0) + ($657<<1)|0);
     $659 = HEAP32[$605>>2]|0;
     $660 = (($659) + ($22)|0);
     $661 = HEAP8[$660>>0]|0;
     $662 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$$2592724,$652,$653,2,$658,$661,$0)|0);
     $663 = ($662|0)==(0);
     $654 = (($$2592724) + 1)|0;
     if (!($663)) {
      $$31 = -1;
      break;
     }
     $655 = ($654|0)<(16);
     if ($655) {
      $$2592724 = $654;
     } else {
      label = 76;
      break L96;
     }
    }
    STACKTOP = sp;return ($$31|0);
   }
  } else {
   $664 = ((($8)) + 3944|0);
   $665 = HEAP32[$664>>2]|0;
   $666 = (($665) + ($22)|0);
   $667 = HEAP8[$666>>0]|0;
   $668 = ($667<<24>>24)==(0);
   $669 = (1 - ($13))|0;
   $670 = (($669) + ($16))|0;
   if ($668) {
    $672 = (27122 + ($13)|0);
    $$1589727 = 0;$709 = $639;
    while(1) {
     $708 = $709 & 519;
     $710 = ($708<<16>>16)!=(0);
     $711 = $710 ? 11 : 12;
     $712 = 1 << $$1589727;
     $713 = $712 & $$1597;
     $714 = ($713|0)==(0);
     $715 = $$1589727 << 2;
     if ($714) {
      $733 = (11119 + ($715)|0);
      $734 = HEAP8[$733>>0]|0;
      $735 = $734&255;
      $736 = (($30) + ($735)|0);
      HEAP8[$736>>0]=0&255;HEAP8[$736+1>>0]=0>>8;
      $737 = $715 | 2;
      $738 = (11119 + ($737)|0);
      $739 = HEAP8[$738>>0]|0;
      $740 = $739&255;
      $741 = (($30) + ($740)|0);
      HEAP8[$741>>0]=0&255;HEAP8[$741+1>>0]=0>>8;
     } else {
      $716 = HEAP32[$586>>2]|0;
      $717 = $$1589727 << 6;
      $718 = ((($716) + (($22*768)|0)|0) + ($717<<1)|0);
      $719 = HEAP32[$605>>2]|0;
      $720 = (($719) + ($22)|0);
      $721 = HEAP8[$720>>0]|0;
      $722 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$715,$670,$672,$711,$718,$721,$0)|0);
      $723 = ($722|0)==(0);
      if (!($723)) {
       $$31 = -1;
       label = 86;
       break;
      }
      $724 = $715 | 1;
      $725 = HEAP32[$586>>2]|0;
      $726 = $724 << 4;
      $727 = ((($725) + (($22*768)|0)|0) + ($726<<1)|0);
      $728 = HEAP32[$605>>2]|0;
      $729 = (($728) + ($22)|0);
      $730 = HEAP8[$729>>0]|0;
      $731 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$724,$670,$672,$711,$727,$730,$0)|0);
      $732 = ($731|0)==(0);
      if (!($732)) {
       $$31 = -1;
       label = 86;
       break;
      }
      $838 = (($724) + 1)|0;
      $839 = HEAP32[$586>>2]|0;
      $840 = $838 << 4;
      $841 = ((($839) + (($22*768)|0)|0) + ($840<<1)|0);
      $842 = HEAP32[$605>>2]|0;
      $843 = (($842) + ($22)|0);
      $844 = HEAP8[$843>>0]|0;
      $845 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$838,$670,$672,$711,$841,$844,$0)|0);
      $846 = ($845|0)==(0);
      if (!($846)) {
       $$31 = -1;
       label = 86;
       break;
      }
      $847 = $715 | 3;
      $848 = HEAP32[$586>>2]|0;
      $849 = $847 << 4;
      $850 = ((($848) + (($22*768)|0)|0) + ($849<<1)|0);
      $851 = HEAP32[$605>>2]|0;
      $852 = (($851) + ($22)|0);
      $853 = HEAP8[$852>>0]|0;
      $854 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$847,$670,$672,$711,$850,$853,$0)|0);
      $855 = ($854|0)==(0);
      if (!($855)) {
       $$31 = -1;
       label = 86;
       break;
      }
     }
     $742 = (($$1589727) + 1)|0;
     $743 = ($742|0)<(4);
     if (!($743)) {
      label = 76;
      break L96;
     }
     $$pre762 = HEAP32[$$pre$phiZ2D>>2]|0;
     $$phi$trans$insert763 = (($$pre762) + ($22<<1)|0);
     $$pre764 = HEAP16[$$phi$trans$insert763>>1]|0;
     $$1589727 = $742;$709 = $$pre764;
    }
    if ((label|0) == 86) {
     STACKTOP = sp;return ($$31|0);
    }
   } else {
    $671 = (27138 + ($13)|0);
    $$0588730 = 0;$674 = $639;
    while(1) {
     $673 = $674 & 519;
     $675 = ($673<<16>>16)!=(0);
     $676 = $675 ? 11 : 12;
     $677 = 1 << $$0588730;
     $678 = $677 & $$1597;
     $679 = ($678|0)==(0);
     $680 = $$0588730 << 2;
     if ($679) {
      $697 = (11119 + ($680)|0);
      $698 = HEAP8[$697>>0]|0;
      $699 = $698&255;
      $700 = (($30) + ($699)|0);
      HEAP8[$700>>0]=0&255;HEAP8[$700+1>>0]=0>>8;
      $701 = $680 | 2;
      $702 = (11119 + ($701)|0);
      $703 = HEAP8[$702>>0]|0;
      $704 = $703&255;
      $705 = (($30) + ($704)|0);
      HEAP8[$705>>0]=0&255;HEAP8[$705+1>>0]=0>>8;
     } else {
      $681 = $$0588730 << 6;
      $682 = HEAP32[$586>>2]|0;
      $683 = ((($682) + (($22*768)|0)|0) + ($681<<1)|0);
      $684 = HEAP32[$605>>2]|0;
      $685 = (($684) + ($22)|0);
      $686 = HEAP8[$685>>0]|0;
      $687 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($6,$30,$10,$680,$670,$671,$676,$683,0,$686,$0)|0);
      $688 = ($687|0)==(0);
      if (!($688)) {
       $$31 = -1;
       label = 86;
       break;
      }
      $689 = $680 | 1;
      $690 = HEAP32[$586>>2]|0;
      $691 = ((($690) + (($22*768)|0)|0) + ($681<<1)|0);
      $692 = HEAP32[$605>>2]|0;
      $693 = (($692) + ($22)|0);
      $694 = HEAP8[$693>>0]|0;
      $695 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($6,$30,$10,$689,$670,$671,$676,$691,1,$694,$0)|0);
      $696 = ($695|0)==(0);
      if (!($696)) {
       $$31 = -1;
       label = 86;
       break;
      }
      $856 = (($689) + 1)|0;
      $857 = HEAP32[$586>>2]|0;
      $858 = ((($857) + (($22*768)|0)|0) + ($681<<1)|0);
      $859 = HEAP32[$605>>2]|0;
      $860 = (($859) + ($22)|0);
      $861 = HEAP8[$860>>0]|0;
      $862 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($6,$30,$10,$856,$670,$671,$676,$858,2,$861,$0)|0);
      $863 = ($862|0)==(0);
      if (!($863)) {
       $$31 = -1;
       label = 86;
       break;
      }
      $864 = $680 | 3;
      $865 = HEAP32[$586>>2]|0;
      $866 = ((($865) + (($22*768)|0)|0) + ($681<<1)|0);
      $867 = HEAP32[$605>>2]|0;
      $868 = (($867) + ($22)|0);
      $869 = HEAP8[$868>>0]|0;
      $870 = (__ZN7WelsDec25WelsResidualBlockCavlc8x8EPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPsihPNS_21TagWelsDecoderContextE($6,$30,$10,$864,$670,$671,$676,$866,3,$869,$0)|0);
      $871 = ($870|0)==(0);
      if (!($871)) {
       $$31 = -1;
       label = 86;
       break;
      }
     }
     $706 = (($$0588730) + 1)|0;
     $707 = ($706|0)<(4);
     if (!($707)) {
      label = 76;
      break L96;
     }
     $$pre759 = HEAP32[$$pre$phiZ2D>>2]|0;
     $$phi$trans$insert760 = (($$pre759) + ($22<<1)|0);
     $$pre761 = HEAP16[$$phi$trans$insert760>>1]|0;
     $$0588730 = $706;$674 = $$pre761;
    }
    if ((label|0) == 86) {
     STACKTOP = sp;return ($$31|0);
    }
   }
  }
 } while(0);
 if ((label|0) == 76) {
  $744 = ((($30)) + 9|0);
  $745 = HEAPU8[$744>>0]|(HEAPU8[$744+1>>0]<<8)|(HEAPU8[$744+2>>0]<<16)|(HEAPU8[$744+3>>0]<<24);
  HEAP32[$25>>2] = $745;
  $746 = ((($30)) + 17|0);
  $747 = HEAPU8[$746>>0]|(HEAPU8[$746+1>>0]<<8)|(HEAPU8[$746+2>>0]<<16)|(HEAPU8[$746+3>>0]<<24);
  HEAP32[$531>>2] = $747;
  $748 = ((($30)) + 25|0);
  $749 = HEAPU8[$748>>0]|(HEAPU8[$748+1>>0]<<8)|(HEAPU8[$748+2>>0]<<16)|(HEAPU8[$748+3>>0]<<24);
  HEAP32[$532>>2] = $749;
  $$sink35$in$in = ((($30)) + 33|0);
  $$sink35 = HEAPU8[$$sink35$in$in>>0]|(HEAPU8[$$sink35$in$in+1>>0]<<8)|(HEAPU8[$$sink35$in$in+2>>0]<<16)|(HEAPU8[$$sink35$in$in+3>>0]<<24);
  HEAP32[$533>>2] = $$sink35;
 }
 $750 = ($$1599|0)==(2);
 $$1599$off = (($$1599) + -1)|0;
 $751 = ($$1599$off>>>0)<(2);
 if ($751) {
  $752 = HEAP32[$$pre$phiZ2D>>2]|0;
  $753 = (($752) + ($22<<1)|0);
  $754 = HEAP16[$753>>1]|0;
  $755 = $754 & 519;
  $756 = ($755<<16>>16)==(0);
  $$0600 = $756 ? 13 : 7;
  $757 = HEAP32[$586>>2]|0;
  $758 = (((($757) + (($22*768)|0)|0)) + 512|0);
  $759 = HEAP32[$613>>2]|0;
  $760 = (($759) + ($22<<1)|0);
  $761 = HEAP8[$760>>0]|0;
  $762 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,16,4,15650,$$0600,$758,$761,$0)|0);
  $763 = ($762|0)==(0);
  if (!($763)) {
   $$31 = -1;
   STACKTOP = sp;return ($$31|0);
  }
  $764 = HEAP32[$$pre$phiZ2D>>2]|0;
  $765 = (($764) + ($22<<1)|0);
  $766 = HEAP16[$765>>1]|0;
  $767 = $766 & 519;
  $768 = ($767<<16>>16)==(0);
  $$0600$1 = $768 ? 14 : 8;
  $769 = HEAP32[$586>>2]|0;
  $770 = (((($769) + (($22*768)|0)|0)) + 640|0);
  $771 = HEAP32[$613>>2]|0;
  $772 = (((($771) + ($22<<1)|0)) + 1|0);
  $773 = HEAP8[$772>>0]|0;
  $774 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,20,4,15650,$$0600$1,$770,$773,$0)|0);
  $775 = ($774|0)==(0);
  if (!($775)) {
   $$31 = -1;
   STACKTOP = sp;return ($$31|0);
  }
 }
 do {
  if ($750) {
   $776 = ($13>>>0)>(1);
   $777 = $776 ? $13 : 1;
   $778 = (($16) + 1)|0;
   $779 = (($778) - ($777))|0;
   $780 = (27122 + ($777)|0);
   $$4594722 = 0;
   while(1) {
    $781 = HEAP32[$$pre$phiZ2D>>2]|0;
    $782 = (($781) + ($22<<1)|0);
    $783 = HEAP16[$782>>1]|0;
    $784 = $783 & 519;
    $785 = ($784<<16>>16)==(0);
    $786 = ($$4594722|0)!=(0);
    $787 = $786 ? 10 : 9;
    $788 = $786 ? 16 : 15;
    $$1601 = $785 ? $788 : $787;
    $789 = $$4594722 << 2;
    $790 = (($789) + 16)|0;
    $791 = HEAP32[$586>>2]|0;
    $792 = $790 << 4;
    $793 = ((($791) + (($22*768)|0)|0) + ($792<<1)|0);
    $794 = HEAP32[$613>>2]|0;
    $795 = ((($794) + ($22<<1)|0) + ($$4594722)|0);
    $796 = HEAP8[$795>>0]|0;
    $797 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$790,$779,$780,$$1601,$793,$796,$0)|0);
    $798 = ($797|0)==(0);
    if (!($798)) {
     $$31 = -1;
     label = 86;
     break;
    }
    $799 = (($789) + 17)|0;
    $800 = HEAP32[$586>>2]|0;
    $801 = $799 << 4;
    $802 = ((($800) + (($22*768)|0)|0) + ($801<<1)|0);
    $803 = HEAP32[$613>>2]|0;
    $804 = ((($803) + ($22<<1)|0) + ($$4594722)|0);
    $805 = HEAP8[$804>>0]|0;
    $806 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$799,$779,$780,$$1601,$802,$805,$0)|0);
    $807 = ($806|0)==(0);
    if (!($807)) {
     $$31 = -1;
     label = 86;
     break;
    }
    $818 = (($789) + 18)|0;
    $819 = HEAP32[$586>>2]|0;
    $820 = $818 << 4;
    $821 = ((($819) + (($22*768)|0)|0) + ($820<<1)|0);
    $822 = HEAP32[$613>>2]|0;
    $823 = ((($822) + ($22<<1)|0) + ($$4594722)|0);
    $824 = HEAP8[$823>>0]|0;
    $825 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$818,$779,$780,$$1601,$821,$824,$0)|0);
    $826 = ($825|0)==(0);
    if (!($826)) {
     $$31 = -1;
     label = 86;
     break;
    }
    $827 = (($789) + 19)|0;
    $828 = HEAP32[$586>>2]|0;
    $829 = $827 << 4;
    $830 = ((($828) + (($22*768)|0)|0) + ($829<<1)|0);
    $831 = HEAP32[$613>>2]|0;
    $832 = ((($831) + ($22<<1)|0) + ($$4594722)|0);
    $833 = HEAP8[$832>>0]|0;
    $834 = (__ZN7WelsDec22WelsResidualBlockCavlcEPNS_11TagVlcTableEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($6,$30,$10,$827,$779,$780,$$1601,$830,$833,$0)|0);
    $835 = ($834|0)==(0);
    if (!($835)) {
     $$31 = -1;
     label = 86;
     break;
    }
    $836 = (($$4594722) + 1)|0;
    $837 = ($836|0)<(2);
    if ($837) {
     $$4594722 = $836;
    } else {
     label = 84;
     break;
    }
   }
   if ((label|0) == 84) {
    $808 = ((($30)) + 14|0);
    $809 = HEAP16[$808>>1]|0;
    HEAP16[$534>>1] = $809;
    $810 = ((($30)) + 22|0);
    $811 = HEAP16[$810>>1]|0;
    HEAP16[$535>>1] = $811;
    $812 = ((($30)) + 38|0);
    $813 = HEAP16[$812>>1]|0;
    $814 = (((($24) + (($22*24)|0)|0)) + 18|0);
    HEAP16[$814>>1] = $813;
    $815 = ((($30)) + 46|0);
    $816 = HEAP16[$815>>1]|0;
    $817 = (((($24) + (($22*24)|0)|0)) + 22|0);
    HEAP16[$817>>1] = $816;
    break;
   }
   else if ((label|0) == 86) {
    STACKTOP = sp;return ($$31|0);
   }
  }
 } while(0);
 __ZN7WelsDec10BsEndCavlcEPN10WelsCommon15TagBitStringAuxE($10);
 $$31 = 0;
 STACKTOP = sp;return ($$31|0);
}
function __ZN7WelsDec18WelsFillCacheInterEPNS_16TagNeighborAvailEPhPA30_A2_sPA30_aPNS_10TagDqLayerE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$0126 = 0, $$0128 = 0, $$sink$sink = 0, $$sink12 = 0, $$sink132 = 0, $$sink6 = 0, $$sink7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $5 = ((($4)) + 4040|0);
 $6 = HEAP32[$5>>2]|0;
 __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($0,$1,$4);
 $7 = HEAP32[$0>>2]|0;
 $8 = ($7|0)==(0);
 if ($8) {
  $$0128 = 0;
 } else {
  $9 = ((($4)) + 4044|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($6) - ($10))|0;
  $$0128 = $11;
 }
 $12 = ((($0)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0);
 $15 = (($6) + -1)|0;
 $$ = $14 ? 0 : $15;
 $16 = ((($0)) + 12|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(0);
 if ($18) {
  $$0126 = 0;
 } else {
  $19 = ((($4)) + 4044|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($15) - ($20))|0;
  $$0126 = $21;
 }
 $22 = ((($0)) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(0);
 if ($24) {
  $$0 = 0;
 } else {
  $25 = ((($4)) + 4044|0);
  $26 = (($6) + 1)|0;
  $27 = HEAP32[$25>>2]|0;
  $28 = (($26) - ($27))|0;
  $$0 = $28;
 }
 if ($14) {
  label = 10;
 } else {
  $29 = ((($0)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = $30 & 504;
  $32 = ($31|0)==(0);
  if ($32) {
   label = 10;
  } else {
   $33 = ((($4)) + 3916|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (((($34) + ($$<<6)|0)) + 12|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = ((($2)) + 24|0);
   HEAP8[$37>>0]=$36&255;HEAP8[$37+1>>0]=($36>>8)&255;HEAP8[$37+2>>0]=($36>>16)&255;HEAP8[$37+3>>0]=$36>>24;
   $38 = HEAP32[$33>>2]|0;
   $39 = (((($38) + ($$<<6)|0)) + 28|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ((($2)) + 48|0);
   HEAP8[$41>>0]=$40&255;HEAP8[$41+1>>0]=($40>>8)&255;HEAP8[$41+2>>0]=($40>>16)&255;HEAP8[$41+3>>0]=$40>>24;
   $42 = HEAP32[$33>>2]|0;
   $43 = (((($42) + ($$<<6)|0)) + 44|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ((($2)) + 72|0);
   HEAP8[$45>>0]=$44&255;HEAP8[$45+1>>0]=($44>>8)&255;HEAP8[$45+2>>0]=($44>>16)&255;HEAP8[$45+3>>0]=$44>>24;
   $46 = HEAP32[$33>>2]|0;
   $47 = (((($46) + ($$<<6)|0)) + 60|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = ((($2)) + 96|0);
   HEAP8[$49>>0]=$48&255;HEAP8[$49+1>>0]=($48>>8)&255;HEAP8[$49+2>>0]=($48>>16)&255;HEAP8[$49+3>>0]=$48>>24;
   $50 = ((($4)) + 3932|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (((($51) + ($$<<4)|0)) + 3|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = ((($3)) + 6|0);
   HEAP8[$54>>0] = $53;
   $55 = HEAP32[$50>>2]|0;
   $56 = (((($55) + ($$<<4)|0)) + 7|0);
   $57 = HEAP8[$56>>0]|0;
   $58 = ((($3)) + 12|0);
   HEAP8[$58>>0] = $57;
   $59 = HEAP32[$50>>2]|0;
   $60 = (((($59) + ($$<<4)|0)) + 11|0);
   $61 = HEAP8[$60>>0]|0;
   $62 = ((($3)) + 18|0);
   HEAP8[$62>>0] = $61;
   $63 = HEAP32[$50>>2]|0;
   $64 = (((($63) + ($$<<4)|0)) + 15|0);
   $65 = HEAP8[$64>>0]|0;
   $$sink$sink = $65;$$sink6 = 24;
  }
 }
 do {
  if ((label|0) == 10) {
   $66 = ((($2)) + 24|0);
   HEAP8[$66>>0]=0&255;HEAP8[$66+1>>0]=(0>>8)&255;HEAP8[$66+2>>0]=(0>>16)&255;HEAP8[$66+3>>0]=0>>24;
   $67 = ((($2)) + 48|0);
   HEAP8[$67>>0]=0&255;HEAP8[$67+1>>0]=(0>>8)&255;HEAP8[$67+2>>0]=(0>>16)&255;HEAP8[$67+3>>0]=0>>24;
   $68 = ((($2)) + 72|0);
   HEAP8[$68>>0]=0&255;HEAP8[$68+1>>0]=(0>>8)&255;HEAP8[$68+2>>0]=(0>>16)&255;HEAP8[$68+3>>0]=0>>24;
   $69 = ((($2)) + 96|0);
   HEAP8[$69>>0]=0&255;HEAP8[$69+1>>0]=(0>>8)&255;HEAP8[$69+2>>0]=(0>>16)&255;HEAP8[$69+3>>0]=0>>24;
   $70 = HEAP32[$12>>2]|0;
   $71 = ($70|0)==(0);
   $72 = ((($3)) + 24|0);
   if ($71) {
    HEAP8[$72>>0] = -2;
    $73 = ((($3)) + 18|0);
    HEAP8[$73>>0] = -2;
    $74 = ((($3)) + 12|0);
    HEAP8[$74>>0] = -2;
    $$sink$sink = -2;$$sink6 = 6;
    break;
   } else {
    HEAP8[$72>>0] = -1;
    $75 = ((($3)) + 18|0);
    HEAP8[$75>>0] = -1;
    $76 = ((($3)) + 12|0);
    HEAP8[$76>>0] = -1;
    $$sink$sink = -1;$$sink6 = 6;
    break;
   }
  }
 } while(0);
 $77 = (($3) + ($$sink6)|0);
 HEAP8[$77>>0] = $$sink$sink;
 $78 = HEAP32[$16>>2]|0;
 $79 = ($78|0)==(0);
 if ($79) {
  label = 16;
 } else {
  $80 = ((($0)) + 24|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = $81 & 504;
  $83 = ($82|0)==(0);
  if ($83) {
   label = 16;
  } else {
   $84 = ((($4)) + 3916|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (((($85) + ($$0126<<6)|0)) + 60|0);
   $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   HEAP8[$2>>0]=$87&255;HEAP8[$2+1>>0]=($87>>8)&255;HEAP8[$2+2>>0]=($87>>16)&255;HEAP8[$2+3>>0]=$87>>24;
   $88 = ((($4)) + 3932|0);
   $89 = HEAP32[$88>>2]|0;
   $90 = (((($89) + ($$0126<<4)|0)) + 15|0);
   $91 = HEAP8[$90>>0]|0;
   HEAP8[$3>>0] = $91;
  }
 }
 if ((label|0) == 16) {
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
  $92 = HEAP32[$16>>2]|0;
  $93 = ($92|0)==(0);
  $$sink7 = $93 ? -2 : -1;
  HEAP8[$3>>0] = $$sink7;
 }
 $94 = HEAP32[$0>>2]|0;
 $95 = ($94|0)==(0);
 if ($95) {
  label = 20;
 } else {
  $96 = ((($0)) + 20|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = $97 & 504;
  $99 = ($98|0)==(0);
  if ($99) {
   label = 20;
  } else {
   $100 = ((($4)) + 3916|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = (((($101) + ($$0128<<6)|0)) + 48|0);
   $103 = $102;
   $104 = $103;
   $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
   $106 = (($103) + 4)|0;
   $107 = $106;
   $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
   $109 = ((($2)) + 4|0);
   $110 = $109;
   $111 = $110;
   HEAP8[$111>>0]=$105&255;HEAP8[$111+1>>0]=($105>>8)&255;HEAP8[$111+2>>0]=($105>>16)&255;HEAP8[$111+3>>0]=$105>>24;
   $112 = (($110) + 4)|0;
   $113 = $112;
   HEAP8[$113>>0]=$108&255;HEAP8[$113+1>>0]=($108>>8)&255;HEAP8[$113+2>>0]=($108>>16)&255;HEAP8[$113+3>>0]=$108>>24;
   $114 = HEAP32[$100>>2]|0;
   $115 = (((($114) + ($$0128<<6)|0)) + 56|0);
   $116 = $115;
   $117 = $116;
   $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
   $119 = (($116) + 4)|0;
   $120 = $119;
   $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
   $122 = ((($2)) + 12|0);
   $123 = $122;
   $124 = $123;
   HEAP8[$124>>0]=$118&255;HEAP8[$124+1>>0]=($118>>8)&255;HEAP8[$124+2>>0]=($118>>16)&255;HEAP8[$124+3>>0]=$118>>24;
   $125 = (($123) + 4)|0;
   $126 = $125;
   HEAP8[$126>>0]=$121&255;HEAP8[$126+1>>0]=($121>>8)&255;HEAP8[$126+2>>0]=($121>>16)&255;HEAP8[$126+3>>0]=$121>>24;
   $127 = ((($4)) + 3932|0);
   $128 = HEAP32[$127>>2]|0;
   $129 = (((($128) + ($$0128<<4)|0)) + 12|0);
   $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
   $131 = ((($3)) + 1|0);
   HEAP8[$131>>0]=$130&255;HEAP8[$131+1>>0]=($130>>8)&255;HEAP8[$131+2>>0]=($130>>16)&255;HEAP8[$131+3>>0]=$130>>24;
  }
 }
 if ((label|0) == 20) {
  $132 = ((($2)) + 4|0);
  dest=$132; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $133 = HEAP32[$0>>2]|0;
  $134 = ($133|0)==(0);
  $$sink132 = $134 ? -2 : -1;
  $135 = ((($3)) + 1|0);
  _memset(($135|0),($$sink132|0),4)|0;
 }
 $136 = HEAP32[$22>>2]|0;
 $137 = ($136|0)==(0);
 if (!($137)) {
  $138 = ((($0)) + 28|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = $139 & 504;
  $141 = ($140|0)==(0);
  if (!($141)) {
   $142 = ((($4)) + 3916|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = (((($143) + ($$0<<6)|0)) + 48|0);
   $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
   $146 = ((($2)) + 20|0);
   HEAP8[$146>>0]=$145&255;HEAP8[$146+1>>0]=($145>>8)&255;HEAP8[$146+2>>0]=($145>>16)&255;HEAP8[$146+3>>0]=$145>>24;
   $147 = ((($4)) + 3932|0);
   $148 = HEAP32[$147>>2]|0;
   $149 = (((($148) + ($$0<<4)|0)) + 12|0);
   $150 = HEAP8[$149>>0]|0;
   $151 = ((($3)) + 5|0);
   HEAP8[$151>>0] = $150;
   $156 = ((($2)) + 36|0);
   HEAP8[$156>>0]=0&255;HEAP8[$156+1>>0]=(0>>8)&255;HEAP8[$156+2>>0]=(0>>16)&255;HEAP8[$156+3>>0]=0>>24;
   $157 = ((($2)) + 84|0);
   HEAP8[$157>>0]=0&255;HEAP8[$157+1>>0]=(0>>8)&255;HEAP8[$157+2>>0]=(0>>16)&255;HEAP8[$157+3>>0]=0>>24;
   $158 = ((($2)) + 44|0);
   HEAP8[$158>>0]=0&255;HEAP8[$158+1>>0]=(0>>8)&255;HEAP8[$158+2>>0]=(0>>16)&255;HEAP8[$158+3>>0]=0>>24;
   $159 = ((($2)) + 68|0);
   HEAP8[$159>>0]=0&255;HEAP8[$159+1>>0]=(0>>8)&255;HEAP8[$159+2>>0]=(0>>16)&255;HEAP8[$159+3>>0]=0>>24;
   $160 = ((($2)) + 92|0);
   HEAP8[$160>>0]=0&255;HEAP8[$160+1>>0]=(0>>8)&255;HEAP8[$160+2>>0]=(0>>16)&255;HEAP8[$160+3>>0]=0>>24;
   $161 = ((($3)) + 23|0);
   HEAP8[$161>>0] = -2;
   $162 = ((($3)) + 17|0);
   HEAP8[$162>>0] = -2;
   $163 = ((($3)) + 11|0);
   HEAP8[$163>>0] = -2;
   $164 = ((($3)) + 21|0);
   HEAP8[$164>>0] = -2;
   $165 = ((($3)) + 9|0);
   HEAP8[$165>>0] = -2;
   return;
  }
 }
 $152 = ((($2)) + 20|0);
 HEAP8[$152>>0]=0&255;HEAP8[$152+1>>0]=(0>>8)&255;HEAP8[$152+2>>0]=(0>>16)&255;HEAP8[$152+3>>0]=0>>24;
 $153 = HEAP32[$22>>2]|0;
 $154 = ($153|0)==(0);
 $155 = ((($3)) + 5|0);
 $$sink12 = $154 ? -2 : -1;
 HEAP8[$155>>0] = $$sink12;
 $156 = ((($2)) + 36|0);
 HEAP8[$156>>0]=0&255;HEAP8[$156+1>>0]=(0>>8)&255;HEAP8[$156+2>>0]=(0>>16)&255;HEAP8[$156+3>>0]=0>>24;
 $157 = ((($2)) + 84|0);
 HEAP8[$157>>0]=0&255;HEAP8[$157+1>>0]=(0>>8)&255;HEAP8[$157+2>>0]=(0>>16)&255;HEAP8[$157+3>>0]=0>>24;
 $158 = ((($2)) + 44|0);
 HEAP8[$158>>0]=0&255;HEAP8[$158+1>>0]=(0>>8)&255;HEAP8[$158+2>>0]=(0>>16)&255;HEAP8[$158+3>>0]=0>>24;
 $159 = ((($2)) + 68|0);
 HEAP8[$159>>0]=0&255;HEAP8[$159+1>>0]=(0>>8)&255;HEAP8[$159+2>>0]=(0>>16)&255;HEAP8[$159+3>>0]=0>>24;
 $160 = ((($2)) + 92|0);
 HEAP8[$160>>0]=0&255;HEAP8[$160+1>>0]=(0>>8)&255;HEAP8[$160+2>>0]=(0>>16)&255;HEAP8[$160+3>>0]=0>>24;
 $161 = ((($3)) + 23|0);
 HEAP8[$161>>0] = -2;
 $162 = ((($3)) + 17|0);
 HEAP8[$162>>0] = -2;
 $163 = ((($3)) + 11|0);
 HEAP8[$163>>0] = -2;
 $164 = ((($3)) + 21|0);
 HEAP8[$164>>0] = -2;
 $165 = ((($3)) + 9|0);
 HEAP8[$165>>0] = -2;
 return;
}
function __ZN7WelsDec14ParseInterInfoEPNS_21TagWelsDecoderContextEPA30_A2_sPA30_aPN10WelsCommon15TagBitStringAuxE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0440690 = 0, $$0441 = 0, $$14$ph = 0, $$1431683783 = 0, $$23$ph = 0, $$37 = 0, $$38$ph = 0, $$39 = 0, $$4434686785 = 0, $$491 = 0, $$8438692787 = 0, $$9439691 = 0, $$in = 0, $$lcssa = 0, $$lcssa709 = 0, $$lcssa712 = 0, $$lcssa714 = 0, $$phi$trans$insert = 0, $$phi$trans$insert732 = 0, $$phi$trans$insert734 = 0;
 var $$phi$trans$insert737 = 0, $$phi$trans$insert744 = 0, $$pre = 0, $$pre$phi752Z2D = 0, $$pre$phiZ2D = 0, $$pre731 = 0, $$pre733 = 0, $$pre735 = 0, $$pre736 = 0, $$pre738 = 0, $$pre740 = 0, $$pre742 = 0, $$pre743 = 0, $$pre745 = 0, $$pre747 = 0, $$pre749 = 0, $$pre751 = 0, $$sink = 0, $$sink$i = 0, $$sink$i528 = 0;
 var $$sink$sink$sink = 0, $$sink500 = 0, $$sink501 = 0, $$sink504 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0;
 var $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0;
 var $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;
 var $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;
 var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0;
 var $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0;
 var $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0;
 var $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0;
 var $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0;
 var $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0;
 var $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0;
 var $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0;
 var $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0;
 var $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0;
 var $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0;
 var $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0;
 var $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0;
 var $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0;
 var $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0;
 var $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0;
 var $999 = 0, $cond = 0, $cond695 = 0, $or$cond = 0, $or$cond476 = 0, $or$cond479 = 0, $or$cond483 = 0, $or$cond483$1 = 0, $or$cond486 = 0, $or$cond490 = 0, $or$cond490$1 = 0, $or$cond495 = 0, $or$cond499 = 0, $phitmp = 0, $phitmp762 = 0, $sext = 0, $sext465 = 0, $sext466 = 0, $sext467 = 0, $sext469 = 0;
 var $sext469$1 = 0, $sext470 = 0, $sext470$1 = 0, $sext471 = 0, $storemerge$i = 0, $storemerge$i505 = 0, $storemerge$i508 = 0, $storemerge$i513 = 0, $storemerge$i520 = 0, $storemerge$i520$1 = 0, $storemerge$i523 = 0, $storemerge$i523$1 = 0, $storemerge$i536 = 0, $storemerge$i536$1 = 0, $storemerge$i539 = 0, $storemerge$i539$1 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0;
 var $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $vararg_buffer21 = sp + 72|0;
 $vararg_buffer18 = sp + 64|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer10 = sp + 40|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = sp + 152|0;
 $5 = sp + 136|0;
 $6 = sp + 156|0;
 $7 = sp + 128|0;
 $8 = sp + 112|0;
 $9 = sp + 96|0;
 $10 = sp + 80|0;
 $11 = sp + 76|0;
 $12 = ((($0)) + 241932|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 4040|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($13)) + 88|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 828|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($19)) + 24|0);
 $21 = HEAP16[$20>>1]|0;
 $22 = ((($19)) + 26|0);
 $23 = HEAP16[$22>>1]|0;
 $24 = ((($13)) + 3859|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = ((($5)) + 12|0);
 HEAP32[$27>>2] = $26;
 $28 = ((($5)) + 8|0);
 HEAP32[$28>>2] = $26;
 $29 = ((($5)) + 4|0);
 HEAP32[$29>>2] = $26;
 HEAP32[$5>>2] = $26;
 $30 = ((($13)) + 52|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($13)) + 3908|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (($33) + ($15<<1)|0);
 $35 = HEAP16[$34>>1]|0;
 $36 = $35 << 16 >> 16;
 switch ($36|0) {
 case 8:  {
  $37 = ((($13)) + 3858|0);
  $38 = HEAP8[$37>>0]|0;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $69 = $26;
  } else {
   $40 = ((($3)) + 20|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = $41 >>> 31;
   $43 = ((($3)) + 4|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = HEAP32[$3>>2]|0;
   $46 = ((($3)) + 16|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = $41 << 1;
   HEAP32[$40>>2] = $48;
   $49 = ((($3)) + 24|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = (($50) + 1)|0;
   HEAP32[$49>>2] = $51;
   $52 = ($50|0)>(-1);
   do {
    if ($52) {
     $53 = $47;
     $54 = (($53) - ($45))|0;
     $55 = (($44) + 1)|0;
     $56 = (($55) - ($45))|0;
     $57 = ($54|0)>($56|0);
     if ($57) {
      $$39 = 11;
      STACKTOP = sp;return ($$39|0);
     } else {
      $58 = HEAP8[$47>>0]|0;
      $59 = $58&255;
      $60 = $59 << 8;
      $61 = ((($47)) + 1|0);
      $62 = HEAP8[$61>>0]|0;
      $63 = $62&255;
      $64 = $60 | $63;
      $65 = $64 << $51;
      $66 = $65 | $48;
      HEAP32[$40>>2] = $66;
      $67 = (($50) + -15)|0;
      HEAP32[$49>>2] = $67;
      $68 = ((($47)) + 2|0);
      HEAP32[$46>>2] = $68;
      break;
     }
    }
   } while(0);
   HEAP32[$7>>2] = $42;
   HEAP32[$5>>2] = $42;
   $69 = $42;
  }
  $70 = ($69|0)==(0);
  if (!($70)) {
   __Z7WelsLogP13TagLogContextiPKcz($0,2,25689,$vararg_buffer);
   $$39 = 459814;
   STACKTOP = sp;return ($$39|0);
  }
  L16: do {
   switch ($31|0) {
   case 1:  {
    $$sink$i = 0;
    label = 15;
    break;
   }
   case 2:  {
    $71 = ((($3)) + 20|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $72 >>> 31;
    $74 = ((($3)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = HEAP32[$3>>2]|0;
    $77 = ((($3)) + 16|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = $72 << 1;
    HEAP32[$71>>2] = $79;
    $80 = ((($3)) + 24|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = (($81) + 1)|0;
    HEAP32[$80>>2] = $82;
    $83 = ($81|0)>(-1);
    do {
     if ($83) {
      $84 = $78;
      $85 = (($84) - ($76))|0;
      $86 = (($75) + 1)|0;
      $87 = (($86) - ($76))|0;
      $88 = ($85|0)>($87|0);
      if ($88) {
       $$39 = 11;
       STACKTOP = sp;return ($$39|0);
      } else {
       $89 = HEAP8[$78>>0]|0;
       $90 = $89&255;
       $91 = $90 << 8;
       $92 = ((($78)) + 1|0);
       $93 = HEAP8[$92>>0]|0;
       $94 = $93&255;
       $95 = $91 | $94;
       $96 = $95 << $82;
       $97 = $96 | $79;
       HEAP32[$71>>2] = $97;
       $98 = (($81) + -15)|0;
       HEAP32[$80>>2] = $98;
       $99 = ((($78)) + 2|0);
       HEAP32[$77>>2] = $99;
       break;
      }
     }
    } while(0);
    HEAP32[$7>>2] = $73;
    $100 = $73 ^ 1;
    $$sink$i = $100;
    label = 15;
    break;
   }
   default: {
    $101 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
    $102 = ($101|0)==(0);
    if ($102) {
     $$pre751 = HEAP32[$7>>2]|0;
     $103 = $$pre751;
     break L16;
    } else {
     $$39 = $101;
     STACKTOP = sp;return ($$39|0);
    }
   }
   }
  } while(0);
  if ((label|0) == 15) {
   HEAP32[$7>>2] = $$sink$i;
   $103 = $$sink$i;
  }
  $104 = ($103|0)>(-1);
  $105 = ($103|0)<($31|0);
  $or$cond = $104 & $105;
  if ($or$cond) {
   $106 = (((($0)) + 5468|0) + ($103<<2)|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = ($107|0)==(0|0);
   if ($108) {
    label = 18;
   } else {
    $$0441 = $103;
   }
  } else {
   label = 18;
  }
  do {
   if ((label|0) == 18) {
    $109 = ((($0)) + 512344|0);
    HEAP8[$109>>0] = 1;
    $110 = ((($0)) + 242340|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = ($111|0)==(0);
    if ($112) {
     $$39 = 1041;
     STACKTOP = sp;return ($$39|0);
    } else {
     $113 = ((($0)) + 116|0);
     $114 = HEAP32[$113>>2]|0;
     $115 = $114 | 4;
     HEAP32[$113>>2] = $115;
     $$0441 = 0;
     break;
    }
   }
  } while(0);
  $116 = ((($0)) + 512345|0);
  $117 = HEAP8[$116>>0]|0;
  $118 = ($117<<24>>24)==(0);
  $119 = ((($0)) + 512344|0);
  if ($118) {
   $120 = HEAP8[$119>>0]|0;
   $121 = ($120<<24>>24)==(0);
   if ($121) {
    $122 = (((($0)) + 5468|0) + ($$0441<<2)|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = ($123|0)==(0|0);
    if ($124) {
     $128 = 1;
    } else {
     $125 = ((($123)) + 72|0);
     $126 = HEAP8[$125>>0]|0;
     $127 = $126 ^ 1;
     $128 = $127;
    }
   } else {
    $128 = 1;
   }
  } else {
   $128 = 1;
  }
  HEAP8[$119>>0] = $128;
  $129 = $$0441&255;
  __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($1,$2,0,4,$129,$6);
  $130 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
  $131 = ($130|0)==(0);
  if (!($131)) {
   $$39 = $130;
   STACKTOP = sp;return ($$39|0);
  }
  $132 = HEAP32[$4>>2]|0;
  $133 = $132 & 1;
  $134 = ($133|0)==(0);
  $135 = $132 >>> 1;
  $136 = (0 - ($135))|0;
  $137 = (($132) + 1)|0;
  $138 = $137 >>> 1;
  $storemerge$i505 = $134 ? $136 : $138;
  $139 = HEAP16[$6>>1]|0;
  $140 = $139&65535;
  $141 = (($140) + ($storemerge$i505))|0;
  $142 = $141&65535;
  HEAP16[$6>>1] = $142;
  $143 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
  $144 = ($143|0)==(0);
  if (!($144)) {
   $$39 = $143;
   STACKTOP = sp;return ($$39|0);
  }
  $145 = HEAP32[$4>>2]|0;
  $146 = $145 & 1;
  $147 = ($146|0)==(0);
  $148 = $145 >>> 1;
  $149 = (0 - ($148))|0;
  $150 = (($145) + 1)|0;
  $151 = $150 >>> 1;
  $storemerge$i508 = $147 ? $149 : $151;
  $152 = ((($6)) + 2|0);
  $153 = HEAP16[$152>>1]|0;
  $154 = $153&65535;
  $155 = (($154) + ($storemerge$i508))|0;
  $156 = $155&65535;
  HEAP16[$152>>1] = $156;
  $sext471 = $155 << 16;
  $157 = $sext471 >> 16;
  $158 = $21 << 16 >> 16;
  $159 = ($157|0)<($158|0);
  $160 = $23 << 16 >> 16;
  $161 = ($157|0)>($160|0);
  $or$cond476 = $159 | $161;
  if ($or$cond476) {
   HEAP32[$vararg_buffer1>>2] = $157;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer1);
  }
  __ZN7WelsDec22UpdateP16x16MotionInfoEPNS_10TagDqLayerEaPs($13,$129,$6);
  $$39 = 0;
  STACKTOP = sp;return ($$39|0);
  break;
 }
 case 16:  {
  $162 = ((($13)) + 3858|0);
  $163 = ((($3)) + 20|0);
  $164 = ((($3)) + 4|0);
  $165 = ((($3)) + 16|0);
  $166 = ((($3)) + 24|0);
  $167 = HEAP8[$162>>0]|0;
  $168 = ($167<<24>>24)==(0);
  do {
   if ($168) {
    $169 = $26;$193 = $26;
    label = 183;
   } else {
    $195 = HEAP32[$163>>2]|0;
    $196 = $195 >>> 31;
    $197 = HEAP32[$164>>2]|0;
    $198 = HEAP32[$3>>2]|0;
    $199 = HEAP32[$165>>2]|0;
    $200 = $195 << 1;
    HEAP32[$163>>2] = $200;
    $201 = HEAP32[$166>>2]|0;
    $202 = (($201) + 1)|0;
    HEAP32[$166>>2] = $202;
    $203 = ($201|0)>(-1);
    if ($203) {
     $204 = $199;
     $205 = (($204) - ($198))|0;
     $206 = (($197) + 1)|0;
     $207 = (($206) - ($198))|0;
     $208 = ($205|0)>($207|0);
     if ($208) {
      $$14$ph = 11;
      break;
     }
     $209 = HEAP8[$199>>0]|0;
     $210 = $209&255;
     $211 = $210 << 8;
     $212 = ((($199)) + 1|0);
     $213 = HEAP8[$212>>0]|0;
     $214 = $213&255;
     $215 = $211 | $214;
     $216 = $215 << $202;
     $217 = $216 | $200;
     HEAP32[$163>>2] = $217;
     $218 = (($201) + -15)|0;
     HEAP32[$166>>2] = $218;
     $219 = ((($199)) + 2|0);
     HEAP32[$165>>2] = $219;
    }
    HEAP32[$7>>2] = $196;
    HEAP32[$5>>2] = $196;
    $$pre743 = HEAP8[$162>>0]|0;
    $220 = ($$pre743<<24>>24)==(0);
    if ($220) {
     $169 = $196;$193 = $26;
     label = 183;
    } else {
     $783 = HEAP32[$163>>2]|0;
     $784 = $783 >>> 31;
     $785 = HEAP32[$164>>2]|0;
     $786 = HEAP32[$3>>2]|0;
     $787 = HEAP32[$165>>2]|0;
     $788 = $783 << 1;
     HEAP32[$163>>2] = $788;
     $789 = HEAP32[$166>>2]|0;
     $790 = (($789) + 1)|0;
     HEAP32[$166>>2] = $790;
     $791 = ($789|0)>(-1);
     if ($791) {
      $792 = $787;
      $793 = (($792) - ($786))|0;
      $794 = (($785) + 1)|0;
      $795 = (($794) - ($786))|0;
      $796 = ($793|0)>($795|0);
      if ($796) {
       $$14$ph = 11;
       break;
      }
      $797 = HEAP8[$787>>0]|0;
      $798 = $797&255;
      $799 = $798 << 8;
      $800 = ((($787)) + 1|0);
      $801 = HEAP8[$800>>0]|0;
      $802 = $801&255;
      $803 = $799 | $802;
      $804 = $803 << $790;
      $805 = $804 | $788;
      HEAP32[$163>>2] = $805;
      $806 = (($789) + -15)|0;
      HEAP32[$166>>2] = $806;
      $807 = ((($787)) + 2|0);
      HEAP32[$165>>2] = $807;
     }
     HEAP32[$7>>2] = $784;
     HEAP32[$29>>2] = $784;
     $169 = $196;$193 = $784;
     label = 183;
    }
   }
  } while(0);
  L68: do {
   if ((label|0) == 183) {
    $174 = ((($0)) + 512344|0);
    $176 = ((($0)) + 242340|0);
    $179 = ((($0)) + 116|0);
    $182 = ((($0)) + 512345|0);
    $808 = ($31|0)==(1);
    L70: do {
     if ($808) {
      $170 = ($169|0)==(0);
      if ($170) {
       HEAP32[$7>>2] = 0;
       HEAP32[$8>>2] = 0;
       $171 = ((($0)) + 5468|0);
       $172 = HEAP32[$171>>2]|0;
       $173 = ($172|0)==(0|0);
       if ($173) {
        HEAP8[$174>>0] = 1;
        $175 = HEAP32[$176>>2]|0;
        $177 = ($175|0)==(0);
        if ($177) {
         $$14$ph = 1041;
         break L68;
        }
        HEAP32[$8>>2] = 0;
        $178 = HEAP32[$179>>2]|0;
        $180 = $178 | 4;
        HEAP32[$179>>2] = $180;
       }
       $181 = HEAP8[$182>>0]|0;
       $183 = ($181<<24>>24)==(0);
       if ($183) {
        $184 = HEAP8[$174>>0]|0;
        $185 = ($184<<24>>24)==(0);
        if ($185) {
         $186 = ((($0)) + 5468|0);
         $187 = HEAP32[$186>>2]|0;
         $188 = ($187|0)==(0|0);
         if ($188) {
          $192 = 1;
         } else {
          $189 = ((($187)) + 72|0);
          $190 = HEAP8[$189>>0]|0;
          $191 = $190 ^ 1;
          $192 = $191;
         }
        } else {
         $192 = 1;
        }
       } else {
        $192 = 1;
       }
       HEAP8[$174>>0] = $192;
       $194 = ($193|0)==(0);
       if ($194) {
        HEAP32[$7>>2] = 0;
        $765 = ((($8)) + 4|0);
        HEAP32[$765>>2] = 0;
        $766 = ((($0)) + 5468|0);
        $767 = HEAP32[$766>>2]|0;
        $768 = ($767|0)==(0|0);
        if ($768) {
         HEAP8[$174>>0] = 1;
         $769 = HEAP32[$176>>2]|0;
         $770 = ($769|0)==(0);
         if ($770) {
          $$14$ph = 1041;
          break L68;
         }
         HEAP32[$765>>2] = 0;
         $771 = HEAP32[$179>>2]|0;
         $772 = $771 | 4;
         HEAP32[$179>>2] = $772;
         $774 = 1;
        } else {
         $774 = $192;
        }
        $773 = $181 | $774;
        $775 = ($773<<24>>24)==(0);
        if ($775) {
         $776 = ((($0)) + 5468|0);
         $777 = HEAP32[$776>>2]|0;
         $778 = ($777|0)==(0|0);
         if ($778) {
          $782 = 1;
         } else {
          $779 = ((($777)) + 72|0);
          $780 = HEAP8[$779>>0]|0;
          $781 = $780 ^ 1;
          $782 = $781;
         }
        } else {
         $782 = 1;
        }
        HEAP8[$174>>0] = $782;
        $$pre$phiZ2D = $8;$224 = 0;
       } else {
        label = 48;
       }
      } else {
       label = 48;
      }
     } else {
      $cond = ($31|0)==(2);
      $809 = ($169|0)==(0);
      if ($809) {
       $$1431683783 = 0;
       while(1) {
        if ($cond) {
         $227 = HEAP32[$163>>2]|0;
         $228 = $227 >>> 31;
         $229 = HEAP32[$164>>2]|0;
         $230 = HEAP32[$3>>2]|0;
         $231 = HEAP32[$165>>2]|0;
         $232 = $227 << 1;
         HEAP32[$163>>2] = $232;
         $233 = HEAP32[$166>>2]|0;
         $234 = (($233) + 1)|0;
         HEAP32[$166>>2] = $234;
         $235 = ($233|0)>(-1);
         if ($235) {
          $236 = $231;
          $237 = (($236) - ($230))|0;
          $238 = (($229) + 1)|0;
          $239 = (($238) - ($230))|0;
          $240 = ($237|0)>($239|0);
          if ($240) {
           $$14$ph = 11;
           break L68;
          }
          $241 = HEAP8[$231>>0]|0;
          $242 = $241&255;
          $243 = $242 << 8;
          $244 = ((($231)) + 1|0);
          $245 = HEAP8[$244>>0]|0;
          $246 = $245&255;
          $247 = $243 | $246;
          $248 = $247 << $234;
          $249 = $248 | $232;
          HEAP32[$163>>2] = $249;
          $250 = (($233) + -15)|0;
          HEAP32[$166>>2] = $250;
          $251 = ((($231)) + 2|0);
          HEAP32[$165>>2] = $251;
         }
         $252 = $228 ^ 1;
         HEAP32[$7>>2] = $252;
         $256 = $252;
        } else {
         $253 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
         $254 = ($253|0)==(0);
         if (!($254)) {
          $$14$ph = $253;
          break L68;
         }
         $$pre747 = HEAP32[$7>>2]|0;
         $256 = $$pre747;
        }
        $255 = (($8) + ($$1431683783<<2)|0);
        HEAP32[$255>>2] = $256;
        $257 = ($256|0)>(-1);
        $258 = ($256|0)<($31|0);
        $or$cond479 = $257 & $258;
        if ($or$cond479) {
         $259 = (((($0)) + 5468|0) + ($256<<2)|0);
         $260 = HEAP32[$259>>2]|0;
         $261 = ($260|0)==(0|0);
         if ($261) {
          label = 58;
         } else {
          $271 = $256;
         }
        } else {
         label = 58;
        }
        if ((label|0) == 58) {
         label = 0;
         HEAP8[$174>>0] = 1;
         $262 = HEAP32[$176>>2]|0;
         $263 = ($262|0)==(0);
         if ($263) {
          $$14$ph = 1041;
          break L68;
         }
         HEAP32[$255>>2] = 0;
         $264 = HEAP32[$179>>2]|0;
         $265 = $264 | 4;
         HEAP32[$179>>2] = $265;
         $271 = 0;
        }
        $266 = HEAP8[$182>>0]|0;
        $267 = ($266<<24>>24)==(0);
        if ($267) {
         $268 = HEAP8[$174>>0]|0;
         $269 = ($268<<24>>24)==(0);
         if ($269) {
          $270 = (((($0)) + 5468|0) + ($271<<2)|0);
          $272 = HEAP32[$270>>2]|0;
          $273 = ($272|0)==(0|0);
          if ($273) {
           $278 = 0;
          } else {
           $274 = ((($272)) + 72|0);
           $275 = HEAP8[$274>>0]|0;
           $276 = ($275<<24>>24)!=(0);
           $278 = $276;
          }
          $277 = $278 ^ 1;
          $280 = $277;
         } else {
          $280 = 1;
         }
        } else {
         $280 = 1;
        }
        $279 = $280&1;
        HEAP8[$174>>0] = $279;
        $281 = (($$1431683783) + 1)|0;
        $282 = ($281|0)<(2);
        if (!($282)) {
         break;
        }
        $$phi$trans$insert744 = (($5) + ($281<<2)|0);
        $$pre745 = HEAP32[$$phi$trans$insert744>>2]|0;
        $283 = ($$pre745|0)==(0);
        if ($283) {
         $$1431683783 = $281;
        } else {
         label = 48;
         break L70;
        }
       }
       $$pre749 = HEAP32[$8>>2]|0;
       $phitmp762 = $$pre749&255;
       $$pre$phiZ2D = $8;$224 = $phitmp762;
      } else {
       label = 48;
      }
     }
    } while(0);
    if ((label|0) == 48) {
     __Z7WelsLogP13TagLogContextiPKcz($0,2,25689,$vararg_buffer3);
     $$14$ph = 459814;
     break;
    }
    $221 = ((($6)) + 2|0);
    $222 = $21 << 16 >> 16;
    $223 = $23 << 16 >> 16;
    __ZN7WelsDec15PredInter16x8MvEPA30_A2_sPA30_aiaPs($1,$2,0,$224,$6);
    $225 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
    $226 = ($225|0)==(0);
    do {
     if ($226) {
      $284 = HEAP32[$4>>2]|0;
      $285 = $284 & 1;
      $286 = ($285|0)==(0);
      $287 = $284 >>> 1;
      $288 = (0 - ($287))|0;
      $289 = (($284) + 1)|0;
      $290 = $289 >>> 1;
      $storemerge$i520 = $286 ? $288 : $290;
      $291 = HEAP16[$6>>1]|0;
      $292 = $291&65535;
      $293 = (($292) + ($storemerge$i520))|0;
      $294 = $293&65535;
      HEAP16[$6>>1] = $294;
      $295 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
      $296 = ($295|0)==(0);
      if ($296) {
       $297 = HEAP32[$4>>2]|0;
       $298 = $297 & 1;
       $299 = ($298|0)==(0);
       $300 = $297 >>> 1;
       $301 = (0 - ($300))|0;
       $302 = (($297) + 1)|0;
       $303 = $302 >>> 1;
       $storemerge$i523 = $299 ? $301 : $303;
       $304 = HEAP16[$221>>1]|0;
       $305 = $304&65535;
       $306 = (($305) + ($storemerge$i523))|0;
       $307 = $306&65535;
       HEAP16[$221>>1] = $307;
       $sext470 = $306 << 16;
       $308 = $sext470 >> 16;
       $309 = ($308|0)<($222|0);
       $310 = ($308|0)>($223|0);
       $or$cond483 = $309 | $310;
       if ($or$cond483) {
        HEAP32[$vararg_buffer5>>2] = $308;
        __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer5);
       }
       $311 = HEAP32[$$pre$phiZ2D>>2]|0;
       $312 = $311&255;
       __ZN7WelsDec21UpdateP16x8MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($13,$1,$2,0,$312,$6);
       $313 = ((($8)) + 4|0);
       $314 = HEAP32[$313>>2]|0;
       $315 = $314&255;
       __ZN7WelsDec15PredInter16x8MvEPA30_A2_sPA30_aiaPs($1,$2,8,$315,$6);
       $316 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
       $317 = ($316|0)==(0);
       if (!($317)) {
        $$lcssa709 = $316;
        break;
       }
       $738 = HEAP32[$4>>2]|0;
       $739 = $738 & 1;
       $740 = ($739|0)==(0);
       $741 = $738 >>> 1;
       $742 = (0 - ($741))|0;
       $743 = (($738) + 1)|0;
       $744 = $743 >>> 1;
       $storemerge$i520$1 = $740 ? $742 : $744;
       $745 = HEAP16[$6>>1]|0;
       $746 = $745&65535;
       $747 = (($746) + ($storemerge$i520$1))|0;
       $748 = $747&65535;
       HEAP16[$6>>1] = $748;
       $749 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
       $750 = ($749|0)==(0);
       if ($750) {
        $751 = HEAP32[$4>>2]|0;
        $752 = $751 & 1;
        $753 = ($752|0)==(0);
        $754 = $751 >>> 1;
        $755 = (0 - ($754))|0;
        $756 = (($751) + 1)|0;
        $757 = $756 >>> 1;
        $storemerge$i523$1 = $753 ? $755 : $757;
        $758 = HEAP16[$221>>1]|0;
        $759 = $758&65535;
        $760 = (($759) + ($storemerge$i523$1))|0;
        $761 = $760&65535;
        HEAP16[$221>>1] = $761;
        $sext470$1 = $760 << 16;
        $762 = $sext470$1 >> 16;
        $763 = ($762|0)<($222|0);
        $764 = ($762|0)>($223|0);
        $or$cond483$1 = $763 | $764;
        if ($or$cond483$1) {
         HEAP32[$vararg_buffer18>>2] = $762;
         __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer18);
        }
        __ZN7WelsDec21UpdateP16x8MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($13,$1,$2,8,$315,$6);
        $$39 = 0;
        STACKTOP = sp;return ($$39|0);
       } else {
        $$lcssa = $749;
       }
      } else {
       $$lcssa = $295;
      }
      $$14$ph = $$lcssa;
      break L68;
     } else {
      $$lcssa709 = $225;
     }
    } while(0);
    $$14$ph = $$lcssa709;
   }
  } while(0);
  $$39 = $$14$ph;
  STACKTOP = sp;return ($$39|0);
  break;
 }
 case 32:  {
  $318 = ((($13)) + 3858|0);
  $319 = ((($3)) + 20|0);
  $320 = ((($3)) + 4|0);
  $321 = ((($3)) + 16|0);
  $322 = ((($3)) + 24|0);
  $323 = HEAP8[$318>>0]|0;
  $324 = ($323<<24>>24)==(0);
  do {
   if ($324) {
    $325 = $26;$349 = $26;
    label = 200;
   } else {
    $351 = HEAP32[$319>>2]|0;
    $352 = $351 >>> 31;
    $353 = HEAP32[$320>>2]|0;
    $354 = HEAP32[$3>>2]|0;
    $355 = HEAP32[$321>>2]|0;
    $356 = $351 << 1;
    HEAP32[$319>>2] = $356;
    $357 = HEAP32[$322>>2]|0;
    $358 = (($357) + 1)|0;
    HEAP32[$322>>2] = $358;
    $359 = ($357|0)>(-1);
    if ($359) {
     $360 = $355;
     $361 = (($360) - ($354))|0;
     $362 = (($353) + 1)|0;
     $363 = (($362) - ($354))|0;
     $364 = ($361|0)>($363|0);
     if ($364) {
      $$23$ph = 11;
      break;
     }
     $365 = HEAP8[$355>>0]|0;
     $366 = $365&255;
     $367 = $366 << 8;
     $368 = ((($355)) + 1|0);
     $369 = HEAP8[$368>>0]|0;
     $370 = $369&255;
     $371 = $367 | $370;
     $372 = $371 << $358;
     $373 = $372 | $356;
     HEAP32[$319>>2] = $373;
     $374 = (($357) + -15)|0;
     HEAP32[$322>>2] = $374;
     $375 = ((($355)) + 2|0);
     HEAP32[$321>>2] = $375;
    }
    HEAP32[$7>>2] = $352;
    HEAP32[$5>>2] = $352;
    $$pre736 = HEAP8[$318>>0]|0;
    $376 = ($$pre736<<24>>24)==(0);
    if ($376) {
     $325 = $352;$349 = $26;
     label = 200;
    } else {
     $855 = HEAP32[$319>>2]|0;
     $856 = $855 >>> 31;
     $857 = HEAP32[$320>>2]|0;
     $858 = HEAP32[$3>>2]|0;
     $859 = HEAP32[$321>>2]|0;
     $860 = $855 << 1;
     HEAP32[$319>>2] = $860;
     $861 = HEAP32[$322>>2]|0;
     $862 = (($861) + 1)|0;
     HEAP32[$322>>2] = $862;
     $863 = ($861|0)>(-1);
     if ($863) {
      $864 = $859;
      $865 = (($864) - ($858))|0;
      $866 = (($857) + 1)|0;
      $867 = (($866) - ($858))|0;
      $868 = ($865|0)>($867|0);
      if ($868) {
       $$23$ph = 11;
       break;
      }
      $869 = HEAP8[$859>>0]|0;
      $870 = $869&255;
      $871 = $870 << 8;
      $872 = ((($859)) + 1|0);
      $873 = HEAP8[$872>>0]|0;
      $874 = $873&255;
      $875 = $871 | $874;
      $876 = $875 << $862;
      $877 = $876 | $860;
      HEAP32[$319>>2] = $877;
      $878 = (($861) + -15)|0;
      HEAP32[$322>>2] = $878;
      $879 = ((($859)) + 2|0);
      HEAP32[$321>>2] = $879;
     }
     HEAP32[$7>>2] = $856;
     HEAP32[$29>>2] = $856;
     $325 = $352;$349 = $856;
     label = 200;
    }
   }
  } while(0);
  L150: do {
   if ((label|0) == 200) {
    $330 = ((($0)) + 512344|0);
    $332 = ((($0)) + 242340|0);
    $335 = ((($0)) + 116|0);
    $338 = ((($0)) + 512345|0);
    $880 = ($31|0)==(1);
    L152: do {
     if ($880) {
      $326 = ($325|0)==(0);
      if ($326) {
       HEAP32[$7>>2] = 0;
       HEAP32[$8>>2] = 0;
       $327 = ((($0)) + 5468|0);
       $328 = HEAP32[$327>>2]|0;
       $329 = ($328|0)==(0|0);
       if ($329) {
        HEAP8[$330>>0] = 1;
        $331 = HEAP32[$332>>2]|0;
        $333 = ($331|0)==(0);
        if ($333) {
         $$23$ph = 1041;
         break L150;
        }
        HEAP32[$8>>2] = 0;
        $334 = HEAP32[$335>>2]|0;
        $336 = $334 | 4;
        HEAP32[$335>>2] = $336;
       }
       $337 = HEAP8[$338>>0]|0;
       $339 = ($337<<24>>24)==(0);
       if ($339) {
        $340 = HEAP8[$330>>0]|0;
        $341 = ($340<<24>>24)==(0);
        if ($341) {
         $342 = ((($0)) + 5468|0);
         $343 = HEAP32[$342>>2]|0;
         $344 = ($343|0)==(0|0);
         if ($344) {
          $348 = 1;
         } else {
          $345 = ((($343)) + 72|0);
          $346 = HEAP8[$345>>0]|0;
          $347 = $346 ^ 1;
          $348 = $347;
         }
        } else {
         $348 = 1;
        }
       } else {
        $348 = 1;
       }
       HEAP8[$330>>0] = $348;
       $350 = ($349|0)==(0);
       if ($350) {
        HEAP32[$7>>2] = 0;
        $837 = ((($8)) + 4|0);
        HEAP32[$837>>2] = 0;
        $838 = ((($0)) + 5468|0);
        $839 = HEAP32[$838>>2]|0;
        $840 = ($839|0)==(0|0);
        if ($840) {
         HEAP8[$330>>0] = 1;
         $841 = HEAP32[$332>>2]|0;
         $842 = ($841|0)==(0);
         if ($842) {
          $$23$ph = 1041;
          break L150;
         }
         HEAP32[$837>>2] = 0;
         $843 = HEAP32[$335>>2]|0;
         $844 = $843 | 4;
         HEAP32[$335>>2] = $844;
         $846 = 1;
        } else {
         $846 = $348;
        }
        $845 = $337 | $846;
        $847 = ($845<<24>>24)==(0);
        if ($847) {
         $848 = ((($0)) + 5468|0);
         $849 = HEAP32[$848>>2]|0;
         $850 = ($849|0)==(0|0);
         if ($850) {
          $854 = 1;
         } else {
          $851 = ((($849)) + 72|0);
          $852 = HEAP8[$851>>0]|0;
          $853 = $852 ^ 1;
          $854 = $853;
         }
        } else {
         $854 = 1;
        }
        HEAP8[$330>>0] = $854;
        $$pre$phi752Z2D = $8;$380 = 0;
       } else {
        label = 108;
       }
      } else {
       label = 108;
      }
     } else {
      $cond695 = ($31|0)==(2);
      $881 = ($325|0)==(0);
      if ($881) {
       $$4434686785 = 0;
       while(1) {
        if ($cond695) {
         $383 = HEAP32[$319>>2]|0;
         $384 = $383 >>> 31;
         $385 = HEAP32[$320>>2]|0;
         $386 = HEAP32[$3>>2]|0;
         $387 = HEAP32[$321>>2]|0;
         $388 = $383 << 1;
         HEAP32[$319>>2] = $388;
         $389 = HEAP32[$322>>2]|0;
         $390 = (($389) + 1)|0;
         HEAP32[$322>>2] = $390;
         $391 = ($389|0)>(-1);
         if ($391) {
          $392 = $387;
          $393 = (($392) - ($386))|0;
          $394 = (($385) + 1)|0;
          $395 = (($394) - ($386))|0;
          $396 = ($393|0)>($395|0);
          if ($396) {
           $$23$ph = 11;
           break L150;
          }
          $397 = HEAP8[$387>>0]|0;
          $398 = $397&255;
          $399 = $398 << 8;
          $400 = ((($387)) + 1|0);
          $401 = HEAP8[$400>>0]|0;
          $402 = $401&255;
          $403 = $399 | $402;
          $404 = $403 << $390;
          $405 = $404 | $388;
          HEAP32[$319>>2] = $405;
          $406 = (($389) + -15)|0;
          HEAP32[$322>>2] = $406;
          $407 = ((($387)) + 2|0);
          HEAP32[$321>>2] = $407;
         }
         $408 = $384 ^ 1;
         HEAP32[$7>>2] = $408;
         $412 = $408;
        } else {
         $409 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
         $410 = ($409|0)==(0);
         if (!($410)) {
          $$23$ph = $409;
          break L150;
         }
         $$pre740 = HEAP32[$7>>2]|0;
         $412 = $$pre740;
        }
        $411 = (($8) + ($$4434686785<<2)|0);
        HEAP32[$411>>2] = $412;
        $413 = ($412|0)>(-1);
        $414 = ($412|0)<($31|0);
        $or$cond486 = $413 & $414;
        if ($or$cond486) {
         $415 = (((($0)) + 5468|0) + ($412<<2)|0);
         $416 = HEAP32[$415>>2]|0;
         $417 = ($416|0)==(0|0);
         if ($417) {
          label = 99;
         } else {
          $427 = $412;
         }
        } else {
         label = 99;
        }
        if ((label|0) == 99) {
         label = 0;
         HEAP8[$330>>0] = 1;
         $418 = HEAP32[$332>>2]|0;
         $419 = ($418|0)==(0);
         if ($419) {
          $$23$ph = 1041;
          break L150;
         }
         HEAP32[$411>>2] = 0;
         $420 = HEAP32[$335>>2]|0;
         $421 = $420 | 4;
         HEAP32[$335>>2] = $421;
         $427 = 0;
        }
        $422 = HEAP8[$338>>0]|0;
        $423 = ($422<<24>>24)==(0);
        if ($423) {
         $424 = HEAP8[$330>>0]|0;
         $425 = ($424<<24>>24)==(0);
         if ($425) {
          $426 = (((($0)) + 5468|0) + ($427<<2)|0);
          $428 = HEAP32[$426>>2]|0;
          $429 = ($428|0)==(0|0);
          if ($429) {
           $434 = 0;
          } else {
           $430 = ((($428)) + 72|0);
           $431 = HEAP8[$430>>0]|0;
           $432 = ($431<<24>>24)!=(0);
           $434 = $432;
          }
          $433 = $434 ^ 1;
          $436 = $433;
         } else {
          $436 = 1;
         }
        } else {
         $436 = 1;
        }
        $435 = $436&1;
        HEAP8[$330>>0] = $435;
        $437 = (($$4434686785) + 1)|0;
        $438 = ($437|0)<(2);
        if (!($438)) {
         break;
        }
        $$phi$trans$insert737 = (($5) + ($437<<2)|0);
        $$pre738 = HEAP32[$$phi$trans$insert737>>2]|0;
        $439 = ($$pre738|0)==(0);
        if ($439) {
         $$4434686785 = $437;
        } else {
         label = 108;
         break L152;
        }
       }
       $$pre742 = HEAP32[$8>>2]|0;
       $phitmp = $$pre742&255;
       $$pre$phi752Z2D = $8;$380 = $phitmp;
      } else {
       label = 108;
      }
     }
    } while(0);
    if ((label|0) == 108) {
     __Z7WelsLogP13TagLogContextiPKcz($0,2,25689,$vararg_buffer8);
     $$23$ph = 459814;
     break;
    }
    $377 = ((($6)) + 2|0);
    $378 = $21 << 16 >> 16;
    $379 = $23 << 16 >> 16;
    __ZN7WelsDec15PredInter8x16MvEPA30_A2_sPA30_aiaPs($1,$2,0,$380,$6);
    $381 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
    $382 = ($381|0)==(0);
    do {
     if ($382) {
      $440 = HEAP32[$4>>2]|0;
      $441 = $440 & 1;
      $442 = ($441|0)==(0);
      $443 = $440 >>> 1;
      $444 = (0 - ($443))|0;
      $445 = (($440) + 1)|0;
      $446 = $445 >>> 1;
      $storemerge$i536 = $442 ? $444 : $446;
      $447 = HEAP16[$6>>1]|0;
      $448 = $447&65535;
      $449 = (($448) + ($storemerge$i536))|0;
      $450 = $449&65535;
      HEAP16[$6>>1] = $450;
      $451 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
      $452 = ($451|0)==(0);
      if ($452) {
       $453 = HEAP32[$4>>2]|0;
       $454 = $453 & 1;
       $455 = ($454|0)==(0);
       $456 = $453 >>> 1;
       $457 = (0 - ($456))|0;
       $458 = (($453) + 1)|0;
       $459 = $458 >>> 1;
       $storemerge$i539 = $455 ? $457 : $459;
       $460 = HEAP16[$377>>1]|0;
       $461 = $460&65535;
       $462 = (($461) + ($storemerge$i539))|0;
       $463 = $462&65535;
       HEAP16[$377>>1] = $463;
       $sext469 = $462 << 16;
       $464 = $sext469 >> 16;
       $465 = ($464|0)<($378|0);
       $466 = ($464|0)>($379|0);
       $or$cond490 = $465 | $466;
       if ($or$cond490) {
        HEAP32[$vararg_buffer10>>2] = $464;
        __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer10);
       }
       $467 = HEAP32[$$pre$phi752Z2D>>2]|0;
       $468 = $467&255;
       __ZN7WelsDec21UpdateP8x16MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($13,$1,$2,0,$468,$6);
       $469 = ((($8)) + 4|0);
       $470 = HEAP32[$469>>2]|0;
       $471 = $470&255;
       __ZN7WelsDec15PredInter8x16MvEPA30_A2_sPA30_aiaPs($1,$2,4,$471,$6);
       $472 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
       $473 = ($472|0)==(0);
       if (!($473)) {
        $$lcssa714 = $472;
        break;
       }
       $810 = HEAP32[$4>>2]|0;
       $811 = $810 & 1;
       $812 = ($811|0)==(0);
       $813 = $810 >>> 1;
       $814 = (0 - ($813))|0;
       $815 = (($810) + 1)|0;
       $816 = $815 >>> 1;
       $storemerge$i536$1 = $812 ? $814 : $816;
       $817 = HEAP16[$6>>1]|0;
       $818 = $817&65535;
       $819 = (($818) + ($storemerge$i536$1))|0;
       $820 = $819&65535;
       HEAP16[$6>>1] = $820;
       $821 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
       $822 = ($821|0)==(0);
       if ($822) {
        $823 = HEAP32[$4>>2]|0;
        $824 = $823 & 1;
        $825 = ($824|0)==(0);
        $826 = $823 >>> 1;
        $827 = (0 - ($826))|0;
        $828 = (($823) + 1)|0;
        $829 = $828 >>> 1;
        $storemerge$i539$1 = $825 ? $827 : $829;
        $830 = HEAP16[$377>>1]|0;
        $831 = $830&65535;
        $832 = (($831) + ($storemerge$i539$1))|0;
        $833 = $832&65535;
        HEAP16[$377>>1] = $833;
        $sext469$1 = $832 << 16;
        $834 = $sext469$1 >> 16;
        $835 = ($834|0)<($378|0);
        $836 = ($834|0)>($379|0);
        $or$cond490$1 = $835 | $836;
        if ($or$cond490$1) {
         HEAP32[$vararg_buffer21>>2] = $834;
         __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer21);
        }
        __ZN7WelsDec21UpdateP8x16MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($13,$1,$2,4,$471,$6);
        $$39 = 0;
        STACKTOP = sp;return ($$39|0);
       } else {
        $$lcssa712 = $821;
       }
      } else {
       $$lcssa712 = $451;
      }
      $$23$ph = $$lcssa712;
      break L150;
     } else {
      $$lcssa714 = $381;
     }
    } while(0);
    $$23$ph = $$lcssa714;
   }
  } while(0);
  $$39 = $$23$ph;
  STACKTOP = sp;return ($$39|0);
  break;
 }
 case 128: case 64:  {
  ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;HEAP32[$8+12>>2]=0|0;
  $474 = ($35<<16>>16)==(128);
  $$491 = $474 ? 1 : $31;
  $475 = ((($13)) + 4008|0);
  $476 = ((($13)) + 3940|0);
  $477 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
  $478 = ($477|0)==(0);
  L221: do {
   if ($478) {
    $479 = HEAP32[$7>>2]|0;
    $480 = ($479>>>0)>(3);
    if ($480) {
     $$38$ph = 1038;
    } else {
     $481 = (9408 + ($479<<3)|0);
     $482 = HEAP32[$481>>2]|0;
     $483 = $482&255;
     $484 = HEAP32[$475>>2]|0;
     $485 = (($484) + ($15<<2)|0);
     HEAP8[$485>>0] = $483;
     $486 = (((9408 + ($479<<3)|0)) + 4|0);
     $487 = HEAP8[$486>>0]|0;
     $488 = $487 << 24 >> 24;
     HEAP32[$9>>2] = $488;
     $489 = (((9408 + ($479<<3)|0)) + 5|0);
     $490 = HEAP8[$489>>0]|0;
     $491 = $490 << 24 >> 24;
     HEAP32[$10>>2] = $491;
     $492 = ($479|0)==(0);
     $493 = $492&1;
     $494 = HEAP32[$476>>2]|0;
     $495 = (($494) + ($15)|0);
     $496 = HEAP8[$495>>0]|0;
     $497 = $496&255;
     $498 = $497 & $493;
     $499 = $498&255;
     HEAP8[$495>>0] = $499;
     $500 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
     $501 = ($500|0)==(0);
     if ($501) {
      $945 = HEAP32[$7>>2]|0;
      $946 = ($945>>>0)>(3);
      if ($946) {
       $$38$ph = 1038;
      } else {
       $947 = (9408 + ($945<<3)|0);
       $948 = HEAP32[$947>>2]|0;
       $949 = $948&255;
       $950 = HEAP32[$475>>2]|0;
       $951 = (((($950) + ($15<<2)|0)) + 1|0);
       HEAP8[$951>>0] = $949;
       $952 = (((9408 + ($945<<3)|0)) + 4|0);
       $953 = HEAP8[$952>>0]|0;
       $954 = $953 << 24 >> 24;
       $955 = ((($9)) + 4|0);
       HEAP32[$955>>2] = $954;
       $956 = (((9408 + ($945<<3)|0)) + 5|0);
       $957 = HEAP8[$956>>0]|0;
       $958 = $957 << 24 >> 24;
       $959 = ((($10)) + 4|0);
       HEAP32[$959>>2] = $958;
       $960 = ($945|0)==(0);
       $961 = $960&1;
       $962 = HEAP32[$476>>2]|0;
       $963 = (($962) + ($15)|0);
       $964 = HEAP8[$963>>0]|0;
       $965 = $964&255;
       $966 = $965 & $961;
       $967 = $966&255;
       HEAP8[$963>>0] = $967;
       $968 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
       $969 = ($968|0)==(0);
       if ($969) {
        $970 = HEAP32[$7>>2]|0;
        $971 = ($970>>>0)>(3);
        if ($971) {
         $$38$ph = 1038;
        } else {
         $972 = (9408 + ($970<<3)|0);
         $973 = HEAP32[$972>>2]|0;
         $974 = $973&255;
         $975 = HEAP32[$475>>2]|0;
         $976 = (((($975) + ($15<<2)|0)) + 2|0);
         HEAP8[$976>>0] = $974;
         $977 = (((9408 + ($970<<3)|0)) + 4|0);
         $978 = HEAP8[$977>>0]|0;
         $979 = $978 << 24 >> 24;
         $980 = ((($9)) + 8|0);
         HEAP32[$980>>2] = $979;
         $981 = (((9408 + ($970<<3)|0)) + 5|0);
         $982 = HEAP8[$981>>0]|0;
         $983 = $982 << 24 >> 24;
         $984 = ((($10)) + 8|0);
         HEAP32[$984>>2] = $983;
         $985 = ($970|0)==(0);
         $986 = $985&1;
         $987 = HEAP32[$476>>2]|0;
         $988 = (($987) + ($15)|0);
         $989 = HEAP8[$988>>0]|0;
         $990 = $989&255;
         $991 = $990 & $986;
         $992 = $991&255;
         HEAP8[$988>>0] = $992;
         $993 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
         $994 = ($993|0)==(0);
         if ($994) {
          $995 = HEAP32[$7>>2]|0;
          $996 = ($995>>>0)>(3);
          if ($996) {
           $$38$ph = 1038;
          } else {
           $997 = (9408 + ($995<<3)|0);
           $998 = HEAP32[$997>>2]|0;
           $999 = $998&255;
           $1000 = HEAP32[$475>>2]|0;
           $1001 = (((($1000) + ($15<<2)|0)) + 3|0);
           HEAP8[$1001>>0] = $999;
           $1002 = (((9408 + ($995<<3)|0)) + 4|0);
           $1003 = HEAP8[$1002>>0]|0;
           $1004 = $1003 << 24 >> 24;
           $1005 = ((($9)) + 12|0);
           HEAP32[$1005>>2] = $1004;
           $1006 = (((9408 + ($995<<3)|0)) + 5|0);
           $1007 = HEAP8[$1006>>0]|0;
           $1008 = $1007 << 24 >> 24;
           $1009 = ((($10)) + 12|0);
           HEAP32[$1009>>2] = $1008;
           $1010 = ($995|0)==(0);
           $1011 = $1010&1;
           $1012 = HEAP32[$476>>2]|0;
           $1013 = (($1012) + ($15)|0);
           $1014 = HEAP8[$1013>>0]|0;
           $1015 = $1014&255;
           $1016 = $1015 & $1011;
           $1017 = $1016&255;
           HEAP8[$1013>>0] = $1017;
           $1018 = ((($13)) + 3858|0);
           $1019 = HEAP8[$1018>>0]|0;
           $1020 = ($1019<<24>>24)==(0);
           if ($1020) {
            $550 = $26;
           } else {
            $502 = ((($3)) + 20|0);
            $503 = ((($3)) + 4|0);
            $504 = ((($3)) + 16|0);
            $505 = ((($3)) + 24|0);
            $506 = HEAP32[$502>>2]|0;
            $507 = $506 >>> 31;
            $508 = HEAP32[$503>>2]|0;
            $509 = HEAP32[$3>>2]|0;
            $510 = HEAP32[$504>>2]|0;
            $511 = $506 << 1;
            HEAP32[$502>>2] = $511;
            $512 = HEAP32[$505>>2]|0;
            $513 = (($512) + 1)|0;
            HEAP32[$505>>2] = $513;
            $514 = ($512|0)>(-1);
            if ($514) {
             $515 = $510;
             $516 = (($515) - ($509))|0;
             $517 = (($508) + 1)|0;
             $518 = (($517) - ($509))|0;
             $519 = ($516|0)>($518|0);
             if ($519) {
              $$38$ph = 11;
              break;
             }
             $520 = HEAP8[$510>>0]|0;
             $521 = $520&255;
             $522 = $521 << 8;
             $523 = ((($510)) + 1|0);
             $524 = HEAP8[$523>>0]|0;
             $525 = $524&255;
             $526 = $522 | $525;
             $527 = $526 << $513;
             $528 = $527 | $511;
             HEAP32[$502>>2] = $528;
             $529 = (($512) + -15)|0;
             HEAP32[$505>>2] = $529;
             $530 = ((($510)) + 2|0);
             HEAP32[$504>>2] = $530;
             $532 = $528;$535 = $529;$882 = $530;
            } else {
             $532 = $511;$535 = $513;$882 = $510;
            }
            HEAP32[$7>>2] = $507;
            HEAP32[$5>>2] = $507;
            $531 = $532 >>> 31;
            $533 = $532 << 1;
            HEAP32[$502>>2] = $533;
            $534 = (($535) + 1)|0;
            HEAP32[$505>>2] = $534;
            $536 = ($535|0)>(-1);
            if ($536) {
             $883 = $882;
             $884 = (($883) - ($509))|0;
             $885 = (($508) + 1)|0;
             $886 = (($885) - ($509))|0;
             $887 = ($884|0)>($886|0);
             if ($887) {
              $$38$ph = 11;
              break;
             }
             $888 = HEAP8[$882>>0]|0;
             $889 = $888&255;
             $890 = $889 << 8;
             $891 = ((($882)) + 1|0);
             $892 = HEAP8[$891>>0]|0;
             $893 = $892&255;
             $894 = $890 | $893;
             $895 = $894 << $534;
             $896 = $895 | $533;
             HEAP32[$502>>2] = $896;
             $897 = (($535) + -15)|0;
             HEAP32[$505>>2] = $897;
             $898 = ((($882)) + 2|0);
             HEAP32[$504>>2] = $898;
             $900 = $896;$903 = $897;$905 = $898;
            } else {
             $900 = $533;$903 = $534;$905 = $882;
            }
            HEAP32[$7>>2] = $531;
            HEAP32[$29>>2] = $531;
            $899 = $900 >>> 31;
            $901 = $900 << 1;
            HEAP32[$502>>2] = $901;
            $902 = (($903) + 1)|0;
            HEAP32[$505>>2] = $902;
            $904 = ($903|0)>(-1);
            if ($904) {
             $906 = $905;
             $907 = (($906) - ($509))|0;
             $908 = (($508) + 1)|0;
             $909 = (($908) - ($509))|0;
             $910 = ($907|0)>($909|0);
             if ($910) {
              $$38$ph = 11;
              break;
             }
             $911 = HEAP8[$905>>0]|0;
             $912 = $911&255;
             $913 = $912 << 8;
             $914 = ((($905)) + 1|0);
             $915 = HEAP8[$914>>0]|0;
             $916 = $915&255;
             $917 = $913 | $916;
             $918 = $917 << $902;
             $919 = $918 | $901;
             HEAP32[$502>>2] = $919;
             $920 = (($903) + -15)|0;
             HEAP32[$505>>2] = $920;
             $921 = ((($905)) + 2|0);
             HEAP32[$504>>2] = $921;
             $923 = $919;$926 = $920;$928 = $921;
            } else {
             $923 = $901;$926 = $902;$928 = $905;
            }
            HEAP32[$7>>2] = $899;
            HEAP32[$28>>2] = $899;
            $922 = $923 >>> 31;
            $924 = $923 << 1;
            HEAP32[$502>>2] = $924;
            $925 = (($926) + 1)|0;
            HEAP32[$505>>2] = $925;
            $927 = ($926|0)>(-1);
            if ($927) {
             $929 = $928;
             $930 = (($929) - ($509))|0;
             $931 = (($508) + 1)|0;
             $932 = (($931) - ($509))|0;
             $933 = ($930|0)>($932|0);
             if ($933) {
              $$38$ph = 11;
              break;
             }
             $934 = HEAP8[$928>>0]|0;
             $935 = $934&255;
             $936 = $935 << 8;
             $937 = ((($928)) + 1|0);
             $938 = HEAP8[$937>>0]|0;
             $939 = $938&255;
             $940 = $936 | $939;
             $941 = $940 << $925;
             $942 = $941 | $924;
             HEAP32[$502>>2] = $942;
             $943 = (($926) + -15)|0;
             HEAP32[$505>>2] = $943;
             $944 = ((($928)) + 2|0);
             HEAP32[$504>>2] = $944;
            }
            HEAP32[$7>>2] = $922;
            HEAP32[$27>>2] = $922;
            $550 = $507;
           }
           $537 = HEAP32[$32>>2]|0;
           $538 = (($537) + ($15<<1)|0);
           $539 = HEAP16[$538>>1]|0;
           $540 = ($539<<16>>16)==(128);
           L249: do {
            if ($540) {
             $552 = ((($13)) + 3932|0);
             $553 = HEAP32[$552>>2]|0;
             $554 = (($553) + ($15<<4)|0);
             dest=$554; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
            } else {
             $541 = ((($0)) + 512344|0);
             $542 = ((($0)) + 242340|0);
             $543 = ((($0)) + 116|0);
             $544 = ((($0)) + 512345|0);
             $545 = ((($13)) + 3932|0);
             $546 = ((($3)) + 20|0);
             $547 = ((($3)) + 4|0);
             $548 = ((($3)) + 16|0);
             $549 = ((($3)) + 24|0);
             $551 = ($550|0)==(0);
             L252: do {
              if ($551) {
               $$8438692787 = 0;$$in = 15567;
               while(1) {
                $559 = HEAP8[$$in>>0]|0;
                switch ($$491|0) {
                case 1:  {
                 $$sink$i528 = 0;
                 label = 134;
                 break;
                }
                case 2:  {
                 $560 = HEAP32[$546>>2]|0;
                 $561 = $560 >>> 31;
                 $562 = HEAP32[$547>>2]|0;
                 $563 = HEAP32[$3>>2]|0;
                 $564 = HEAP32[$548>>2]|0;
                 $565 = $560 << 1;
                 HEAP32[$546>>2] = $565;
                 $566 = HEAP32[$549>>2]|0;
                 $567 = (($566) + 1)|0;
                 HEAP32[$549>>2] = $567;
                 $568 = ($566|0)>(-1);
                 if ($568) {
                  $569 = $564;
                  $570 = (($569) - ($563))|0;
                  $571 = (($562) + 1)|0;
                  $572 = (($571) - ($563))|0;
                  $573 = ($570|0)>($572|0);
                  if ($573) {
                   $$38$ph = 11;
                   break L221;
                  }
                  $574 = HEAP8[$564>>0]|0;
                  $575 = $574&255;
                  $576 = $575 << 8;
                  $577 = ((($564)) + 1|0);
                  $578 = HEAP8[$577>>0]|0;
                  $579 = $578&255;
                  $580 = $576 | $579;
                  $581 = $580 << $567;
                  $582 = $581 | $565;
                  HEAP32[$546>>2] = $582;
                  $583 = (($566) + -15)|0;
                  HEAP32[$549>>2] = $583;
                  $584 = ((($564)) + 2|0);
                  HEAP32[$548>>2] = $584;
                 }
                 HEAP32[$7>>2] = $561;
                 $585 = $561 ^ 1;
                 $$sink$i528 = $585;
                 label = 134;
                 break;
                }
                default: {
                 $586 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$7)|0);
                 $587 = ($586|0)==(0);
                 if (!($587)) {
                  $$38$ph = $586;
                  break L221;
                 }
                 $$pre731 = HEAP32[$7>>2]|0;
                 $589 = $$pre731;
                }
                }
                if ((label|0) == 134) {
                 label = 0;
                 HEAP32[$7>>2] = $$sink$i528;
                 $589 = $$sink$i528;
                }
                $588 = (($8) + ($$8438692787<<2)|0);
                HEAP32[$588>>2] = $589;
                $590 = ($589|0)>(-1);
                $591 = ($589|0)<($$491|0);
                $or$cond495 = $590 & $591;
                if ($or$cond495) {
                 $592 = (((($0)) + 5468|0) + ($589<<2)|0);
                 $593 = HEAP32[$592>>2]|0;
                 $594 = ($593|0)==(0|0);
                 if ($594) {
                  label = 137;
                 } else {
                  $604 = $589;
                 }
                } else {
                 label = 137;
                }
                if ((label|0) == 137) {
                 label = 0;
                 HEAP8[$541>>0] = 1;
                 $595 = HEAP32[$542>>2]|0;
                 $596 = ($595|0)==(0);
                 if ($596) {
                  $$38$ph = 1041;
                  break L221;
                 }
                 HEAP32[$588>>2] = 0;
                 $597 = HEAP32[$543>>2]|0;
                 $598 = $597 | 4;
                 HEAP32[$543>>2] = $598;
                 $604 = 0;
                }
                $599 = HEAP8[$544>>0]|0;
                $600 = ($599<<24>>24)==(0);
                if ($600) {
                 $601 = HEAP8[$541>>0]|0;
                 $602 = ($601<<24>>24)==(0);
                 if ($602) {
                  $603 = (((($0)) + 5468|0) + ($604<<2)|0);
                  $605 = HEAP32[$603>>2]|0;
                  $606 = ($605|0)==(0|0);
                  if ($606) {
                   $611 = 0;
                  } else {
                   $607 = ((($605)) + 72|0);
                   $608 = HEAP8[$607>>0]|0;
                   $609 = ($608<<24>>24)!=(0);
                   $611 = $609;
                  }
                  $610 = $611 ^ 1;
                  $613 = $610;
                 } else {
                  $613 = 1;
                 }
                } else {
                 $613 = 1;
                }
                $612 = $613&1;
                HEAP8[$541>>0] = $612;
                $614 = $604&255;
                $615 = HEAP32[$545>>2]|0;
                $616 = $559&255;
                $617 = (($616) + 5)|0;
                $618 = ((($615) + ($15<<4)|0) + ($617)|0);
                HEAP8[$618>>0] = $614;
                $619 = HEAP32[$545>>2]|0;
                $620 = (($616) + 4)|0;
                $621 = ((($619) + ($15<<4)|0) + ($620)|0);
                HEAP8[$621>>0] = $614;
                $622 = HEAP32[$545>>2]|0;
                $623 = (($616) + 1)|0;
                $624 = ((($622) + ($15<<4)|0) + ($623)|0);
                HEAP8[$624>>0] = $614;
                $625 = HEAP32[$545>>2]|0;
                $626 = ((($625) + ($15<<4)|0) + ($616)|0);
                HEAP8[$626>>0] = $614;
                $627 = (($$8438692787) + 1)|0;
                $628 = ($627|0)<(4);
                if (!($628)) {
                 break L249;
                }
                $$phi$trans$insert = (($5) + ($627<<2)|0);
                $$pre = HEAP32[$$phi$trans$insert>>2]|0;
                $629 = $627 << 18;
                $630 = $629 >> 16;
                $631 = (15567 + ($630)|0);
                $632 = ($$pre|0)==(0);
                if ($632) {
                 $$8438692787 = $627;$$in = $631;
                } else {
                 break L252;
                }
               }
              }
             } while(0);
             __Z7WelsLogP13TagLogContextiPKcz($0,2,25689,$vararg_buffer13);
             $$38$ph = 459814;
             break L221;
            }
           } while(0);
           $555 = ((($11)) + 2|0);
           $556 = $21 << 16 >> 16;
           $557 = $23 << 16 >> 16;
           $558 = ((($13)) + 3916|0);
           $$9439691 = 0;$651 = $488;$654 = $491;
           L282: while(1) {
            $633 = HEAP32[$475>>2]|0;
            $634 = ((($633) + ($15<<2)|0) + ($$9439691)|0);
            $635 = HEAP8[$634>>0]|0;
            $636 = $$9439691 << 18;
            $637 = $636 >> 16;
            $638 = (11103 + ($637)|0);
            $639 = HEAP8[$638>>0]|0;
            $640 = (($8) + ($$9439691<<2)|0);
            $641 = HEAP32[$640>>2]|0;
            $642 = $641&255;
            $643 = $639&255;
            $644 = (($643) + 7)|0;
            $645 = (($2) + ($644)|0);
            HEAP8[$645>>0] = $642;
            $646 = (($643) + 6)|0;
            $647 = (($2) + ($646)|0);
            HEAP8[$647>>0] = $642;
            $648 = (($643) + 1)|0;
            $649 = (($2) + ($648)|0);
            HEAP8[$649>>0] = $642;
            $650 = (($2) + ($643)|0);
            HEAP8[$650>>0] = $642;
            $sext = $651 << 24;
            $652 = $sext >> 24;
            $653 = ($sext|0)>(0);
            L284: do {
             if ($653) {
              $sext465 = $654 << 16;
              $655 = $sext465 >> 16;
              $656 = ($635<<24>>24)==(4);
              $$0440690 = 0;
              while(1) {
               $657 = Math_imul($$0440690, $655)|0;
               $658 = (($657) + ($637))|0;
               $sext466 = $658 << 16;
               $659 = $sext466 >> 16;
               $660 = (15567 + ($659)|0);
               $661 = HEAP8[$660>>0]|0;
               $662 = (11103 + ($659)|0);
               $663 = HEAP8[$662>>0]|0;
               __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($1,$2,$659,$655,$642,$11);
               $664 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
               $665 = ($664|0)==(0);
               if (!($665)) {
                label = 150;
                break L282;
               }
               $666 = HEAP32[$4>>2]|0;
               $667 = $666 & 1;
               $668 = ($667|0)==(0);
               $669 = $666 >>> 1;
               $670 = (0 - ($669))|0;
               $671 = (($666) + 1)|0;
               $672 = $671 >>> 1;
               $storemerge$i513 = $668 ? $670 : $672;
               $673 = HEAP16[$11>>1]|0;
               $674 = $673&65535;
               $675 = (($674) + ($storemerge$i513))|0;
               $676 = $675&65535;
               HEAP16[$11>>1] = $676;
               $677 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($3,$4)|0);
               $678 = ($677|0)==(0);
               if (!($678)) {
                label = 152;
                break L282;
               }
               $679 = HEAP32[$4>>2]|0;
               $680 = $679 & 1;
               $681 = ($680|0)==(0);
               $682 = $679 >>> 1;
               $683 = (0 - ($682))|0;
               $684 = (($679) + 1)|0;
               $685 = $684 >>> 1;
               $storemerge$i = $681 ? $683 : $685;
               $686 = HEAP16[$555>>1]|0;
               $687 = $686&65535;
               $688 = (($687) + ($storemerge$i))|0;
               $689 = $688&65535;
               HEAP16[$555>>1] = $689;
               $sext467 = $688 << 16;
               $690 = $sext467 >> 16;
               $691 = ($690|0)<($556|0);
               $692 = ($690|0)>($557|0);
               $or$cond499 = $691 | $692;
               if ($or$cond499) {
                HEAP32[$vararg_buffer15>>2] = $690;
                __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer15);
               }
               $693 = $661&255;
               $694 = $663&255;
               L293: do {
                switch ($635<<24>>24) {
                case 1:  {
                 $695 = HEAP32[$11>>2]|0;
                 $696 = HEAP32[$558>>2]|0;
                 $697 = ((($696) + ($15<<6)|0) + ($693<<2)|0);
                 HEAP8[$697>>0]=$695&255;HEAP8[$697+1>>0]=($695>>8)&255;HEAP8[$697+2>>0]=($695>>16)&255;HEAP8[$697+3>>0]=$695>>24;
                 $698 = HEAP32[$11>>2]|0;
                 $699 = HEAP32[$558>>2]|0;
                 $700 = (($693) + 1)|0;
                 $701 = ((($699) + ($15<<6)|0) + ($700<<2)|0);
                 HEAP8[$701>>0]=$698&255;HEAP8[$701+1>>0]=($698>>8)&255;HEAP8[$701+2>>0]=($698>>16)&255;HEAP8[$701+3>>0]=$698>>24;
                 $702 = HEAP32[$11>>2]|0;
                 $703 = HEAP32[$558>>2]|0;
                 $704 = (($693) + 4)|0;
                 $705 = ((($703) + ($15<<6)|0) + ($704<<2)|0);
                 HEAP8[$705>>0]=$702&255;HEAP8[$705+1>>0]=($702>>8)&255;HEAP8[$705+2>>0]=($702>>16)&255;HEAP8[$705+3>>0]=$702>>24;
                 $706 = HEAP32[$11>>2]|0;
                 $707 = HEAP32[$558>>2]|0;
                 $708 = (($693) + 5)|0;
                 $709 = ((($707) + ($15<<6)|0) + ($708<<2)|0);
                 HEAP8[$709>>0]=$706&255;HEAP8[$709+1>>0]=($706>>8)&255;HEAP8[$709+2>>0]=($706>>16)&255;HEAP8[$709+3>>0]=$706>>24;
                 $710 = HEAP32[$11>>2]|0;
                 $711 = (($1) + ($694<<2)|0);
                 HEAP8[$711>>0]=$710&255;HEAP8[$711+1>>0]=($710>>8)&255;HEAP8[$711+2>>0]=($710>>16)&255;HEAP8[$711+3>>0]=$710>>24;
                 $712 = (($694) + 1)|0;
                 $713 = (($1) + ($712<<2)|0);
                 HEAP8[$713>>0]=$710&255;HEAP8[$713+1>>0]=($710>>8)&255;HEAP8[$713+2>>0]=($710>>16)&255;HEAP8[$713+3>>0]=$710>>24;
                 $714 = (($694) + 6)|0;
                 $$sink500 = 7;$$sink501 = $710;$$sink504 = $714;
                 label = 160;
                 break;
                }
                case 2:  {
                 $715 = HEAP32[$11>>2]|0;
                 $716 = HEAP32[$558>>2]|0;
                 $717 = ((($716) + ($15<<6)|0) + ($693<<2)|0);
                 HEAP8[$717>>0]=$715&255;HEAP8[$717+1>>0]=($715>>8)&255;HEAP8[$717+2>>0]=($715>>16)&255;HEAP8[$717+3>>0]=$715>>24;
                 $718 = HEAP32[$11>>2]|0;
                 $719 = HEAP32[$558>>2]|0;
                 $720 = (($693) + 1)|0;
                 $721 = ((($719) + ($15<<6)|0) + ($720<<2)|0);
                 HEAP8[$721>>0]=$718&255;HEAP8[$721+1>>0]=($718>>8)&255;HEAP8[$721+2>>0]=($718>>16)&255;HEAP8[$721+3>>0]=$718>>24;
                 $722 = HEAP32[$11>>2]|0;
                 $$sink500 = 1;$$sink501 = $722;$$sink504 = $694;
                 label = 160;
                 break;
                }
                default: {
                 $723 = HEAP32[$11>>2]|0;
                 $724 = HEAP32[$558>>2]|0;
                 $725 = ((($724) + ($15<<6)|0) + ($693<<2)|0);
                 HEAP8[$725>>0]=$723&255;HEAP8[$725+1>>0]=($723>>8)&255;HEAP8[$725+2>>0]=($723>>16)&255;HEAP8[$725+3>>0]=$723>>24;
                 $726 = HEAP32[$11>>2]|0;
                 if (!($656)) {
                  $$sink = $694;$$sink$sink$sink = $726;
                  break L293;
                 }
                 $727 = HEAP32[$558>>2]|0;
                 $728 = (($693) + 4)|0;
                 $729 = ((($727) + ($15<<6)|0) + ($728<<2)|0);
                 HEAP8[$729>>0]=$726&255;HEAP8[$729+1>>0]=($726>>8)&255;HEAP8[$729+2>>0]=($726>>16)&255;HEAP8[$729+3>>0]=$726>>24;
                 $730 = HEAP32[$11>>2]|0;
                 $$sink500 = 6;$$sink501 = $730;$$sink504 = $694;
                 label = 160;
                }
                }
               } while(0);
               if ((label|0) == 160) {
                label = 0;
                $731 = (($1) + ($$sink504<<2)|0);
                HEAP8[$731>>0]=$$sink501&255;HEAP8[$731+1>>0]=($$sink501>>8)&255;HEAP8[$731+2>>0]=($$sink501>>16)&255;HEAP8[$731+3>>0]=$$sink501>>24;
                $732 = (($$sink500) + ($694))|0;
                $$sink = $732;$$sink$sink$sink = $$sink501;
               }
               $733 = (($1) + ($$sink<<2)|0);
               HEAP8[$733>>0]=$$sink$sink$sink&255;HEAP8[$733+1>>0]=($$sink$sink$sink>>8)&255;HEAP8[$733+2>>0]=($$sink$sink$sink>>16)&255;HEAP8[$733+3>>0]=$$sink$sink$sink>>24;
               $734 = (($$0440690) + 1)|0;
               $735 = ($734|0)<($652|0);
               if ($735) {
                $$0440690 = $734;
               } else {
                break L284;
               }
              }
             }
            } while(0);
            $736 = (($$9439691) + 1)|0;
            $737 = ($736|0)<(4);
            if (!($737)) {
             label = 166;
             break;
            }
            $$phi$trans$insert732 = (($9) + ($736<<2)|0);
            $$pre733 = HEAP32[$$phi$trans$insert732>>2]|0;
            $$phi$trans$insert734 = (($10) + ($736<<2)|0);
            $$pre735 = HEAP32[$$phi$trans$insert734>>2]|0;
            $$9439691 = $736;$651 = $$pre733;$654 = $$pre735;
           }
           if ((label|0) == 150) {
            $$37 = $664;
           }
           else if ((label|0) == 152) {
            $$37 = $677;
           }
           else if ((label|0) == 166) {
            $$39 = 0;
            STACKTOP = sp;return ($$39|0);
           }
           $$38$ph = $$37;
          }
         } else {
          $$38$ph = $993;
         }
        }
       } else {
        $$38$ph = $968;
       }
      }
     } else {
      $$38$ph = $500;
     }
    }
   } else {
    $$38$ph = $477;
   }
  } while(0);
  $$39 = $$38$ph;
  STACKTOP = sp;return ($$39|0);
  break;
 }
 default: {
  $$39 = 0;
  STACKTOP = sp;return ($$39|0);
 }
 }
 return (0)|0;
}
function __ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_983($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$ph = 0, $$0$i7678 = 0, $$074 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >>> 24;
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   $9 = $3 >>> 16;
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (15782 + ($9)|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = (($13) + 8)|0;
    $$0$i$ph = $14;
    break;
   }
   $15 = $3 >>> 8;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = (15782 + ($15)|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = (($19) + 16)|0;
    $$0$i$ph = $20;
    break;
   }
   $21 = ($3|0)==(0);
   if ($21) {
    $$0 = 12;
    return ($$0|0);
   } else {
    $22 = (15782 + ($3)|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = (($24) + 24)|0;
    $$0$i$ph = $25;
    break;
   }
  } else {
   $6 = (15782 + ($4)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = $7&255;
   $$0$i$ph = $8;
  }
 } while(0);
 $26 = ((($0)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = HEAP32[$0>>2]|0;
 $29 = (($27) - ($28))|0;
 $30 = ($$0$i$ph|0)>(16);
 $31 = ((($0)) + 16|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32;
 $34 = (($33) - ($28))|0;
 do {
  if ($30) {
   $35 = $3 << 16;
   HEAP32[$2>>2] = $35;
   $36 = ((($0)) + 24|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37) + 16)|0;
   HEAP32[$36>>2] = $38;
   $39 = ($37|0)>(-16);
   do {
    if ($39) {
     $40 = (($29) + 1)|0;
     $41 = ($34|0)>($40|0);
     if ($41) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $42 = HEAP8[$32>>0]|0;
      $43 = $42&255;
      $44 = $43 << 8;
      $45 = ((($32)) + 1|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = $46&255;
      $48 = $44 | $47;
      $49 = $48 << $38;
      $50 = $49 | $35;
      HEAP32[$2>>2] = $50;
      HEAP32[$36>>2] = $37;
      $51 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $51;
      $54 = $50;$56 = $37;$58 = $51;
      break;
     }
    } else {
     $54 = $35;$56 = $38;$58 = $32;
    }
   } while(0);
   $52 = (($$0$i$ph) + -15)|0;
   $53 = $54 << $52;
   HEAP32[$2>>2] = $53;
   $55 = (($56) + ($52))|0;
   HEAP32[$36>>2] = $55;
   $57 = ($55|0)>(0);
   if ($57) {
    $59 = $58;
    $60 = (($59) - ($28))|0;
    $61 = (($29) + 1)|0;
    $62 = ($60|0)>($61|0);
    if ($62) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $63 = HEAP8[$58>>0]|0;
     $64 = $63&255;
     $65 = $64 << 8;
     $66 = ((($58)) + 1|0);
     $67 = HEAP8[$66>>0]|0;
     $68 = $67&255;
     $69 = $65 | $68;
     $70 = $69 << $55;
     $71 = $70 | $53;
     HEAP32[$2>>2] = $71;
     $72 = (($55) + -16)|0;
     HEAP32[$36>>2] = $72;
     $73 = ((($58)) + 2|0);
     HEAP32[$31>>2] = $73;
     $$pre$phiZ2D = $36;$101 = $73;$96 = $71;$99 = $72;
     label = 20;
     break;
    }
   } else {
    $$pre$phiZ2D = $36;$101 = $58;$96 = $53;$99 = $55;
    label = 20;
   }
  } else {
   $74 = (($$0$i$ph) + 1)|0;
   $75 = $3 << $74;
   HEAP32[$2>>2] = $75;
   $76 = ((($0)) + 24|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = (($77) + ($74))|0;
   HEAP32[$76>>2] = $78;
   $79 = ($78|0)>(0);
   do {
    if ($79) {
     $80 = (($29) + 1)|0;
     $81 = ($34|0)>($80|0);
     if ($81) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $82 = HEAP8[$32>>0]|0;
      $83 = $82&255;
      $84 = $83 << 8;
      $85 = ((($32)) + 1|0);
      $86 = HEAP8[$85>>0]|0;
      $87 = $86&255;
      $88 = $84 | $87;
      $89 = $88 << $78;
      $90 = $89 | $75;
      HEAP32[$2>>2] = $90;
      $91 = (($78) + -16)|0;
      HEAP32[$76>>2] = $91;
      $92 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $92;
      $120 = $91;$121 = $92;$122 = $90;
      break;
     }
    } else {
     $120 = $78;$121 = $32;$122 = $75;
    }
   } while(0);
   $93 = ($$0$i$ph|0)==(0);
   if ($93) {
    $$0$i7678 = 0;$$074 = 0;
   } else {
    $$pre$phiZ2D = $76;$101 = $121;$96 = $122;$99 = $120;
    label = 20;
   }
  }
 } while(0);
 do {
  if ((label|0) == 20) {
   $94 = (32 - ($$0$i$ph))|0;
   $95 = $96 >>> $94;
   $97 = $96 << $$0$i$ph;
   HEAP32[$2>>2] = $97;
   $98 = (($99) + ($$0$i$ph))|0;
   HEAP32[$$pre$phiZ2D>>2] = $98;
   $100 = ($98|0)>(0);
   if ($100) {
    $102 = $101;
    $103 = (($102) - ($28))|0;
    $104 = (($29) + 1)|0;
    $105 = ($103|0)>($104|0);
    if ($105) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $106 = HEAP8[$101>>0]|0;
     $107 = $106&255;
     $108 = $107 << 8;
     $109 = ((($101)) + 1|0);
     $110 = HEAP8[$109>>0]|0;
     $111 = $110&255;
     $112 = $108 | $111;
     $113 = $112 << $98;
     $114 = $113 | $97;
     HEAP32[$2>>2] = $114;
     $115 = (($98) + -16)|0;
     HEAP32[$$pre$phiZ2D>>2] = $115;
     $116 = ((($101)) + 2|0);
     HEAP32[$31>>2] = $116;
     $$0$i7678 = $$0$i$ph;$$074 = $95;
     break;
    }
   } else {
    $$0$i7678 = $$0$i$ph;$$074 = $95;
   }
  }
 } while(0);
 $117 = 1 << $$0$i7678;
 $118 = (($117) + -1)|0;
 $119 = (($118) + ($$074))|0;
 HEAP32[$1>>2] = $119;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$$20$i = 0, $$$20$i80 = 0, $$$i = 0, $$$i78 = 0, $$$sink = 0, $$0 = 0, $$1$i = 0, $$1$i82 = 0, $$119$i = 0, $$119$i81 = 0, $$20$i = 0, $$20$i79 = 0, $$neg$i = 0, $$neg$i83 = 0, $$pn = 0, $$sink = 0, $$sroa$0$0$insert$ext = 0, $$sroa$0$0$insert$insert = 0, $$sroa$6$0$in = 0, $$sroa$6$0$in$in = 0;
 var $$sroa$6$0$in$in$in$in = 0, $$sroa$6$0$insert$shift = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond77 = 0, $sext = 0, $sext72 = 0, $sext73 = 0, $sext76 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (11103 + ($2)|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = (($8) + 255)|0;
 $10 = (($8) + 250)|0;
 $11 = $10 & 255;
 $12 = (($10) + ($3))|0;
 $13 = (($8) + 249)|0;
 $14 = $9 & 255;
 $15 = (($1) + ($14)|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = (($1) + ($11)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $12 & 255;
 $20 = (($1) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $13 & 255;
 $23 = (($0) + ($14<<2)|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = (($0) + ($11<<2)|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = ($21<<24>>24)==(-2);
 if ($27) {
  $28 = (($1) + ($22)|0);
  $29 = HEAP8[$28>>0]|0;
  $$0 = $29;$$pn = $22;
 } else {
  $$0 = $21;$$pn = $19;
 }
 $$sroa$6$0$in$in$in$in = (($0) + ($$pn<<2)|0);
 $$sroa$6$0$in$in = HEAPU8[$$sroa$6$0$in$in$in$in>>0]|(HEAPU8[$$sroa$6$0$in$in$in$in+1>>0]<<8)|(HEAPU8[$$sroa$6$0$in$in$in$in+2>>0]<<16)|(HEAPU8[$$sroa$6$0$in$in$in$in+3>>0]<<24);
 $$sroa$6$0$in = $$sroa$6$0$in$in >>> 16;
 $30 = ($16<<24>>24)==($4<<24>>24);
 $31 = ($18<<24>>24)==($4<<24>>24);
 $32 = ($18<<24>>24)==(-2);
 $33 = ($$0<<24>>24)==(-2);
 $or$cond = $32 & $33;
 $34 = ($16<<24>>24)>(-2);
 $or$cond77 = $34 & $or$cond;
 if ($or$cond77) {
  HEAP8[$5>>0]=$24&255;HEAP8[$5+1>>0]=($24>>8)&255;HEAP8[$5+2>>0]=($24>>16)&255;HEAP8[$5+3>>0]=$24>>24;
  return;
 }
 $35 = $30&1;
 $36 = $31&1;
 $37 = (($36) + ($35))|0;
 $38 = ($$0<<24>>24)==($4<<24>>24);
 $39 = $38&1;
 $40 = (($37) + ($39))|0;
 $41 = ($40|0)==(1);
 if ($41) {
  $$sroa$6$0$insert$shift = $$sroa$6$0$in << 16;
  $$sroa$0$0$insert$ext = $$sroa$6$0$in$in & 65535;
  $$sroa$0$0$insert$insert = $$sroa$6$0$insert$shift | $$sroa$0$0$insert$ext;
  $$sink = $31 ? $26 : $$sroa$0$0$insert$insert;
  $$$sink = $30 ? $24 : $$sink;
  HEAP8[$5>>0]=$$$sink&255;HEAP8[$5+1>>0]=($$$sink>>8)&255;HEAP8[$5+2>>0]=($$$sink>>16)&255;HEAP8[$5+3>>0]=$$$sink>>24;
  return;
 } else {
  $sext = $24 << 16;
  $42 = $sext >> 16;
  $sext72 = $26 << 16;
  $43 = $sext72 >> 16;
  $sext73 = $$sroa$6$0$in$in << 16;
  $44 = $sext73 >> 16;
  $45 = ($43|0)<($42|0);
  $$$i = $45 ? $43 : $42;
  $$20$i = $45 ? $42 : $43;
  $46 = ($$$i|0)>($44|0);
  $47 = ($$20$i|0)<($44|0);
  $$$20$i = $47 ? $44 : $$20$i;
  $$119$i = $46 ? $44 : $$$i;
  $$1$i = $46 ? $$20$i : $$$20$i;
  $$neg$i = (($43) + ($42))|0;
  $48 = (($$neg$i) + ($44))|0;
  $49 = (($48) - ($$119$i))|0;
  $50 = (($49) - ($$1$i))|0;
  $51 = $50&65535;
  HEAP16[$5>>1] = $51;
  $52 = $24 >> 16;
  $53 = $26 >> 16;
  $sext76 = $$sroa$6$0$in << 16;
  $54 = $sext76 >> 16;
  $55 = ($53|0)<($52|0);
  $$$i78 = $55 ? $53 : $52;
  $$20$i79 = $55 ? $52 : $53;
  $56 = ($$$i78|0)>($54|0);
  $57 = ($$20$i79|0)<($54|0);
  $$$20$i80 = $57 ? $54 : $$20$i79;
  $$119$i81 = $56 ? $54 : $$$i78;
  $$1$i82 = $56 ? $$20$i79 : $$$20$i80;
  $$neg$i83 = (($53) + ($52))|0;
  $58 = (($$neg$i83) + ($54))|0;
  $59 = (($58) - ($$119$i81))|0;
  $60 = (($59) - ($$1$i82))|0;
  $61 = $60&65535;
  $62 = ((($5)) + 2|0);
  HEAP16[$62>>1] = $61;
  return;
 }
}
function __ZN7WelsDec22UpdateP16x16MotionInfoEPNS_10TagDqLayerEaPs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 << 24 >> 24;
 $4 = $3 << 8;
 $5 = $4 | $3;
 $6 = $5&65535;
 $7 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $8 = ((($0)) + 4040|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 3932|0);
 $11 = ((($0)) + 3916|0);
 $12 = HEAP8[15567]|0;
 $13 = $12&255;
 $14 = (($13) + 4)|0;
 $15 = HEAP32[$10>>2]|0;
 $16 = ((($15) + ($9<<4)|0) + ($13)|0);
 HEAP8[$16>>0]=$6&255;HEAP8[$16+1>>0]=$6>>8;
 $17 = HEAP32[$10>>2]|0;
 $18 = $14 & 255;
 $19 = ((($17) + ($9<<4)|0) + ($18)|0);
 HEAP8[$19>>0]=$6&255;HEAP8[$19+1>>0]=$6>>8;
 $20 = HEAP32[$11>>2]|0;
 $21 = ((($20) + ($9<<6)|0) + ($13<<2)|0);
 HEAP8[$21>>0]=$7&255;HEAP8[$21+1>>0]=($7>>8)&255;HEAP8[$21+2>>0]=($7>>16)&255;HEAP8[$21+3>>0]=$7>>24;
 $22 = HEAP32[$11>>2]|0;
 $23 = (($13) + 1)|0;
 $24 = ((($22) + ($9<<6)|0) + ($23<<2)|0);
 HEAP8[$24>>0]=$7&255;HEAP8[$24+1>>0]=($7>>8)&255;HEAP8[$24+2>>0]=($7>>16)&255;HEAP8[$24+3>>0]=$7>>24;
 $25 = HEAP32[$11>>2]|0;
 $26 = ((($25) + ($9<<6)|0) + ($18<<2)|0);
 HEAP8[$26>>0]=$7&255;HEAP8[$26+1>>0]=($7>>8)&255;HEAP8[$26+2>>0]=($7>>16)&255;HEAP8[$26+3>>0]=$7>>24;
 $27 = HEAP32[$11>>2]|0;
 $28 = (($18) + 1)|0;
 $29 = ((($27) + ($9<<6)|0) + ($28<<2)|0);
 HEAP8[$29>>0]=$7&255;HEAP8[$29+1>>0]=($7>>8)&255;HEAP8[$29+2>>0]=($7>>16)&255;HEAP8[$29+3>>0]=$7>>24;
 $30 = HEAP8[(15571)>>0]|0;
 $31 = $30&255;
 $32 = (($31) + 4)|0;
 $33 = HEAP32[$10>>2]|0;
 $34 = ((($33) + ($9<<4)|0) + ($31)|0);
 HEAP8[$34>>0]=$6&255;HEAP8[$34+1>>0]=$6>>8;
 $35 = HEAP32[$10>>2]|0;
 $36 = $32 & 255;
 $37 = ((($35) + ($9<<4)|0) + ($36)|0);
 HEAP8[$37>>0]=$6&255;HEAP8[$37+1>>0]=$6>>8;
 $38 = HEAP32[$11>>2]|0;
 $39 = ((($38) + ($9<<6)|0) + ($31<<2)|0);
 HEAP8[$39>>0]=$7&255;HEAP8[$39+1>>0]=($7>>8)&255;HEAP8[$39+2>>0]=($7>>16)&255;HEAP8[$39+3>>0]=$7>>24;
 $40 = HEAP32[$11>>2]|0;
 $41 = (($31) + 1)|0;
 $42 = ((($40) + ($9<<6)|0) + ($41<<2)|0);
 HEAP8[$42>>0]=$7&255;HEAP8[$42+1>>0]=($7>>8)&255;HEAP8[$42+2>>0]=($7>>16)&255;HEAP8[$42+3>>0]=$7>>24;
 $43 = HEAP32[$11>>2]|0;
 $44 = ((($43) + ($9<<6)|0) + ($36<<2)|0);
 HEAP8[$44>>0]=$7&255;HEAP8[$44+1>>0]=($7>>8)&255;HEAP8[$44+2>>0]=($7>>16)&255;HEAP8[$44+3>>0]=$7>>24;
 $45 = HEAP32[$11>>2]|0;
 $46 = (($36) + 1)|0;
 $47 = ((($45) + ($9<<6)|0) + ($46<<2)|0);
 HEAP8[$47>>0]=$7&255;HEAP8[$47+1>>0]=($7>>8)&255;HEAP8[$47+2>>0]=($7>>16)&255;HEAP8[$47+3>>0]=$7>>24;
 $48 = HEAP8[(15575)>>0]|0;
 $49 = $48&255;
 $50 = (($49) + 4)|0;
 $51 = HEAP32[$10>>2]|0;
 $52 = ((($51) + ($9<<4)|0) + ($49)|0);
 HEAP8[$52>>0]=$6&255;HEAP8[$52+1>>0]=$6>>8;
 $53 = HEAP32[$10>>2]|0;
 $54 = $50 & 255;
 $55 = ((($53) + ($9<<4)|0) + ($54)|0);
 HEAP8[$55>>0]=$6&255;HEAP8[$55+1>>0]=$6>>8;
 $56 = HEAP32[$11>>2]|0;
 $57 = ((($56) + ($9<<6)|0) + ($49<<2)|0);
 HEAP8[$57>>0]=$7&255;HEAP8[$57+1>>0]=($7>>8)&255;HEAP8[$57+2>>0]=($7>>16)&255;HEAP8[$57+3>>0]=$7>>24;
 $58 = HEAP32[$11>>2]|0;
 $59 = (($49) + 1)|0;
 $60 = ((($58) + ($9<<6)|0) + ($59<<2)|0);
 HEAP8[$60>>0]=$7&255;HEAP8[$60+1>>0]=($7>>8)&255;HEAP8[$60+2>>0]=($7>>16)&255;HEAP8[$60+3>>0]=$7>>24;
 $61 = HEAP32[$11>>2]|0;
 $62 = ((($61) + ($9<<6)|0) + ($54<<2)|0);
 HEAP8[$62>>0]=$7&255;HEAP8[$62+1>>0]=($7>>8)&255;HEAP8[$62+2>>0]=($7>>16)&255;HEAP8[$62+3>>0]=$7>>24;
 $63 = HEAP32[$11>>2]|0;
 $64 = (($54) + 1)|0;
 $65 = ((($63) + ($9<<6)|0) + ($64<<2)|0);
 HEAP8[$65>>0]=$7&255;HEAP8[$65+1>>0]=($7>>8)&255;HEAP8[$65+2>>0]=($7>>16)&255;HEAP8[$65+3>>0]=$7>>24;
 $66 = HEAP8[(15579)>>0]|0;
 $67 = $66&255;
 $68 = (($67) + 4)|0;
 $69 = HEAP32[$10>>2]|0;
 $70 = ((($69) + ($9<<4)|0) + ($67)|0);
 HEAP8[$70>>0]=$6&255;HEAP8[$70+1>>0]=$6>>8;
 $71 = HEAP32[$10>>2]|0;
 $72 = $68 & 255;
 $73 = ((($71) + ($9<<4)|0) + ($72)|0);
 HEAP8[$73>>0]=$6&255;HEAP8[$73+1>>0]=$6>>8;
 $74 = HEAP32[$11>>2]|0;
 $75 = ((($74) + ($9<<6)|0) + ($67<<2)|0);
 HEAP8[$75>>0]=$7&255;HEAP8[$75+1>>0]=($7>>8)&255;HEAP8[$75+2>>0]=($7>>16)&255;HEAP8[$75+3>>0]=$7>>24;
 $76 = HEAP32[$11>>2]|0;
 $77 = (($67) + 1)|0;
 $78 = ((($76) + ($9<<6)|0) + ($77<<2)|0);
 HEAP8[$78>>0]=$7&255;HEAP8[$78+1>>0]=($7>>8)&255;HEAP8[$78+2>>0]=($7>>16)&255;HEAP8[$78+3>>0]=$7>>24;
 $79 = HEAP32[$11>>2]|0;
 $80 = ((($79) + ($9<<6)|0) + ($72<<2)|0);
 HEAP8[$80>>0]=$7&255;HEAP8[$80+1>>0]=($7>>8)&255;HEAP8[$80+2>>0]=($7>>16)&255;HEAP8[$80+3>>0]=$7>>24;
 $81 = HEAP32[$11>>2]|0;
 $82 = (($72) + 1)|0;
 $83 = ((($81) + ($9<<6)|0) + ($82<<2)|0);
 HEAP8[$83>>0]=$7&255;HEAP8[$83+1>>0]=($7>>8)&255;HEAP8[$83+2>>0]=($7>>16)&255;HEAP8[$83+3>>0]=$7>>24;
 return;
}
function __ZN7WelsDec15PredInter16x8MvEPA30_A2_sPA30_aiaPs($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($2|0)==(0);
 if ($5) {
  $6 = ((($1)) + 1|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = ($7<<24>>24)==($3<<24>>24);
  if ($8) {
   $9 = ((($0)) + 4|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   HEAP8[$4>>0]=$10&255;HEAP8[$4+1>>0]=($10>>8)&255;HEAP8[$4+2>>0]=($10>>16)&255;HEAP8[$4+3>>0]=$10>>24;
   return;
  }
 } else {
  $11 = ((($1)) + 18|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==($3<<24>>24);
  if ($13) {
   $14 = ((($0)) + 72|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   HEAP8[$4>>0]=$15&255;HEAP8[$4+1>>0]=($15>>8)&255;HEAP8[$4+2>>0]=($15>>16)&255;HEAP8[$4+3>>0]=$15>>24;
   return;
  }
 }
 __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($0,$1,$2,4,$3,$4);
 return;
}
function __ZN7WelsDec21UpdateP16x8MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $4 << 24 >> 24;
 $7 = $6 << 8;
 $8 = $7 | $6;
 $9 = $8&65535;
 $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $11 = ((($0)) + 4040|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 3932|0);
 $14 = ((($0)) + 3916|0);
 $15 = (15567 + ($3)|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = (($17) + 4)|0;
 $19 = (11103 + ($3)|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $20&255;
 $22 = (($21) + 6)|0;
 $23 = HEAP32[$13>>2]|0;
 $24 = ((($23) + ($12<<4)|0) + ($17)|0);
 HEAP8[$24>>0]=$9&255;HEAP8[$24+1>>0]=$9>>8;
 $25 = HEAP32[$13>>2]|0;
 $26 = $18 & 255;
 $27 = ((($25) + ($12<<4)|0) + ($26)|0);
 HEAP8[$27>>0]=$9&255;HEAP8[$27+1>>0]=$9>>8;
 $28 = HEAP32[$14>>2]|0;
 $29 = ((($28) + ($12<<6)|0) + ($17<<2)|0);
 HEAP8[$29>>0]=$10&255;HEAP8[$29+1>>0]=($10>>8)&255;HEAP8[$29+2>>0]=($10>>16)&255;HEAP8[$29+3>>0]=$10>>24;
 $30 = HEAP32[$14>>2]|0;
 $31 = (($17) + 1)|0;
 $32 = ((($30) + ($12<<6)|0) + ($31<<2)|0);
 HEAP8[$32>>0]=$10&255;HEAP8[$32+1>>0]=($10>>8)&255;HEAP8[$32+2>>0]=($10>>16)&255;HEAP8[$32+3>>0]=$10>>24;
 $33 = HEAP32[$14>>2]|0;
 $34 = ((($33) + ($12<<6)|0) + ($26<<2)|0);
 HEAP8[$34>>0]=$10&255;HEAP8[$34+1>>0]=($10>>8)&255;HEAP8[$34+2>>0]=($10>>16)&255;HEAP8[$34+3>>0]=$10>>24;
 $35 = HEAP32[$14>>2]|0;
 $36 = (($26) + 1)|0;
 $37 = ((($35) + ($12<<6)|0) + ($36<<2)|0);
 HEAP8[$37>>0]=$10&255;HEAP8[$37+1>>0]=($10>>8)&255;HEAP8[$37+2>>0]=($10>>16)&255;HEAP8[$37+3>>0]=$10>>24;
 $38 = (($2) + ($21)|0);
 HEAP8[$38>>0]=$9&255;HEAP8[$38+1>>0]=$9>>8;
 $39 = $22 & 255;
 $40 = (($2) + ($39)|0);
 HEAP8[$40>>0]=$9&255;HEAP8[$40+1>>0]=$9>>8;
 $41 = (($1) + ($21<<2)|0);
 HEAP8[$41>>0]=$10&255;HEAP8[$41+1>>0]=($10>>8)&255;HEAP8[$41+2>>0]=($10>>16)&255;HEAP8[$41+3>>0]=$10>>24;
 $42 = (($21) + 1)|0;
 $43 = (($1) + ($42<<2)|0);
 HEAP8[$43>>0]=$10&255;HEAP8[$43+1>>0]=($10>>8)&255;HEAP8[$43+2>>0]=($10>>16)&255;HEAP8[$43+3>>0]=$10>>24;
 $44 = (($1) + ($39<<2)|0);
 HEAP8[$44>>0]=$10&255;HEAP8[$44+1>>0]=($10>>8)&255;HEAP8[$44+2>>0]=($10>>16)&255;HEAP8[$44+3>>0]=$10>>24;
 $45 = (($39) + 1)|0;
 $46 = (($1) + ($45<<2)|0);
 HEAP8[$46>>0]=$10&255;HEAP8[$46+1>>0]=($10>>8)&255;HEAP8[$46+2>>0]=($10>>16)&255;HEAP8[$46+3>>0]=$10>>24;
 $47 = (($3) + 4)|0;
 $48 = (15567 + ($47)|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = $49&255;
 $51 = (($50) + 4)|0;
 $52 = (11103 + ($47)|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = (($54) + 6)|0;
 $56 = HEAP32[$13>>2]|0;
 $57 = ((($56) + ($12<<4)|0) + ($50)|0);
 HEAP8[$57>>0]=$9&255;HEAP8[$57+1>>0]=$9>>8;
 $58 = HEAP32[$13>>2]|0;
 $59 = $51 & 255;
 $60 = ((($58) + ($12<<4)|0) + ($59)|0);
 HEAP8[$60>>0]=$9&255;HEAP8[$60+1>>0]=$9>>8;
 $61 = HEAP32[$14>>2]|0;
 $62 = ((($61) + ($12<<6)|0) + ($50<<2)|0);
 HEAP8[$62>>0]=$10&255;HEAP8[$62+1>>0]=($10>>8)&255;HEAP8[$62+2>>0]=($10>>16)&255;HEAP8[$62+3>>0]=$10>>24;
 $63 = HEAP32[$14>>2]|0;
 $64 = (($50) + 1)|0;
 $65 = ((($63) + ($12<<6)|0) + ($64<<2)|0);
 HEAP8[$65>>0]=$10&255;HEAP8[$65+1>>0]=($10>>8)&255;HEAP8[$65+2>>0]=($10>>16)&255;HEAP8[$65+3>>0]=$10>>24;
 $66 = HEAP32[$14>>2]|0;
 $67 = ((($66) + ($12<<6)|0) + ($59<<2)|0);
 HEAP8[$67>>0]=$10&255;HEAP8[$67+1>>0]=($10>>8)&255;HEAP8[$67+2>>0]=($10>>16)&255;HEAP8[$67+3>>0]=$10>>24;
 $68 = HEAP32[$14>>2]|0;
 $69 = (($59) + 1)|0;
 $70 = ((($68) + ($12<<6)|0) + ($69<<2)|0);
 HEAP8[$70>>0]=$10&255;HEAP8[$70+1>>0]=($10>>8)&255;HEAP8[$70+2>>0]=($10>>16)&255;HEAP8[$70+3>>0]=$10>>24;
 $71 = (($2) + ($54)|0);
 HEAP8[$71>>0]=$9&255;HEAP8[$71+1>>0]=$9>>8;
 $72 = $55 & 255;
 $73 = (($2) + ($72)|0);
 HEAP8[$73>>0]=$9&255;HEAP8[$73+1>>0]=$9>>8;
 $74 = (($1) + ($54<<2)|0);
 HEAP8[$74>>0]=$10&255;HEAP8[$74+1>>0]=($10>>8)&255;HEAP8[$74+2>>0]=($10>>16)&255;HEAP8[$74+3>>0]=$10>>24;
 $75 = (($54) + 1)|0;
 $76 = (($1) + ($75<<2)|0);
 HEAP8[$76>>0]=$10&255;HEAP8[$76+1>>0]=($10>>8)&255;HEAP8[$76+2>>0]=($10>>16)&255;HEAP8[$76+3>>0]=$10>>24;
 $77 = (($1) + ($72<<2)|0);
 HEAP8[$77>>0]=$10&255;HEAP8[$77+1>>0]=($10>>8)&255;HEAP8[$77+2>>0]=($10>>16)&255;HEAP8[$77+3>>0]=$10>>24;
 $78 = (($72) + 1)|0;
 $79 = (($1) + ($78<<2)|0);
 HEAP8[$79>>0]=$10&255;HEAP8[$79+1>>0]=($10>>8)&255;HEAP8[$79+2>>0]=($10>>16)&255;HEAP8[$79+3>>0]=$10>>24;
 return;
}
function __ZN7WelsDec15PredInter8x16MvEPA30_A2_sPA30_aiaPs($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$021 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($2|0)==(0);
 if ($5) {
  $6 = ((($1)) + 6|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = ($7<<24>>24)==($3<<24>>24);
  if ($8) {
   $9 = ((($0)) + 24|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   HEAP8[$4>>0]=$10&255;HEAP8[$4+1>>0]=($10>>8)&255;HEAP8[$4+2>>0]=($10>>16)&255;HEAP8[$4+3>>0]=$10>>24;
   return;
  }
 } else {
  $11 = ((($1)) + 5|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(-2);
  if ($13) {
   $14 = ((($1)) + 2|0);
   $15 = HEAP8[$14>>0]|0;
   $$0 = 2;$$021 = $15;
  } else {
   $$0 = 5;$$021 = $12;
  }
  $16 = ($$021<<24>>24)==($3<<24>>24);
  if ($16) {
   $17 = (($0) + ($$0<<2)|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   HEAP8[$4>>0]=$18&255;HEAP8[$4+1>>0]=($18>>8)&255;HEAP8[$4+2>>0]=($18>>16)&255;HEAP8[$4+3>>0]=$18>>24;
   return;
  }
 }
 __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($0,$1,$2,2,$3,$4);
 return;
}
function __ZN7WelsDec21UpdateP8x16MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $4 << 24 >> 24;
 $7 = $6 << 8;
 $8 = $7 | $6;
 $9 = $8&65535;
 $10 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $11 = ((($0)) + 4040|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 3932|0);
 $14 = ((($0)) + 3916|0);
 $15 = (15567 + ($3)|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = (11103 + ($3)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $16&255;
 $20 = (($19) + 4)|0;
 $21 = $18&255;
 $22 = (($21) + 6)|0;
 $23 = HEAP32[$13>>2]|0;
 $24 = ((($23) + ($12<<4)|0) + ($19)|0);
 HEAP8[$24>>0]=$9&255;HEAP8[$24+1>>0]=$9>>8;
 $25 = HEAP32[$13>>2]|0;
 $26 = $20 & 255;
 $27 = ((($25) + ($12<<4)|0) + ($26)|0);
 HEAP8[$27>>0]=$9&255;HEAP8[$27+1>>0]=$9>>8;
 $28 = HEAP32[$14>>2]|0;
 $29 = ((($28) + ($12<<6)|0) + ($19<<2)|0);
 HEAP8[$29>>0]=$10&255;HEAP8[$29+1>>0]=($10>>8)&255;HEAP8[$29+2>>0]=($10>>16)&255;HEAP8[$29+3>>0]=$10>>24;
 $30 = HEAP32[$14>>2]|0;
 $31 = (($19) + 1)|0;
 $32 = ((($30) + ($12<<6)|0) + ($31<<2)|0);
 HEAP8[$32>>0]=$10&255;HEAP8[$32+1>>0]=($10>>8)&255;HEAP8[$32+2>>0]=($10>>16)&255;HEAP8[$32+3>>0]=$10>>24;
 $33 = HEAP32[$14>>2]|0;
 $34 = ((($33) + ($12<<6)|0) + ($26<<2)|0);
 HEAP8[$34>>0]=$10&255;HEAP8[$34+1>>0]=($10>>8)&255;HEAP8[$34+2>>0]=($10>>16)&255;HEAP8[$34+3>>0]=$10>>24;
 $35 = HEAP32[$14>>2]|0;
 $36 = (($26) + 1)|0;
 $37 = ((($35) + ($12<<6)|0) + ($36<<2)|0);
 HEAP8[$37>>0]=$10&255;HEAP8[$37+1>>0]=($10>>8)&255;HEAP8[$37+2>>0]=($10>>16)&255;HEAP8[$37+3>>0]=$10>>24;
 $38 = (($2) + ($21)|0);
 HEAP8[$38>>0]=$9&255;HEAP8[$38+1>>0]=$9>>8;
 $39 = $22 & 255;
 $40 = (($2) + ($39)|0);
 HEAP8[$40>>0]=$9&255;HEAP8[$40+1>>0]=$9>>8;
 $41 = (($1) + ($21<<2)|0);
 HEAP8[$41>>0]=$10&255;HEAP8[$41+1>>0]=($10>>8)&255;HEAP8[$41+2>>0]=($10>>16)&255;HEAP8[$41+3>>0]=$10>>24;
 $42 = (($21) + 1)|0;
 $43 = (($1) + ($42<<2)|0);
 HEAP8[$43>>0]=$10&255;HEAP8[$43+1>>0]=($10>>8)&255;HEAP8[$43+2>>0]=($10>>16)&255;HEAP8[$43+3>>0]=$10>>24;
 $44 = (($1) + ($39<<2)|0);
 HEAP8[$44>>0]=$10&255;HEAP8[$44+1>>0]=($10>>8)&255;HEAP8[$44+2>>0]=($10>>16)&255;HEAP8[$44+3>>0]=$10>>24;
 $45 = (($39) + 1)|0;
 $46 = (($1) + ($45<<2)|0);
 HEAP8[$46>>0]=$10&255;HEAP8[$46+1>>0]=($10>>8)&255;HEAP8[$46+2>>0]=($10>>16)&255;HEAP8[$46+3>>0]=$10>>24;
 $47 = (($3) + 8)|0;
 $48 = (15567 + ($47)|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = (11103 + ($47)|0);
 $51 = HEAP8[$50>>0]|0;
 $52 = $49&255;
 $53 = (($52) + 4)|0;
 $54 = $51&255;
 $55 = (($54) + 6)|0;
 $56 = HEAP32[$13>>2]|0;
 $57 = ((($56) + ($12<<4)|0) + ($52)|0);
 HEAP8[$57>>0]=$9&255;HEAP8[$57+1>>0]=$9>>8;
 $58 = HEAP32[$13>>2]|0;
 $59 = $53 & 255;
 $60 = ((($58) + ($12<<4)|0) + ($59)|0);
 HEAP8[$60>>0]=$9&255;HEAP8[$60+1>>0]=$9>>8;
 $61 = HEAP32[$14>>2]|0;
 $62 = ((($61) + ($12<<6)|0) + ($52<<2)|0);
 HEAP8[$62>>0]=$10&255;HEAP8[$62+1>>0]=($10>>8)&255;HEAP8[$62+2>>0]=($10>>16)&255;HEAP8[$62+3>>0]=$10>>24;
 $63 = HEAP32[$14>>2]|0;
 $64 = (($52) + 1)|0;
 $65 = ((($63) + ($12<<6)|0) + ($64<<2)|0);
 HEAP8[$65>>0]=$10&255;HEAP8[$65+1>>0]=($10>>8)&255;HEAP8[$65+2>>0]=($10>>16)&255;HEAP8[$65+3>>0]=$10>>24;
 $66 = HEAP32[$14>>2]|0;
 $67 = ((($66) + ($12<<6)|0) + ($59<<2)|0);
 HEAP8[$67>>0]=$10&255;HEAP8[$67+1>>0]=($10>>8)&255;HEAP8[$67+2>>0]=($10>>16)&255;HEAP8[$67+3>>0]=$10>>24;
 $68 = HEAP32[$14>>2]|0;
 $69 = (($59) + 1)|0;
 $70 = ((($68) + ($12<<6)|0) + ($69<<2)|0);
 HEAP8[$70>>0]=$10&255;HEAP8[$70+1>>0]=($10>>8)&255;HEAP8[$70+2>>0]=($10>>16)&255;HEAP8[$70+3>>0]=$10>>24;
 $71 = (($2) + ($54)|0);
 HEAP8[$71>>0]=$9&255;HEAP8[$71+1>>0]=$9>>8;
 $72 = $55 & 255;
 $73 = (($2) + ($72)|0);
 HEAP8[$73>>0]=$9&255;HEAP8[$73+1>>0]=$9>>8;
 $74 = (($1) + ($54<<2)|0);
 HEAP8[$74>>0]=$10&255;HEAP8[$74+1>>0]=($10>>8)&255;HEAP8[$74+2>>0]=($10>>16)&255;HEAP8[$74+3>>0]=$10>>24;
 $75 = (($54) + 1)|0;
 $76 = (($1) + ($75<<2)|0);
 HEAP8[$76>>0]=$10&255;HEAP8[$76+1>>0]=($10>>8)&255;HEAP8[$76+2>>0]=($10>>16)&255;HEAP8[$76+3>>0]=$10>>24;
 $77 = (($1) + ($72<<2)|0);
 HEAP8[$77>>0]=$10&255;HEAP8[$77+1>>0]=($10>>8)&255;HEAP8[$77+2>>0]=($10>>16)&255;HEAP8[$77+3>>0]=$10>>24;
 $78 = (($72) + 1)|0;
 $79 = (($1) + ($78<<2)|0);
 HEAP8[$79>>0]=$10&255;HEAP8[$79+1>>0]=($10>>8)&255;HEAP8[$79+2>>0]=($10>>16)&255;HEAP8[$79+3>>0]=$10>>24;
 return;
}
function __ZN7WelsDec32WelsDecodeMbCabacISliceBaseMode0EPNS_21TagWelsDecoderContextERj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1505 = 0, $$1505$in = 0, $$1507 = 0, $$1507$off = 0, $$1531591 = 0, $$2500588 = 0, $$34 = 0, $$37 = 0, $$4502586 = 0, $$546 = 0, $$547 = 0, $$547$1 = 0, $$549 = 0, $$549$1 = 0, $$9 = 0, $$off535 = 0, $$phi$trans$insert = 0, $$pn = 0, $$pre = 0, $$pre$phiZ2D = 0;
 var $$pre614 = 0, $$pre615 = 0, $$sink29$sink = 0, $$sink39 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $2 = sp + 72|0;
 $3 = sp + 68|0;
 $4 = sp + 64|0;
 $5 = sp + 108|0;
 $6 = sp;
 $7 = ((($0)) + 241932|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 3900|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 3866|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12&255;
 $14 = ((($8)) + 3867|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15&255;
 $17 = ((($8)) + 4040|0);
 $18 = HEAP32[$17>>2]|0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $19 = ((($5)) + 15|0);
 $20 = $19;
 $21 = $20 & 15;
 $22 = (0 - ($21))|0;
 $23 = (($19) + ($22)|0);
 $24 = ((($8)) + 3940|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25) + ($18)|0);
 HEAP8[$26>>0] = 1;
 $27 = ((($8)) + 3944|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + ($18)|0);
 HEAP8[$29>>0] = 0;
 $30 = ((($8)) + 3976|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (($31) + ($18)|0);
 HEAP8[$32>>0] = 0;
 $33 = ((($8)) + 3861|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = ((($8)) + 3972|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (($36) + ($18)|0);
 HEAP8[$37>>0] = $34;
 __ZN7WelsDec22GetNeighborAvailMbTypeEPNS_16TagNeighborAvailEPNS_10TagDqLayerE($2,$8);
 $38 = (__ZN7WelsDec22ParseMBTypeISliceCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$2,$3)|0);
 $39 = ($38|0)==(0);
 if (!($39)) {
  $$37 = $38;
  STACKTOP = sp;return ($$37|0);
 }
 $40 = HEAP32[$3>>2]|0;
 $41 = ($40>>>0)>(25);
 if ($41) {
  $$37 = 1035;
  STACKTOP = sp;return ($$37|0);
 }
 $42 = ((($0)) + 241924|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 318|0);
 $45 = HEAP8[$44>>0]|0;
 $46 = ($45<<24>>24)==(0);
 L7: do {
  if ($46) {
   switch ($40|0) {
   case 25:  {
    label = 6;
    break L7;
    break;
   }
   case 0:  {
    label = 10;
    break L7;
    break;
   }
   case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24:  {
    $$37 = 1035;
    break;
   }
   default: {
    label = 20;
    break L7;
   }
   }
   STACKTOP = sp;return ($$37|0);
  } else {
   switch ($40|0) {
   case 25:  {
    label = 6;
    break;
   }
   case 0:  {
    label = 10;
    break;
   }
   default: {
    label = 20;
   }
   }
  }
 } while(0);
 L11: do {
  if ((label|0) == 6) {
   $47 = (__ZN7WelsDec18ParseIPCMInfoCabacEPNS_21TagWelsDecoderContextE($0)|0);
   $48 = ($47|0)==(0);
   if (!($48)) {
    $$37 = $47;
    STACKTOP = sp;return ($$37|0);
   }
   $49 = ((($8)) + 3884|0);
   HEAP32[$49>>2] = 0;
   $50 = (__ZN7WelsDec20ParseEndOfSliceCabacEPNS_21TagWelsDecoderContextERj($0,$1)|0);
   $51 = ($50|0)==(0);
   if (!($51)) {
    $$37 = $50;
    STACKTOP = sp;return ($$37|0);
   }
   $52 = HEAP32[$1>>2]|0;
   $53 = ($52|0)==(0);
   if ($53) {
    $$37 = 0;
    STACKTOP = sp;return ($$37|0);
   }
   $54 = ((($0)) + 512232|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = HEAP32[$7>>2]|0;
   $57 = ((($56)) + 3900|0);
   $58 = HEAP32[$57>>2]|0;
   __ZN7WelsDec25RestoreCabacDecEngineToBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($55,$58);
   $$37 = 0;
   STACKTOP = sp;return ($$37|0);
  }
  else if ((label|0) == 10) {
   $59 = ((($6)) + 15|0);
   $60 = $59;
   $61 = $60 & 15;
   $62 = (0 - ($61))|0;
   $63 = (($59) + ($62)|0);
   $64 = ((($8)) + 3908|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = (($65) + ($18<<1)|0);
   HEAP16[$66>>1] = 1;
   $67 = ((($0)) + 241928|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ((($68)) + 184|0);
   $70 = HEAP8[$69>>0]|0;
   $71 = ($70<<24>>24)==(0);
   if ($71) {
    label = 12;
   } else {
    $72 = HEAP32[$7>>2]|0;
    $73 = ((($72)) + 3944|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (($74) + ($18)|0);
    $76 = (__ZN7WelsDec30ParseTransformSize8x8FlagCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERb($0,$2,$75)|0);
    $77 = ($76|0)==(0);
    if ($77) {
     label = 12;
    } else {
     $$9 = $76;
    }
   }
   do {
    if ((label|0) == 12) {
     $78 = HEAP32[$7>>2]|0;
     $79 = ((($78)) + 3944|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = (($80) + ($18)|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = ($82<<24>>24)==(0);
     if ($83) {
      $90 = ((($0)) + 317148|0);
      $91 = HEAP32[$90>>2]|0;
      FUNCTION_TABLE_viiii[$91 & 31]($2,$23,$63,$8);
      $92 = (__ZN7WelsDec17ParseIntra4x4ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$63,$10,$8)|0);
      $93 = ($92|0)==(0);
      if (!($93)) {
       $$9 = $92;
       break;
      }
     } else {
      $84 = HEAP32[$64>>2]|0;
      $85 = (($84) + ($18<<1)|0);
      HEAP16[$85>>1] = 4;
      HEAP32[$3>>2] = 4;
      $86 = ((($0)) + 317148|0);
      $87 = HEAP32[$86>>2]|0;
      FUNCTION_TABLE_viiii[$87 & 31]($2,$23,$63,$8);
      $88 = (__ZN7WelsDec17ParseIntra8x8ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$63,$10,$8)|0);
      $89 = ($88|0)==(0);
      if (!($89)) {
       $$9 = $88;
       break;
      }
     }
     $94 = (__ZN7WelsDec17ParseCbpInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$2,$4)|0);
     $95 = ($94|0)==(0);
     if ($95) {
      $96 = HEAP32[$4>>2]|0;
      $97 = $96&255;
      $98 = ((($8)) + 3956|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = (($99) + ($18)|0);
      HEAP8[$100>>0] = $97;
      $101 = HEAP32[$4>>2]|0;
      $102 = ($101|0)==(0);
      $$pre615 = ((($8)) + 3884|0);
      if ($102) {
       $104 = 0;
      } else {
       $103 = HEAP32[$$pre615>>2]|0;
       $104 = $103;
      }
      HEAP32[$$pre615>>2] = $104;
      $105 = HEAP32[$42>>2]|0;
      $106 = ((($105)) + 318|0);
      $107 = HEAP8[$106>>0]|0;
      $108 = ($107<<24>>24)!=(0);
      $109 = $101 >>> 4;
      $110 = $108 ? $109 : 0;
      $$1505$in = $101;$$1507 = $110;$$pre$phiZ2D = $98;
      break L11;
     } else {
      $$9 = $94;
     }
    }
   } while(0);
   $$37 = $$9;
   STACKTOP = sp;return ($$37|0);
  }
  else if ((label|0) == 20) {
   $111 = ((($8)) + 3908|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (($112) + ($18<<1)|0);
   HEAP16[$113>>1] = 2;
   $114 = HEAP32[$27>>2]|0;
   $115 = (($114) + ($18)|0);
   HEAP8[$115>>0] = 0;
   $116 = HEAP32[$24>>2]|0;
   $117 = (($116) + ($18)|0);
   HEAP8[$117>>0] = 1;
   $118 = HEAP32[$3>>2]|0;
   $119 = (($118) + 3)|0;
   $120 = $119 & 3;
   $121 = $120&255;
   $122 = ((($8)) + 3992|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = (((($123) + ($18<<3)|0)) + 7|0);
   HEAP8[$124>>0] = $121;
   $125 = HEAP32[$3>>2]|0;
   $126 = (($125) + -1)|0;
   $127 = $126 >>> 2;
   $128 = (25321 + ($127)|0);
   $129 = HEAP8[$128>>0]|0;
   $130 = ((($8)) + 3956|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = (($131) + ($18)|0);
   HEAP8[$132>>0] = $129;
   $133 = HEAP32[$42>>2]|0;
   $134 = ((($133)) + 318|0);
   $135 = HEAP8[$134>>0]|0;
   $136 = ($135<<24>>24)==(0);
   $137 = HEAP32[$130>>2]|0;
   $138 = (($137) + ($18)|0);
   $139 = HEAP8[$138>>0]|0;
   $140 = $139 << 24 >> 24;
   $141 = $140 >> 4;
   $$546 = $136 ? 0 : $141;
   __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($2,$23,$8);
   $142 = (__ZN7WelsDec19ParseIntra16x16ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$2,$10,$8)|0);
   $143 = ($142|0)==(0);
   if ($143) {
    $$1505$in = $140;$$1507 = $$546;$$pre$phiZ2D = $130;
   } else {
    $$37 = $142;
    STACKTOP = sp;return ($$37|0);
   }
  }
 } while(0);
 $$1505 = $$1505$in & 15;
 $144 = ((($8)) + 3964|0);
 $145 = HEAP32[$144>>2]|0;
 $146 = (($145) + (($18*24)|0)|0);
 HEAP8[$146>>0]=0&255;HEAP8[$146+1>>0]=(0>>8)&255;HEAP8[$146+2>>0]=(0>>16)&255;HEAP8[$146+3>>0]=0>>24;
 $147 = HEAP32[$144>>2]|0;
 $148 = (((($147) + (($18*24)|0)|0)) + 4|0);
 HEAP8[$148>>0]=0&255;HEAP8[$148+1>>0]=(0>>8)&255;HEAP8[$148+2>>0]=(0>>16)&255;HEAP8[$148+3>>0]=0>>24;
 $149 = HEAP32[$144>>2]|0;
 $150 = (((($149) + (($18*24)|0)|0)) + 8|0);
 HEAP8[$150>>0]=0&255;HEAP8[$150+1>>0]=(0>>8)&255;HEAP8[$150+2>>0]=(0>>16)&255;HEAP8[$150+3>>0]=0>>24;
 $151 = HEAP32[$144>>2]|0;
 $152 = (((($151) + (($18*24)|0)|0)) + 12|0);
 HEAP8[$152>>0]=0&255;HEAP8[$152+1>>0]=(0>>8)&255;HEAP8[$152+2>>0]=(0>>16)&255;HEAP8[$152+3>>0]=0>>24;
 $153 = HEAP32[$144>>2]|0;
 $154 = (((($153) + (($18*24)|0)|0)) + 16|0);
 HEAP8[$154>>0]=0&255;HEAP8[$154+1>>0]=(0>>8)&255;HEAP8[$154+2>>0]=(0>>16)&255;HEAP8[$154+3>>0]=0>>24;
 $155 = HEAP32[$144>>2]|0;
 $156 = (((($155) + (($18*24)|0)|0)) + 20|0);
 HEAP8[$156>>0]=0&255;HEAP8[$156+1>>0]=(0>>8)&255;HEAP8[$156+2>>0]=(0>>16)&255;HEAP8[$156+3>>0]=0>>24;
 $157 = ((($8)) + 3960|0);
 $158 = HEAP32[$157>>2]|0;
 $159 = (($158) + ($18<<1)|0);
 HEAP16[$159>>1] = 0;
 $160 = HEAP32[$$pre$phiZ2D>>2]|0;
 $161 = (($160) + ($18)|0);
 $162 = HEAP8[$161>>0]|0;
 $163 = ($162<<24>>24)==(0);
 L41: do {
  if ($163) {
   $164 = ((($8)) + 3908|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = (($165) + ($18<<1)|0);
   $167 = HEAP16[$166>>1]|0;
   switch ($167<<16>>16) {
   case 4: case 1:  {
    $168 = ((($8)) + 3868|0);
    $169 = HEAP32[$168>>2]|0;
    $170 = $169&255;
    $171 = ((($8)) + 3948|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = (($172) + ($18)|0);
    HEAP8[$173>>0] = $170;
    $174 = ((($8)) + 92|0);
    $175 = ((($8)) + 3952|0);
    $176 = HEAP32[$171>>2]|0;
    $177 = (($176) + ($18)|0);
    $178 = HEAP8[$177>>0]|0;
    $179 = $178 << 24 >> 24;
    $180 = HEAP32[$174>>2]|0;
    $181 = ((($180)) + 168|0);
    $182 = HEAP32[$181>>2]|0;
    $183 = (($182) + ($179))|0;
    $184 = ($183|0)<(0);
    $185 = ($183|0)<(51);
    $$547 = $185 ? $183 : 51;
    $186 = $184 ? 0 : $$547;
    $187 = (11027 + ($186)|0);
    $188 = HEAP8[$187>>0]|0;
    $189 = HEAP32[$175>>2]|0;
    $190 = (($189) + ($18<<1)|0);
    HEAP8[$190>>0] = $188;
    $191 = HEAP32[$171>>2]|0;
    $192 = (($191) + ($18)|0);
    $193 = HEAP8[$192>>0]|0;
    $194 = $193 << 24 >> 24;
    $195 = HEAP32[$174>>2]|0;
    $196 = ((($195)) + 172|0);
    $197 = HEAP32[$196>>2]|0;
    $198 = (($197) + ($194))|0;
    $199 = ($198|0)<(0);
    $200 = ($198|0)<(51);
    $$547$1 = $200 ? $198 : 51;
    $201 = $199 ? 0 : $$547$1;
    $202 = (11027 + ($201)|0);
    $203 = HEAP8[$202>>0]|0;
    $204 = HEAP32[$175>>2]|0;
    $205 = (((($204) + ($18<<1)|0)) + 1|0);
    HEAP8[$205>>0] = $203;
    $$pre = HEAP32[$$pre$phiZ2D>>2]|0;
    $$phi$trans$insert = (($$pre) + ($18)|0);
    $$pre614 = HEAP8[$$phi$trans$insert>>0]|0;
    $206 = ($$pre614<<24>>24)==(0);
    if (!($206)) {
     label = 25;
     break L41;
    }
    break;
   }
   default: {
   }
   }
   $207 = ((($8)) + 3908|0);
   $208 = HEAP32[$207>>2]|0;
   $209 = (($208) + ($18<<1)|0);
   $210 = HEAP16[$209>>1]|0;
   $211 = ($210<<16>>16)==(2);
   if ($211) {
    label = 25;
   } else {
    $441 = HEAP32[$144>>2]|0;
    $442 = (($441) + (($18*24)|0)|0);
    HEAP8[$442>>0]=0&255;HEAP8[$442+1>>0]=(0>>8)&255;HEAP8[$442+2>>0]=(0>>16)&255;HEAP8[$442+3>>0]=0>>24;
    $443 = HEAP32[$144>>2]|0;
    $444 = (((($443) + (($18*24)|0)|0)) + 4|0);
    HEAP8[$444>>0]=0&255;HEAP8[$444+1>>0]=(0>>8)&255;HEAP8[$444+2>>0]=(0>>16)&255;HEAP8[$444+3>>0]=0>>24;
    $445 = HEAP32[$144>>2]|0;
    $446 = (((($445) + (($18*24)|0)|0)) + 8|0);
    HEAP8[$446>>0]=0&255;HEAP8[$446+1>>0]=(0>>8)&255;HEAP8[$446+2>>0]=(0>>16)&255;HEAP8[$446+3>>0]=0>>24;
    $447 = HEAP32[$144>>2]|0;
    $448 = (((($447) + (($18*24)|0)|0)) + 12|0);
    HEAP8[$448>>0]=0&255;HEAP8[$448+1>>0]=(0>>8)&255;HEAP8[$448+2>>0]=(0>>16)&255;HEAP8[$448+3>>0]=0>>24;
    $449 = HEAP32[$144>>2]|0;
    $450 = (((($449) + (($18*24)|0)|0)) + 16|0);
    HEAP8[$450>>0]=0&255;HEAP8[$450+1>>0]=(0>>8)&255;HEAP8[$450+2>>0]=(0>>16)&255;HEAP8[$450+3>>0]=0>>24;
    $451 = HEAP32[$144>>2]|0;
    $452 = (((($451) + (($18*24)|0)|0)) + 20|0);
    HEAP8[$452>>0]=0&255;HEAP8[$452+1>>0]=(0>>8)&255;HEAP8[$452+2>>0]=(0>>16)&255;HEAP8[$452+3>>0]=0>>24;
   }
  } else {
   label = 25;
  }
 } while(0);
 L47: do {
  if ((label|0) == 25) {
   $212 = ((($8)) + 3988|0);
   $213 = HEAP32[$212>>2]|0;
   $214 = (($213) + (($18*768)|0)|0);
   _memset(($214|0),0,768)|0;
   $215 = (__ZN7WelsDec17ParseDeltaQpCabacEPNS_21TagWelsDecoderContextERi($0,$6)|0);
   $216 = ($215|0)==(0);
   L49: do {
    if ($216) {
     $217 = HEAP32[$6>>2]|0;
     $$off535 = (($217) + 26)|0;
     $218 = ($$off535>>>0)>(51);
     if ($218) {
      $$37 = 1027;
      STACKTOP = sp;return ($$37|0);
     }
     $219 = ((($8)) + 3868|0);
     $220 = HEAP32[$219>>2]|0;
     $221 = (($217) + 52)|0;
     $222 = (($221) + ($220))|0;
     $223 = (($222|0) % 52)&-1;
     $224 = $223&255;
     $225 = ((($8)) + 3948|0);
     $226 = HEAP32[$225>>2]|0;
     $227 = (($226) + ($18)|0);
     HEAP8[$227>>0] = $224;
     $228 = HEAP32[$225>>2]|0;
     $229 = (($228) + ($18)|0);
     $230 = HEAP8[$229>>0]|0;
     $231 = $230 << 24 >> 24;
     HEAP32[$219>>2] = $231;
     $232 = ((($8)) + 92|0);
     $233 = ((($8)) + 3952|0);
     $234 = HEAP32[$232>>2]|0;
     $235 = ((($234)) + 168|0);
     $236 = HEAP32[$235>>2]|0;
     $237 = (($236) + ($231))|0;
     $238 = ($237|0)<(0);
     $239 = ($237|0)<(51);
     $$549 = $239 ? $237 : 51;
     $240 = $238 ? 0 : $$549;
     $241 = (11027 + ($240)|0);
     $242 = HEAP8[$241>>0]|0;
     $243 = HEAP32[$233>>2]|0;
     $244 = (($243) + ($18<<1)|0);
     HEAP8[$244>>0] = $242;
     $245 = HEAP32[$219>>2]|0;
     $246 = HEAP32[$232>>2]|0;
     $247 = ((($246)) + 172|0);
     $248 = HEAP32[$247>>2]|0;
     $249 = (($248) + ($245))|0;
     $250 = ($249|0)<(0);
     $251 = ($249|0)<(51);
     $$549$1 = $251 ? $249 : 51;
     $252 = $250 ? 0 : $$549$1;
     $253 = (11027 + ($252)|0);
     $254 = HEAP8[$253>>0]|0;
     $255 = HEAP32[$233>>2]|0;
     $256 = (((($255) + ($18<<1)|0)) + 1|0);
     HEAP8[$256>>0] = $254;
     $257 = ((($8)) + 3908|0);
     $258 = HEAP32[$257>>2]|0;
     $259 = (($258) + ($18<<1)|0);
     $260 = HEAP16[$259>>1]|0;
     $261 = ($260<<16>>16)==(2);
     do {
      if ($261) {
       $262 = HEAP32[$212>>2]|0;
       $263 = (($262) + (($18*768)|0)|0);
       $264 = HEAP32[$225>>2]|0;
       $265 = (($264) + ($18)|0);
       $266 = HEAP8[$265>>0]|0;
       $267 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,0,16,15634,1,$263,$266,$0)|0);
       $268 = ($267|0)==(0);
       if (!($268)) {
        $$34 = $267;
        break L49;
       }
       $269 = ($$1505|0)==(0);
       if ($269) {
        $299 = HEAP32[$144>>2]|0;
        $300 = (($299) + (($18*24)|0)|0);
        HEAP8[$300>>0]=0&255;HEAP8[$300+1>>0]=(0>>8)&255;HEAP8[$300+2>>0]=(0>>16)&255;HEAP8[$300+3>>0]=0>>24;
        $301 = HEAP32[$144>>2]|0;
        $302 = (((($301) + (($18*24)|0)|0)) + 4|0);
        HEAP8[$302>>0]=0&255;HEAP8[$302+1>>0]=(0>>8)&255;HEAP8[$302+2>>0]=(0>>16)&255;HEAP8[$302+3>>0]=0>>24;
        $303 = HEAP32[$144>>2]|0;
        $304 = (((($303) + (($18*24)|0)|0)) + 8|0);
        HEAP8[$304>>0]=0&255;HEAP8[$304+1>>0]=(0>>8)&255;HEAP8[$304+2>>0]=(0>>16)&255;HEAP8[$304+3>>0]=0>>24;
        $$sink29$sink = 0;
        break;
       }
       $270 = ($13>>>0)>(1);
       $271 = $270 ? $13 : 1;
       $272 = (($16) + 1)|0;
       $273 = (($272) - ($271))|0;
       $274 = (27122 + ($271)|0);
       $$2500588 = 0;
       while(1) {
        $277 = HEAP32[$212>>2]|0;
        $278 = $$2500588 << 4;
        $279 = ((($277) + (($18*768)|0)|0) + ($278<<1)|0);
        $280 = HEAP32[$225>>2]|0;
        $281 = (($280) + ($18)|0);
        $282 = HEAP8[$281>>0]|0;
        $283 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$$2500588,$273,$274,2,$279,$282,$0)|0);
        $284 = ($283|0)==(0);
        $275 = (($$2500588) + 1)|0;
        if (!($284)) {
         $$34 = $283;
         break L49;
        }
        $276 = ($275|0)<(16);
        if ($276) {
         $$2500588 = $275;
        } else {
         break;
        }
       }
       $285 = ((($23)) + 9|0);
       $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
       $287 = HEAP32[$144>>2]|0;
       $288 = (($287) + (($18*24)|0)|0);
       HEAP8[$288>>0]=$286&255;HEAP8[$288+1>>0]=($286>>8)&255;HEAP8[$288+2>>0]=($286>>16)&255;HEAP8[$288+3>>0]=$286>>24;
       $289 = ((($23)) + 17|0);
       $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
       $291 = HEAP32[$144>>2]|0;
       $292 = (((($291) + (($18*24)|0)|0)) + 4|0);
       HEAP8[$292>>0]=$290&255;HEAP8[$292+1>>0]=($290>>8)&255;HEAP8[$292+2>>0]=($290>>16)&255;HEAP8[$292+3>>0]=$290>>24;
       $293 = ((($23)) + 25|0);
       $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
       $295 = HEAP32[$144>>2]|0;
       $296 = (((($295) + (($18*24)|0)|0)) + 8|0);
       HEAP8[$296>>0]=$294&255;HEAP8[$296+1>>0]=($294>>8)&255;HEAP8[$296+2>>0]=($294>>16)&255;HEAP8[$296+3>>0]=$294>>24;
       $297 = ((($23)) + 33|0);
       $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
       $$sink29$sink = $298;
      } else {
       $305 = HEAP32[$27>>2]|0;
       $306 = (($305) + ($18)|0);
       $307 = HEAP8[$306>>0]|0;
       $308 = ($307<<24>>24)==(0);
       $309 = (1 - ($13))|0;
       $310 = (($309) + ($16))|0;
       if ($308) {
        $314 = (27122 + ($13)|0);
        $$1531591 = 0;
        while(1) {
         $330 = 1 << $$1531591;
         $331 = $330 & $$1505;
         $332 = ($331|0)==(0);
         $333 = $$1531591 << 2;
         if ($332) {
          $351 = (15583 + ($333)|0);
          $352 = HEAP8[$351>>0]|0;
          $353 = $352&255;
          $354 = (($23) + ($353)|0);
          HEAP8[$354>>0]=0&255;HEAP8[$354+1>>0]=0>>8;
          $355 = $333 | 2;
          $356 = (15583 + ($355)|0);
          $357 = HEAP8[$356>>0]|0;
          $358 = $357&255;
          $359 = (($23) + ($358)|0);
          HEAP8[$359>>0]=0&255;HEAP8[$359+1>>0]=0>>8;
         } else {
          $334 = HEAP32[$212>>2]|0;
          $335 = $$1531591 << 6;
          $336 = ((($334) + (($18*768)|0)|0) + ($335<<1)|0);
          $337 = HEAP32[$225>>2]|0;
          $338 = (($337) + ($18)|0);
          $339 = HEAP8[$338>>0]|0;
          $340 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$333,$310,$314,11,$336,$339,$0)|0);
          $341 = ($340|0)==(0);
          if (!($341)) {
           $$34 = $340;
           break L49;
          }
          $342 = $333 | 1;
          $343 = HEAP32[$212>>2]|0;
          $344 = $342 << 4;
          $345 = ((($343) + (($18*768)|0)|0) + ($344<<1)|0);
          $346 = HEAP32[$225>>2]|0;
          $347 = (($346) + ($18)|0);
          $348 = HEAP8[$347>>0]|0;
          $349 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$342,$310,$314,11,$345,$348,$0)|0);
          $350 = ($349|0)==(0);
          if (!($350)) {
           $$34 = $349;
           break L49;
          }
          $482 = (($342) + 1)|0;
          $483 = HEAP32[$212>>2]|0;
          $484 = $482 << 4;
          $485 = ((($483) + (($18*768)|0)|0) + ($484<<1)|0);
          $486 = HEAP32[$225>>2]|0;
          $487 = (($486) + ($18)|0);
          $488 = HEAP8[$487>>0]|0;
          $489 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$482,$310,$314,11,$485,$488,$0)|0);
          $490 = ($489|0)==(0);
          if (!($490)) {
           $$34 = $489;
           break L49;
          }
          $491 = $333 | 3;
          $492 = HEAP32[$212>>2]|0;
          $493 = $491 << 4;
          $494 = ((($492) + (($18*768)|0)|0) + ($493<<1)|0);
          $495 = HEAP32[$225>>2]|0;
          $496 = (($495) + ($18)|0);
          $497 = HEAP8[$496>>0]|0;
          $498 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$491,$310,$314,11,$494,$497,$0)|0);
          $499 = ($498|0)==(0);
          if (!($499)) {
           $$34 = $498;
           break L49;
          }
         }
         $360 = (($$1531591) + 1)|0;
         $361 = ($360|0)<(4);
         if ($361) {
          $$1531591 = $360;
         } else {
          break;
         }
        }
        $362 = ((($23)) + 9|0);
        $363 = HEAPU8[$362>>0]|(HEAPU8[$362+1>>0]<<8)|(HEAPU8[$362+2>>0]<<16)|(HEAPU8[$362+3>>0]<<24);
        $364 = HEAP32[$144>>2]|0;
        $365 = (($364) + (($18*24)|0)|0);
        HEAP8[$365>>0]=$363&255;HEAP8[$365+1>>0]=($363>>8)&255;HEAP8[$365+2>>0]=($363>>16)&255;HEAP8[$365+3>>0]=$363>>24;
        $366 = ((($23)) + 17|0);
        $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
        $368 = HEAP32[$144>>2]|0;
        $369 = (((($368) + (($18*24)|0)|0)) + 4|0);
        HEAP8[$369>>0]=$367&255;HEAP8[$369+1>>0]=($367>>8)&255;HEAP8[$369+2>>0]=($367>>16)&255;HEAP8[$369+3>>0]=$367>>24;
        $370 = ((($23)) + 25|0);
        $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
        $372 = HEAP32[$144>>2]|0;
        $373 = (((($372) + (($18*24)|0)|0)) + 8|0);
        HEAP8[$373>>0]=$371&255;HEAP8[$373+1>>0]=($371>>8)&255;HEAP8[$373+2>>0]=($371>>16)&255;HEAP8[$373+3>>0]=$371>>24;
        $374 = ((($23)) + 33|0);
        $375 = HEAPU8[$374>>0]|(HEAPU8[$374+1>>0]<<8)|(HEAPU8[$374+2>>0]<<16)|(HEAPU8[$374+3>>0]<<24);
        $$sink29$sink = $375;
        break;
       }
       $311 = (27138 + ($13)|0);
       $312 = $$1505$in & 1;
       $313 = ($312|0)==(0);
       if ($313) {
        $322 = HEAP8[15583]|0;
        $323 = $322&255;
        $324 = (($23) + ($323)|0);
        HEAP8[$324>>0]=0&255;HEAP8[$324+1>>0]=0>>8;
        $325 = HEAP8[(15585)>>0]|0;
        $326 = $325&255;
        $327 = (($23) + ($326)|0);
        HEAP8[$327>>0]=0&255;HEAP8[$327+1>>0]=0>>8;
       } else {
        $315 = HEAP32[$212>>2]|0;
        $316 = (($315) + (($18*768)|0)|0);
        $317 = HEAP32[$225>>2]|0;
        $318 = (($317) + ($18)|0);
        $319 = HEAP8[$318>>0]|0;
        $320 = (__ZN7WelsDec26ParseResidualBlockCabac8x8EPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,0,$310,$311,17,$316,$319,$0)|0);
        $321 = ($320|0)==(0);
        if (!($321)) {
         $$34 = $320;
         break L49;
        }
       }
       $328 = $$1505$in & 2;
       $329 = ($328|0)==(0);
       if ($329) {
        $507 = HEAP8[(15587)>>0]|0;
        $508 = $507&255;
        $509 = (($23) + ($508)|0);
        HEAP8[$509>>0]=0&255;HEAP8[$509+1>>0]=0>>8;
        $510 = HEAP8[(15589)>>0]|0;
        $511 = $510&255;
        $512 = (($23) + ($511)|0);
        HEAP8[$512>>0]=0&255;HEAP8[$512+1>>0]=0>>8;
       } else {
        $500 = HEAP32[$212>>2]|0;
        $501 = (((($500) + (($18*768)|0)|0)) + 128|0);
        $502 = HEAP32[$225>>2]|0;
        $503 = (($502) + ($18)|0);
        $504 = HEAP8[$503>>0]|0;
        $505 = (__ZN7WelsDec26ParseResidualBlockCabac8x8EPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,4,$310,$311,17,$501,$504,$0)|0);
        $506 = ($505|0)==(0);
        if (!($506)) {
         $$34 = $505;
         break L49;
        }
       }
       $513 = $$1505$in & 4;
       $514 = ($513|0)==(0);
       if ($514) {
        $522 = HEAP8[(15591)>>0]|0;
        $523 = $522&255;
        $524 = (($23) + ($523)|0);
        HEAP8[$524>>0]=0&255;HEAP8[$524+1>>0]=0>>8;
        $525 = HEAP8[(15593)>>0]|0;
        $526 = $525&255;
        $527 = (($23) + ($526)|0);
        HEAP8[$527>>0]=0&255;HEAP8[$527+1>>0]=0>>8;
       } else {
        $515 = HEAP32[$212>>2]|0;
        $516 = (((($515) + (($18*768)|0)|0)) + 256|0);
        $517 = HEAP32[$225>>2]|0;
        $518 = (($517) + ($18)|0);
        $519 = HEAP8[$518>>0]|0;
        $520 = (__ZN7WelsDec26ParseResidualBlockCabac8x8EPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,8,$310,$311,17,$516,$519,$0)|0);
        $521 = ($520|0)==(0);
        if (!($521)) {
         $$34 = $520;
         break L49;
        }
       }
       $528 = $$1505$in & 8;
       $529 = ($528|0)==(0);
       if ($529) {
        $537 = HEAP8[(15595)>>0]|0;
        $538 = $537&255;
        $539 = (($23) + ($538)|0);
        HEAP8[$539>>0]=0&255;HEAP8[$539+1>>0]=0>>8;
        $540 = HEAP8[(15597)>>0]|0;
        $541 = $540&255;
        $542 = (($23) + ($541)|0);
        HEAP8[$542>>0]=0&255;HEAP8[$542+1>>0]=0>>8;
       } else {
        $530 = HEAP32[$212>>2]|0;
        $531 = (((($530) + (($18*768)|0)|0)) + 384|0);
        $532 = HEAP32[$225>>2]|0;
        $533 = (($532) + ($18)|0);
        $534 = HEAP8[$533>>0]|0;
        $535 = (__ZN7WelsDec26ParseResidualBlockCabac8x8EPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,12,$310,$311,17,$531,$534,$0)|0);
        $536 = ($535|0)==(0);
        if (!($536)) {
         $$34 = $535;
         break L49;
        }
       }
       $543 = ((($23)) + 9|0);
       $544 = HEAPU8[$543>>0]|(HEAPU8[$543+1>>0]<<8)|(HEAPU8[$543+2>>0]<<16)|(HEAPU8[$543+3>>0]<<24);
       $545 = HEAP32[$144>>2]|0;
       $546 = (($545) + (($18*24)|0)|0);
       HEAP8[$546>>0]=$544&255;HEAP8[$546+1>>0]=($544>>8)&255;HEAP8[$546+2>>0]=($544>>16)&255;HEAP8[$546+3>>0]=$544>>24;
       $547 = ((($23)) + 17|0);
       $548 = HEAPU8[$547>>0]|(HEAPU8[$547+1>>0]<<8)|(HEAPU8[$547+2>>0]<<16)|(HEAPU8[$547+3>>0]<<24);
       $549 = HEAP32[$144>>2]|0;
       $550 = (((($549) + (($18*24)|0)|0)) + 4|0);
       HEAP8[$550>>0]=$548&255;HEAP8[$550+1>>0]=($548>>8)&255;HEAP8[$550+2>>0]=($548>>16)&255;HEAP8[$550+3>>0]=$548>>24;
       $551 = ((($23)) + 25|0);
       $552 = HEAPU8[$551>>0]|(HEAPU8[$551+1>>0]<<8)|(HEAPU8[$551+2>>0]<<16)|(HEAPU8[$551+3>>0]<<24);
       $553 = HEAP32[$144>>2]|0;
       $554 = (((($553) + (($18*24)|0)|0)) + 8|0);
       HEAP8[$554>>0]=$552&255;HEAP8[$554+1>>0]=($552>>8)&255;HEAP8[$554+2>>0]=($552>>16)&255;HEAP8[$554+3>>0]=$552>>24;
       $555 = ((($23)) + 33|0);
       $556 = HEAPU8[$555>>0]|(HEAPU8[$555+1>>0]<<8)|(HEAPU8[$555+2>>0]<<16)|(HEAPU8[$555+3>>0]<<24);
       $$sink29$sink = $556;
      }
     } while(0);
     $376 = HEAP32[$144>>2]|0;
     $377 = (((($376) + (($18*24)|0)|0)) + 12|0);
     HEAP8[$377>>0]=$$sink29$sink&255;HEAP8[$377+1>>0]=($$sink29$sink>>8)&255;HEAP8[$377+2>>0]=($$sink29$sink>>16)&255;HEAP8[$377+3>>0]=$$sink29$sink>>24;
     $378 = ($$1507|0)==(2);
     $$1507$off = (($$1507) + -1)|0;
     $379 = ($$1507$off>>>0)<(2);
     if ($379) {
      $380 = HEAP32[$212>>2]|0;
      $381 = (((($380) + (($18*768)|0)|0)) + 512|0);
      $382 = HEAP32[$233>>2]|0;
      $383 = (($382) + ($18<<1)|0);
      $384 = HEAP8[$383>>0]|0;
      $385 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,16,4,15650,7,$381,$384,$0)|0);
      $386 = ($385|0)==(0);
      if (!($386)) {
       $$34 = $385;
       break;
      }
      $387 = HEAP32[$212>>2]|0;
      $388 = (((($387) + (($18*768)|0)|0)) + 640|0);
      $389 = HEAP32[$233>>2]|0;
      $390 = (((($389) + ($18<<1)|0)) + 1|0);
      $391 = HEAP8[$390>>0]|0;
      $392 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,20,4,15650,8,$388,$391,$0)|0);
      $393 = ($392|0)==(0);
      if (!($393)) {
       $$34 = $392;
       break;
      }
     }
     if ($378) {
      $394 = ($13>>>0)>(1);
      $395 = $394 ? $13 : 1;
      $396 = (($16) + 1)|0;
      $397 = (($396) - ($395))|0;
      $398 = (27122 + ($395)|0);
      $$4502586 = 0;
      while(1) {
       $399 = ($$4502586|0)!=(0);
       $400 = $399 ? 10 : 9;
       $401 = $$4502586 << 2;
       $402 = (($401) + 16)|0;
       $403 = HEAP32[$212>>2]|0;
       $404 = $402 << 4;
       $405 = ((($403) + (($18*768)|0)|0) + ($404<<1)|0);
       $406 = HEAP32[$233>>2]|0;
       $407 = ((($406) + ($18<<1)|0) + ($$4502586)|0);
       $408 = HEAP8[$407>>0]|0;
       $409 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$402,$397,$398,$400,$405,$408,$0)|0);
       $410 = ($409|0)==(0);
       if (!($410)) {
        $$34 = $409;
        break L49;
       }
       $411 = (($401) + 17)|0;
       $412 = HEAP32[$212>>2]|0;
       $413 = $411 << 4;
       $414 = ((($412) + (($18*768)|0)|0) + ($413<<1)|0);
       $415 = HEAP32[$233>>2]|0;
       $416 = ((($415) + ($18<<1)|0) + ($$4502586)|0);
       $417 = HEAP8[$416>>0]|0;
       $418 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$411,$397,$398,$400,$414,$417,$0)|0);
       $419 = ($418|0)==(0);
       if (!($419)) {
        $$34 = $418;
        break L49;
       }
       $462 = (($401) + 18)|0;
       $463 = HEAP32[$212>>2]|0;
       $464 = $462 << 4;
       $465 = ((($463) + (($18*768)|0)|0) + ($464<<1)|0);
       $466 = HEAP32[$233>>2]|0;
       $467 = ((($466) + ($18<<1)|0) + ($$4502586)|0);
       $468 = HEAP8[$467>>0]|0;
       $469 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$462,$397,$398,$400,$465,$468,$0)|0);
       $470 = ($469|0)==(0);
       if (!($470)) {
        $$34 = $469;
        break L49;
       }
       $471 = (($401) + 19)|0;
       $472 = HEAP32[$212>>2]|0;
       $473 = $471 << 4;
       $474 = ((($472) + (($18*768)|0)|0) + ($473<<1)|0);
       $475 = HEAP32[$233>>2]|0;
       $476 = ((($475) + ($18<<1)|0) + ($$4502586)|0);
       $477 = HEAP8[$476>>0]|0;
       $478 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($2,$23,$10,$471,$397,$398,$400,$474,$477,$0)|0);
       $479 = ($478|0)==(0);
       if (!($479)) {
        $$34 = $478;
        break L49;
       }
       $480 = (($$4502586) + 1)|0;
       $481 = ($480|0)<(2);
       if ($481) {
        $$4502586 = $480;
       } else {
        break;
       }
      }
      $420 = ((($23)) + 14|0);
      $421 = HEAPU8[$420>>0]|(HEAPU8[$420+1>>0]<<8);
      $422 = HEAP32[$144>>2]|0;
      $423 = (((($422) + (($18*24)|0)|0)) + 16|0);
      HEAP8[$423>>0]=$421&255;HEAP8[$423+1>>0]=$421>>8;
      $424 = ((($23)) + 22|0);
      $425 = HEAPU8[$424>>0]|(HEAPU8[$424+1>>0]<<8);
      $426 = HEAP32[$144>>2]|0;
      $427 = (((($426) + (($18*24)|0)|0)) + 20|0);
      HEAP8[$427>>0]=$425&255;HEAP8[$427+1>>0]=$425>>8;
      $428 = ((($23)) + 38|0);
      $429 = HEAPU8[$428>>0]|(HEAPU8[$428+1>>0]<<8);
      $430 = HEAP32[$144>>2]|0;
      $431 = (((($430) + (($18*24)|0)|0)) + 18|0);
      HEAP8[$431>>0]=$429&255;HEAP8[$431+1>>0]=$429>>8;
      $432 = ((($23)) + 46|0);
      $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8);
      $$sink39 = $433;
     } else {
      $434 = HEAP32[$144>>2]|0;
      $435 = (((($434) + (($18*24)|0)|0)) + 16|0);
      HEAP8[$435>>0]=0&255;HEAP8[$435+1>>0]=0>>8;
      $436 = HEAP32[$144>>2]|0;
      $437 = (((($436) + (($18*24)|0)|0)) + 20|0);
      HEAP8[$437>>0]=0&255;HEAP8[$437+1>>0]=0>>8;
      $438 = HEAP32[$144>>2]|0;
      $439 = (((($438) + (($18*24)|0)|0)) + 18|0);
      HEAP8[$439>>0]=0&255;HEAP8[$439+1>>0]=0>>8;
      $$sink39 = 0;
     }
     $$pn = HEAP32[$144>>2]|0;
     $440 = (((($$pn) + (($18*24)|0)|0)) + 22|0);
     HEAP8[$440>>0]=$$sink39&255;HEAP8[$440+1>>0]=$$sink39>>8;
     break L47;
    } else {
     $$34 = $215;
    }
   } while(0);
   $$37 = $$34;
   STACKTOP = sp;return ($$37|0);
  }
 } while(0);
 $453 = (__ZN7WelsDec20ParseEndOfSliceCabacEPNS_21TagWelsDecoderContextERj($0,$1)|0);
 $454 = ($453|0)==(0);
 if (!($454)) {
  $$37 = $453;
  STACKTOP = sp;return ($$37|0);
 }
 $455 = HEAP32[$1>>2]|0;
 $456 = ($455|0)==(0);
 if ($456) {
  $$37 = 0;
  STACKTOP = sp;return ($$37|0);
 }
 $457 = ((($0)) + 512232|0);
 $458 = HEAP32[$457>>2]|0;
 $459 = HEAP32[$7>>2]|0;
 $460 = ((($459)) + 3900|0);
 $461 = HEAP32[$460>>2]|0;
 __ZN7WelsDec25RestoreCabacDecEngineToBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($458,$461);
 $$37 = 0;
 STACKTOP = sp;return ($$37|0);
}
function __ZN7WelsDec22ParseMBTypeISliceCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$8 = 0, $$90 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $not$99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = ((($0)) + 512232|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 511315|0);
 $7 = ((($1)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $14 = 0;
 } else {
  $10 = ((($1)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)!=(4);
  $not$ = ($11|0)!=(1);
  $$ = $12 & $not$;
  $14 = $$;
 }
 $13 = $14&1;
 $15 = HEAP32[$1>>2]|0;
 $16 = ($15|0)==(0);
 if ($16) {
  $21 = 0;
 } else {
  $17 = ((($1)) + 20|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ($18|0)!=(4);
  $not$99 = ($18|0)!=(1);
  $$90 = $19 & $not$99;
  $21 = $$90;
 }
 $20 = $21&1;
 $22 = (($20) + ($13))|0;
 $23 = (($6) + ($22<<1)|0);
 $24 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$23,$3)|0);
 $25 = ($24|0)==(0);
 if (!($25)) {
  $$8 = $24;
  STACKTOP = sp;return ($$8|0);
 }
 $26 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $26;
 $27 = ($26|0)==(0);
 if ($27) {
  $$8 = 0;
  STACKTOP = sp;return ($$8|0);
 }
 $28 = (__ZN7WelsDec20DecodeTerminateCabacEPNS_19SWelsCabacDecEngineERj($5,$3)|0);
 $29 = ($28|0)==(0);
 if (!($29)) {
  $$8 = $28;
  STACKTOP = sp;return ($$8|0);
 }
 $30 = HEAP32[$3>>2]|0;
 $31 = ($30|0)==(1);
 do {
  if ($31) {
   $$sink = 25;
  } else {
   $32 = ((($0)) + 511321|0);
   $33 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$32,$3)|0);
   $34 = ($33|0)==(0);
   if (!($34)) {
    $$8 = $33;
    STACKTOP = sp;return ($$8|0);
   }
   $35 = HEAP32[$3>>2]|0;
   $36 = ($35*12)|0;
   $37 = $36 | 1;
   HEAP32[$2>>2] = $37;
   $38 = ((($0)) + 511323|0);
   $39 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$38,$3)|0);
   $40 = ($39|0)==(0);
   if (!($40)) {
    $$8 = $39;
    STACKTOP = sp;return ($$8|0);
   }
   $41 = HEAP32[$3>>2]|0;
   $42 = ($41|0)==(0);
   if (!($42)) {
    $43 = ((($0)) + 511325|0);
    $44 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$43,$3)|0);
    $45 = ($44|0)==(0);
    if (!($45)) {
     $$8 = $44;
     STACKTOP = sp;return ($$8|0);
    }
    $46 = HEAP32[$2>>2]|0;
    $47 = (($46) + 4)|0;
    HEAP32[$2>>2] = $47;
    $48 = HEAP32[$3>>2]|0;
    $49 = ($48|0)==(0);
    if (!($49)) {
     $50 = (($46) + 8)|0;
     HEAP32[$2>>2] = $50;
    }
   }
   $51 = ((($0)) + 511327|0);
   $52 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$51,$3)|0);
   $53 = ($52|0)==(0);
   if (!($53)) {
    $$8 = $52;
    STACKTOP = sp;return ($$8|0);
   }
   $54 = HEAP32[$3>>2]|0;
   $55 = $54 << 1;
   $56 = HEAP32[$2>>2]|0;
   $57 = (($56) + ($55))|0;
   HEAP32[$2>>2] = $57;
   $58 = ((($0)) + 511329|0);
   $59 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$58,$3)|0);
   $60 = ($59|0)==(0);
   if ($60) {
    $61 = HEAP32[$3>>2]|0;
    $62 = HEAP32[$2>>2]|0;
    $63 = (($62) + ($61))|0;
    $$sink = $63;
    break;
   } else {
    $$8 = $59;
    STACKTOP = sp;return ($$8|0);
   }
  }
 } while(0);
 HEAP32[$2>>2] = $$sink;
 $$8 = 0;
 STACKTOP = sp;return ($$8|0);
}
function __ZN7WelsDec18ParseIPCMInfoCabacEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$2 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $scevgep = 0, $scevgep127 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 512232|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 241932|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 3900|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 4100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 36|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($4)) + 4032|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($4)) + 4036|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($4)) + 4040|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = Math_imul($16, $12)|0;
 $20 = (($19) + ($14))|0;
 $21 = $20 << 3;
 $22 = ((($0)) + 5464|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 16|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($23)) + 20|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (($27) + ($21)|0);
 $29 = ((($23)) + 24|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($30) + ($21)|0);
 $32 = ((($4)) + 3908|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (($33) + ($18<<1)|0);
 HEAP16[$34>>1] = 512;
 __ZN7WelsDec25RestoreCabacDecEngineToBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($2,$6);
 $35 = ((($6)) + 4|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ((($6)) + 16|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = $38;
 $40 = (($36) - ($39))|0;
 $41 = ($40|0)<(384);
 if ($41) {
  $$2 = 10012;
  return ($$2|0);
 }
 $42 = Math_imul($16, $10)|0;
 $43 = (($42) + ($14))|0;
 $44 = $43 << 4;
 $45 = (($25) + ($44)|0);
 dest=$45; src=$38; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $46 = (($45) + ($10)|0);
 $47 = ((($38)) + 16|0);
 dest=$46; src=$47; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $48 = (($46) + ($10)|0);
 $49 = ((($38)) + 32|0);
 dest=$48; src=$49; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $50 = (($48) + ($10)|0);
 $51 = ((($38)) + 48|0);
 dest=$50; src=$51; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $52 = (($50) + ($10)|0);
 $53 = ((($38)) + 64|0);
 dest=$52; src=$53; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $54 = (($52) + ($10)|0);
 $55 = ((($38)) + 80|0);
 dest=$54; src=$55; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $56 = (($54) + ($10)|0);
 $57 = ((($38)) + 96|0);
 dest=$56; src=$57; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $58 = (($56) + ($10)|0);
 $59 = ((($38)) + 112|0);
 dest=$58; src=$59; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $60 = (($58) + ($10)|0);
 $61 = ((($38)) + 128|0);
 dest=$60; src=$61; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $62 = (($60) + ($10)|0);
 $63 = ((($38)) + 144|0);
 dest=$62; src=$63; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $64 = (($62) + ($10)|0);
 $65 = ((($38)) + 160|0);
 dest=$64; src=$65; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $66 = (($64) + ($10)|0);
 $67 = ((($38)) + 176|0);
 dest=$66; src=$67; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $68 = (($66) + ($10)|0);
 $69 = ((($38)) + 192|0);
 dest=$68; src=$69; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $70 = (($68) + ($10)|0);
 $71 = ((($38)) + 208|0);
 dest=$70; src=$71; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $72 = (($70) + ($10)|0);
 $73 = ((($38)) + 224|0);
 dest=$72; src=$73; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $74 = (($72) + ($10)|0);
 $75 = ((($38)) + 240|0);
 dest=$74; src=$75; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $scevgep127 = ((($38)) + 256|0);
 $76 = $scevgep127;
 $77 = $76;
 $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
 $79 = (($76) + 4)|0;
 $80 = $79;
 $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
 $82 = $28;
 $83 = $82;
 HEAP8[$83>>0]=$78&255;HEAP8[$83+1>>0]=($78>>8)&255;HEAP8[$83+2>>0]=($78>>16)&255;HEAP8[$83+3>>0]=$78>>24;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP8[$85>>0]=$81&255;HEAP8[$85+1>>0]=($81>>8)&255;HEAP8[$85+2>>0]=($81>>16)&255;HEAP8[$85+3>>0]=$81>>24;
 $86 = (($28) + ($12)|0);
 $87 = ((($38)) + 264|0);
 $88 = $87;
 $89 = $88;
 $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
 $91 = (($88) + 4)|0;
 $92 = $91;
 $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
 $94 = $86;
 $95 = $94;
 HEAP8[$95>>0]=$90&255;HEAP8[$95+1>>0]=($90>>8)&255;HEAP8[$95+2>>0]=($90>>16)&255;HEAP8[$95+3>>0]=$90>>24;
 $96 = (($94) + 4)|0;
 $97 = $96;
 HEAP8[$97>>0]=$93&255;HEAP8[$97+1>>0]=($93>>8)&255;HEAP8[$97+2>>0]=($93>>16)&255;HEAP8[$97+3>>0]=$93>>24;
 $98 = (($86) + ($12)|0);
 $99 = ((($38)) + 272|0);
 $100 = $99;
 $101 = $100;
 $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
 $103 = (($100) + 4)|0;
 $104 = $103;
 $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
 $106 = $98;
 $107 = $106;
 HEAP8[$107>>0]=$102&255;HEAP8[$107+1>>0]=($102>>8)&255;HEAP8[$107+2>>0]=($102>>16)&255;HEAP8[$107+3>>0]=$102>>24;
 $108 = (($106) + 4)|0;
 $109 = $108;
 HEAP8[$109>>0]=$105&255;HEAP8[$109+1>>0]=($105>>8)&255;HEAP8[$109+2>>0]=($105>>16)&255;HEAP8[$109+3>>0]=$105>>24;
 $110 = (($98) + ($12)|0);
 $111 = ((($38)) + 280|0);
 $112 = $111;
 $113 = $112;
 $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
 $115 = (($112) + 4)|0;
 $116 = $115;
 $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
 $118 = $110;
 $119 = $118;
 HEAP8[$119>>0]=$114&255;HEAP8[$119+1>>0]=($114>>8)&255;HEAP8[$119+2>>0]=($114>>16)&255;HEAP8[$119+3>>0]=$114>>24;
 $120 = (($118) + 4)|0;
 $121 = $120;
 HEAP8[$121>>0]=$117&255;HEAP8[$121+1>>0]=($117>>8)&255;HEAP8[$121+2>>0]=($117>>16)&255;HEAP8[$121+3>>0]=$117>>24;
 $122 = (($110) + ($12)|0);
 $123 = ((($38)) + 288|0);
 $124 = $123;
 $125 = $124;
 $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
 $127 = (($124) + 4)|0;
 $128 = $127;
 $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
 $130 = $122;
 $131 = $130;
 HEAP8[$131>>0]=$126&255;HEAP8[$131+1>>0]=($126>>8)&255;HEAP8[$131+2>>0]=($126>>16)&255;HEAP8[$131+3>>0]=$126>>24;
 $132 = (($130) + 4)|0;
 $133 = $132;
 HEAP8[$133>>0]=$129&255;HEAP8[$133+1>>0]=($129>>8)&255;HEAP8[$133+2>>0]=($129>>16)&255;HEAP8[$133+3>>0]=$129>>24;
 $134 = (($122) + ($12)|0);
 $135 = ((($38)) + 296|0);
 $136 = $135;
 $137 = $136;
 $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
 $139 = (($136) + 4)|0;
 $140 = $139;
 $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
 $142 = $134;
 $143 = $142;
 HEAP8[$143>>0]=$138&255;HEAP8[$143+1>>0]=($138>>8)&255;HEAP8[$143+2>>0]=($138>>16)&255;HEAP8[$143+3>>0]=$138>>24;
 $144 = (($142) + 4)|0;
 $145 = $144;
 HEAP8[$145>>0]=$141&255;HEAP8[$145+1>>0]=($141>>8)&255;HEAP8[$145+2>>0]=($141>>16)&255;HEAP8[$145+3>>0]=$141>>24;
 $146 = (($134) + ($12)|0);
 $147 = ((($38)) + 304|0);
 $148 = $147;
 $149 = $148;
 $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
 $151 = (($148) + 4)|0;
 $152 = $151;
 $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
 $154 = $146;
 $155 = $154;
 HEAP8[$155>>0]=$150&255;HEAP8[$155+1>>0]=($150>>8)&255;HEAP8[$155+2>>0]=($150>>16)&255;HEAP8[$155+3>>0]=$150>>24;
 $156 = (($154) + 4)|0;
 $157 = $156;
 HEAP8[$157>>0]=$153&255;HEAP8[$157+1>>0]=($153>>8)&255;HEAP8[$157+2>>0]=($153>>16)&255;HEAP8[$157+3>>0]=$153>>24;
 $158 = (($146) + ($12)|0);
 $159 = ((($38)) + 312|0);
 $160 = $159;
 $161 = $160;
 $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
 $163 = (($160) + 4)|0;
 $164 = $163;
 $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
 $166 = $158;
 $167 = $166;
 HEAP8[$167>>0]=$162&255;HEAP8[$167+1>>0]=($162>>8)&255;HEAP8[$167+2>>0]=($162>>16)&255;HEAP8[$167+3>>0]=$162>>24;
 $168 = (($166) + 4)|0;
 $169 = $168;
 HEAP8[$169>>0]=$165&255;HEAP8[$169+1>>0]=($165>>8)&255;HEAP8[$169+2>>0]=($165>>16)&255;HEAP8[$169+3>>0]=$165>>24;
 $scevgep = ((($38)) + 320|0);
 $170 = $scevgep;
 $171 = $170;
 $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
 $173 = (($170) + 4)|0;
 $174 = $173;
 $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
 $176 = $31;
 $177 = $176;
 HEAP8[$177>>0]=$172&255;HEAP8[$177+1>>0]=($172>>8)&255;HEAP8[$177+2>>0]=($172>>16)&255;HEAP8[$177+3>>0]=$172>>24;
 $178 = (($176) + 4)|0;
 $179 = $178;
 HEAP8[$179>>0]=$175&255;HEAP8[$179+1>>0]=($175>>8)&255;HEAP8[$179+2>>0]=($175>>16)&255;HEAP8[$179+3>>0]=$175>>24;
 $180 = (($31) + ($12)|0);
 $181 = ((($38)) + 328|0);
 $182 = $181;
 $183 = $182;
 $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
 $185 = (($182) + 4)|0;
 $186 = $185;
 $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
 $188 = $180;
 $189 = $188;
 HEAP8[$189>>0]=$184&255;HEAP8[$189+1>>0]=($184>>8)&255;HEAP8[$189+2>>0]=($184>>16)&255;HEAP8[$189+3>>0]=$184>>24;
 $190 = (($188) + 4)|0;
 $191 = $190;
 HEAP8[$191>>0]=$187&255;HEAP8[$191+1>>0]=($187>>8)&255;HEAP8[$191+2>>0]=($187>>16)&255;HEAP8[$191+3>>0]=$187>>24;
 $192 = (($180) + ($12)|0);
 $193 = ((($38)) + 336|0);
 $194 = $193;
 $195 = $194;
 $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
 $197 = (($194) + 4)|0;
 $198 = $197;
 $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
 $200 = $192;
 $201 = $200;
 HEAP8[$201>>0]=$196&255;HEAP8[$201+1>>0]=($196>>8)&255;HEAP8[$201+2>>0]=($196>>16)&255;HEAP8[$201+3>>0]=$196>>24;
 $202 = (($200) + 4)|0;
 $203 = $202;
 HEAP8[$203>>0]=$199&255;HEAP8[$203+1>>0]=($199>>8)&255;HEAP8[$203+2>>0]=($199>>16)&255;HEAP8[$203+3>>0]=$199>>24;
 $204 = (($192) + ($12)|0);
 $205 = ((($38)) + 344|0);
 $206 = $205;
 $207 = $206;
 $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
 $209 = (($206) + 4)|0;
 $210 = $209;
 $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
 $212 = $204;
 $213 = $212;
 HEAP8[$213>>0]=$208&255;HEAP8[$213+1>>0]=($208>>8)&255;HEAP8[$213+2>>0]=($208>>16)&255;HEAP8[$213+3>>0]=$208>>24;
 $214 = (($212) + 4)|0;
 $215 = $214;
 HEAP8[$215>>0]=$211&255;HEAP8[$215+1>>0]=($211>>8)&255;HEAP8[$215+2>>0]=($211>>16)&255;HEAP8[$215+3>>0]=$211>>24;
 $216 = (($204) + ($12)|0);
 $217 = ((($38)) + 352|0);
 $218 = $217;
 $219 = $218;
 $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
 $221 = (($218) + 4)|0;
 $222 = $221;
 $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
 $224 = $216;
 $225 = $224;
 HEAP8[$225>>0]=$220&255;HEAP8[$225+1>>0]=($220>>8)&255;HEAP8[$225+2>>0]=($220>>16)&255;HEAP8[$225+3>>0]=$220>>24;
 $226 = (($224) + 4)|0;
 $227 = $226;
 HEAP8[$227>>0]=$223&255;HEAP8[$227+1>>0]=($223>>8)&255;HEAP8[$227+2>>0]=($223>>16)&255;HEAP8[$227+3>>0]=$223>>24;
 $228 = (($216) + ($12)|0);
 $229 = ((($38)) + 360|0);
 $230 = $229;
 $231 = $230;
 $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
 $233 = (($230) + 4)|0;
 $234 = $233;
 $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
 $236 = $228;
 $237 = $236;
 HEAP8[$237>>0]=$232&255;HEAP8[$237+1>>0]=($232>>8)&255;HEAP8[$237+2>>0]=($232>>16)&255;HEAP8[$237+3>>0]=$232>>24;
 $238 = (($236) + 4)|0;
 $239 = $238;
 HEAP8[$239>>0]=$235&255;HEAP8[$239+1>>0]=($235>>8)&255;HEAP8[$239+2>>0]=($235>>16)&255;HEAP8[$239+3>>0]=$235>>24;
 $240 = (($228) + ($12)|0);
 $241 = ((($38)) + 368|0);
 $242 = $241;
 $243 = $242;
 $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
 $245 = (($242) + 4)|0;
 $246 = $245;
 $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
 $248 = $240;
 $249 = $248;
 HEAP8[$249>>0]=$244&255;HEAP8[$249+1>>0]=($244>>8)&255;HEAP8[$249+2>>0]=($244>>16)&255;HEAP8[$249+3>>0]=$244>>24;
 $250 = (($248) + 4)|0;
 $251 = $250;
 HEAP8[$251>>0]=$247&255;HEAP8[$251+1>>0]=($247>>8)&255;HEAP8[$251+2>>0]=($247>>16)&255;HEAP8[$251+3>>0]=$247>>24;
 $252 = (($240) + ($12)|0);
 $253 = ((($38)) + 376|0);
 $254 = $253;
 $255 = $254;
 $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
 $257 = (($254) + 4)|0;
 $258 = $257;
 $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
 $260 = $252;
 $261 = $260;
 HEAP8[$261>>0]=$256&255;HEAP8[$261+1>>0]=($256>>8)&255;HEAP8[$261+2>>0]=($256>>16)&255;HEAP8[$261+3>>0]=$256>>24;
 $262 = (($260) + 4)|0;
 $263 = $262;
 HEAP8[$263>>0]=$259&255;HEAP8[$263+1>>0]=($259>>8)&255;HEAP8[$263+2>>0]=($259>>16)&255;HEAP8[$263+3>>0]=$259>>24;
 $264 = HEAP32[$37>>2]|0;
 $265 = ((($264)) + 384|0);
 HEAP32[$37>>2] = $265;
 $266 = ((($4)) + 3948|0);
 $267 = HEAP32[$266>>2]|0;
 $268 = (($267) + ($18)|0);
 HEAP8[$268>>0] = 0;
 $269 = ((($4)) + 3952|0);
 $270 = HEAP32[$269>>2]|0;
 $271 = (((($270) + ($18<<1)|0)) + 1|0);
 HEAP8[$271>>0] = 0;
 $272 = HEAP32[$269>>2]|0;
 $273 = (($272) + ($18<<1)|0);
 HEAP8[$273>>0] = 0;
 $274 = ((($4)) + 3964|0);
 $275 = HEAP32[$274>>2]|0;
 $276 = (($275) + (($18*24)|0)|0);
 dest=$276; stop=dest+24|0; do { HEAP8[dest>>0]=16|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $277 = (__ZN7WelsDec12InitReadBitsEPN10WelsCommon15TagBitStringAuxEi($6,1)|0);
 $278 = ($277|0)==(0);
 if ($278) {
  $279 = (__ZN7WelsDec24InitCabacDecEngineFromBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($2,$6)|0);
  return ($279|0);
 } else {
  $$2 = $277;
  return ($$2|0);
 }
 return (0)|0;
}
function __ZN7WelsDec20ParseEndOfSliceCabacEPNS_21TagWelsDecoderContextERj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 512232|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZN7WelsDec20DecodeTerminateCabacEPNS_19SWelsCabacDecEngineERj($3,$1)|0);
 return ($4|0);
}
function __ZN7WelsDec25RestoreCabacDecEngineToBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >> 3;
 $5 = ((($0)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (0 - ($4))|0;
 $8 = (($6) + ($7)|0);
 HEAP32[$5>>2] = $8;
 HEAP32[$2>>2] = 0;
 $9 = ((($1)) + 24|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$1>>2] = $11;
 $12 = HEAP32[$5>>2]|0;
 $13 = ((($1)) + 16|0);
 HEAP32[$13>>2] = $12;
 $14 = ((($1)) + 20|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($1)) + 12|0);
 HEAP32[$15>>2] = 0;
 return;
}
function __ZN7WelsDec30ParseTransformSize8x8FlagCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 512232|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 512107|0);
 $7 = ((($1)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $35 = 0;
 } else {
  $10 = ((($0)) + 241932|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 3944|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($11)) + 4040|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + -1)|0;
  $17 = (($13) + ($16)|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = $18&255;
  $35 = $19;
 }
 $20 = HEAP32[$1>>2]|0;
 $21 = ($20|0)==(0);
 if ($21) {
  $36 = 0;
 } else {
  $22 = ((($0)) + 241932|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 3944|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($23)) + 4040|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($23)) + 4044|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($27) - ($29))|0;
  $31 = (($25) + ($30)|0);
  $32 = HEAP8[$31>>0]|0;
  $33 = $32&255;
  $36 = $33;
 }
 $34 = (($36) + ($35))|0;
 $37 = (($6) + ($34<<1)|0);
 $38 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$37,$3)|0);
 $39 = ($38|0)==(0);
 if (!($39)) {
  $$1 = $38;
  STACKTOP = sp;return ($$1|0);
 }
 $40 = HEAP32[$3>>2]|0;
 $41 = ($40|0)!=(0);
 $42 = $41&1;
 HEAP8[$2>>0] = $42;
 $$1 = 0;
 STACKTOP = sp;return ($$1|0);
}
function __ZN7WelsDec17ParseCbpInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$6 = 0, $$lobit122 = 0, $$mask = 0, $$mask109 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $17 = 0;$34 = 0;
 } else {
  $6 = ((($1)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(512);
  if ($8) {
   $17 = 0;$34 = 0;
  } else {
   $9 = ((($1)) + 32|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 & 8;
   $12 = ($11<<24>>24)==(0);
   $13 = ($10&255) >>> 1;
   $14 = $13 & 2;
   $15 = $14 ^ 2;
   $phitmp = $15&255;
   $17 = $12;$34 = $phitmp;
  }
 }
 $16 = $17&1;
 $18 = ((($1)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0);
 if ($20) {
  $32 = 0;$35 = 0;
 } else {
  $21 = ((($1)) + 16|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($22|0)==(512);
  if ($23) {
   $32 = 0;$35 = 0;
  } else {
   $24 = ((($1)) + 33|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = ($25&255) >>> 1;
   $$lobit122 = $26 & 1;
   $27 = $$lobit122 ^ 1;
   $28 = $27&255;
   $29 = $25 & 8;
   $30 = ($29<<24>>24)==(0);
   $32 = $30;$35 = $28;
  }
 }
 $31 = $32&1;
 $33 = $35 | $34;
 $36 = ((($0)) + 512232|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($0)) + 511455|0);
 $39 = (($38) + ($33<<1)|0);
 $40 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($37,$39,$3)|0);
 $41 = ($40|0)==(0);
 if (!($41)) {
  $$6 = $40;
  STACKTOP = sp;return ($$6|0);
 }
 $42 = HEAP32[$3>>2]|0;
 $43 = ($42|0)!=(0);
 if ($43) {
  $44 = HEAP32[$2>>2]|0;
  $45 = (($44) + 1)|0;
  HEAP32[$2>>2] = $45;
 }
 $46 = $43 ^ 1;
 $47 = $46&1;
 $48 = $16 << 1;
 $49 = $47 | $48;
 $50 = HEAP32[$36>>2]|0;
 $51 = (($38) + ($49<<1)|0);
 $52 = ((($3)) + 4|0);
 $53 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($50,$51,$52)|0);
 $54 = ($53|0)==(0);
 if (!($54)) {
  $$6 = $53;
  STACKTOP = sp;return ($$6|0);
 }
 $55 = HEAP32[$52>>2]|0;
 $56 = ($55|0)==(0);
 if (!($56)) {
  $57 = HEAP32[$2>>2]|0;
  $58 = (($57) + 2)|0;
  HEAP32[$2>>2] = $58;
 }
 $59 = HEAP32[$3>>2]|0;
 $60 = ($59|0)==(0);
 $61 = $60&1;
 $62 = $61 << 1;
 $63 = $62 | $31;
 $64 = HEAP32[$36>>2]|0;
 $65 = (($38) + ($63<<1)|0);
 $66 = ((($3)) + 8|0);
 $67 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($64,$65,$66)|0);
 $68 = ($67|0)==(0);
 if (!($68)) {
  $$6 = $67;
  STACKTOP = sp;return ($$6|0);
 }
 $69 = HEAP32[$66>>2]|0;
 $70 = ($69|0)!=(0);
 if ($70) {
  $71 = HEAP32[$2>>2]|0;
  $72 = (($71) + 4)|0;
  HEAP32[$2>>2] = $72;
 }
 $73 = HEAP32[$52>>2]|0;
 $74 = ($73|0)==(0);
 $75 = $74&1;
 $76 = $70 ^ 1;
 $77 = $76&1;
 $78 = $75 << 1;
 $79 = $78 | $77;
 $80 = HEAP32[$36>>2]|0;
 $81 = (($38) + ($79<<1)|0);
 $82 = ((($3)) + 12|0);
 $83 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($80,$81,$82)|0);
 $84 = ($83|0)==(0);
 if (!($84)) {
  $$6 = $83;
  STACKTOP = sp;return ($$6|0);
 }
 $85 = HEAP32[$82>>2]|0;
 $86 = ($85|0)==(0);
 if (!($86)) {
  $87 = HEAP32[$2>>2]|0;
  $88 = (($87) + 8)|0;
  HEAP32[$2>>2] = $88;
 }
 $89 = ((($0)) + 241924|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($90)) + 318|0);
 $92 = HEAP8[$91>>0]|0;
 $93 = ($92<<24>>24)==(0);
 if ($93) {
  $$6 = 0;
  STACKTOP = sp;return ($$6|0);
 }
 $94 = HEAP32[$1>>2]|0;
 $95 = ($94|0)==(0);
 if ($95) {
  $103 = 0;
 } else {
  $96 = ((($1)) + 20|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ($97|0)==(512);
  if ($98) {
   $103 = 1;
  } else {
   $99 = ((($1)) + 32|0);
   $100 = HEAP8[$99>>0]|0;
   $101 = ($100&255)>(15);
   $103 = $101;
  }
 }
 $102 = $103&1;
 $104 = HEAP32[$18>>2]|0;
 $105 = ($104|0)==(0);
 if ($105) {
  $113 = 0;
 } else {
  $106 = ((($1)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = ($107|0)==(512);
  if ($108) {
   $113 = 1;
  } else {
   $109 = ((($1)) + 33|0);
   $110 = HEAP8[$109>>0]|0;
   $111 = ($110&255)>(15);
   $113 = $111;
  }
 }
 $112 = $113&1;
 $114 = $102 << 1;
 $115 = $112 | $114;
 $116 = HEAP32[$36>>2]|0;
 $117 = ((($0)) + 511463|0);
 $118 = (($117) + ($115<<1)|0);
 $119 = ((($3)) + 16|0);
 $120 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($116,$118,$119)|0);
 $121 = ($120|0)==(0);
 if (!($121)) {
  $$6 = $120;
  STACKTOP = sp;return ($$6|0);
 }
 $122 = HEAP32[$119>>2]|0;
 $123 = ($122|0)==(0);
 if ($123) {
  $$6 = 0;
  STACKTOP = sp;return ($$6|0);
 }
 $124 = HEAP32[$1>>2]|0;
 $125 = ($124|0)==(0);
 if ($125) {
  $134 = 0;
 } else {
  $126 = ((($1)) + 20|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ($127|0)==(512);
  if ($128) {
   $134 = 1;
  } else {
   $129 = ((($1)) + 32|0);
   $130 = HEAP8[$129>>0]|0;
   $131 = $130 << 24 >> 24;
   $$mask109 = $131 & -16;
   $132 = ($$mask109|0)==(32);
   $134 = $132;
  }
 }
 $133 = $134&1;
 $135 = HEAP32[$18>>2]|0;
 $136 = ($135|0)==(0);
 if ($136) {
  $145 = 0;
 } else {
  $137 = ((($1)) + 16|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = ($138|0)==(512);
  if ($139) {
   $145 = 1;
  } else {
   $140 = ((($1)) + 33|0);
   $141 = HEAP8[$140>>0]|0;
   $142 = $141 << 24 >> 24;
   $$mask = $142 & -16;
   $143 = ($$mask|0)==(32);
   $145 = $143;
  }
 }
 $144 = $145&1;
 $146 = $133 << 1;
 $147 = $144 | $146;
 $148 = HEAP32[$36>>2]|0;
 $149 = ((($0)) + 511471|0);
 $150 = (($149) + ($147<<1)|0);
 $151 = ((($3)) + 20|0);
 $152 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($148,$150,$151)|0);
 $153 = ($152|0)==(0);
 if (!($153)) {
  $$6 = $152;
  STACKTOP = sp;return ($$6|0);
 }
 $154 = HEAP32[$151>>2]|0;
 $155 = (($154) + 4)|0;
 $156 = 1 << $155;
 $157 = HEAP32[$2>>2]|0;
 $158 = (($156) + ($157))|0;
 HEAP32[$2>>2] = $158;
 $$6 = 0;
 STACKTOP = sp;return ($$6|0);
}
function __ZN7WelsDec17ParseDeltaQpCabacEPNS_21TagWelsDecoderContextERi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($0)) + 241932|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = 0;
 $5 = ((($0)) + 511429|0);
 $6 = ((($4)) + 3884|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0);
 $9 = $8&1;
 $10 = ((($0)) + 512232|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($5) + ($9<<1)|0);
 $13 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($11,$12,$2)|0);
 $14 = ($13|0)==(0);
 if (!($14)) {
  $$2 = $13;
  STACKTOP = sp;return ($$2|0);
 }
 $15 = HEAP32[$2>>2]|0;
 $16 = ($15|0)==(0);
 if ($16) {
  $$pre = HEAP32[$1>>2]|0;
  $28 = $$pre;
 } else {
  $17 = HEAP32[$10>>2]|0;
  $18 = ((($0)) + 511433|0);
  $19 = (__ZN7WelsDec19DecodeUnaryBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementEiRj($17,$18,1,$2)|0);
  $20 = ($19|0)==(0);
  if (!($20)) {
   $$2 = $19;
   STACKTOP = sp;return ($$2|0);
  }
  $21 = HEAP32[$2>>2]|0;
  $22 = (($21) + 1)|0;
  HEAP32[$2>>2] = $22;
  $23 = (($21) + 2)|0;
  $24 = $23 >>> 1;
  HEAP32[$1>>2] = $24;
  $25 = $22 & 1;
  $26 = ($25|0)==(0);
  if ($26) {
   $27 = (0 - ($24))|0;
   HEAP32[$1>>2] = $27;
   $28 = $27;
  } else {
   $28 = $24;
  }
 }
 HEAP32[$6>>2] = $28;
 $$2 = 0;
 STACKTOP = sp;return ($$2|0);
}
function __ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0 = 0, $$078 = 0, $$079 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$off = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $exitcond = 0, $exitcond86 = 0, $exitcond87 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $10 = sp + 68|0;
 $11 = sp + 64|0;
 $12 = sp;
 HEAP32[$10>>2] = 0;
 dest=$12; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 do {
  switch ($6|0) {
  case 9:  {
   $$078 = 1;$$079 = $6;
   break;
  }
  case 10:  {
   $$078 = 2;$$079 = $6;
   break;
  }
  case 11:  {
   $$078 = 0;$$079 = 3;
   break;
  }
  case 7:  {
   $$078 = 1;$$079 = $6;
   break;
  }
  case 8:  {
   $$078 = 2;$$079 = $6;
   break;
  }
  case 18:  {
   $$078 = 7;$$079 = 6;
   break;
  }
  case 17:  {
   $$078 = 6;$$079 = 6;
   break;
  }
  case 12:  {
   $$078 = 3;$$079 = 3;
   break;
  }
  case 13:  {
   $$078 = 4;$$079 = 7;
   break;
  }
  case 14:  {
   $$078 = 5;$$079 = 8;
   break;
  }
  case 15:  {
   $$078 = 4;$$079 = 9;
   break;
  }
  case 16:  {
   $$078 = 5;$$079 = 10;
   break;
  }
  default: {
   $$078 = 0;$$079 = $6;
  }
  }
 } while(0);
 $13 = ((($9)) + 562526|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)==(0);
 $16 = $8&255;
 if ($15) {
  $20 = (16 + ($16<<4)|0);
  $53 = $20;
 } else {
  $17 = (((($9)) + 562472|0) + ($$078<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($18) + ($16<<5)|0);
  $53 = $19;
 }
 $21 = (__ZN7WelsDec17ParseCbfInfoCabacEPNS_16TagNeighborAvailEPhiiPNS_21TagWelsDecoderContextERj($0,$1,$3,$$079,$9,$11)|0);
 $22 = ($21|0)==(0);
 if (!($22)) {
  $$3 = $21;
  STACKTOP = sp;return ($$3|0);
 }
 $23 = HEAP32[$11>>2]|0;
 $24 = ($23|0)==(0);
 do {
  if ($24) {
   $33 = 0;
  } else {
   $25 = (__ZN7WelsDec24ParseSignificantMapCabacEPiiPNS_21TagWelsDecoderContextERj($12,$$079,$9,$10)|0);
   $26 = ($25|0)==(0);
   if (!($26)) {
    $$3 = $25;
    STACKTOP = sp;return ($$3|0);
   }
   $27 = (__ZN7WelsDec26ParseSignificantCoeffCabacEPiiPNS_21TagWelsDecoderContextE($12,$$079,$9)|0);
   $28 = ($27|0)==(0);
   if ($28) {
    $$pre = HEAP32[$10>>2]|0;
    $33 = $$pre;
    break;
   } else {
    $$3 = $27;
    STACKTOP = sp;return ($$3|0);
   }
  }
 } while(0);
 $29 = (15583 + ($3)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = $33&255;
 $34 = (($1) + ($31)|0);
 HEAP8[$34>>0] = $32;
 $35 = ($33|0)==(0);
 if ($35) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $36 = ($$079|0)==(1);
 if ($36) {
  $$0 = 0;
  while(1) {
   $37 = (($12) + ($$0<<2)|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ($38|0)==(0);
   if (!($39)) {
    $40 = $38&65535;
    $41 = (($5) + ($$0)|0);
    $42 = HEAP8[$41>>0]|0;
    $43 = $42&255;
    $44 = (($7) + ($43<<1)|0);
    HEAP16[$44>>1] = $40;
   }
   $45 = (($$0) + 1)|0;
   $exitcond = ($45|0)==(16);
   if ($exitcond) {
    $$3 = 0;
    break;
   } else {
    $$0 = $45;
   }
  }
  STACKTOP = sp;return ($$3|0);
 }
 $$off = (($$079) + -7)|0;
 $46 = ($$off>>>0)<(2);
 if ($46) {
  $$1 = 0;
  while(1) {
   $47 = (($12) + ($$1<<2)|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==(0);
   if (!($49)) {
    $50 = HEAP8[$13>>0]|0;
    $51 = ($50<<24>>24)!=(0);
    $52 = HEAP16[$53>>1]|0;
    $54 = $52&65535;
    $55 = Math_imul($54, $48)|0;
    $56 = $55 >>> 4;
    $57 = $51 ? $56 : $55;
    $58 = $57&65535;
    $59 = (($5) + ($$1)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60&255;
    $62 = (($7) + ($61<<1)|0);
    HEAP16[$62>>1] = $58;
   }
   $63 = (($$1) + 1)|0;
   $exitcond86 = ($63|0)==(16);
   if ($exitcond86) {
    $$3 = 0;
    break;
   } else {
    $$1 = $63;
   }
  }
  STACKTOP = sp;return ($$3|0);
 } else {
  $$2 = 0;
 }
 while(1) {
  $64 = (($12) + ($$2<<2)|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ($65|0)==(0);
  if (!($66)) {
   $67 = HEAP8[$13>>0]|0;
   $68 = ($67<<24>>24)==(0);
   $69 = (($5) + ($$2)|0);
   $70 = HEAP8[$69>>0]|0;
   $71 = $70&255;
   if ($68) {
    $77 = $71 & 7;
    $78 = (($53) + ($77<<1)|0);
    $79 = HEAP16[$78>>1]|0;
    $80 = $79&65535;
    $81 = Math_imul($80, $65)|0;
    $83 = $81;
   } else {
    $72 = (($53) + ($71<<1)|0);
    $73 = HEAP16[$72>>1]|0;
    $74 = $73&65535;
    $75 = Math_imul($74, $65)|0;
    $76 = $75 >> 4;
    $83 = $76;
   }
   $82 = $83&65535;
   $84 = (($7) + ($71<<1)|0);
   HEAP16[$84>>1] = $82;
  }
  $85 = (($$2) + 1)|0;
  $exitcond87 = ($85|0)==(16);
  if ($exitcond87) {
   $$3 = 0;
   break;
  } else {
   $$2 = $85;
  }
 }
 STACKTOP = sp;return ($$3|0);
}
function __ZN7WelsDec26ParseResidualBlockCabac8x8EPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0 = 0, $$046 = 0, $$046$us = 0, $$057 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $div = 0;
 var $exitcond = 0, $exitcond59 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $10 = sp + 256|0;
 $11 = sp;
 HEAP32[$10>>2] = 0;
 _memset(($11|0),0,256)|0;
 do {
  switch ($6|0) {
  case 9:  {
   $$0 = -5;$$057 = $6;
   break;
  }
  case 10:  {
   $$0 = -4;$$057 = $6;
   break;
  }
  case 11:  {
   $$0 = -6;$$057 = 3;
   break;
  }
  case 7:  {
   $$0 = -5;$$057 = $6;
   break;
  }
  case 8:  {
   $$0 = -4;$$057 = $6;
   break;
  }
  case 18:  {
   $$0 = 1;$$057 = 6;
   break;
  }
  case 17:  {
   $$0 = 0;$$057 = 6;
   break;
  }
  case 12:  {
   $$0 = -3;$$057 = 3;
   break;
  }
  case 13:  {
   $$0 = -2;$$057 = 7;
   break;
  }
  case 14:  {
   $$0 = -1;$$057 = 8;
   break;
  }
  case 15:  {
   $$0 = -2;$$057 = 9;
   break;
  }
  case 16:  {
   $$0 = -1;$$057 = 10;
   break;
  }
  default: {
   $$0 = -6;$$057 = $6;
  }
  }
 } while(0);
 $12 = ((($9)) + 562526|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)==(0);
 if ($14) {
  $19 = $8&255;
  $20 = (848 + ($19<<7)|0);
  $61 = $20;
 } else {
  $15 = (((($9)) + 562496|0) + ($$0<<2)|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = $8&255;
  $18 = (($16) + ($17<<7)|0);
  $61 = $18;
 }
 $21 = (__ZN7WelsDec24ParseSignificantMapCabacEPiiPNS_21TagWelsDecoderContextERj($11,$$057,$9,$10)|0);
 $22 = ($21|0)==(0);
 if (!($22)) {
  $$2 = $21;
  STACKTOP = sp;return ($$2|0);
 }
 $23 = (__ZN7WelsDec26ParseSignificantCoeffCabacEPiiPNS_21TagWelsDecoderContextE($11,$$057,$9)|0);
 $24 = ($23|0)==(0);
 if (!($24)) {
  $$2 = $23;
  STACKTOP = sp;return ($$2|0);
 }
 $25 = HEAP32[$10>>2]|0;
 $26 = $25&255;
 $27 = (($3) + 3)|0;
 $28 = (15583 + ($27)|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = $29&255;
 $31 = (($1) + ($30)|0);
 HEAP8[$31>>0] = $26;
 $32 = (($3) + 2)|0;
 $33 = (15583 + ($32)|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = $34&255;
 $36 = (($1) + ($35)|0);
 HEAP8[$36>>0] = $26;
 $37 = (($3) + 1)|0;
 $38 = (15583 + ($37)|0);
 $39 = HEAP8[$38>>0]|0;
 $40 = $39&255;
 $41 = (($1) + ($40)|0);
 HEAP8[$41>>0] = $26;
 $42 = (15583 + ($3)|0);
 $43 = HEAP8[$42>>0]|0;
 $44 = $43&255;
 $45 = (($1) + ($44)|0);
 HEAP8[$45>>0] = $26;
 $46 = ($25|0)!=(0);
 $47 = ($$057|0)==(6);
 $or$cond = $47 & $46;
 if (!($or$cond)) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $48 = ($8&255)>(35);
 $div = (($8&255) / 6)&-1;
 $49 = $div&255;
 $50 = (($49) + -6)|0;
 $51 = (5 - ($49))|0;
 $52 = 1 << $51;
 $53 = (6 - ($49))|0;
 if ($48) {
  $$046$us = 0;
  while(1) {
   $54 = (($11) + ($$046$us<<2)|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ($55|0)==(0);
   if (!($56)) {
    $57 = (($5) + ($$046$us)|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = (($61) + ($59<<1)|0);
    $62 = HEAP16[$60>>1]|0;
    $63 = $62&65535;
    $64 = Math_imul($63, $55)|0;
    $65 = $64 << $50;
    $66 = $65&65535;
    $67 = (($7) + ($59<<1)|0);
    HEAP16[$67>>1] = $66;
   }
   $68 = (($$046$us) + 1)|0;
   $exitcond = ($68|0)==(64);
   if ($exitcond) {
    $$2 = 0;
    break;
   } else {
    $$046$us = $68;
   }
  }
  STACKTOP = sp;return ($$2|0);
 } else {
  $$046 = 0;
  while(1) {
   $69 = (($11) + ($$046<<2)|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($70|0)==(0);
   if (!($71)) {
    $72 = (($5) + ($$046)|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = $73&255;
    $75 = (($61) + ($74<<1)|0);
    $76 = HEAP16[$75>>1]|0;
    $77 = $76&65535;
    $78 = Math_imul($77, $70)|0;
    $79 = (($78) + ($52))|0;
    $80 = $79 >> $53;
    $81 = $80&65535;
    $82 = (($7) + ($74<<1)|0);
    HEAP16[$82>>1] = $81;
   }
   $83 = (($$046) + 1)|0;
   $exitcond59 = ($83|0)==(64);
   if ($exitcond59) {
    $$2 = 0;
    break;
   } else {
    $$046 = $83;
   }
  }
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function __ZN7WelsDec24ParseSignificantMapCabacEPiiPNS_21TagWelsDecoderContextERj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$053$lcssa = 0, $$05362 = 0, $$05362$us = 0, $$054$lcssa59 = 0, $$05460 = 0, $$05460$us = 0, $$4 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $5 = ($1|0)==(6);
 $6 = $5 ? 402 : 105;
 $7 = (((($2)) + 511309|0) + ($6<<1)|0);
 $8 = (10466 + ($1<<1)|0);
 $9 = HEAP16[$8>>1]|0;
 $10 = $9 << 16 >> 16;
 $11 = (($7) + ($10<<1)|0);
 $12 = $5 ? 417 : 166;
 $13 = (((($2)) + 511309|0) + ($12<<1)|0);
 $14 = (10466 + ($1<<1)|0);
 $15 = HEAP16[$14>>1]|0;
 $16 = $15 << 16 >> 16;
 $17 = (($13) + ($16<<1)|0);
 HEAP32[$3>>2] = 0;
 $18 = (10422 + ($1<<1)|0);
 $19 = HEAP16[$18>>1]|0;
 $20 = $19 << 16 >> 16;
 $21 = ($1|0)==(0);
 L1: do {
  if ($21) {
   $$053$lcssa = $0;
  } else {
   $22 = ((($2)) + 512232|0);
   L3: do {
    if ($5) {
     $$05362$us = $0;$$05460$us = 0;
     while(1) {
      $23 = (25738 + ($$05460$us)|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = $24&255;
      $26 = HEAP32[$22>>2]|0;
      $27 = (($11) + ($25<<1)|0);
      $28 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($26,$27,$4)|0);
      $29 = ($28|0)==(0);
      if (!($29)) {
       $$4 = $28;
       label = 17;
       break;
      }
      $30 = HEAP32[$4>>2]|0;
      $31 = ($30|0)==(0);
      $32 = ((($$05362$us)) + 4|0);
      if ($31) {
       HEAP32[$$05362$us>>2] = 0;
      } else {
       HEAP32[$$05362$us>>2] = 1;
       $33 = HEAP32[$3>>2]|0;
       $34 = (($33) + 1)|0;
       HEAP32[$3>>2] = $34;
       $35 = (25802 + ($$05460$us)|0);
       $36 = HEAP8[$35>>0]|0;
       $37 = $36&255;
       $38 = HEAP32[$22>>2]|0;
       $39 = (($17) + ($37<<1)|0);
       $40 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($38,$39,$4)|0);
       $41 = ($40|0)==(0);
       if (!($41)) {
        $$4 = $40;
        label = 17;
        break;
       }
       $42 = HEAP32[$4>>2]|0;
       $43 = ($42|0)==(0);
       if (!($43)) {
        $$054$lcssa59 = $$05460$us;$$lcssa = $32;
        break L3;
       }
      }
      $44 = (($$05460$us) + 1)|0;
      $45 = ($20|0)>($44|0);
      if ($45) {
       $$05362$us = $32;$$05460$us = $44;
      } else {
       $$053$lcssa = $32;
       break L1;
      }
     }
     if ((label|0) == 17) {
      STACKTOP = sp;return ($$4|0);
     }
    } else {
     $$05362 = $0;$$05460 = 0;
     while(1) {
      $46 = HEAP32[$22>>2]|0;
      $47 = (($11) + ($$05460<<1)|0);
      $48 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($46,$47,$4)|0);
      $49 = ($48|0)==(0);
      if (!($49)) {
       $$4 = $48;
       label = 17;
       break;
      }
      $50 = HEAP32[$4>>2]|0;
      $51 = ($50|0)==(0);
      $52 = ((($$05362)) + 4|0);
      if ($51) {
       HEAP32[$$05362>>2] = 0;
      } else {
       HEAP32[$$05362>>2] = 1;
       $53 = HEAP32[$3>>2]|0;
       $54 = (($53) + 1)|0;
       HEAP32[$3>>2] = $54;
       $55 = HEAP32[$22>>2]|0;
       $56 = (($17) + ($$05460<<1)|0);
       $57 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($55,$56,$4)|0);
       $58 = ($57|0)==(0);
       if (!($58)) {
        $$4 = $57;
        label = 17;
        break;
       }
       $59 = HEAP32[$4>>2]|0;
       $60 = ($59|0)==(0);
       if (!($60)) {
        $$054$lcssa59 = $$05460;$$lcssa = $52;
        break L3;
       }
      }
      $63 = (($$05460) + 1)|0;
      $64 = ($20|0)>($63|0);
      if ($64) {
       $$05362 = $52;$$05460 = $63;
      } else {
       $$053$lcssa = $52;
       break L1;
      }
     }
     if ((label|0) == 17) {
      STACKTOP = sp;return ($$4|0);
     }
    }
   } while(0);
   $61 = (($20) - ($$054$lcssa59))|0;
   $62 = $61 << 2;
   _memset(($$lcssa|0),0,($62|0))|0;
   $$4 = 0;
   STACKTOP = sp;return ($$4|0);
  }
 } while(0);
 HEAP32[$$053$lcssa>>2] = 1;
 $65 = HEAP32[$3>>2]|0;
 $66 = (($65) + 1)|0;
 HEAP32[$3>>2] = $66;
 $$4 = 0;
 STACKTOP = sp;return ($$4|0);
}
function __ZN7WelsDec26ParseSignificantCoeffCabacEPiiPNS_21TagWelsDecoderContextE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$06582 = 0, $$06981 = 0, $$07080 = 0, $$07379 = 0, $$171 = 0, $$174 = 0, $$272 = 0, $$275 = 0, $$6 = 0, $$78 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ($1|0)==(6);
 $5 = $4 ? 426 : 227;
 $6 = (((($2)) + 511309|0) + ($5<<1)|0);
 $7 = (10400 + ($1<<1)|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8 << 16 >> 16;
 $10 = (($6) + ($9<<1)|0);
 $11 = $4 ? 431 : 232;
 $12 = (((($2)) + 511309|0) + ($11<<1)|0);
 $13 = (10400 + ($1<<1)|0);
 $14 = HEAP16[$13>>1]|0;
 $15 = $14 << 16 >> 16;
 $16 = (($12) + ($15<<1)|0);
 $17 = (10422 + ($1<<1)|0);
 $18 = HEAP16[$17>>1]|0;
 $19 = $18 << 16 >> 16;
 $20 = ((($2)) + 512232|0);
 $21 = ($1|0)==(0);
 if ($21) {
  $$6 = 0;
  STACKTOP = sp;return ($$6|0);
 }
 $22 = (($0) + ($19<<2)|0);
 $23 = (10444 + ($1<<1)|0);
 $24 = HEAP16[$23>>1]|0;
 $25 = $24 << 16 >> 16;
 $$06582 = $19;$$06981 = $22;$$07080 = 0;$$07379 = 1;
 while(1) {
  $26 = HEAP32[$$06981>>2]|0;
  $27 = ($26|0)==(0);
  if ($27) {
   $$272 = $$07080;$$275 = $$07379;
  } else {
   $28 = HEAP32[$20>>2]|0;
   $29 = (($10) + ($$07379<<1)|0);
   $30 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($28,$29,$3)|0);
   $31 = ($30|0)==(0);
   if (!($31)) {
    $$6 = $30;
    label = 13;
    break;
   }
   $32 = HEAP32[$3>>2]|0;
   $33 = HEAP32[$$06981>>2]|0;
   $34 = (($33) + ($32))|0;
   HEAP32[$$06981>>2] = $34;
   $35 = ($34|0)==(2);
   if ($35) {
    $36 = HEAP32[$20>>2]|0;
    $37 = (($16) + ($$07080<<1)|0);
    $38 = (__ZN7WelsDec19DecodeUEGLevelCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($36,$37,$3)|0);
    $39 = ($38|0)==(0);
    if (!($39)) {
     $$6 = $38;
     label = 13;
     break;
    }
    $40 = HEAP32[$3>>2]|0;
    $41 = HEAP32[$$06981>>2]|0;
    $42 = (($41) + ($40))|0;
    HEAP32[$$06981>>2] = $42;
    $43 = (($$07080) + 1)|0;
    $44 = ($43|0)<($25|0);
    $45 = $44 ? $43 : $25;
    $$171 = $45;$$174 = 0;
   } else {
    $46 = ($$07379|0)==(0);
    $47 = (($$07379) + 1)|0;
    $48 = ($47|0)<(4);
    $49 = $48 ? $47 : 4;
    $$78 = $46 ? 0 : $49;
    $$171 = $$07080;$$174 = $$78;
   }
   $50 = HEAP32[$20>>2]|0;
   $51 = (__ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($50,$3)|0);
   $52 = ($51|0)==(0);
   if (!($52)) {
    $$6 = $51;
    label = 13;
    break;
   }
   $53 = HEAP32[$3>>2]|0;
   $54 = ($53|0)==(0);
   if ($54) {
    $$272 = $$171;$$275 = $$174;
   } else {
    $55 = HEAP32[$$06981>>2]|0;
    $56 = (0 - ($55))|0;
    HEAP32[$$06981>>2] = $56;
    $$272 = $$171;$$275 = $$174;
   }
  }
  $57 = ((($$06981)) + -4|0);
  $58 = (($$06582) + -1)|0;
  $59 = ($$06582|0)>(0);
  if ($59) {
   $$06582 = $58;$$06981 = $57;$$07080 = $$272;$$07379 = $$275;
  } else {
   $$6 = 0;
   label = 13;
   break;
  }
 }
 if ((label|0) == 13) {
  STACKTOP = sp;return ($$6|0);
 }
 return (0)|0;
}
function __ZN7WelsDec19DecodeUEGLevelCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$033 = 0, $$4 = 0, $$5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$1,$2)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $$5 = $4;
  STACKTOP = sp;return ($$5|0);
 }
 $6 = HEAP32[$2>>2]|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $$5 = 0;
  STACKTOP = sp;return ($$5|0);
 }
 HEAP32[$2>>2] = 0;
 $$033 = 1;
 while(1) {
  $8 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$1,$3)|0);
  $9 = ($8|0)==(0);
  if (!($9)) {
   $$4 = $8;
   break;
  }
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + 1)|0;
  HEAP32[$2>>2] = $11;
  $12 = (($$033) + 1)|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = ($13|0)!=(0);
  $15 = ($12|0)!=(13);
  $16 = $15 & $14;
  if ($16) {
   $$033 = $12;
  } else {
   label = 6;
   break;
  }
 }
 if ((label|0) == 6) {
  if ($14) {
   $17 = (__ZN7WelsDec20DecodeExpBypassCabacEPNS_19SWelsCabacDecEngineEiRj($0,0,$3)|0);
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = HEAP32[$3>>2]|0;
    $20 = (($19) + 1)|0;
    $21 = HEAP32[$2>>2]|0;
    $22 = (($20) + ($21))|0;
    HEAP32[$2>>2] = $22;
    $$4 = 0;
   } else {
    $$4 = $17;
   }
  } else {
   $$4 = 0;
  }
 }
 $$5 = $$4;
 STACKTOP = sp;return ($$5|0);
}
function __ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$032 = 0, $$037 = 0, $$1 = 0, $$sink = 0, $$sink$i = 0, $$sink31$i = 0, $$sink32$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $not$ = 0, $not$or$cond = 0, $notlhs = 0, $notrhs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = $4;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = ($3|0)<(1);
 if ($11) {
  $12 = ((($0)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($0)) + 24|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($13) - ($15))|0;
  $17 = ($16|0)<(1);
  $18 = $15;
  if ($17) {
   $$0 = 0;$$0$i = 10012;$$037 = 0;
  } else {
   switch ($16|0) {
   case 3:  {
    $19 = HEAP8[$18>>0]|0;
    $20 = $19&255;
    $21 = $20 << 16;
    $22 = ((($18)) + 1|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = $24 << 8;
    $26 = $25 | $21;
    $27 = ((($18)) + 2|0);
    $28 = HEAP8[$27>>0]|0;
    $29 = $28&255;
    $30 = $26 | $29;
    $$sink$i = 24;$$sink31$i = 3;$$sink32$i = $30;
    break;
   }
   case 2:  {
    $31 = HEAP8[$18>>0]|0;
    $32 = $31&255;
    $33 = $32 << 8;
    $34 = ((($18)) + 1|0);
    $35 = HEAP8[$34>>0]|0;
    $36 = $35&255;
    $37 = $33 | $36;
    $$sink$i = 16;$$sink31$i = 2;$$sink32$i = $37;
    break;
   }
   case 1:  {
    $38 = HEAP8[$18>>0]|0;
    $39 = $38&255;
    $$sink$i = 8;$$sink31$i = 1;$$sink32$i = $39;
    break;
   }
   default: {
    $40 = HEAP8[$18>>0]|0;
    $41 = $40&255;
    $42 = $41 << 24;
    $43 = ((($18)) + 1|0);
    $44 = HEAP8[$43>>0]|0;
    $45 = $44&255;
    $46 = $45 << 16;
    $47 = $46 | $42;
    $48 = ((($18)) + 2|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = $49&255;
    $51 = $50 << 8;
    $52 = $47 | $51;
    $53 = ((($18)) + 3|0);
    $54 = HEAP8[$53>>0]|0;
    $55 = $54&255;
    $56 = $52 | $55;
    $$sink$i = 32;$$sink31$i = 4;$$sink32$i = $56;
   }
   }
   $57 = (($18) + ($$sink31$i)|0);
   HEAP32[$14>>2] = $57;
   $$0 = $$sink$i;$$0$i = 0;$$037 = $$sink32$i;
  }
  $58 = (_bitshift64Shl(($7|0),($10|0),($$0|0))|0);
  $59 = tempRet0;
  $60 = $58 | $$037;
  $notlhs = ($$0$i|0)==(0);
  $notrhs = ($$0|0)!=(0);
  $not$or$cond = $notrhs | $notlhs;
  if ($not$or$cond) {
   $$032 = $$0;$70 = $59;$72 = $60;
  } else {
   $$1 = $$0$i;
   return ($$1|0);
  }
 } else {
  $$032 = $3;$70 = $10;$72 = $7;
 }
 $61 = (($$032) + -1)|0;
 $62 = $0;
 $63 = $62;
 $64 = HEAP32[$63>>2]|0;
 $65 = (($62) + 4)|0;
 $66 = $65;
 $67 = HEAP32[$66>>2]|0;
 $68 = (_bitshift64Shl(($64|0),($67|0),($61|0))|0);
 $69 = tempRet0;
 $71 = ($70>>>0)<($69>>>0);
 $73 = ($72>>>0)<($68>>>0);
 $74 = ($70|0)==($69|0);
 $75 = $74 & $73;
 $76 = $71 | $75;
 HEAP32[$2>>2] = $61;
 $77 = $76 ? 0 : $68;
 $78 = $76 ? 0 : $69;
 $79 = (_i64Subtract(($72|0),($70|0),($77|0),($78|0))|0);
 $80 = tempRet0;
 $not$ = $76 ^ 1;
 $$sink = $not$&1;
 $81 = $4;
 $82 = $81;
 HEAP32[$82>>2] = $79;
 $83 = (($81) + 4)|0;
 $84 = $83;
 HEAP32[$84>>2] = $80;
 HEAP32[$1>>2] = $$sink;
 $$1 = 0;
 return ($$1|0);
}
function __ZN7WelsDec20DecodeExpBypassCabacEPNS_19SWelsCabacDecEngineEiRj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$031 = 0, $$028$ph52 = 0, $$031$lcssa = 0, $$03144 = 0, $$032$ph51 = 0, $$4 = 0, $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = (__ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($0,$3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$028$ph52 = $1;$$032$ph51 = 0;
 } else {
  $$4 = $4;
  STACKTOP = sp;return ($$4|0);
 }
 L3: while(1) {
  L5: while(1) {
   $13 = HEAP32[$3>>2]|0;
   switch ($13|0) {
   case 0:  {
    label = 6;
    break L3;
    break;
   }
   case 1:  {
    break L5;
    break;
   }
   default: {
   }
   }
   $11 = (__ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($0,$3)|0);
   $12 = ($11|0)==(0);
   if (!($12)) {
    $$4 = $11;
    label = 10;
    break L3;
   }
  }
  $6 = 1 << $$028$ph52;
  $7 = (($6) + ($$032$ph51))|0;
  $8 = (($$028$ph52) + 1)|0;
  $9 = (__ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($0,$3)|0);
  $10 = ($9|0)==(0);
  if ($10) {
   $$028$ph52 = $8;$$032$ph51 = $7;
  } else {
   $$4 = $9;
   label = 10;
   break;
  }
 }
 if ((label|0) == 6) {
  $14 = ($$028$ph52|0)==(0);
  L12: do {
   if ($14) {
    $$031$lcssa = 0;
   } else {
    $$03144 = 0;$$in = $$028$ph52;
    while(1) {
     $15 = (($$in) + -1)|0;
     $16 = (__ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($0,$3)|0);
     $17 = ($16|0)==(0);
     if (!($17)) {
      $$4 = $16;
      break;
     }
     $18 = HEAP32[$3>>2]|0;
     $19 = ($18|0)==(1);
     $20 = 1 << $15;
     $21 = $19 ? $20 : 0;
     $$$031 = $21 | $$03144;
     $22 = ($15|0)==(0);
     if ($22) {
      $$031$lcssa = $$$031;
      break L12;
     } else {
      $$03144 = $$$031;$$in = $15;
     }
    }
    STACKTOP = sp;return ($$4|0);
   }
  } while(0);
  $23 = (($$031$lcssa) + ($$032$ph51))|0;
  HEAP32[$2>>2] = $23;
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 }
 else if ((label|0) == 10) {
  STACKTOP = sp;return ($$4|0);
 }
 return (0)|0;
}
function __ZN7WelsDec17ParseCbfInfoCabacEPNS_16TagNeighborAvailEPhiiPNS_21TagWelsDecoderContextERj($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$085 = 0, $$087 = 0, $$186 = 0, $$188 = 0, $$2 = 0, $$94 = 0, $$95 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $phitmp = 0, $phitmp91 = 0, $phitmp92 = 0, $phitmp93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($4)) + 241932|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 4040|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 4044|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) - ($11))|0;
 $13 = (($9) + -1)|0;
 $14 = ((($7)) + 3960|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($7)) + 3908|0);
 $17 = HEAP32[$16>>2]|0;
 HEAP32[$5>>2] = 0;
 $18 = (($17) + ($9<<1)|0);
 $19 = HEAP16[$18>>1]|0;
 $20 = $19 & 519;
 $21 = ($20<<16>>16)!=(0);
 $22 = $21&1;
 switch ($3|0) {
 case 1: case 7: case 8:  {
  $23 = HEAP32[$0>>2]|0;
  $24 = ($23|0)==(0);
  if ($24) {
   $$087 = $22;
  } else {
   $25 = (($17) + ($12<<1)|0);
   $26 = HEAP16[$25>>1]|0;
   $27 = ($26<<16>>16)==(512);
   if ($27) {
    $$087 = 1;
   } else {
    $28 = (($15) + ($12<<1)|0);
    $29 = HEAP16[$28>>1]|0;
    $30 = $29&65535;
    $31 = 1 << $3;
    $32 = $30 & $31;
    $33 = ($32|0)!=(0);
    $phitmp93 = $33&1;
    $$087 = $phitmp93;
   }
  }
  $34 = ((($0)) + 4|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ($35|0)==(0);
  if ($36) {
   $$085 = $22;
  } else {
   $37 = (($17) + ($13<<1)|0);
   $38 = HEAP16[$37>>1]|0;
   $39 = ($38<<16>>16)==(512);
   if ($39) {
    $$085 = 1;
   } else {
    $40 = (($15) + ($13<<1)|0);
    $41 = HEAP16[$40>>1]|0;
    $42 = $41&65535;
    $43 = 1 << $3;
    $44 = $42 & $43;
    $45 = ($44|0)!=(0);
    $phitmp92 = $45&1;
    $$085 = $phitmp92;
   }
  }
  $46 = ($$087 << 1)&255;
  $47 = $$085 | $46;
  $48 = $47&255;
  $49 = ((($4)) + 512232|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($4)) + 511479|0);
  $52 = (10488 + ($3<<1)|0);
  $53 = HEAP16[$52>>1]|0;
  $54 = $53 << 16 >> 16;
  $55 = (($51) + ($54<<1)|0);
  $56 = (($55) + ($48<<1)|0);
  $57 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($50,$56,$5)|0);
  $58 = ($57|0)==(0);
  if (!($58)) {
   $$2 = $57;
   return ($$2|0);
  }
  $59 = HEAP32[$5>>2]|0;
  $60 = ($59|0)==(0);
  if (!($60)) {
   $61 = 1 << $3;
   $62 = (($15) + ($9<<1)|0);
   $63 = HEAP16[$62>>1]|0;
   $64 = $63&65535;
   $65 = $64 | $61;
   $66 = $65&65535;
   HEAP16[$62>>1] = $66;
  }
  break;
 }
 default: {
  $67 = (15583 + ($2)|0);
  $68 = HEAP8[$67>>0]|0;
  $69 = $68&255;
  $70 = (($69) + -8)|0;
  $71 = (($1) + ($70)|0);
  $72 = HEAP8[$71>>0]|0;
  switch ($72<<24>>24) {
  case -1:  {
   $$188 = $22;
   break;
  }
  case 0:  {
   $73 = 13434828 >>> $2;
   $74 = $73 & 1;
   $75 = ($74|0)==(0);
   $$94 = $75 ? $12 : $9;
   $76 = (($17) + ($$94<<1)|0);
   $77 = HEAP16[$76>>1]|0;
   $78 = ($77<<16>>16)==(512);
   $phitmp91 = $78&1;
   $$188 = $phitmp91;
   break;
  }
  default: {
   $$188 = 1;
  }
  }
  $79 = (($69) + -1)|0;
  $80 = (($1) + ($79)|0);
  $81 = HEAP8[$80>>0]|0;
  switch ($81<<24>>24) {
  case -1:  {
   $$186 = $22;
   break;
  }
  case 0:  {
   $82 = 11205370 >>> $2;
   $83 = $82 & 1;
   $84 = ($83|0)==(0);
   $$95 = $84 ? $13 : $9;
   $85 = (($17) + ($$95<<1)|0);
   $86 = HEAP16[$85>>1]|0;
   $87 = ($86<<16>>16)==(512);
   $phitmp = $87&1;
   $$186 = $phitmp;
   break;
  }
  default: {
   $$186 = 1;
  }
  }
  $88 = ($$188 << 1)&255;
  $89 = $$186 | $88;
  $90 = $89&255;
  $91 = ((($4)) + 512232|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ((($4)) + 511479|0);
  $94 = (10488 + ($3<<1)|0);
  $95 = HEAP16[$94>>1]|0;
  $96 = $95 << 16 >> 16;
  $97 = (($93) + ($96<<1)|0);
  $98 = (($97) + ($90<<1)|0);
  $99 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($92,$98,$5)|0);
  $100 = ($99|0)==(0);
  if (!($100)) {
   $$2 = $99;
   return ($$2|0);
  }
 }
 }
 $$2 = 0;
 return ($$2|0);
}
function __ZN7WelsDec19DecodeUnaryBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementEiRj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$3 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 HEAP32[$3>>2] = 0;
 $5 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$1,$3)|0);
 $6 = ($5|0)==(0);
 if (!($6)) {
  $$4 = $5;
  STACKTOP = sp;return ($$4|0);
 }
 $7 = HEAP32[$3>>2]|0;
 $8 = ($7|0)==(0);
 if ($8) {
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 }
 $9 = (($1) + ($2<<1)|0);
 HEAP32[$3>>2] = 0;
 while(1) {
  $10 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$9,$4)|0);
  $11 = ($10|0)==(0);
  if (!($11)) {
   $$3 = $10;
   break;
  }
  $12 = HEAP32[$3>>2]|0;
  $13 = (($12) + 1)|0;
  HEAP32[$3>>2] = $13;
  $14 = HEAP32[$4>>2]|0;
  $15 = ($14|0)==(0);
  if ($15) {
   $$3 = 0;
   break;
  }
 }
 $$4 = $$3;
 STACKTOP = sp;return ($$4|0);
}
function __ZN7WelsDec20DecodeTerminateCabacEPNS_19SWelsCabacDecEngineERj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$036 = 0, $$1 = 0, $$sink$i = 0, $$sink31$i = 0, $$sink32$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_i64Add(($4|0),($7|0),-2,-1)|0);
 $9 = tempRet0;
 $10 = ((($0)) + 8|0);
 $11 = $10;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (_bitshift64Shl(($8|0),($9|0),($18|0))|0);
 $20 = tempRet0;
 $21 = ($16>>>0)<($20>>>0);
 $22 = ($13>>>0)<($19>>>0);
 $23 = ($16|0)==($20|0);
 $24 = $23 & $22;
 $25 = $21 | $24;
 if (!($25)) {
  HEAP32[$1>>2] = 1;
  $$1 = 0;
  return ($$1|0);
 }
 HEAP32[$1>>2] = 0;
 $26 = ($9>>>0)<(0);
 $27 = ($8>>>0)<(256);
 $28 = ($9|0)==(0);
 $29 = $28 & $27;
 $30 = $26 | $29;
 if (!($30)) {
  $106 = $0;
  $107 = $106;
  HEAP32[$107>>2] = $8;
  $108 = (($106) + 4)|0;
  $109 = $108;
  HEAP32[$109>>2] = $9;
  $$1 = 0;
  return ($$1|0);
 }
 $31 = (25343 + ($8)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = $32&255;
 $35 = (_bitshift64Shl(($8|0),($9|0),($34|0))|0);
 $36 = tempRet0;
 $37 = $0;
 $38 = $37;
 HEAP32[$38>>2] = $35;
 $39 = (($37) + 4)|0;
 $40 = $39;
 HEAP32[$40>>2] = $36;
 $41 = HEAP32[$17>>2]|0;
 $42 = (($41) - ($33))|0;
 HEAP32[$17>>2] = $42;
 $43 = ($42|0)<(0);
 if ($43) {
  $44 = ((($0)) + 28|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($0)) + 24|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (($45) - ($47))|0;
  $49 = ($48|0)<(1);
  $50 = $47;
  if ($49) {
   $$0 = 0;$$0$i = 10012;$$036 = 0;
  } else {
   switch ($48|0) {
   case 3:  {
    $51 = HEAP8[$50>>0]|0;
    $52 = $51&255;
    $53 = $52 << 16;
    $54 = ((($50)) + 1|0);
    $55 = HEAP8[$54>>0]|0;
    $56 = $55&255;
    $57 = $56 << 8;
    $58 = $57 | $53;
    $59 = ((($50)) + 2|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60&255;
    $62 = $58 | $61;
    $$sink$i = 24;$$sink31$i = 3;$$sink32$i = $62;
    break;
   }
   case 2:  {
    $63 = HEAP8[$50>>0]|0;
    $64 = $63&255;
    $65 = $64 << 8;
    $66 = ((($50)) + 1|0);
    $67 = HEAP8[$66>>0]|0;
    $68 = $67&255;
    $69 = $65 | $68;
    $$sink$i = 16;$$sink31$i = 2;$$sink32$i = $69;
    break;
   }
   case 1:  {
    $70 = HEAP8[$50>>0]|0;
    $71 = $70&255;
    $$sink$i = 8;$$sink31$i = 1;$$sink32$i = $71;
    break;
   }
   default: {
    $72 = HEAP8[$50>>0]|0;
    $73 = $72&255;
    $74 = $73 << 24;
    $75 = ((($50)) + 1|0);
    $76 = HEAP8[$75>>0]|0;
    $77 = $76&255;
    $78 = $77 << 16;
    $79 = $78 | $74;
    $80 = ((($50)) + 2|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = $81&255;
    $83 = $82 << 8;
    $84 = $79 | $83;
    $85 = ((($50)) + 3|0);
    $86 = HEAP8[$85>>0]|0;
    $87 = $86&255;
    $88 = $84 | $87;
    $$sink$i = 32;$$sink31$i = 4;$$sink32$i = $88;
   }
   }
   $89 = (($50) + ($$sink31$i)|0);
   HEAP32[$46>>2] = $89;
   $$0 = $$sink$i;$$0$i = 0;$$036 = $$sink32$i;
  }
  $90 = $10;
  $91 = $90;
  $92 = HEAP32[$91>>2]|0;
  $93 = (($90) + 4)|0;
  $94 = $93;
  $95 = HEAP32[$94>>2]|0;
  $96 = (_bitshift64Shl(($92|0),($95|0),($$0|0))|0);
  $97 = tempRet0;
  $98 = $96 | $$036;
  $99 = $10;
  $100 = $99;
  HEAP32[$100>>2] = $98;
  $101 = (($99) + 4)|0;
  $102 = $101;
  HEAP32[$102>>2] = $97;
  $103 = (($42) + ($$0))|0;
  HEAP32[$17>>2] = $103;
  $104 = ($$0$i|0)!=(0);
  $105 = ($103|0)<(0);
  $or$cond = $104 & $105;
  if ($or$cond) {
   $$1 = $$0$i;
   return ($$1|0);
  }
 }
 $$1 = 0;
 return ($$1|0);
}
function __ZN7WelsDec18ParseSkipFlagCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = 0;
 $3 = ((($1)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $10 = 0;
 } else {
  $6 = ((($1)) + 16|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)!=(256);
  $10 = $8;
 }
 $9 = $10&1;
 $11 = HEAP32[$1>>2]|0;
 $12 = ($11|0)==(0);
 if ($12) {
  $17 = 0;
 } else {
  $13 = ((($1)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)!=(256);
  $17 = $15;
 }
 $16 = $17&1;
 $18 = (($16) + ($9))|0;
 $19 = ((($0)) + 511331|0);
 $20 = (($19) + ($18<<1)|0);
 $21 = ((($0)) + 512232|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($22,$20,$2)|0);
 return ($23|0);
}
function __ZN7WelsDec32WelsDecodeMbCabacPSliceBaseMode0EPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0537 = 0, $$0537$1 = 0, $$0545 = 0, $$0548 = 0, $$0574646 = 0, $$1538 = 0, $$1541642 = 0, $$1546 = 0, $$1549 = 0, $$1549$off = 0, $$1575645 = 0, $$3543640 = 0, $$39 = 0, $$42 = 0, $$591 = 0, $$593 = 0, $$601 = 0, $$601$1 = 0, $$608 = 0, $$608$1 = 0;
 var $$9 = 0, $$off = 0, $$off579 = 0, $$phi$trans$insert = 0, $$phi$trans$insert668 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre669 = 0, $$pre676 = 0, $$sink33$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0;
 var $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0;
 var $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0;
 var $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0;
 var $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0;
 $3 = sp + 244|0;
 $4 = sp + 240|0;
 $5 = sp + 548|0;
 $6 = sp;
 $7 = sp + 248|0;
 $8 = sp + 488|0;
 $9 = ((($0)) + 241932|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 3900|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($10)) + 3866|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = ((($10)) + 3867|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = ((($10)) + 4040|0);
 $20 = HEAP32[$19>>2]|0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $21 = ((($5)) + 15|0);
 $22 = $21;
 $23 = $22 & 15;
 $24 = (0 - ($23))|0;
 $25 = (($21) + ($24)|0);
 $26 = ((($10)) + 3976|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (($27) + ($20)|0);
 HEAP8[$28>>0] = 0;
 $29 = (__ZN7WelsDec22ParseMBTypePSliceCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$3)|0);
 $30 = ($29|0)==(0);
 if (!($30)) {
  $$42 = $29;
  STACKTOP = sp;return ($$42|0);
 }
 $31 = HEAP32[$3>>2]|0;
 $32 = ($31>>>0)<(4);
 L4: do {
  if ($32) {
   $33 = (9368 + ($31<<3)|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = $34&65535;
   $36 = ((($10)) + 3908|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37) + ($20<<1)|0);
   HEAP16[$38>>1] = $35;
   __ZN7WelsDec23WelsFillCacheInterCabacEPNS_16TagNeighborAvailEPhPA30_A2_sS5_PA30_aPNS_10TagDqLayerE($1,$25,$6,$7,$8,$10);
   $39 = (__ZN7WelsDec25ParseInterMotionInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_A2_sS7_PA30_a($0,$1,$25,$6,$7,$8)|0);
   $40 = ($39|0)==(0);
   if ($40) {
    $41 = HEAP32[$26>>2]|0;
    $42 = (($41) + ($20)|0);
    HEAP8[$42>>0] = 0;
    $$0545 = 0;$$0548 = 0;$$pre$phiZ2D = $36;
    break;
   }
   $$42 = $39;
   STACKTOP = sp;return ($$42|0);
  } else {
   $43 = (($31) + -5)|0;
   HEAP32[$3>>2] = $43;
   $44 = ($43>>>0)>(25);
   if ($44) {
    $$42 = 1035;
    STACKTOP = sp;return ($$42|0);
   }
   $45 = ((($0)) + 241924|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($46)) + 318|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48<<24>>24)==(0);
   L14: do {
    if ($49) {
     switch ($31|0) {
     case 30:  {
      label = 10;
      break L14;
      break;
     }
     case 5:  {
      label = 14;
      break L14;
      break;
     }
     case 10: case 11: case 12: case 13: case 14: case 15: case 16: case 17: case 22: case 23: case 24: case 25: case 26: case 27: case 28: case 29:  {
      $$42 = 1035;
      break;
     }
     default: {
      label = 21;
      break L14;
     }
     }
     STACKTOP = sp;return ($$42|0);
    } else {
     switch ($31|0) {
     case 30:  {
      label = 10;
      break;
     }
     case 5:  {
      label = 14;
      break;
     }
     default: {
      label = 21;
     }
     }
    }
   } while(0);
   if ((label|0) == 10) {
    $50 = (__ZN7WelsDec18ParseIPCMInfoCabacEPNS_21TagWelsDecoderContextE($0)|0);
    $51 = ($50|0)==(0);
    if (!($51)) {
     $$42 = $50;
     STACKTOP = sp;return ($$42|0);
    }
    $52 = ((($10)) + 3884|0);
    HEAP32[$52>>2] = 0;
    $53 = (__ZN7WelsDec20ParseEndOfSliceCabacEPNS_21TagWelsDecoderContextERj($0,$2)|0);
    $54 = ($53|0)==(0);
    if (!($54)) {
     $$42 = $53;
     STACKTOP = sp;return ($$42|0);
    }
    $55 = HEAP32[$2>>2]|0;
    $56 = ($55|0)==(0);
    if ($56) {
     $$42 = 0;
     STACKTOP = sp;return ($$42|0);
    }
    $57 = ((($0)) + 512232|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = HEAP32[$9>>2]|0;
    $60 = ((($59)) + 3900|0);
    $61 = HEAP32[$60>>2]|0;
    __ZN7WelsDec25RestoreCabacDecEngineToBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($58,$61);
    $$42 = 0;
    STACKTOP = sp;return ($$42|0);
   }
   else if ((label|0) == 14) {
    $62 = ((($6)) + 15|0);
    $63 = $62;
    $64 = $63 & 15;
    $65 = (0 - ($64))|0;
    $66 = (($62) + ($65)|0);
    $67 = ((($10)) + 3908|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (($68) + ($20<<1)|0);
    HEAP16[$69>>1] = 1;
    $70 = ((($0)) + 241928|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ((($71)) + 184|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ($73<<24>>24)==(0);
    if ($74) {
     label = 16;
    } else {
     $75 = HEAP32[$9>>2]|0;
     $76 = ((($75)) + 3944|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = (($77) + ($20)|0);
     $79 = (__ZN7WelsDec30ParseTransformSize8x8FlagCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERb($0,$1,$78)|0);
     $80 = ($79|0)==(0);
     if ($80) {
      label = 16;
     } else {
      $$9 = $79;
     }
    }
    do {
     if ((label|0) == 16) {
      $81 = HEAP32[$9>>2]|0;
      $82 = ((($81)) + 3944|0);
      $83 = HEAP32[$82>>2]|0;
      $84 = (($83) + ($20)|0);
      $85 = HEAP8[$84>>0]|0;
      $86 = ($85<<24>>24)==(0);
      if ($86) {
       $93 = ((($0)) + 317148|0);
       $94 = HEAP32[$93>>2]|0;
       FUNCTION_TABLE_viiii[$94 & 31]($1,$25,$66,$10);
       $95 = (__ZN7WelsDec17ParseIntra4x4ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$1,$66,$12,$10)|0);
       $96 = ($95|0)==(0);
       if (!($96)) {
        $$9 = $95;
        break;
       }
      } else {
       $87 = HEAP32[$67>>2]|0;
       $88 = (($87) + ($20<<1)|0);
       HEAP16[$88>>1] = 4;
       HEAP32[$3>>2] = 4;
       $89 = ((($0)) + 317148|0);
       $90 = HEAP32[$89>>2]|0;
       FUNCTION_TABLE_viiii[$90 & 31]($1,$25,$66,$10);
       $91 = (__ZN7WelsDec17ParseIntra8x8ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPaPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$1,$66,$12,$10)|0);
       $92 = ($91|0)==(0);
       if (!($92)) {
        $$9 = $91;
        break;
       }
      }
      $$0545 = 0;$$0548 = 0;$$pre$phiZ2D = $67;
      break L4;
     }
    } while(0);
    $$42 = $$9;
    STACKTOP = sp;return ($$42|0);
   }
   else if ((label|0) == 21) {
    $97 = ((($10)) + 3908|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = (($98) + ($20<<1)|0);
    HEAP16[$99>>1] = 2;
    $100 = ((($10)) + 3944|0);
    $101 = HEAP32[$100>>2]|0;
    $102 = (($101) + ($20)|0);
    HEAP8[$102>>0] = 0;
    $103 = ((($10)) + 3940|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = (($104) + ($20)|0);
    HEAP8[$105>>0] = 1;
    $106 = HEAP32[$3>>2]|0;
    $107 = (($106) + 3)|0;
    $108 = $107 & 3;
    $109 = $108&255;
    $110 = ((($10)) + 3992|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = (((($111) + ($20<<3)|0)) + 7|0);
    HEAP8[$112>>0] = $109;
    $113 = HEAP32[$3>>2]|0;
    $114 = (($113) + -1)|0;
    $115 = $114 >>> 2;
    $116 = (25321 + ($115)|0);
    $117 = HEAP8[$116>>0]|0;
    $118 = ((($10)) + 3956|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = (($119) + ($20)|0);
    HEAP8[$120>>0] = $117;
    $121 = HEAP32[$45>>2]|0;
    $122 = ((($121)) + 318|0);
    $123 = HEAP8[$122>>0]|0;
    $124 = ($123<<24>>24)==(0);
    $125 = HEAP32[$118>>2]|0;
    $126 = (($125) + ($20)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127 << 24 >> 24;
    $129 = $128 >> 4;
    $$591 = $124 ? 0 : $129;
    $130 = $128 & 15;
    __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($1,$25,$10);
    $131 = (__ZN7WelsDec19ParseIntra16x16ModeEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPN10WelsCommon15TagBitStringAuxEPNS_10TagDqLayerE($0,$1,$12,$10)|0);
    $132 = ($131|0)==(0);
    if ($132) {
     $$0545 = $130;$$0548 = $$591;$$pre$phiZ2D = $97;
     break;
    } else {
     $$42 = $131;
    }
    STACKTOP = sp;return ($$42|0);
   }
  }
 } while(0);
 $133 = ((($10)) + 3964|0);
 $134 = HEAP32[$133>>2]|0;
 $135 = (($134) + (($20*24)|0)|0);
 HEAP8[$135>>0]=0&255;HEAP8[$135+1>>0]=(0>>8)&255;HEAP8[$135+2>>0]=(0>>16)&255;HEAP8[$135+3>>0]=0>>24;
 $136 = HEAP32[$133>>2]|0;
 $137 = (((($136) + (($20*24)|0)|0)) + 4|0);
 HEAP8[$137>>0]=0&255;HEAP8[$137+1>>0]=(0>>8)&255;HEAP8[$137+2>>0]=(0>>16)&255;HEAP8[$137+3>>0]=0>>24;
 $138 = HEAP32[$133>>2]|0;
 $139 = (((($138) + (($20*24)|0)|0)) + 8|0);
 HEAP8[$139>>0]=0&255;HEAP8[$139+1>>0]=(0>>8)&255;HEAP8[$139+2>>0]=(0>>16)&255;HEAP8[$139+3>>0]=0>>24;
 $140 = HEAP32[$133>>2]|0;
 $141 = (((($140) + (($20*24)|0)|0)) + 12|0);
 HEAP8[$141>>0]=0&255;HEAP8[$141+1>>0]=(0>>8)&255;HEAP8[$141+2>>0]=(0>>16)&255;HEAP8[$141+3>>0]=0>>24;
 $142 = HEAP32[$133>>2]|0;
 $143 = (((($142) + (($20*24)|0)|0)) + 16|0);
 HEAP8[$143>>0]=0&255;HEAP8[$143+1>>0]=(0>>8)&255;HEAP8[$143+2>>0]=(0>>16)&255;HEAP8[$143+3>>0]=0>>24;
 $144 = HEAP32[$133>>2]|0;
 $145 = (((($144) + (($20*24)|0)|0)) + 20|0);
 HEAP8[$145>>0]=0&255;HEAP8[$145+1>>0]=(0>>8)&255;HEAP8[$145+2>>0]=(0>>16)&255;HEAP8[$145+3>>0]=0>>24;
 $146 = HEAP32[$$pre$phiZ2D>>2]|0;
 $147 = (($146) + ($20<<1)|0);
 $148 = HEAP16[$147>>1]|0;
 $149 = ($148<<16>>16)==(2);
 if ($149) {
  $$phi$trans$insert = ((($10)) + 3956|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$phi$trans$insert668 = (($$pre) + ($20)|0);
  $$pre669 = HEAP8[$$phi$trans$insert668>>0]|0;
  $$1546 = $$0545;$$1549 = $$0548;$172 = $$pre669;
 } else {
  $150 = (__ZN7WelsDec17ParseCbpInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$4)|0);
  $151 = ($150|0)==(0);
  if (!($151)) {
   $$42 = $150;
   STACKTOP = sp;return ($$42|0);
  }
  $152 = HEAP32[$4>>2]|0;
  $153 = $152&255;
  $154 = ((($10)) + 3956|0);
  $155 = HEAP32[$154>>2]|0;
  $156 = (($155) + ($20)|0);
  HEAP8[$156>>0] = $153;
  $157 = HEAP32[$4>>2]|0;
  $158 = ($157|0)==(0);
  $$pre676 = ((($10)) + 3884|0);
  if ($158) {
   $160 = 0;
  } else {
   $159 = HEAP32[$$pre676>>2]|0;
   $160 = $159;
  }
  HEAP32[$$pre676>>2] = $160;
  $161 = ((($0)) + 241924|0);
  $162 = HEAP32[$161>>2]|0;
  $163 = ((($162)) + 318|0);
  $164 = HEAP8[$163>>0]|0;
  $165 = ($164<<24>>24)==(0);
  $166 = HEAP32[$154>>2]|0;
  $167 = (($166) + ($20)|0);
  $168 = HEAP8[$167>>0]|0;
  $169 = $168 << 24 >> 24;
  $170 = $169 >> 4;
  $$593 = $165 ? 0 : $170;
  $171 = $169 & 15;
  $$1546 = $171;$$1549 = $$593;$172 = $168;
 }
 $173 = ($172<<24>>24)==(0);
 $174 = HEAP32[$$pre$phiZ2D>>2]|0;
 $175 = (($174) + ($20<<1)|0);
 $176 = HEAP16[$175>>1]|0;
 $177 = ($176<<16>>16)==(2);
 L54: do {
  if ($173) {
   if ($177) {
    label = 37;
   } else {
    $473 = ((($10)) + 3868|0);
    $474 = HEAP32[$473>>2]|0;
    $475 = $474&255;
    $476 = ((($10)) + 3948|0);
    $477 = HEAP32[$476>>2]|0;
    $478 = (($477) + ($20)|0);
    HEAP8[$478>>0] = $475;
    $479 = ((($10)) + 92|0);
    $480 = ((($10)) + 3952|0);
    $481 = HEAP32[$476>>2]|0;
    $482 = (($481) + ($20)|0);
    $483 = HEAP8[$482>>0]|0;
    $484 = $483 << 24 >> 24;
    $485 = HEAP32[$479>>2]|0;
    $486 = ((($485)) + 168|0);
    $487 = HEAP32[$486>>2]|0;
    $488 = (($487) + ($484))|0;
    $489 = ($488|0)<(0);
    $490 = ($488|0)<(51);
    $$608 = $490 ? $488 : 51;
    $491 = $489 ? 0 : $$608;
    $492 = (11027 + ($491)|0);
    $493 = HEAP8[$492>>0]|0;
    $494 = HEAP32[$480>>2]|0;
    $495 = (($494) + ($20<<1)|0);
    HEAP8[$495>>0] = $493;
    $496 = HEAP32[$476>>2]|0;
    $497 = (($496) + ($20)|0);
    $498 = HEAP8[$497>>0]|0;
    $499 = $498 << 24 >> 24;
    $500 = HEAP32[$479>>2]|0;
    $501 = ((($500)) + 172|0);
    $502 = HEAP32[$501>>2]|0;
    $503 = (($502) + ($499))|0;
    $504 = ($503|0)<(0);
    $505 = ($503|0)<(51);
    $$608$1 = $505 ? $503 : 51;
    $506 = $504 ? 0 : $$608$1;
    $507 = (11027 + ($506)|0);
    $508 = HEAP8[$507>>0]|0;
    $509 = HEAP32[$480>>2]|0;
    $510 = (((($509) + ($20<<1)|0)) + 1|0);
    HEAP8[$510>>0] = $508;
   }
  } else {
   if ($177) {
    label = 37;
   } else {
    $$off = (($176) + -8)<<16>>16;
    $178 = ($$off&65535)<(25);
    if (!($178)) {
     $179 = ((($10)) + 3940|0);
     $180 = HEAP32[$179>>2]|0;
     $181 = (($180) + ($20)|0);
     $182 = HEAP8[$181>>0]|0;
     $183 = ($182<<24>>24)==(0);
     if ($183) {
      label = 37;
      break;
     }
     switch ($176<<16>>16) {
     case 1: case 4:  {
      label = 37;
      break L54;
      break;
     }
     default: {
     }
     }
    }
    $184 = $172 & 15;
    $185 = ($184<<24>>24)==(0);
    if ($185) {
     label = 37;
    } else {
     $186 = ((($0)) + 241928|0);
     $187 = HEAP32[$186>>2]|0;
     $188 = ((($187)) + 184|0);
     $189 = HEAP8[$188>>0]|0;
     $190 = ($189<<24>>24)==(0);
     if ($190) {
      label = 37;
     } else {
      $191 = HEAP32[$9>>2]|0;
      $192 = ((($191)) + 3944|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = (($193) + ($20)|0);
      $195 = (__ZN7WelsDec30ParseTransformSize8x8FlagCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERb($0,$1,$194)|0);
      $196 = ($195|0)==(0);
      if ($196) {
       label = 37;
      } else {
       $$42 = $195;
       STACKTOP = sp;return ($$42|0);
      }
     }
    }
   }
  }
 } while(0);
 L66: do {
  if ((label|0) == 37) {
   $197 = ((($10)) + 3988|0);
   $198 = HEAP32[$197>>2]|0;
   $199 = (($198) + (($20*768)|0)|0);
   _memset(($199|0),0,768)|0;
   $200 = (__ZN7WelsDec17ParseDeltaQpCabacEPNS_21TagWelsDecoderContextERi($0,$6)|0);
   $201 = ($200|0)==(0);
   L68: do {
    if ($201) {
     $202 = HEAP32[$6>>2]|0;
     $$off579 = (($202) + 26)|0;
     $203 = ($$off579>>>0)>(51);
     if ($203) {
      $$42 = 1027;
      STACKTOP = sp;return ($$42|0);
     }
     $204 = ((($10)) + 3868|0);
     $205 = HEAP32[$204>>2]|0;
     $206 = (($202) + 52)|0;
     $207 = (($206) + ($205))|0;
     $208 = (($207|0) % 52)&-1;
     $209 = $208&255;
     $210 = ((($10)) + 3948|0);
     $211 = HEAP32[$210>>2]|0;
     $212 = (($211) + ($20)|0);
     HEAP8[$212>>0] = $209;
     $213 = HEAP32[$210>>2]|0;
     $214 = (($213) + ($20)|0);
     $215 = HEAP8[$214>>0]|0;
     $216 = $215 << 24 >> 24;
     HEAP32[$204>>2] = $216;
     $217 = ((($10)) + 92|0);
     $218 = ((($10)) + 3952|0);
     $219 = HEAP32[$217>>2]|0;
     $220 = ((($219)) + 168|0);
     $221 = HEAP32[$220>>2]|0;
     $222 = (($221) + ($216))|0;
     $223 = ($222|0)<(0);
     $224 = ($222|0)<(51);
     $$601 = $224 ? $222 : 51;
     $225 = $223 ? 0 : $$601;
     $226 = (11027 + ($225)|0);
     $227 = HEAP8[$226>>0]|0;
     $228 = HEAP32[$218>>2]|0;
     $229 = (($228) + ($20<<1)|0);
     HEAP8[$229>>0] = $227;
     $230 = HEAP32[$204>>2]|0;
     $231 = HEAP32[$217>>2]|0;
     $232 = ((($231)) + 172|0);
     $233 = HEAP32[$232>>2]|0;
     $234 = (($233) + ($230))|0;
     $235 = ($234|0)<(0);
     $236 = ($234|0)<(51);
     $$601$1 = $236 ? $234 : 51;
     $237 = $235 ? 0 : $$601$1;
     $238 = (11027 + ($237)|0);
     $239 = HEAP8[$238>>0]|0;
     $240 = HEAP32[$218>>2]|0;
     $241 = (((($240) + ($20<<1)|0)) + 1|0);
     HEAP8[$241>>0] = $239;
     $242 = HEAP32[$$pre$phiZ2D>>2]|0;
     $243 = (($242) + ($20<<1)|0);
     $244 = HEAP16[$243>>1]|0;
     $245 = ($244<<16>>16)==(2);
     do {
      if ($245) {
       $246 = HEAP32[$197>>2]|0;
       $247 = (($246) + (($20*768)|0)|0);
       $248 = HEAP32[$210>>2]|0;
       $249 = (($248) + ($20)|0);
       $250 = HEAP8[$249>>0]|0;
       $251 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,0,16,15634,1,$247,$250,$0)|0);
       $252 = ($251|0)==(0);
       if (!($252)) {
        $$39 = $251;
        break L68;
       }
       $253 = ($$1546|0)==(0);
       if ($253) {
        $283 = HEAP32[$133>>2]|0;
        $284 = (($283) + (($20*24)|0)|0);
        HEAP8[$284>>0]=0&255;HEAP8[$284+1>>0]=(0>>8)&255;HEAP8[$284+2>>0]=(0>>16)&255;HEAP8[$284+3>>0]=0>>24;
        $285 = HEAP32[$133>>2]|0;
        $286 = (((($285) + (($20*24)|0)|0)) + 4|0);
        HEAP8[$286>>0]=0&255;HEAP8[$286+1>>0]=(0>>8)&255;HEAP8[$286+2>>0]=(0>>16)&255;HEAP8[$286+3>>0]=0>>24;
        $287 = HEAP32[$133>>2]|0;
        $288 = (((($287) + (($20*24)|0)|0)) + 8|0);
        HEAP8[$288>>0]=0&255;HEAP8[$288+1>>0]=(0>>8)&255;HEAP8[$288+2>>0]=(0>>16)&255;HEAP8[$288+3>>0]=0>>24;
        $$sink33$sink = 0;
        break;
       }
       $254 = ($15>>>0)>(1);
       $255 = $254 ? $15 : 1;
       $256 = (($18) + 1)|0;
       $257 = (($256) - ($255))|0;
       $258 = (27122 + ($255)|0);
       $$1541642 = 0;
       while(1) {
        $261 = HEAP32[$197>>2]|0;
        $262 = $$1541642 << 4;
        $263 = ((($261) + (($20*768)|0)|0) + ($262<<1)|0);
        $264 = HEAP32[$210>>2]|0;
        $265 = (($264) + ($20)|0);
        $266 = HEAP8[$265>>0]|0;
        $267 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$$1541642,$257,$258,2,$263,$266,$0)|0);
        $268 = ($267|0)==(0);
        $259 = (($$1541642) + 1)|0;
        if (!($268)) {
         $$39 = $267;
         break L68;
        }
        $260 = ($259|0)<(16);
        if ($260) {
         $$1541642 = $259;
        } else {
         break;
        }
       }
       $269 = ((($25)) + 9|0);
       $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
       $271 = HEAP32[$133>>2]|0;
       $272 = (($271) + (($20*24)|0)|0);
       HEAP8[$272>>0]=$270&255;HEAP8[$272+1>>0]=($270>>8)&255;HEAP8[$272+2>>0]=($270>>16)&255;HEAP8[$272+3>>0]=$270>>24;
       $273 = ((($25)) + 17|0);
       $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
       $275 = HEAP32[$133>>2]|0;
       $276 = (((($275) + (($20*24)|0)|0)) + 4|0);
       HEAP8[$276>>0]=$274&255;HEAP8[$276+1>>0]=($274>>8)&255;HEAP8[$276+2>>0]=($274>>16)&255;HEAP8[$276+3>>0]=$274>>24;
       $277 = ((($25)) + 25|0);
       $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
       $279 = HEAP32[$133>>2]|0;
       $280 = (((($279) + (($20*24)|0)|0)) + 8|0);
       HEAP8[$280>>0]=$278&255;HEAP8[$280+1>>0]=($278>>8)&255;HEAP8[$280+2>>0]=($278>>16)&255;HEAP8[$280+3>>0]=$278>>24;
       $281 = ((($25)) + 33|0);
       $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
       $$sink33$sink = $282;
      } else {
       $289 = HEAP32[$9>>2]|0;
       $290 = ((($289)) + 3944|0);
       $291 = HEAP32[$290>>2]|0;
       $292 = (($291) + ($20)|0);
       $293 = HEAP8[$292>>0]|0;
       $294 = ($293<<24>>24)==(0);
       if (!($294)) {
        $295 = (1 - ($15))|0;
        $296 = (($295) + ($18))|0;
        $297 = (27138 + ($15)|0);
        $$0574646 = 0;
        while(1) {
         $298 = 1 << $$0574646;
         $299 = $298 & $$1546;
         $300 = ($299|0)==(0);
         $301 = $$0574646 << 2;
         if ($300) {
          $316 = (15583 + ($301)|0);
          $317 = HEAP8[$316>>0]|0;
          $318 = $317&255;
          $319 = (($25) + ($318)|0);
          HEAP8[$319>>0]=0&255;HEAP8[$319+1>>0]=0>>8;
          $320 = $301 | 2;
          $321 = (15583 + ($320)|0);
          $322 = HEAP8[$321>>0]|0;
          $323 = $322&255;
          $324 = (($25) + ($323)|0);
          HEAP8[$324>>0]=0&255;HEAP8[$324+1>>0]=0>>8;
         } else {
          $302 = HEAP32[$$pre$phiZ2D>>2]|0;
          $303 = (($302) + ($20<<1)|0);
          $304 = HEAP16[$303>>1]|0;
          $305 = $304 & 519;
          $306 = ($305<<16>>16)!=(0);
          $307 = $306 ? 17 : 18;
          $308 = HEAP32[$197>>2]|0;
          $309 = $$0574646 << 6;
          $310 = ((($308) + (($20*768)|0)|0) + ($309<<1)|0);
          $311 = HEAP32[$210>>2]|0;
          $312 = (($311) + ($20)|0);
          $313 = HEAP8[$312>>0]|0;
          $314 = (__ZN7WelsDec26ParseResidualBlockCabac8x8EPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$301,$296,$297,$307,$310,$313,$0)|0);
          $315 = ($314|0)==(0);
          if (!($315)) {
           $$39 = $314;
           break L68;
          }
         }
         $325 = (($$0574646) + 1)|0;
         $326 = ($325|0)<(4);
         if ($326) {
          $$0574646 = $325;
         } else {
          break;
         }
        }
        $327 = ((($25)) + 9|0);
        $328 = HEAPU8[$327>>0]|(HEAPU8[$327+1>>0]<<8)|(HEAPU8[$327+2>>0]<<16)|(HEAPU8[$327+3>>0]<<24);
        $329 = HEAP32[$133>>2]|0;
        $330 = (($329) + (($20*24)|0)|0);
        HEAP8[$330>>0]=$328&255;HEAP8[$330+1>>0]=($328>>8)&255;HEAP8[$330+2>>0]=($328>>16)&255;HEAP8[$330+3>>0]=$328>>24;
        $331 = ((($25)) + 17|0);
        $332 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8)|(HEAPU8[$331+2>>0]<<16)|(HEAPU8[$331+3>>0]<<24);
        $333 = HEAP32[$133>>2]|0;
        $334 = (((($333) + (($20*24)|0)|0)) + 4|0);
        HEAP8[$334>>0]=$332&255;HEAP8[$334+1>>0]=($332>>8)&255;HEAP8[$334+2>>0]=($332>>16)&255;HEAP8[$334+3>>0]=$332>>24;
        $335 = ((($25)) + 25|0);
        $336 = HEAPU8[$335>>0]|(HEAPU8[$335+1>>0]<<8)|(HEAPU8[$335+2>>0]<<16)|(HEAPU8[$335+3>>0]<<24);
        $337 = HEAP32[$133>>2]|0;
        $338 = (((($337) + (($20*24)|0)|0)) + 8|0);
        HEAP8[$338>>0]=$336&255;HEAP8[$338+1>>0]=($336>>8)&255;HEAP8[$338+2>>0]=($336>>16)&255;HEAP8[$338+3>>0]=$336>>24;
        $339 = ((($25)) + 33|0);
        $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8)|(HEAPU8[$339+2>>0]<<16)|(HEAPU8[$339+3>>0]<<24);
        $$sink33$sink = $340;
        break;
       }
       $341 = $244 & 519;
       $342 = ($341<<16>>16)!=(0);
       $343 = $342 ? 11 : 12;
       $344 = (1 - ($15))|0;
       $345 = (($344) + ($18))|0;
       $346 = (27122 + ($15)|0);
       $$1575645 = 0;
       while(1) {
        $347 = 1 << $$1575645;
        $348 = $347 & $$1546;
        $349 = ($348|0)==(0);
        $350 = $$1575645 << 2;
        if ($349) {
         $368 = (15583 + ($350)|0);
         $369 = HEAP8[$368>>0]|0;
         $370 = $369&255;
         $371 = (($25) + ($370)|0);
         HEAP8[$371>>0]=0&255;HEAP8[$371+1>>0]=0>>8;
         $372 = $350 | 2;
         $373 = (15583 + ($372)|0);
         $374 = HEAP8[$373>>0]|0;
         $375 = $374&255;
         $376 = (($25) + ($375)|0);
         HEAP8[$376>>0]=0&255;HEAP8[$376+1>>0]=0>>8;
        } else {
         $351 = HEAP32[$197>>2]|0;
         $352 = $$1575645 << 6;
         $353 = ((($351) + (($20*768)|0)|0) + ($352<<1)|0);
         $354 = HEAP32[$210>>2]|0;
         $355 = (($354) + ($20)|0);
         $356 = HEAP8[$355>>0]|0;
         $357 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$350,$345,$346,$343,$353,$356,$0)|0);
         $358 = ($357|0)==(0);
         if (!($358)) {
          $$39 = $357;
          break L68;
         }
         $359 = $350 | 1;
         $360 = HEAP32[$197>>2]|0;
         $361 = $359 << 4;
         $362 = ((($360) + (($20*768)|0)|0) + ($361<<1)|0);
         $363 = HEAP32[$210>>2]|0;
         $364 = (($363) + ($20)|0);
         $365 = HEAP8[$364>>0]|0;
         $366 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$359,$345,$346,$343,$362,$365,$0)|0);
         $367 = ($366|0)==(0);
         if (!($367)) {
          $$39 = $366;
          break L68;
         }
         $540 = (($359) + 1)|0;
         $541 = HEAP32[$197>>2]|0;
         $542 = $540 << 4;
         $543 = ((($541) + (($20*768)|0)|0) + ($542<<1)|0);
         $544 = HEAP32[$210>>2]|0;
         $545 = (($544) + ($20)|0);
         $546 = HEAP8[$545>>0]|0;
         $547 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$540,$345,$346,$343,$543,$546,$0)|0);
         $548 = ($547|0)==(0);
         if (!($548)) {
          $$39 = $547;
          break L68;
         }
         $549 = $350 | 3;
         $550 = HEAP32[$197>>2]|0;
         $551 = $549 << 4;
         $552 = ((($550) + (($20*768)|0)|0) + ($551<<1)|0);
         $553 = HEAP32[$210>>2]|0;
         $554 = (($553) + ($20)|0);
         $555 = HEAP8[$554>>0]|0;
         $556 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$549,$345,$346,$343,$552,$555,$0)|0);
         $557 = ($556|0)==(0);
         if (!($557)) {
          $$39 = $556;
          break L68;
         }
        }
        $377 = (($$1575645) + 1)|0;
        $378 = ($377|0)<(4);
        if ($378) {
         $$1575645 = $377;
        } else {
         break;
        }
       }
       $379 = ((($25)) + 9|0);
       $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
       $381 = HEAP32[$133>>2]|0;
       $382 = (($381) + (($20*24)|0)|0);
       HEAP8[$382>>0]=$380&255;HEAP8[$382+1>>0]=($380>>8)&255;HEAP8[$382+2>>0]=($380>>16)&255;HEAP8[$382+3>>0]=$380>>24;
       $383 = ((($25)) + 17|0);
       $384 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
       $385 = HEAP32[$133>>2]|0;
       $386 = (((($385) + (($20*24)|0)|0)) + 4|0);
       HEAP8[$386>>0]=$384&255;HEAP8[$386+1>>0]=($384>>8)&255;HEAP8[$386+2>>0]=($384>>16)&255;HEAP8[$386+3>>0]=$384>>24;
       $387 = ((($25)) + 25|0);
       $388 = HEAPU8[$387>>0]|(HEAPU8[$387+1>>0]<<8)|(HEAPU8[$387+2>>0]<<16)|(HEAPU8[$387+3>>0]<<24);
       $389 = HEAP32[$133>>2]|0;
       $390 = (((($389) + (($20*24)|0)|0)) + 8|0);
       HEAP8[$390>>0]=$388&255;HEAP8[$390+1>>0]=($388>>8)&255;HEAP8[$390+2>>0]=($388>>16)&255;HEAP8[$390+3>>0]=$388>>24;
       $391 = ((($25)) + 33|0);
       $392 = HEAPU8[$391>>0]|(HEAPU8[$391+1>>0]<<8)|(HEAPU8[$391+2>>0]<<16)|(HEAPU8[$391+3>>0]<<24);
       $$sink33$sink = $392;
      }
     } while(0);
     $393 = HEAP32[$133>>2]|0;
     $394 = (((($393) + (($20*24)|0)|0)) + 12|0);
     HEAP8[$394>>0]=$$sink33$sink&255;HEAP8[$394+1>>0]=($$sink33$sink>>8)&255;HEAP8[$394+2>>0]=($$sink33$sink>>16)&255;HEAP8[$394+3>>0]=$$sink33$sink>>24;
     $395 = ($$1549|0)==(2);
     $$1549$off = (($$1549) + -1)|0;
     $396 = ($$1549$off>>>0)<(2);
     if ($396) {
      $397 = HEAP32[$$pre$phiZ2D>>2]|0;
      $398 = (($397) + ($20<<1)|0);
      $399 = HEAP16[$398>>1]|0;
      $400 = $399 & 519;
      $401 = ($400<<16>>16)==(0);
      $$0537 = $401 ? 13 : 7;
      $402 = HEAP32[$197>>2]|0;
      $403 = (((($402) + (($20*768)|0)|0)) + 512|0);
      $404 = HEAP32[$218>>2]|0;
      $405 = (($404) + ($20<<1)|0);
      $406 = HEAP8[$405>>0]|0;
      $407 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,16,4,15650,$$0537,$403,$406,$0)|0);
      $408 = ($407|0)==(0);
      if (!($408)) {
       $$39 = $407;
       break;
      }
      $409 = HEAP32[$$pre$phiZ2D>>2]|0;
      $410 = (($409) + ($20<<1)|0);
      $411 = HEAP16[$410>>1]|0;
      $412 = $411 & 519;
      $413 = ($412<<16>>16)==(0);
      $$0537$1 = $413 ? 14 : 8;
      $414 = HEAP32[$197>>2]|0;
      $415 = (((($414) + (($20*768)|0)|0)) + 640|0);
      $416 = HEAP32[$218>>2]|0;
      $417 = (((($416) + ($20<<1)|0)) + 1|0);
      $418 = HEAP8[$417>>0]|0;
      $419 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,20,4,15650,$$0537$1,$415,$418,$0)|0);
      $420 = ($419|0)==(0);
      if (!($420)) {
       $$39 = $419;
       break;
      }
     }
     if ($395) {
      $421 = ($15>>>0)>(1);
      $422 = $421 ? $15 : 1;
      $423 = (($18) + 1)|0;
      $424 = (($423) - ($422))|0;
      $425 = (27122 + ($422)|0);
      $$3543640 = 0;
      while(1) {
       $426 = HEAP32[$$pre$phiZ2D>>2]|0;
       $427 = (($426) + ($20<<1)|0);
       $428 = HEAP16[$427>>1]|0;
       $429 = $428 & 519;
       $430 = ($429<<16>>16)==(0);
       $431 = ($$3543640|0)!=(0);
       $432 = $431 ? 10 : 9;
       $433 = $431 ? 16 : 15;
       $$1538 = $430 ? $433 : $432;
       $434 = $$3543640 << 2;
       $435 = (($434) + 16)|0;
       $436 = HEAP32[$197>>2]|0;
       $437 = $435 << 4;
       $438 = ((($436) + (($20*768)|0)|0) + ($437<<1)|0);
       $439 = HEAP32[$218>>2]|0;
       $440 = ((($439) + ($20<<1)|0) + ($$3543640)|0);
       $441 = HEAP8[$440>>0]|0;
       $442 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$435,$424,$425,$$1538,$438,$441,$0)|0);
       $443 = ($442|0)==(0);
       if (!($443)) {
        $$39 = $442;
        break L68;
       }
       $444 = (($434) + 17)|0;
       $445 = HEAP32[$197>>2]|0;
       $446 = $444 << 4;
       $447 = ((($445) + (($20*768)|0)|0) + ($446<<1)|0);
       $448 = HEAP32[$218>>2]|0;
       $449 = ((($448) + ($20<<1)|0) + ($$3543640)|0);
       $450 = HEAP8[$449>>0]|0;
       $451 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$444,$424,$425,$$1538,$447,$450,$0)|0);
       $452 = ($451|0)==(0);
       if (!($452)) {
        $$39 = $451;
        break L68;
       }
       $520 = (($434) + 18)|0;
       $521 = HEAP32[$197>>2]|0;
       $522 = $520 << 4;
       $523 = ((($521) + (($20*768)|0)|0) + ($522<<1)|0);
       $524 = HEAP32[$218>>2]|0;
       $525 = ((($524) + ($20<<1)|0) + ($$3543640)|0);
       $526 = HEAP8[$525>>0]|0;
       $527 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$520,$424,$425,$$1538,$523,$526,$0)|0);
       $528 = ($527|0)==(0);
       if (!($528)) {
        $$39 = $527;
        break L68;
       }
       $529 = (($434) + 19)|0;
       $530 = HEAP32[$197>>2]|0;
       $531 = $529 << 4;
       $532 = ((($530) + (($20*768)|0)|0) + ($531<<1)|0);
       $533 = HEAP32[$218>>2]|0;
       $534 = ((($533) + ($20<<1)|0) + ($$3543640)|0);
       $535 = HEAP8[$534>>0]|0;
       $536 = (__ZN7WelsDec23ParseResidualBlockCabacEPNS_16TagNeighborAvailEPhPN10WelsCommon15TagBitStringAuxEiiPKhiPshPNS_21TagWelsDecoderContextE($1,$25,$12,$529,$424,$425,$$1538,$532,$535,$0)|0);
       $537 = ($536|0)==(0);
       if (!($537)) {
        $$39 = $536;
        break L68;
       }
       $538 = (($$3543640) + 1)|0;
       $539 = ($538|0)<(2);
       if ($539) {
        $$3543640 = $538;
       } else {
        break;
       }
      }
      $453 = ((($25)) + 14|0);
      $454 = HEAPU8[$453>>0]|(HEAPU8[$453+1>>0]<<8);
      $455 = HEAP32[$133>>2]|0;
      $456 = (((($455) + (($20*24)|0)|0)) + 16|0);
      HEAP8[$456>>0]=$454&255;HEAP8[$456+1>>0]=$454>>8;
      $457 = ((($25)) + 22|0);
      $458 = HEAPU8[$457>>0]|(HEAPU8[$457+1>>0]<<8);
      $459 = HEAP32[$133>>2]|0;
      $460 = (((($459) + (($20*24)|0)|0)) + 20|0);
      HEAP8[$460>>0]=$458&255;HEAP8[$460+1>>0]=$458>>8;
      $461 = ((($25)) + 38|0);
      $462 = HEAPU8[$461>>0]|(HEAPU8[$461+1>>0]<<8);
      $463 = HEAP32[$133>>2]|0;
      $464 = (((($463) + (($20*24)|0)|0)) + 18|0);
      HEAP8[$464>>0]=$462&255;HEAP8[$464+1>>0]=$462>>8;
      $465 = ((($25)) + 46|0);
      $466 = HEAPU8[$465>>0]|(HEAPU8[$465+1>>0]<<8);
      $467 = HEAP32[$133>>2]|0;
      $468 = (((($467) + (($20*24)|0)|0)) + 22|0);
      HEAP8[$468>>0]=$466&255;HEAP8[$468+1>>0]=$466>>8;
     } else {
      $469 = HEAP32[$133>>2]|0;
      $470 = (((($469) + (($20*24)|0)|0)) + 16|0);
      HEAP8[$470>>0]=0&255;HEAP8[$470+1>>0]=(0>>8)&255;HEAP8[$470+2>>0]=(0>>16)&255;HEAP8[$470+3>>0]=0>>24;
      $471 = HEAP32[$133>>2]|0;
      $472 = (((($471) + (($20*24)|0)|0)) + 20|0);
      HEAP8[$472>>0]=0&255;HEAP8[$472+1>>0]=(0>>8)&255;HEAP8[$472+2>>0]=(0>>16)&255;HEAP8[$472+3>>0]=0>>24;
     }
     break L66;
    } else {
     $$39 = $200;
    }
   } while(0);
   $$42 = $$39;
   STACKTOP = sp;return ($$42|0);
  }
 } while(0);
 $511 = (__ZN7WelsDec20ParseEndOfSliceCabacEPNS_21TagWelsDecoderContextERj($0,$2)|0);
 $512 = ($511|0)==(0);
 if (!($512)) {
  $$42 = $511;
  STACKTOP = sp;return ($$42|0);
 }
 $513 = HEAP32[$2>>2]|0;
 $514 = ($513|0)==(0);
 if ($514) {
  $$42 = 0;
  STACKTOP = sp;return ($$42|0);
 }
 $515 = ((($0)) + 512232|0);
 $516 = HEAP32[$515>>2]|0;
 $517 = HEAP32[$9>>2]|0;
 $518 = ((($517)) + 3900|0);
 $519 = HEAP32[$518>>2]|0;
 __ZN7WelsDec25RestoreCabacDecEngineToBSEPNS_19SWelsCabacDecEngineEPN10WelsCommon15TagBitStringAuxE($516,$519);
 $$42 = 0;
 STACKTOP = sp;return ($$42|0);
}
function __ZN7WelsDec22ParseMBTypePSliceCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailERj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$12 = 0, $$sink = 0, $$sink$sink = 0, $$sink11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = ((($0)) + 512232|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 511337|0);
 $7 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$6,$3)|0);
 $8 = ($7|0)==(0);
 if (!($8)) {
  $$12 = $7;
  STACKTOP = sp;return ($$12|0);
 }
 $9 = HEAP32[$3>>2]|0;
 $10 = ($9|0)==(0);
 do {
  if ($10) {
   $51 = ((($0)) + 511339|0);
   $52 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$51,$3)|0);
   $53 = ($52|0)==(0);
   if (!($53)) {
    $$12 = $52;
    STACKTOP = sp;return ($$12|0);
   }
   $54 = HEAP32[$3>>2]|0;
   $55 = ($54|0)==(0);
   if ($55) {
    $61 = ((($0)) + 511341|0);
    $62 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$61,$3)|0);
    $63 = ($62|0)==(0);
    if ($63) {
     $64 = HEAP32[$3>>2]|0;
     $65 = ($64|0)!=(0);
     $$sink11 = $65 ? 3 : 0;
     $$sink$sink = $$sink11;
     break;
    } else {
     $$12 = $62;
     STACKTOP = sp;return ($$12|0);
    }
   } else {
    $56 = ((($0)) + 511343|0);
    $57 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$56,$3)|0);
    $58 = ($57|0)==(0);
    if ($58) {
     $59 = HEAP32[$3>>2]|0;
     $60 = ($59|0)!=(0);
     $$sink = $60 ? 1 : 2;
     $$sink$sink = $$sink;
     break;
    } else {
     $$12 = $57;
     STACKTOP = sp;return ($$12|0);
    }
   }
  } else {
   $11 = ((($0)) + 511343|0);
   $12 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$11,$3)|0);
   $13 = ($12|0)==(0);
   if (!($13)) {
    $$12 = $12;
    STACKTOP = sp;return ($$12|0);
   }
   $14 = HEAP32[$3>>2]|0;
   $15 = ($14|0)==(0);
   if ($15) {
    $$sink$sink = 5;
   } else {
    $16 = (__ZN7WelsDec20DecodeTerminateCabacEPNS_19SWelsCabacDecEngineERj($5,$3)|0);
    $17 = ($16|0)==(0);
    if (!($17)) {
     $$12 = $16;
     STACKTOP = sp;return ($$12|0);
    }
    $18 = HEAP32[$3>>2]|0;
    $19 = ($18|0)==(0);
    if (!($19)) {
     HEAP32[$2>>2] = 30;
     $$12 = 0;
     STACKTOP = sp;return ($$12|0);
    }
    $20 = ((($0)) + 511345|0);
    $21 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$20,$3)|0);
    $22 = ($21|0)==(0);
    if (!($22)) {
     $$12 = $21;
     STACKTOP = sp;return ($$12|0);
    }
    $23 = HEAP32[$3>>2]|0;
    $24 = ($23*12)|0;
    $25 = (($24) + 6)|0;
    HEAP32[$2>>2] = $25;
    $26 = ((($0)) + 511347|0);
    $27 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$26,$3)|0);
    $28 = ($27|0)==(0);
    if (!($28)) {
     $$12 = $27;
     STACKTOP = sp;return ($$12|0);
    }
    $29 = HEAP32[$3>>2]|0;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP32[$2>>2]|0;
     $32 = (($31) + 4)|0;
     HEAP32[$2>>2] = $32;
     $33 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$26,$3)|0);
     $34 = ($33|0)==(0);
     if (!($34)) {
      $$12 = $33;
      STACKTOP = sp;return ($$12|0);
     }
     $35 = HEAP32[$3>>2]|0;
     $36 = ($35|0)==(0);
     if (!($36)) {
      $37 = HEAP32[$2>>2]|0;
      $38 = (($37) + 4)|0;
      HEAP32[$2>>2] = $38;
     }
    }
    $39 = ((($0)) + 511349|0);
    $40 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$39,$3)|0);
    $41 = ($40|0)==(0);
    if (!($41)) {
     $$12 = $40;
     STACKTOP = sp;return ($$12|0);
    }
    $42 = HEAP32[$3>>2]|0;
    $43 = $42 << 1;
    $44 = HEAP32[$2>>2]|0;
    $45 = (($44) + ($43))|0;
    HEAP32[$2>>2] = $45;
    $46 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($5,$39,$3)|0);
    $47 = ($46|0)==(0);
    if ($47) {
     $48 = HEAP32[$3>>2]|0;
     $49 = HEAP32[$2>>2]|0;
     $50 = (($49) + ($48))|0;
     $$sink$sink = $50;
     break;
    } else {
     $$12 = $46;
     STACKTOP = sp;return ($$12|0);
    }
   }
  }
 } while(0);
 HEAP32[$2>>2] = $$sink$sink;
 $$12 = 0;
 STACKTOP = sp;return ($$12|0);
}
function __ZN7WelsDec23WelsFillCacheInterCabacEPNS_16TagNeighborAvailEPhPA30_A2_sS5_PA30_aPNS_10TagDqLayerE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0 = 0, $$0162 = 0, $$0164 = 0, $$sink$sink = 0, $$sink12 = 0, $$sink168 = 0, $$sink6 = 0, $$sink7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $6 = ((($5)) + 4040|0);
 $7 = HEAP32[$6>>2]|0;
 __ZN7WelsDec25WelsFillCacheNonZeroCountEPNS_16TagNeighborAvailEPhPNS_10TagDqLayerE($0,$1,$5);
 $8 = HEAP32[$0>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0164 = 0;
 } else {
  $10 = ((($5)) + 4044|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($7) - ($11))|0;
  $$0164 = $12;
 }
 $13 = ((($0)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0);
 $16 = (($7) + -1)|0;
 $$ = $15 ? 0 : $16;
 $17 = ((($0)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0162 = 0;
 } else {
  $20 = ((($5)) + 4044|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($16) - ($21))|0;
  $$0162 = $22;
 }
 $23 = ((($0)) + 8|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(0);
 if ($25) {
  $$0 = 0;
 } else {
  $26 = ((($5)) + 4044|0);
  $27 = (($7) + 1)|0;
  $28 = HEAP32[$26>>2]|0;
  $29 = (($27) - ($28))|0;
  $$0 = $29;
 }
 if ($15) {
  label = 10;
 } else {
  $30 = ((($0)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = $31 & 504;
  $33 = ($32|0)==(0);
  if ($33) {
   label = 10;
  } else {
   $34 = ((($5)) + 3916|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (((($35) + ($$<<6)|0)) + 12|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = ((($2)) + 24|0);
   HEAP8[$38>>0]=$37&255;HEAP8[$38+1>>0]=($37>>8)&255;HEAP8[$38+2>>0]=($37>>16)&255;HEAP8[$38+3>>0]=$37>>24;
   $39 = HEAP32[$34>>2]|0;
   $40 = (((($39) + ($$<<6)|0)) + 28|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = ((($2)) + 48|0);
   HEAP8[$42>>0]=$41&255;HEAP8[$42+1>>0]=($41>>8)&255;HEAP8[$42+2>>0]=($41>>16)&255;HEAP8[$42+3>>0]=$41>>24;
   $43 = HEAP32[$34>>2]|0;
   $44 = (((($43) + ($$<<6)|0)) + 44|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ((($2)) + 72|0);
   HEAP8[$46>>0]=$45&255;HEAP8[$46+1>>0]=($45>>8)&255;HEAP8[$46+2>>0]=($45>>16)&255;HEAP8[$46+3>>0]=$45>>24;
   $47 = HEAP32[$34>>2]|0;
   $48 = (((($47) + ($$<<6)|0)) + 60|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ((($2)) + 96|0);
   HEAP8[$50>>0]=$49&255;HEAP8[$50+1>>0]=($49>>8)&255;HEAP8[$50+2>>0]=($49>>16)&255;HEAP8[$50+3>>0]=$49>>24;
   $51 = ((($5)) + 3924|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (((($52) + ($$<<6)|0)) + 12|0);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   $55 = ((($3)) + 24|0);
   HEAP8[$55>>0]=$54&255;HEAP8[$55+1>>0]=($54>>8)&255;HEAP8[$55+2>>0]=($54>>16)&255;HEAP8[$55+3>>0]=$54>>24;
   $56 = HEAP32[$51>>2]|0;
   $57 = (((($56) + ($$<<6)|0)) + 28|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = ((($3)) + 48|0);
   HEAP8[$59>>0]=$58&255;HEAP8[$59+1>>0]=($58>>8)&255;HEAP8[$59+2>>0]=($58>>16)&255;HEAP8[$59+3>>0]=$58>>24;
   $60 = HEAP32[$51>>2]|0;
   $61 = (((($60) + ($$<<6)|0)) + 44|0);
   $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   $63 = ((($3)) + 72|0);
   HEAP8[$63>>0]=$62&255;HEAP8[$63+1>>0]=($62>>8)&255;HEAP8[$63+2>>0]=($62>>16)&255;HEAP8[$63+3>>0]=$62>>24;
   $64 = HEAP32[$51>>2]|0;
   $65 = (((($64) + ($$<<6)|0)) + 60|0);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   $67 = ((($3)) + 96|0);
   HEAP8[$67>>0]=$66&255;HEAP8[$67+1>>0]=($66>>8)&255;HEAP8[$67+2>>0]=($66>>16)&255;HEAP8[$67+3>>0]=$66>>24;
   $68 = ((($5)) + 3932|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = (((($69) + ($$<<4)|0)) + 3|0);
   $71 = HEAP8[$70>>0]|0;
   $72 = ((($4)) + 6|0);
   HEAP8[$72>>0] = $71;
   $73 = HEAP32[$68>>2]|0;
   $74 = (((($73) + ($$<<4)|0)) + 7|0);
   $75 = HEAP8[$74>>0]|0;
   $76 = ((($4)) + 12|0);
   HEAP8[$76>>0] = $75;
   $77 = HEAP32[$68>>2]|0;
   $78 = (((($77) + ($$<<4)|0)) + 11|0);
   $79 = HEAP8[$78>>0]|0;
   $80 = ((($4)) + 18|0);
   HEAP8[$80>>0] = $79;
   $81 = HEAP32[$68>>2]|0;
   $82 = (((($81) + ($$<<4)|0)) + 15|0);
   $83 = HEAP8[$82>>0]|0;
   $$sink$sink = $83;$$sink6 = 24;
  }
 }
 do {
  if ((label|0) == 10) {
   $84 = ((($2)) + 24|0);
   HEAP8[$84>>0]=0&255;HEAP8[$84+1>>0]=(0>>8)&255;HEAP8[$84+2>>0]=(0>>16)&255;HEAP8[$84+3>>0]=0>>24;
   $85 = ((($2)) + 48|0);
   HEAP8[$85>>0]=0&255;HEAP8[$85+1>>0]=(0>>8)&255;HEAP8[$85+2>>0]=(0>>16)&255;HEAP8[$85+3>>0]=0>>24;
   $86 = ((($2)) + 72|0);
   HEAP8[$86>>0]=0&255;HEAP8[$86+1>>0]=(0>>8)&255;HEAP8[$86+2>>0]=(0>>16)&255;HEAP8[$86+3>>0]=0>>24;
   $87 = ((($2)) + 96|0);
   HEAP8[$87>>0]=0&255;HEAP8[$87+1>>0]=(0>>8)&255;HEAP8[$87+2>>0]=(0>>16)&255;HEAP8[$87+3>>0]=0>>24;
   $88 = ((($3)) + 24|0);
   HEAP8[$88>>0]=0&255;HEAP8[$88+1>>0]=(0>>8)&255;HEAP8[$88+2>>0]=(0>>16)&255;HEAP8[$88+3>>0]=0>>24;
   $89 = ((($3)) + 48|0);
   HEAP8[$89>>0]=0&255;HEAP8[$89+1>>0]=(0>>8)&255;HEAP8[$89+2>>0]=(0>>16)&255;HEAP8[$89+3>>0]=0>>24;
   $90 = ((($3)) + 72|0);
   HEAP8[$90>>0]=0&255;HEAP8[$90+1>>0]=(0>>8)&255;HEAP8[$90+2>>0]=(0>>16)&255;HEAP8[$90+3>>0]=0>>24;
   $91 = ((($3)) + 96|0);
   HEAP8[$91>>0]=0&255;HEAP8[$91+1>>0]=(0>>8)&255;HEAP8[$91+2>>0]=(0>>16)&255;HEAP8[$91+3>>0]=0>>24;
   $92 = HEAP32[$13>>2]|0;
   $93 = ($92|0)==(0);
   $94 = ((($4)) + 24|0);
   if ($93) {
    HEAP8[$94>>0] = -2;
    $95 = ((($4)) + 18|0);
    HEAP8[$95>>0] = -2;
    $96 = ((($4)) + 12|0);
    HEAP8[$96>>0] = -2;
    $$sink$sink = -2;$$sink6 = 6;
    break;
   } else {
    HEAP8[$94>>0] = -1;
    $97 = ((($4)) + 18|0);
    HEAP8[$97>>0] = -1;
    $98 = ((($4)) + 12|0);
    HEAP8[$98>>0] = -1;
    $$sink$sink = -1;$$sink6 = 6;
    break;
   }
  }
 } while(0);
 $99 = (($4) + ($$sink6)|0);
 HEAP8[$99>>0] = $$sink$sink;
 $100 = HEAP32[$17>>2]|0;
 $101 = ($100|0)==(0);
 if ($101) {
  label = 16;
 } else {
  $102 = ((($0)) + 24|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = $103 & 504;
  $105 = ($104|0)==(0);
  if ($105) {
   label = 16;
  } else {
   $106 = ((($5)) + 3916|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (((($107) + ($$0162<<6)|0)) + 60|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   HEAP8[$2>>0]=$109&255;HEAP8[$2+1>>0]=($109>>8)&255;HEAP8[$2+2>>0]=($109>>16)&255;HEAP8[$2+3>>0]=$109>>24;
   $110 = ((($5)) + 3924|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (((($111) + ($$0162<<6)|0)) + 60|0);
   $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
   HEAP8[$3>>0]=$113&255;HEAP8[$3+1>>0]=($113>>8)&255;HEAP8[$3+2>>0]=($113>>16)&255;HEAP8[$3+3>>0]=$113>>24;
   $114 = ((($5)) + 3932|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = (((($115) + ($$0162<<4)|0)) + 15|0);
   $117 = HEAP8[$116>>0]|0;
   HEAP8[$4>>0] = $117;
  }
 }
 if ((label|0) == 16) {
  HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
  HEAP8[$3>>0]=0&255;HEAP8[$3+1>>0]=(0>>8)&255;HEAP8[$3+2>>0]=(0>>16)&255;HEAP8[$3+3>>0]=0>>24;
  $118 = HEAP32[$17>>2]|0;
  $119 = ($118|0)==(0);
  $$sink7 = $119 ? -2 : -1;
  HEAP8[$4>>0] = $$sink7;
 }
 $120 = HEAP32[$0>>2]|0;
 $121 = ($120|0)==(0);
 if ($121) {
  label = 20;
 } else {
  $122 = ((($0)) + 20|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = $123 & 504;
  $125 = ($124|0)==(0);
  if ($125) {
   label = 20;
  } else {
   $126 = ((($5)) + 3916|0);
   $127 = HEAP32[$126>>2]|0;
   $128 = (((($127) + ($$0164<<6)|0)) + 48|0);
   $129 = $128;
   $130 = $129;
   $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
   $132 = (($129) + 4)|0;
   $133 = $132;
   $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
   $135 = ((($2)) + 4|0);
   $136 = $135;
   $137 = $136;
   HEAP8[$137>>0]=$131&255;HEAP8[$137+1>>0]=($131>>8)&255;HEAP8[$137+2>>0]=($131>>16)&255;HEAP8[$137+3>>0]=$131>>24;
   $138 = (($136) + 4)|0;
   $139 = $138;
   HEAP8[$139>>0]=$134&255;HEAP8[$139+1>>0]=($134>>8)&255;HEAP8[$139+2>>0]=($134>>16)&255;HEAP8[$139+3>>0]=$134>>24;
   $140 = HEAP32[$126>>2]|0;
   $141 = (((($140) + ($$0164<<6)|0)) + 56|0);
   $142 = $141;
   $143 = $142;
   $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
   $145 = (($142) + 4)|0;
   $146 = $145;
   $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
   $148 = ((($2)) + 12|0);
   $149 = $148;
   $150 = $149;
   HEAP8[$150>>0]=$144&255;HEAP8[$150+1>>0]=($144>>8)&255;HEAP8[$150+2>>0]=($144>>16)&255;HEAP8[$150+3>>0]=$144>>24;
   $151 = (($149) + 4)|0;
   $152 = $151;
   HEAP8[$152>>0]=$147&255;HEAP8[$152+1>>0]=($147>>8)&255;HEAP8[$152+2>>0]=($147>>16)&255;HEAP8[$152+3>>0]=$147>>24;
   $153 = ((($5)) + 3924|0);
   $154 = HEAP32[$153>>2]|0;
   $155 = (((($154) + ($$0164<<6)|0)) + 48|0);
   $156 = $155;
   $157 = $156;
   $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
   $159 = (($156) + 4)|0;
   $160 = $159;
   $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
   $162 = ((($3)) + 4|0);
   $163 = $162;
   $164 = $163;
   HEAP8[$164>>0]=$158&255;HEAP8[$164+1>>0]=($158>>8)&255;HEAP8[$164+2>>0]=($158>>16)&255;HEAP8[$164+3>>0]=$158>>24;
   $165 = (($163) + 4)|0;
   $166 = $165;
   HEAP8[$166>>0]=$161&255;HEAP8[$166+1>>0]=($161>>8)&255;HEAP8[$166+2>>0]=($161>>16)&255;HEAP8[$166+3>>0]=$161>>24;
   $167 = HEAP32[$153>>2]|0;
   $168 = (((($167) + ($$0164<<6)|0)) + 56|0);
   $169 = $168;
   $170 = $169;
   $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
   $172 = (($169) + 4)|0;
   $173 = $172;
   $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
   $175 = ((($3)) + 12|0);
   $176 = $175;
   $177 = $176;
   HEAP8[$177>>0]=$171&255;HEAP8[$177+1>>0]=($171>>8)&255;HEAP8[$177+2>>0]=($171>>16)&255;HEAP8[$177+3>>0]=$171>>24;
   $178 = (($176) + 4)|0;
   $179 = $178;
   HEAP8[$179>>0]=$174&255;HEAP8[$179+1>>0]=($174>>8)&255;HEAP8[$179+2>>0]=($174>>16)&255;HEAP8[$179+3>>0]=$174>>24;
   $180 = ((($5)) + 3932|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = (((($181) + ($$0164<<4)|0)) + 12|0);
   $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
   $184 = ((($4)) + 1|0);
   HEAP8[$184>>0]=$183&255;HEAP8[$184+1>>0]=($183>>8)&255;HEAP8[$184+2>>0]=($183>>16)&255;HEAP8[$184+3>>0]=$183>>24;
  }
 }
 if ((label|0) == 20) {
  $185 = ((($2)) + 4|0);
  $186 = ((($3)) + 4|0);
  dest=$185; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  dest=$186; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $187 = HEAP32[$0>>2]|0;
  $188 = ($187|0)==(0);
  $$sink168 = $188 ? -2 : -1;
  $189 = ((($4)) + 1|0);
  _memset(($189|0),($$sink168|0),4)|0;
 }
 $190 = HEAP32[$23>>2]|0;
 $191 = ($190|0)==(0);
 if (!($191)) {
  $192 = ((($0)) + 28|0);
  $193 = HEAP32[$192>>2]|0;
  $194 = $193 & 504;
  $195 = ($194|0)==(0);
  if (!($195)) {
   $196 = ((($5)) + 3916|0);
   $197 = HEAP32[$196>>2]|0;
   $198 = (((($197) + ($$0<<6)|0)) + 48|0);
   $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
   $200 = ((($2)) + 20|0);
   HEAP8[$200>>0]=$199&255;HEAP8[$200+1>>0]=($199>>8)&255;HEAP8[$200+2>>0]=($199>>16)&255;HEAP8[$200+3>>0]=$199>>24;
   $201 = ((($5)) + 3924|0);
   $202 = HEAP32[$201>>2]|0;
   $203 = (((($202) + ($$0<<6)|0)) + 48|0);
   $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
   $205 = ((($3)) + 20|0);
   HEAP8[$205>>0]=$204&255;HEAP8[$205+1>>0]=($204>>8)&255;HEAP8[$205+2>>0]=($204>>16)&255;HEAP8[$205+3>>0]=$204>>24;
   $206 = ((($5)) + 3932|0);
   $207 = HEAP32[$206>>2]|0;
   $208 = (((($207) + ($$0<<4)|0)) + 12|0);
   $209 = HEAP8[$208>>0]|0;
   $210 = ((($4)) + 5|0);
   HEAP8[$210>>0] = $209;
   $215 = ((($2)) + 36|0);
   HEAP8[$215>>0]=0&255;HEAP8[$215+1>>0]=(0>>8)&255;HEAP8[$215+2>>0]=(0>>16)&255;HEAP8[$215+3>>0]=0>>24;
   $216 = ((($2)) + 84|0);
   HEAP8[$216>>0]=0&255;HEAP8[$216+1>>0]=(0>>8)&255;HEAP8[$216+2>>0]=(0>>16)&255;HEAP8[$216+3>>0]=0>>24;
   $217 = ((($2)) + 44|0);
   HEAP8[$217>>0]=0&255;HEAP8[$217+1>>0]=(0>>8)&255;HEAP8[$217+2>>0]=(0>>16)&255;HEAP8[$217+3>>0]=0>>24;
   $218 = ((($2)) + 68|0);
   HEAP8[$218>>0]=0&255;HEAP8[$218+1>>0]=(0>>8)&255;HEAP8[$218+2>>0]=(0>>16)&255;HEAP8[$218+3>>0]=0>>24;
   $219 = ((($2)) + 92|0);
   HEAP8[$219>>0]=0&255;HEAP8[$219+1>>0]=(0>>8)&255;HEAP8[$219+2>>0]=(0>>16)&255;HEAP8[$219+3>>0]=0>>24;
   $220 = ((($3)) + 36|0);
   HEAP8[$220>>0]=0&255;HEAP8[$220+1>>0]=(0>>8)&255;HEAP8[$220+2>>0]=(0>>16)&255;HEAP8[$220+3>>0]=0>>24;
   $221 = ((($3)) + 84|0);
   HEAP8[$221>>0]=0&255;HEAP8[$221+1>>0]=(0>>8)&255;HEAP8[$221+2>>0]=(0>>16)&255;HEAP8[$221+3>>0]=0>>24;
   $222 = ((($3)) + 44|0);
   HEAP8[$222>>0]=0&255;HEAP8[$222+1>>0]=(0>>8)&255;HEAP8[$222+2>>0]=(0>>16)&255;HEAP8[$222+3>>0]=0>>24;
   $223 = ((($3)) + 68|0);
   HEAP8[$223>>0]=0&255;HEAP8[$223+1>>0]=(0>>8)&255;HEAP8[$223+2>>0]=(0>>16)&255;HEAP8[$223+3>>0]=0>>24;
   $224 = ((($3)) + 92|0);
   HEAP8[$224>>0]=0&255;HEAP8[$224+1>>0]=(0>>8)&255;HEAP8[$224+2>>0]=(0>>16)&255;HEAP8[$224+3>>0]=0>>24;
   $225 = ((($4)) + 23|0);
   HEAP8[$225>>0] = -2;
   $226 = ((($4)) + 17|0);
   HEAP8[$226>>0] = -2;
   $227 = ((($4)) + 11|0);
   HEAP8[$227>>0] = -2;
   $228 = ((($4)) + 21|0);
   HEAP8[$228>>0] = -2;
   $229 = ((($4)) + 9|0);
   HEAP8[$229>>0] = -2;
   return;
  }
 }
 $211 = ((($2)) + 20|0);
 HEAP8[$211>>0]=0&255;HEAP8[$211+1>>0]=(0>>8)&255;HEAP8[$211+2>>0]=(0>>16)&255;HEAP8[$211+3>>0]=0>>24;
 $212 = HEAP32[$23>>2]|0;
 $213 = ($212|0)==(0);
 $214 = ((($4)) + 5|0);
 $$sink12 = $213 ? -2 : -1;
 HEAP8[$214>>0] = $$sink12;
 $215 = ((($2)) + 36|0);
 HEAP8[$215>>0]=0&255;HEAP8[$215+1>>0]=(0>>8)&255;HEAP8[$215+2>>0]=(0>>16)&255;HEAP8[$215+3>>0]=0>>24;
 $216 = ((($2)) + 84|0);
 HEAP8[$216>>0]=0&255;HEAP8[$216+1>>0]=(0>>8)&255;HEAP8[$216+2>>0]=(0>>16)&255;HEAP8[$216+3>>0]=0>>24;
 $217 = ((($2)) + 44|0);
 HEAP8[$217>>0]=0&255;HEAP8[$217+1>>0]=(0>>8)&255;HEAP8[$217+2>>0]=(0>>16)&255;HEAP8[$217+3>>0]=0>>24;
 $218 = ((($2)) + 68|0);
 HEAP8[$218>>0]=0&255;HEAP8[$218+1>>0]=(0>>8)&255;HEAP8[$218+2>>0]=(0>>16)&255;HEAP8[$218+3>>0]=0>>24;
 $219 = ((($2)) + 92|0);
 HEAP8[$219>>0]=0&255;HEAP8[$219+1>>0]=(0>>8)&255;HEAP8[$219+2>>0]=(0>>16)&255;HEAP8[$219+3>>0]=0>>24;
 $220 = ((($3)) + 36|0);
 HEAP8[$220>>0]=0&255;HEAP8[$220+1>>0]=(0>>8)&255;HEAP8[$220+2>>0]=(0>>16)&255;HEAP8[$220+3>>0]=0>>24;
 $221 = ((($3)) + 84|0);
 HEAP8[$221>>0]=0&255;HEAP8[$221+1>>0]=(0>>8)&255;HEAP8[$221+2>>0]=(0>>16)&255;HEAP8[$221+3>>0]=0>>24;
 $222 = ((($3)) + 44|0);
 HEAP8[$222>>0]=0&255;HEAP8[$222+1>>0]=(0>>8)&255;HEAP8[$222+2>>0]=(0>>16)&255;HEAP8[$222+3>>0]=0>>24;
 $223 = ((($3)) + 68|0);
 HEAP8[$223>>0]=0&255;HEAP8[$223+1>>0]=(0>>8)&255;HEAP8[$223+2>>0]=(0>>16)&255;HEAP8[$223+3>>0]=0>>24;
 $224 = ((($3)) + 92|0);
 HEAP8[$224>>0]=0&255;HEAP8[$224+1>>0]=(0>>8)&255;HEAP8[$224+2>>0]=(0>>16)&255;HEAP8[$224+3>>0]=0>>24;
 $225 = ((($4)) + 23|0);
 HEAP8[$225>>0] = -2;
 $226 = ((($4)) + 17|0);
 HEAP8[$226>>0] = -2;
 $227 = ((($4)) + 11|0);
 HEAP8[$227>>0] = -2;
 $228 = ((($4)) + 21|0);
 HEAP8[$228>>0] = -2;
 $229 = ((($4)) + 9|0);
 HEAP8[$229>>0] = -2;
 return;
}
function __ZN7WelsDec25ParseInterMotionInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_A2_sS7_PA30_a($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0414520 = 0, $$0421526 = 0, $$1$ph$ph = 0, $$1$ph481 = 0, $$1415518 = 0, $$23$ph = 0, $$24 = 0, $$2416524 = 0, $$3$i = 0, $$3417522 = 0, $$4418532 = 0, $$5419530 = 0, $$6420528 = 0, $$pn = 0, $$sink = 0, $$sink559 = 0, $$sink562 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0;
 var $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0;
 var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;
 var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;
 var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;
 var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;
 var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;
 var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;
 var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;
 var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0;
 var $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0;
 var $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, $or$cond450 = 0, $or$cond452 = 0, $or$cond456 = 0, $or$cond458 = 0, $or$cond462 = 0, $or$cond465 = 0, $or$cond469 = 0, $sext = 0, $sext441 = 0, $sext443 = 0, $sext444 = 0, $sext445 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer7 = sp + 40|0;
 $vararg_buffer4 = sp + 32|0;
 $vararg_buffer1 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $6 = sp + 48|0;
 $7 = sp + 8|0;
 $8 = sp;
 $9 = sp + 52|0;
 $10 = sp + 44|0;
 $11 = sp + 60|0;
 $12 = sp + 56|0;
 $13 = ((($0)) + 241932|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 4040|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $7;
 $18 = $17;
 HEAP32[$18>>2] = 0;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = 0;
 $21 = $8;
 $22 = $21;
 HEAP32[$22>>2] = 0;
 $23 = (($21) + 4)|0;
 $24 = $23;
 HEAP32[$24>>2] = 0;
 HEAP16[$9>>1] = 0;
 $25 = ((($14)) + 88|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($26)) + 828|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($28)) + 24|0);
 $30 = HEAP16[$29>>1]|0;
 $31 = ((($28)) + 26|0);
 $32 = HEAP16[$31>>1]|0;
 $33 = ((($14)) + 52|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($14)) + 3908|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (($36) + ($16<<1)|0);
 $38 = HEAP16[$37>>1]|0;
 $39 = $38 << 16 >> 16;
 switch ($39|0) {
 case 8:  {
  $50 = (__ZN7WelsDec16ParseRefIdxCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_aiiiiRa($0,$1,0,$5,0,0,$34,0,$9)|0);
  $51 = ($50|0)==(0);
  if (!($51)) {
   $$24 = $50;
   STACKTOP = sp;return ($$24|0);
  }
  $52 = HEAP8[$9>>0]|0;
  $53 = $52 << 24 >> 24;
  $54 = ($52<<24>>24)>(-1);
  $55 = ($53|0)<($34|0);
  $or$cond = $54 & $55;
  if ($or$cond) {
   $56 = (((($0)) + 5468|0) + ($53<<2)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = ($57|0)==(0|0);
   if ($58) {
    label = 7;
   } else {
    $73 = $52;
   }
  } else {
   label = 7;
  }
  do {
   if ((label|0) == 7) {
    $59 = ((($0)) + 512344|0);
    HEAP8[$59>>0] = 1;
    $60 = ((($0)) + 242340|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ($61|0)==(0);
    if ($62) {
     $$24 = 1041;
     STACKTOP = sp;return ($$24|0);
    } else {
     HEAP8[$9>>0] = 0;
     $63 = ((($0)) + 116|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = $64 | 4;
     HEAP32[$63>>2] = $65;
     $73 = 0;
     break;
    }
   }
  } while(0);
  $66 = ((($0)) + 512345|0);
  $67 = HEAP8[$66>>0]|0;
  $68 = ($67<<24>>24)==(0);
  $69 = ((($0)) + 512344|0);
  if ($68) {
   $70 = HEAP8[$69>>0]|0;
   $71 = ($70<<24>>24)==(0);
   if ($71) {
    $72 = $73 << 24 >> 24;
    $74 = (((($0)) + 5468|0) + ($72<<2)|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($75|0)==(0|0);
    if ($76) {
     $80 = 1;
    } else {
     $77 = ((($75)) + 72|0);
     $78 = HEAP8[$77>>0]|0;
     $79 = $78 ^ 1;
     $80 = $79;
    }
   } else {
    $80 = 1;
   }
  } else {
   $80 = 1;
  }
  HEAP8[$69>>0] = $80;
  __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($3,$5,0,4,$73,$7);
  $81 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,0,0,0,$8)|0);
  $82 = ($81|0)==(0);
  if (!($82)) {
   $$24 = $81;
   STACKTOP = sp;return ($$24|0);
  }
  $83 = ((($8)) + 2|0);
  $84 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,0,0,1,$83)|0);
  $85 = ($84|0)==(0);
  if (!($85)) {
   $$24 = $84;
   STACKTOP = sp;return ($$24|0);
  }
  $86 = HEAP16[$8>>1]|0;
  $87 = $86&65535;
  $88 = HEAP16[$7>>1]|0;
  $89 = $88&65535;
  $90 = (($89) + ($87))|0;
  $91 = $90&65535;
  HEAP16[$7>>1] = $91;
  $92 = HEAP16[$83>>1]|0;
  $93 = $92&65535;
  $94 = ((($7)) + 2|0);
  $95 = HEAP16[$94>>1]|0;
  $96 = $95&65535;
  $97 = (($96) + ($93))|0;
  $98 = $97&65535;
  HEAP16[$94>>1] = $98;
  $sext445 = $97 << 16;
  $99 = $sext445 >> 16;
  $100 = $30 << 16 >> 16;
  $101 = ($99|0)<($100|0);
  $102 = $32 << 16 >> 16;
  $103 = ($99|0)>($102|0);
  $or$cond450 = $101 | $103;
  if ($or$cond450) {
   HEAP32[$vararg_buffer>>2] = $99;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer);
  }
  __ZN7WelsDec22UpdateP16x16MotionInfoEPNS_10TagDqLayerEaPs($14,$73,$7);
  $104 = HEAP32[$8>>2]|0;
  $105 = HEAP32[$15>>2]|0;
  $106 = ((($14)) + 3924|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = (($107) + ($105<<6)|0);
  $109 = $108;
  $110 = $109;
  HEAP8[$110>>0]=$104&255;HEAP8[$110+1>>0]=($104>>8)&255;HEAP8[$110+2>>0]=($104>>16)&255;HEAP8[$110+3>>0]=$104>>24;
  $111 = (($109) + 4)|0;
  $112 = $111;
  HEAP8[$112>>0]=$104&255;HEAP8[$112+1>>0]=($104>>8)&255;HEAP8[$112+2>>0]=($104>>16)&255;HEAP8[$112+3>>0]=$104>>24;
  $113 = HEAP32[$106>>2]|0;
  $114 = (((($113) + ($105<<6)|0)) + 8|0);
  $115 = $114;
  $116 = $115;
  HEAP8[$116>>0]=$104&255;HEAP8[$116+1>>0]=($104>>8)&255;HEAP8[$116+2>>0]=($104>>16)&255;HEAP8[$116+3>>0]=$104>>24;
  $117 = (($115) + 4)|0;
  $118 = $117;
  HEAP8[$118>>0]=$104&255;HEAP8[$118+1>>0]=($104>>8)&255;HEAP8[$118+2>>0]=($104>>16)&255;HEAP8[$118+3>>0]=$104>>24;
  $119 = HEAP32[$106>>2]|0;
  $120 = (((($119) + ($105<<6)|0)) + 16|0);
  $121 = $120;
  $122 = $121;
  HEAP8[$122>>0]=$104&255;HEAP8[$122+1>>0]=($104>>8)&255;HEAP8[$122+2>>0]=($104>>16)&255;HEAP8[$122+3>>0]=$104>>24;
  $123 = (($121) + 4)|0;
  $124 = $123;
  HEAP8[$124>>0]=$104&255;HEAP8[$124+1>>0]=($104>>8)&255;HEAP8[$124+2>>0]=($104>>16)&255;HEAP8[$124+3>>0]=$104>>24;
  $125 = HEAP32[$106>>2]|0;
  $126 = (((($125) + ($105<<6)|0)) + 24|0);
  $127 = $126;
  $128 = $127;
  HEAP8[$128>>0]=$104&255;HEAP8[$128+1>>0]=($104>>8)&255;HEAP8[$128+2>>0]=($104>>16)&255;HEAP8[$128+3>>0]=$104>>24;
  $129 = (($127) + 4)|0;
  $130 = $129;
  HEAP8[$130>>0]=$104&255;HEAP8[$130+1>>0]=($104>>8)&255;HEAP8[$130+2>>0]=($104>>16)&255;HEAP8[$130+3>>0]=$104>>24;
  $131 = HEAP32[$106>>2]|0;
  $132 = (((($131) + ($105<<6)|0)) + 32|0);
  $133 = $132;
  $134 = $133;
  HEAP8[$134>>0]=$104&255;HEAP8[$134+1>>0]=($104>>8)&255;HEAP8[$134+2>>0]=($104>>16)&255;HEAP8[$134+3>>0]=$104>>24;
  $135 = (($133) + 4)|0;
  $136 = $135;
  HEAP8[$136>>0]=$104&255;HEAP8[$136+1>>0]=($104>>8)&255;HEAP8[$136+2>>0]=($104>>16)&255;HEAP8[$136+3>>0]=$104>>24;
  $137 = HEAP32[$106>>2]|0;
  $138 = (((($137) + ($105<<6)|0)) + 40|0);
  $139 = $138;
  $140 = $139;
  HEAP8[$140>>0]=$104&255;HEAP8[$140+1>>0]=($104>>8)&255;HEAP8[$140+2>>0]=($104>>16)&255;HEAP8[$140+3>>0]=$104>>24;
  $141 = (($139) + 4)|0;
  $142 = $141;
  HEAP8[$142>>0]=$104&255;HEAP8[$142+1>>0]=($104>>8)&255;HEAP8[$142+2>>0]=($104>>16)&255;HEAP8[$142+3>>0]=$104>>24;
  $143 = HEAP32[$106>>2]|0;
  $144 = (((($143) + ($105<<6)|0)) + 48|0);
  $145 = $144;
  $146 = $145;
  HEAP8[$146>>0]=$104&255;HEAP8[$146+1>>0]=($104>>8)&255;HEAP8[$146+2>>0]=($104>>16)&255;HEAP8[$146+3>>0]=$104>>24;
  $147 = (($145) + 4)|0;
  $148 = $147;
  HEAP8[$148>>0]=$104&255;HEAP8[$148+1>>0]=($104>>8)&255;HEAP8[$148+2>>0]=($104>>16)&255;HEAP8[$148+3>>0]=$104>>24;
  $149 = HEAP32[$106>>2]|0;
  $150 = (((($149) + ($105<<6)|0)) + 56|0);
  $151 = $150;
  $152 = $151;
  HEAP8[$152>>0]=$104&255;HEAP8[$152+1>>0]=($104>>8)&255;HEAP8[$152+2>>0]=($104>>16)&255;HEAP8[$152+3>>0]=$104>>24;
  $153 = (($151) + 4)|0;
  $154 = $153;
  HEAP8[$154>>0]=$104&255;HEAP8[$154+1>>0]=($104>>8)&255;HEAP8[$154+2>>0]=($104>>16)&255;HEAP8[$154+3>>0]=$104>>24;
  $$24 = 0;
  STACKTOP = sp;return ($$24|0);
  break;
 }
 case 16:  {
  $45 = ((($0)) + 512344|0);
  $46 = ((($0)) + 242340|0);
  $47 = ((($0)) + 116|0);
  $48 = ((($0)) + 512345|0);
  $49 = ((($14)) + 3932|0);
  $$0414520 = 0;
  while(1) {
   $160 = $$0414520 << 3;
   $161 = (($9) + ($$0414520)|0);
   $162 = (__ZN7WelsDec16ParseRefIdxCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_aiiiiRa($0,$1,0,$5,0,$160,$34,0,$161)|0);
   $163 = ($162|0)==(0);
   if (!($163)) {
    $$24 = $162;
    label = 93;
    break;
   }
   $164 = HEAP8[$161>>0]|0;
   $165 = $164 << 24 >> 24;
   $166 = ($164<<24>>24)>(-1);
   $167 = ($165|0)<($34|0);
   $or$cond452 = $166 & $167;
   if ($or$cond452) {
    $168 = (((($0)) + 5468|0) + ($165<<2)|0);
    $169 = HEAP32[$168>>2]|0;
    $170 = ($169|0)==(0|0);
    if ($170) {
     label = 22;
    } else {
     $180 = $164;
    }
   } else {
    label = 22;
   }
   if ((label|0) == 22) {
    label = 0;
    HEAP8[$45>>0] = 1;
    $171 = HEAP32[$46>>2]|0;
    $172 = ($171|0)==(0);
    if ($172) {
     $$24 = 1041;
     label = 93;
     break;
    }
    HEAP8[$161>>0] = 0;
    $173 = HEAP32[$47>>2]|0;
    $174 = $173 | 4;
    HEAP32[$47>>2] = $174;
    $180 = 0;
   }
   $175 = HEAP8[$48>>0]|0;
   $176 = ($175<<24>>24)==(0);
   if ($176) {
    $177 = HEAP8[$45>>0]|0;
    $178 = ($177<<24>>24)==(0);
    if ($178) {
     $179 = $180 << 24 >> 24;
     $181 = (((($0)) + 5468|0) + ($179<<2)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ($182|0)==(0|0);
     if ($183) {
      $188 = 0;
     } else {
      $184 = ((($182)) + 72|0);
      $185 = HEAP8[$184>>0]|0;
      $186 = ($185<<24>>24)!=(0);
      $188 = $186;
     }
     $187 = $188 ^ 1;
     $190 = $187;
    } else {
     $190 = 1;
    }
   } else {
    $190 = 1;
   }
   $189 = $190&1;
   HEAP8[$45>>0] = $189;
   $191 = $180 << 24 >> 24;
   $192 = $191 << 24;
   $193 = $191 << 16;
   $194 = $191 << 8;
   $195 = $193 | $191;
   $196 = $195 | $192;
   $197 = $196 | $194;
   $198 = HEAP32[$15>>2]|0;
   $199 = (15567 + ($160)|0);
   $200 = HEAP8[$199>>0]|0;
   $201 = $200&255;
   $202 = (($201) + 4)|0;
   $203 = (11103 + ($160)|0);
   $204 = HEAP8[$203>>0]|0;
   $205 = $204&255;
   $206 = (($205) + 6)|0;
   $207 = HEAP32[$49>>2]|0;
   $208 = ((($207) + ($198<<4)|0) + ($201)|0);
   HEAP8[$208>>0]=$197&255;HEAP8[$208+1>>0]=($197>>8)&255;HEAP8[$208+2>>0]=($197>>16)&255;HEAP8[$208+3>>0]=$197>>24;
   $209 = HEAP32[$49>>2]|0;
   $210 = $202 & 255;
   $211 = ((($209) + ($198<<4)|0) + ($210)|0);
   HEAP8[$211>>0]=$197&255;HEAP8[$211+1>>0]=($197>>8)&255;HEAP8[$211+2>>0]=($197>>16)&255;HEAP8[$211+3>>0]=$197>>24;
   $212 = (($5) + ($205)|0);
   HEAP8[$212>>0]=$197&255;HEAP8[$212+1>>0]=($197>>8)&255;HEAP8[$212+2>>0]=($197>>16)&255;HEAP8[$212+3>>0]=$197>>24;
   $213 = $206 & 255;
   $214 = (($5) + ($213)|0);
   HEAP8[$214>>0]=$197&255;HEAP8[$214+1>>0]=($197>>8)&255;HEAP8[$214+2>>0]=($197>>16)&255;HEAP8[$214+3>>0]=$197>>24;
   $215 = (($$0414520) + 1)|0;
   $216 = ($215|0)<(2);
   if ($216) {
    $$0414520 = $215;
   } else {
    label = 18;
    break;
   }
  }
  if ((label|0) == 18) {
   $155 = ((($8)) + 2|0);
   $156 = ((($7)) + 2|0);
   $157 = $30 << 16 >> 16;
   $158 = $32 << 16 >> 16;
   $159 = ((($14)) + 3924|0);
   $$1415518 = 0;
   while(1) {
    $217 = $$1415518 << 3;
    $218 = (($9) + ($$1415518)|0);
    $219 = HEAP8[$218>>0]|0;
    __ZN7WelsDec15PredInter16x8MvEPA30_A2_sPA30_aiaPs($3,$5,$217,$219,$7);
    $220 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,$217,0,0,$8)|0);
    $221 = ($220|0)==(0);
    if (!($221)) {
     $$24 = $220;
     label = 93;
     break;
    }
    $222 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,$217,0,1,$155)|0);
    $223 = ($222|0)==(0);
    if (!($223)) {
     $$24 = $222;
     label = 93;
     break;
    }
    $224 = HEAP16[$8>>1]|0;
    $225 = $224&65535;
    $226 = HEAP16[$7>>1]|0;
    $227 = $226&65535;
    $228 = (($227) + ($225))|0;
    $229 = $228&65535;
    HEAP16[$7>>1] = $229;
    $230 = HEAP16[$155>>1]|0;
    $231 = $230&65535;
    $232 = HEAP16[$156>>1]|0;
    $233 = $232&65535;
    $234 = (($233) + ($231))|0;
    $235 = $234&65535;
    HEAP16[$156>>1] = $235;
    $sext444 = $234 << 16;
    $236 = $sext444 >> 16;
    $237 = ($236|0)<($157|0);
    $238 = ($236|0)>($158|0);
    $or$cond456 = $237 | $238;
    if ($or$cond456) {
     HEAP32[$vararg_buffer1>>2] = $236;
     __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer1);
    }
    __ZN7WelsDec21UpdateP16x8MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($14,$3,$5,$217,$219,$7);
    $239 = HEAP32[$8>>2]|0;
    $240 = HEAP32[$15>>2]|0;
    $241 = (15567 + ($217)|0);
    $242 = HEAP8[$241>>0]|0;
    $243 = $242&255;
    $244 = (($243) + 4)|0;
    $245 = (11103 + ($217)|0);
    $246 = HEAP8[$245>>0]|0;
    $247 = $246&255;
    $248 = (($247) + 6)|0;
    $249 = HEAP32[$159>>2]|0;
    $250 = ((($249) + ($240<<6)|0) + ($243<<2)|0);
    $251 = $250;
    $252 = $251;
    HEAP8[$252>>0]=$239&255;HEAP8[$252+1>>0]=($239>>8)&255;HEAP8[$252+2>>0]=($239>>16)&255;HEAP8[$252+3>>0]=$239>>24;
    $253 = (($251) + 4)|0;
    $254 = $253;
    HEAP8[$254>>0]=$239&255;HEAP8[$254+1>>0]=($239>>8)&255;HEAP8[$254+2>>0]=($239>>16)&255;HEAP8[$254+3>>0]=$239>>24;
    $255 = HEAP32[$159>>2]|0;
    $256 = $244 & 255;
    $257 = ((($255) + ($240<<6)|0) + ($256<<2)|0);
    $258 = $257;
    $259 = $258;
    HEAP8[$259>>0]=$239&255;HEAP8[$259+1>>0]=($239>>8)&255;HEAP8[$259+2>>0]=($239>>16)&255;HEAP8[$259+3>>0]=$239>>24;
    $260 = (($258) + 4)|0;
    $261 = $260;
    HEAP8[$261>>0]=$239&255;HEAP8[$261+1>>0]=($239>>8)&255;HEAP8[$261+2>>0]=($239>>16)&255;HEAP8[$261+3>>0]=$239>>24;
    $262 = (($4) + ($247<<2)|0);
    $263 = $262;
    $264 = $263;
    HEAP8[$264>>0]=$239&255;HEAP8[$264+1>>0]=($239>>8)&255;HEAP8[$264+2>>0]=($239>>16)&255;HEAP8[$264+3>>0]=$239>>24;
    $265 = (($263) + 4)|0;
    $266 = $265;
    HEAP8[$266>>0]=$239&255;HEAP8[$266+1>>0]=($239>>8)&255;HEAP8[$266+2>>0]=($239>>16)&255;HEAP8[$266+3>>0]=$239>>24;
    $267 = $248 & 255;
    $268 = (($4) + ($267<<2)|0);
    $269 = $268;
    $270 = $269;
    HEAP8[$270>>0]=$239&255;HEAP8[$270+1>>0]=($239>>8)&255;HEAP8[$270+2>>0]=($239>>16)&255;HEAP8[$270+3>>0]=$239>>24;
    $271 = (($269) + 4)|0;
    $272 = $271;
    HEAP8[$272>>0]=$239&255;HEAP8[$272+1>>0]=($239>>8)&255;HEAP8[$272+2>>0]=($239>>16)&255;HEAP8[$272+3>>0]=$239>>24;
    $273 = $217 | 4;
    $274 = (15567 + ($273)|0);
    $275 = HEAP8[$274>>0]|0;
    $276 = $275&255;
    $277 = (($276) + 4)|0;
    $278 = (11103 + ($273)|0);
    $279 = HEAP8[$278>>0]|0;
    $280 = $279&255;
    $281 = (($280) + 6)|0;
    $282 = HEAP32[$159>>2]|0;
    $283 = ((($282) + ($240<<6)|0) + ($276<<2)|0);
    $284 = $283;
    $285 = $284;
    HEAP8[$285>>0]=$239&255;HEAP8[$285+1>>0]=($239>>8)&255;HEAP8[$285+2>>0]=($239>>16)&255;HEAP8[$285+3>>0]=$239>>24;
    $286 = (($284) + 4)|0;
    $287 = $286;
    HEAP8[$287>>0]=$239&255;HEAP8[$287+1>>0]=($239>>8)&255;HEAP8[$287+2>>0]=($239>>16)&255;HEAP8[$287+3>>0]=$239>>24;
    $288 = HEAP32[$159>>2]|0;
    $289 = $277 & 255;
    $290 = ((($288) + ($240<<6)|0) + ($289<<2)|0);
    $291 = $290;
    $292 = $291;
    HEAP8[$292>>0]=$239&255;HEAP8[$292+1>>0]=($239>>8)&255;HEAP8[$292+2>>0]=($239>>16)&255;HEAP8[$292+3>>0]=$239>>24;
    $293 = (($291) + 4)|0;
    $294 = $293;
    HEAP8[$294>>0]=$239&255;HEAP8[$294+1>>0]=($239>>8)&255;HEAP8[$294+2>>0]=($239>>16)&255;HEAP8[$294+3>>0]=$239>>24;
    $295 = (($4) + ($280<<2)|0);
    $296 = $295;
    $297 = $296;
    HEAP8[$297>>0]=$239&255;HEAP8[$297+1>>0]=($239>>8)&255;HEAP8[$297+2>>0]=($239>>16)&255;HEAP8[$297+3>>0]=$239>>24;
    $298 = (($296) + 4)|0;
    $299 = $298;
    HEAP8[$299>>0]=$239&255;HEAP8[$299+1>>0]=($239>>8)&255;HEAP8[$299+2>>0]=($239>>16)&255;HEAP8[$299+3>>0]=$239>>24;
    $300 = $281 & 255;
    $301 = (($4) + ($300<<2)|0);
    $302 = $301;
    $303 = $302;
    HEAP8[$303>>0]=$239&255;HEAP8[$303+1>>0]=($239>>8)&255;HEAP8[$303+2>>0]=($239>>16)&255;HEAP8[$303+3>>0]=$239>>24;
    $304 = (($302) + 4)|0;
    $305 = $304;
    HEAP8[$305>>0]=$239&255;HEAP8[$305+1>>0]=($239>>8)&255;HEAP8[$305+2>>0]=($239>>16)&255;HEAP8[$305+3>>0]=$239>>24;
    $306 = (($$1415518) + 1)|0;
    $307 = ($306|0)<(2);
    if ($307) {
     $$1415518 = $306;
    } else {
     $$24 = 0;
     label = 93;
     break;
    }
   }
   if ((label|0) == 93) {
    STACKTOP = sp;return ($$24|0);
   }
  }
  else if ((label|0) == 93) {
   STACKTOP = sp;return ($$24|0);
  }
  break;
 }
 case 32:  {
  $40 = ((($0)) + 512344|0);
  $41 = ((($0)) + 242340|0);
  $42 = ((($0)) + 116|0);
  $43 = ((($0)) + 512345|0);
  $44 = ((($14)) + 3932|0);
  $$2416524 = 0;
  while(1) {
   $313 = $$2416524 << 2;
   $314 = (($9) + ($$2416524)|0);
   $315 = (__ZN7WelsDec16ParseRefIdxCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_aiiiiRa($0,$1,0,$5,0,$313,$34,0,$314)|0);
   $316 = ($315|0)==(0);
   if (!($316)) {
    $$24 = $315;
    label = 93;
    break;
   }
   $317 = HEAP8[$314>>0]|0;
   $318 = $317 << 24 >> 24;
   $319 = ($317<<24>>24)>(-1);
   $320 = ($318|0)<($34|0);
   $or$cond458 = $319 & $320;
   if ($or$cond458) {
    $321 = (((($0)) + 5468|0) + ($318<<2)|0);
    $322 = HEAP32[$321>>2]|0;
    $323 = ($322|0)==(0|0);
    if ($323) {
     label = 39;
    } else {
     $333 = $317;
    }
   } else {
    label = 39;
   }
   if ((label|0) == 39) {
    label = 0;
    HEAP8[$40>>0] = 1;
    $324 = HEAP32[$41>>2]|0;
    $325 = ($324|0)==(0);
    if ($325) {
     $$24 = 1041;
     label = 93;
     break;
    }
    HEAP8[$314>>0] = 0;
    $326 = HEAP32[$42>>2]|0;
    $327 = $326 | 4;
    HEAP32[$42>>2] = $327;
    $333 = 0;
   }
   $328 = HEAP8[$43>>0]|0;
   $329 = ($328<<24>>24)==(0);
   if ($329) {
    $330 = HEAP8[$40>>0]|0;
    $331 = ($330<<24>>24)==(0);
    if ($331) {
     $332 = $333 << 24 >> 24;
     $334 = (((($0)) + 5468|0) + ($332<<2)|0);
     $335 = HEAP32[$334>>2]|0;
     $336 = ($335|0)==(0|0);
     if ($336) {
      $341 = 0;
     } else {
      $337 = ((($335)) + 72|0);
      $338 = HEAP8[$337>>0]|0;
      $339 = ($338<<24>>24)!=(0);
      $341 = $339;
     }
     $340 = $341 ^ 1;
     $343 = $340;
    } else {
     $343 = 1;
    }
   } else {
    $343 = 1;
   }
   $342 = $343&1;
   HEAP8[$40>>0] = $342;
   $344 = $333 << 24 >> 24;
   $345 = $344 << 8;
   $346 = $345 | $344;
   $347 = $346&65535;
   $348 = HEAP32[$15>>2]|0;
   $349 = (15567 + ($313)|0);
   $350 = HEAP8[$349>>0]|0;
   $351 = (11103 + ($313)|0);
   $352 = HEAP8[$351>>0]|0;
   $353 = $350&255;
   $354 = (($353) + 4)|0;
   $355 = $352&255;
   $356 = (($355) + 6)|0;
   $357 = HEAP32[$44>>2]|0;
   $358 = ((($357) + ($348<<4)|0) + ($353)|0);
   HEAP8[$358>>0]=$347&255;HEAP8[$358+1>>0]=$347>>8;
   $359 = HEAP32[$44>>2]|0;
   $360 = $354 & 255;
   $361 = ((($359) + ($348<<4)|0) + ($360)|0);
   HEAP8[$361>>0]=$347&255;HEAP8[$361+1>>0]=$347>>8;
   $362 = (($5) + ($355)|0);
   HEAP8[$362>>0]=$347&255;HEAP8[$362+1>>0]=$347>>8;
   $363 = $356 & 255;
   $364 = (($5) + ($363)|0);
   HEAP8[$364>>0]=$347&255;HEAP8[$364+1>>0]=$347>>8;
   $365 = (($313) + 8)|0;
   $366 = (15567 + ($365)|0);
   $367 = HEAP8[$366>>0]|0;
   $368 = (11103 + ($365)|0);
   $369 = HEAP8[$368>>0]|0;
   $370 = $367&255;
   $371 = (($370) + 4)|0;
   $372 = $369&255;
   $373 = (($372) + 6)|0;
   $374 = HEAP32[$44>>2]|0;
   $375 = ((($374) + ($348<<4)|0) + ($370)|0);
   HEAP8[$375>>0]=$347&255;HEAP8[$375+1>>0]=$347>>8;
   $376 = HEAP32[$44>>2]|0;
   $377 = $371 & 255;
   $378 = ((($376) + ($348<<4)|0) + ($377)|0);
   HEAP8[$378>>0]=$347&255;HEAP8[$378+1>>0]=$347>>8;
   $379 = (($5) + ($372)|0);
   HEAP8[$379>>0]=$347&255;HEAP8[$379+1>>0]=$347>>8;
   $380 = $373 & 255;
   $381 = (($5) + ($380)|0);
   HEAP8[$381>>0]=$347&255;HEAP8[$381+1>>0]=$347>>8;
   $382 = (($$2416524) + 1)|0;
   $383 = ($382|0)<(2);
   if ($383) {
    $$2416524 = $382;
   } else {
    label = 35;
    break;
   }
  }
  if ((label|0) == 35) {
   $308 = ((($8)) + 2|0);
   $309 = ((($7)) + 2|0);
   $310 = $30 << 16 >> 16;
   $311 = $32 << 16 >> 16;
   $312 = ((($14)) + 3924|0);
   $$3417522 = 0;
   while(1) {
    $384 = $$3417522 << 2;
    $385 = (($9) + ($$3417522)|0);
    $386 = HEAP8[$385>>0]|0;
    __ZN7WelsDec15PredInter8x16MvEPA30_A2_sPA30_aiaPs($3,$5,$384,$386,$7);
    $387 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,$384,0,0,$8)|0);
    $388 = ($387|0)==(0);
    if (!($388)) {
     $$24 = $387;
     label = 93;
     break;
    }
    $389 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,$384,0,1,$308)|0);
    $390 = ($389|0)==(0);
    if (!($390)) {
     $$24 = $389;
     label = 93;
     break;
    }
    $391 = HEAP16[$8>>1]|0;
    $392 = $391&65535;
    $393 = HEAP16[$7>>1]|0;
    $394 = $393&65535;
    $395 = (($394) + ($392))|0;
    $396 = $395&65535;
    HEAP16[$7>>1] = $396;
    $397 = HEAP16[$308>>1]|0;
    $398 = $397&65535;
    $399 = HEAP16[$309>>1]|0;
    $400 = $399&65535;
    $401 = (($400) + ($398))|0;
    $402 = $401&65535;
    HEAP16[$309>>1] = $402;
    $sext443 = $401 << 16;
    $403 = $sext443 >> 16;
    $404 = ($403|0)<($310|0);
    $405 = ($403|0)>($311|0);
    $or$cond462 = $404 | $405;
    if ($or$cond462) {
     HEAP32[$vararg_buffer4>>2] = $403;
     __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer4);
    }
    __ZN7WelsDec21UpdateP8x16MotionInfoEPNS_10TagDqLayerEPA30_A2_sPA30_aiaPs($14,$3,$5,$384,$386,$7);
    $406 = HEAP32[$8>>2]|0;
    $407 = HEAP32[$15>>2]|0;
    $408 = (15567 + ($384)|0);
    $409 = HEAP8[$408>>0]|0;
    $410 = (11103 + ($384)|0);
    $411 = HEAP8[$410>>0]|0;
    $412 = $409&255;
    $413 = (($412) + 4)|0;
    $414 = $411&255;
    $415 = (($414) + 6)|0;
    $416 = HEAP32[$312>>2]|0;
    $417 = ((($416) + ($407<<6)|0) + ($412<<2)|0);
    $418 = $417;
    $419 = $418;
    HEAP8[$419>>0]=$406&255;HEAP8[$419+1>>0]=($406>>8)&255;HEAP8[$419+2>>0]=($406>>16)&255;HEAP8[$419+3>>0]=$406>>24;
    $420 = (($418) + 4)|0;
    $421 = $420;
    HEAP8[$421>>0]=$406&255;HEAP8[$421+1>>0]=($406>>8)&255;HEAP8[$421+2>>0]=($406>>16)&255;HEAP8[$421+3>>0]=$406>>24;
    $422 = HEAP32[$312>>2]|0;
    $423 = $413 & 255;
    $424 = ((($422) + ($407<<6)|0) + ($423<<2)|0);
    $425 = $424;
    $426 = $425;
    HEAP8[$426>>0]=$406&255;HEAP8[$426+1>>0]=($406>>8)&255;HEAP8[$426+2>>0]=($406>>16)&255;HEAP8[$426+3>>0]=$406>>24;
    $427 = (($425) + 4)|0;
    $428 = $427;
    HEAP8[$428>>0]=$406&255;HEAP8[$428+1>>0]=($406>>8)&255;HEAP8[$428+2>>0]=($406>>16)&255;HEAP8[$428+3>>0]=$406>>24;
    $429 = (($4) + ($414<<2)|0);
    $430 = $429;
    $431 = $430;
    HEAP8[$431>>0]=$406&255;HEAP8[$431+1>>0]=($406>>8)&255;HEAP8[$431+2>>0]=($406>>16)&255;HEAP8[$431+3>>0]=$406>>24;
    $432 = (($430) + 4)|0;
    $433 = $432;
    HEAP8[$433>>0]=$406&255;HEAP8[$433+1>>0]=($406>>8)&255;HEAP8[$433+2>>0]=($406>>16)&255;HEAP8[$433+3>>0]=$406>>24;
    $434 = $415 & 255;
    $435 = (($4) + ($434<<2)|0);
    $436 = $435;
    $437 = $436;
    HEAP8[$437>>0]=$406&255;HEAP8[$437+1>>0]=($406>>8)&255;HEAP8[$437+2>>0]=($406>>16)&255;HEAP8[$437+3>>0]=$406>>24;
    $438 = (($436) + 4)|0;
    $439 = $438;
    HEAP8[$439>>0]=$406&255;HEAP8[$439+1>>0]=($406>>8)&255;HEAP8[$439+2>>0]=($406>>16)&255;HEAP8[$439+3>>0]=$406>>24;
    $440 = (($384) + 8)|0;
    $441 = (15567 + ($440)|0);
    $442 = HEAP8[$441>>0]|0;
    $443 = (11103 + ($440)|0);
    $444 = HEAP8[$443>>0]|0;
    $445 = $442&255;
    $446 = (($445) + 4)|0;
    $447 = $444&255;
    $448 = (($447) + 6)|0;
    $449 = HEAP32[$312>>2]|0;
    $450 = ((($449) + ($407<<6)|0) + ($445<<2)|0);
    $451 = $450;
    $452 = $451;
    HEAP8[$452>>0]=$406&255;HEAP8[$452+1>>0]=($406>>8)&255;HEAP8[$452+2>>0]=($406>>16)&255;HEAP8[$452+3>>0]=$406>>24;
    $453 = (($451) + 4)|0;
    $454 = $453;
    HEAP8[$454>>0]=$406&255;HEAP8[$454+1>>0]=($406>>8)&255;HEAP8[$454+2>>0]=($406>>16)&255;HEAP8[$454+3>>0]=$406>>24;
    $455 = HEAP32[$312>>2]|0;
    $456 = $446 & 255;
    $457 = ((($455) + ($407<<6)|0) + ($456<<2)|0);
    $458 = $457;
    $459 = $458;
    HEAP8[$459>>0]=$406&255;HEAP8[$459+1>>0]=($406>>8)&255;HEAP8[$459+2>>0]=($406>>16)&255;HEAP8[$459+3>>0]=$406>>24;
    $460 = (($458) + 4)|0;
    $461 = $460;
    HEAP8[$461>>0]=$406&255;HEAP8[$461+1>>0]=($406>>8)&255;HEAP8[$461+2>>0]=($406>>16)&255;HEAP8[$461+3>>0]=$406>>24;
    $462 = (($4) + ($447<<2)|0);
    $463 = $462;
    $464 = $463;
    HEAP8[$464>>0]=$406&255;HEAP8[$464+1>>0]=($406>>8)&255;HEAP8[$464+2>>0]=($406>>16)&255;HEAP8[$464+3>>0]=$406>>24;
    $465 = (($463) + 4)|0;
    $466 = $465;
    HEAP8[$466>>0]=$406&255;HEAP8[$466+1>>0]=($406>>8)&255;HEAP8[$466+2>>0]=($406>>16)&255;HEAP8[$466+3>>0]=$406>>24;
    $467 = $448 & 255;
    $468 = (($4) + ($467<<2)|0);
    $469 = $468;
    $470 = $469;
    HEAP8[$470>>0]=$406&255;HEAP8[$470+1>>0]=($406>>8)&255;HEAP8[$470+2>>0]=($406>>16)&255;HEAP8[$470+3>>0]=$406>>24;
    $471 = (($469) + 4)|0;
    $472 = $471;
    HEAP8[$472>>0]=$406&255;HEAP8[$472+1>>0]=($406>>8)&255;HEAP8[$472+2>>0]=($406>>16)&255;HEAP8[$472+3>>0]=$406>>24;
    $473 = (($$3417522) + 1)|0;
    $474 = ($473|0)<(2);
    if ($474) {
     $$3417522 = $473;
    } else {
     $$24 = 0;
     label = 93;
     break;
    }
   }
   if ((label|0) == 93) {
    STACKTOP = sp;return ($$24|0);
   }
  }
  else if ((label|0) == 93) {
   STACKTOP = sp;return ($$24|0);
  }
  break;
 }
 case 128: case 64:  {
  HEAP32[$10>>2] = 0;
  $475 = ((($0)) + 512232|0);
  $476 = ((($0)) + 511351|0);
  $477 = ((($0)) + 511353|0);
  $478 = ((($0)) + 511355|0);
  $479 = ((($14)) + 4008|0);
  $480 = ((($14)) + 3940|0);
  $$4418532 = 0;
  while(1) {
   $486 = HEAP32[$475>>2]|0;
   $487 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($486,$476,$6)|0);
   $488 = ($487|0)==(0);
   if (!($488)) {
    $$3$i = $487;
    label = 59;
    break;
   }
   $489 = HEAP32[$6>>2]|0;
   $490 = ($489|0)==(0);
   if ($490) {
    $491 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($486,$477,$6)|0);
    $492 = ($491|0)==(0);
    if (!($492)) {
     $$3$i = $491;
     label = 59;
     break;
    }
    $493 = HEAP32[$6>>2]|0;
    $494 = ($493|0)==(0);
    if ($494) {
     $$1$ph$ph = 1;
     label = 60;
    } else {
     $495 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($486,$478,$6)|0);
     $496 = ($495|0)==(0);
     if (!($496)) {
      $$3$i = $495;
      label = 59;
      break;
     }
     $497 = HEAP32[$6>>2]|0;
     $498 = (3 - ($497))|0;
     $499 = ($498>>>0)>(3);
     if ($499) {
      $$23$ph = 1038;
      break;
     } else {
      $$1$ph481 = $498;
     }
    }
   } else {
    $$1$ph$ph = 0;
    label = 60;
   }
   if ((label|0) == 60) {
    label = 0;
    $$1$ph481 = $$1$ph$ph;
   }
   $500 = (9408 + ($$1$ph481<<3)|0);
   $501 = HEAP32[$500>>2]|0;
   $502 = $501&255;
   $503 = HEAP32[$479>>2]|0;
   $504 = ((($503) + ($16<<2)|0) + ($$4418532)|0);
   HEAP8[$504>>0] = $502;
   $505 = (((9408 + ($$1$ph481<<3)|0)) + 4|0);
   $506 = HEAP8[$505>>0]|0;
   $507 = (($11) + ($$4418532)|0);
   HEAP8[$507>>0] = $506;
   $508 = (((9408 + ($$1$ph481<<3)|0)) + 5|0);
   $509 = HEAP8[$508>>0]|0;
   $510 = (($12) + ($$4418532)|0);
   HEAP8[$510>>0] = $509;
   $511 = ($$1$ph481|0)==(0);
   $512 = $511&1;
   $513 = HEAP32[$480>>2]|0;
   $514 = (($513) + ($16)|0);
   $515 = HEAP8[$514>>0]|0;
   $516 = $515&255;
   $517 = $516 & $512;
   $518 = $517&255;
   HEAP8[$514>>0] = $518;
   $519 = (($$4418532) + 1)|0;
   $520 = ($519|0)<(4);
   if ($520) {
    $$4418532 = $519;
   } else {
    label = 53;
    break;
   }
  }
  L105: do {
   if ((label|0) == 53) {
    $481 = ((($0)) + 512344|0);
    $482 = ((($0)) + 242340|0);
    $483 = ((($0)) + 116|0);
    $484 = ((($0)) + 512345|0);
    $485 = ((($14)) + 3932|0);
    $$5419530 = 0;
    while(1) {
     $529 = $$5419530 << 18;
     $530 = $529 >> 16;
     $531 = (($10) + ($$5419530)|0);
     $532 = (__ZN7WelsDec16ParseRefIdxCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_aiiiiRa($0,$1,0,$5,0,$530,$34,0,$531)|0);
     $533 = ($532|0)==(0);
     if (!($533)) {
      $$23$ph = $532;
      break L105;
     }
     $534 = HEAP8[$531>>0]|0;
     $535 = $534 << 24 >> 24;
     $536 = ($534<<24>>24)>(-1);
     $537 = ($535|0)<($34|0);
     $or$cond465 = $536 & $537;
     if ($or$cond465) {
      $538 = (((($0)) + 5468|0) + ($535<<2)|0);
      $539 = HEAP32[$538>>2]|0;
      $540 = ($539|0)==(0|0);
      if ($540) {
       label = 67;
      } else {
       $550 = $534;
      }
     } else {
      label = 67;
     }
     if ((label|0) == 67) {
      label = 0;
      HEAP8[$481>>0] = 1;
      $541 = HEAP32[$482>>2]|0;
      $542 = ($541|0)==(0);
      if ($542) {
       $$23$ph = 1041;
       break L105;
      }
      HEAP8[$531>>0] = 0;
      $543 = HEAP32[$483>>2]|0;
      $544 = $543 | 4;
      HEAP32[$483>>2] = $544;
      $550 = 0;
     }
     $545 = HEAP8[$484>>0]|0;
     $546 = ($545<<24>>24)==(0);
     if ($546) {
      $547 = HEAP8[$481>>0]|0;
      $548 = ($547<<24>>24)==(0);
      if ($548) {
       $549 = $550 << 24 >> 24;
       $551 = (((($0)) + 5468|0) + ($549<<2)|0);
       $552 = HEAP32[$551>>2]|0;
       $553 = ($552|0)==(0|0);
       if ($553) {
        $558 = 0;
       } else {
        $554 = ((($552)) + 72|0);
        $555 = HEAP8[$554>>0]|0;
        $556 = ($555<<24>>24)!=(0);
        $558 = $556;
       }
       $557 = $558 ^ 1;
       $560 = $557;
      } else {
       $560 = 1;
      }
     } else {
      $560 = 1;
     }
     $559 = $560&1;
     HEAP8[$481>>0] = $559;
     $561 = HEAP32[$15>>2]|0;
     $562 = (15567 + ($530)|0);
     $563 = HEAP8[$562>>0]|0;
     $564 = HEAP32[$485>>2]|0;
     $565 = $563&255;
     $566 = (($565) + 5)|0;
     $567 = ((($564) + ($561<<4)|0) + ($566)|0);
     HEAP8[$567>>0] = $550;
     $568 = HEAP32[$485>>2]|0;
     $569 = (($565) + 4)|0;
     $570 = ((($568) + ($561<<4)|0) + ($569)|0);
     HEAP8[$570>>0] = $550;
     $571 = HEAP32[$485>>2]|0;
     $572 = (($565) + 1)|0;
     $573 = ((($571) + ($561<<4)|0) + ($572)|0);
     HEAP8[$573>>0] = $550;
     $574 = HEAP32[$485>>2]|0;
     $575 = ((($574) + ($561<<4)|0) + ($565)|0);
     HEAP8[$575>>0] = $550;
     $576 = (($$5419530) + 1)|0;
     $577 = ($576|0)<(4);
     if ($577) {
      $$5419530 = $576;
     } else {
      break;
     }
    }
    $521 = ((($8)) + 2|0);
    $522 = ((($7)) + 2|0);
    $523 = $30 << 16 >> 16;
    $524 = $32 << 16 >> 16;
    $525 = ((($7)) + 4|0);
    $526 = ((($8)) + 4|0);
    $527 = ((($14)) + 3916|0);
    $528 = ((($14)) + 3924|0);
    $$6420528 = 0;
    while(1) {
     $578 = (($11) + ($$6420528)|0);
     $579 = HEAP8[$578>>0]|0;
     $580 = HEAP32[$479>>2]|0;
     $581 = ((($580) + ($16<<2)|0) + ($$6420528)|0);
     $582 = HEAP8[$581>>0]|0;
     $583 = (($12) + ($$6420528)|0);
     $584 = HEAP8[$583>>0]|0;
     $585 = $$6420528 << 2;
     $586 = (11103 + ($585)|0);
     $587 = HEAP8[$586>>0]|0;
     $588 = (($10) + ($$6420528)|0);
     $589 = HEAP8[$588>>0]|0;
     $590 = $587&255;
     $591 = (($590) + 7)|0;
     $592 = (($5) + ($591)|0);
     HEAP8[$592>>0] = $589;
     $593 = (($590) + 6)|0;
     $594 = (($5) + ($593)|0);
     HEAP8[$594>>0] = $589;
     $595 = (($590) + 1)|0;
     $596 = (($5) + ($595)|0);
     HEAP8[$596>>0] = $589;
     $597 = (($5) + ($590)|0);
     HEAP8[$597>>0] = $589;
     $598 = $579 << 24 >> 24;
     $599 = ($579<<24>>24)>(0);
     if ($599) {
      $600 = $584 << 24 >> 24;
      $601 = ($582<<24>>24)==(1);
      $602 = ($582<<24>>24)==(2);
      $603 = ($582<<24>>24)==(4);
      $$0421526 = 0;
      while(1) {
       $604 = Math_imul($$0421526, $600)|0;
       $605 = (($604) + ($585))|0;
       $sext = $605 << 16;
       $606 = $sext >> 16;
       $607 = (15567 + ($606)|0);
       $608 = HEAP8[$607>>0]|0;
       $609 = (11103 + ($606)|0);
       $610 = HEAP8[$609>>0]|0;
       __ZN7WelsDec6PredMvEPA30_A2_sPA30_aiiaPs($3,$5,$606,$600,$589,$7);
       $611 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,$606,0,0,$8)|0);
       $612 = ($611|0)==(0);
       if (!($612)) {
        $$23$ph = $611;
        break L105;
       }
       $613 = (__ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,0,$5,$4,$606,0,1,$521)|0);
       $614 = ($613|0)==(0);
       if (!($614)) {
        $$23$ph = $613;
        break L105;
       }
       $615 = HEAP16[$8>>1]|0;
       $616 = $615&65535;
       $617 = HEAP16[$7>>1]|0;
       $618 = $617&65535;
       $619 = (($618) + ($616))|0;
       $620 = $619&65535;
       HEAP16[$7>>1] = $620;
       $621 = HEAP16[$521>>1]|0;
       $622 = $621&65535;
       $623 = HEAP16[$522>>1]|0;
       $624 = $623&65535;
       $625 = (($624) + ($622))|0;
       $626 = $625&65535;
       HEAP16[$522>>1] = $626;
       $sext441 = $625 << 16;
       $627 = $sext441 >> 16;
       $628 = ($627|0)<($523|0);
       $629 = ($627|0)>($524|0);
       $or$cond469 = $628 | $629;
       if ($or$cond469) {
        HEAP32[$vararg_buffer7>>2] = $627;
        __Z7WelsLogP13TagLogContextiPKcz($0,2,25866,$vararg_buffer7);
       }
       $630 = $608&255;
       $631 = HEAP32[$7>>2]|0;
       $632 = $610&255;
       do {
        if ($601) {
         HEAP32[$525>>2] = $631;
         $633 = HEAP32[$8>>2]|0;
         HEAP32[$526>>2] = $633;
         $634 = $7;
         $635 = $634;
         $636 = HEAP32[$635>>2]|0;
         $637 = (($634) + 4)|0;
         $638 = $637;
         $639 = HEAP32[$638>>2]|0;
         $640 = HEAP32[$527>>2]|0;
         $641 = ((($640) + ($16<<6)|0) + ($630<<2)|0);
         $642 = $641;
         $643 = $642;
         HEAP8[$643>>0]=$636&255;HEAP8[$643+1>>0]=($636>>8)&255;HEAP8[$643+2>>0]=($636>>16)&255;HEAP8[$643+3>>0]=$636>>24;
         $644 = (($642) + 4)|0;
         $645 = $644;
         HEAP8[$645>>0]=$639&255;HEAP8[$645+1>>0]=($639>>8)&255;HEAP8[$645+2>>0]=($639>>16)&255;HEAP8[$645+3>>0]=$639>>24;
         $646 = $7;
         $647 = $646;
         $648 = HEAP32[$647>>2]|0;
         $649 = (($646) + 4)|0;
         $650 = $649;
         $651 = HEAP32[$650>>2]|0;
         $652 = HEAP32[$527>>2]|0;
         $653 = (($630) + 4)|0;
         $654 = ((($652) + ($16<<6)|0) + ($653<<2)|0);
         $655 = $654;
         $656 = $655;
         HEAP8[$656>>0]=$648&255;HEAP8[$656+1>>0]=($648>>8)&255;HEAP8[$656+2>>0]=($648>>16)&255;HEAP8[$656+3>>0]=$648>>24;
         $657 = (($655) + 4)|0;
         $658 = $657;
         HEAP8[$658>>0]=$651&255;HEAP8[$658+1>>0]=($651>>8)&255;HEAP8[$658+2>>0]=($651>>16)&255;HEAP8[$658+3>>0]=$651>>24;
         $659 = $8;
         $660 = $659;
         $661 = HEAP32[$660>>2]|0;
         $662 = (($659) + 4)|0;
         $663 = $662;
         $664 = HEAP32[$663>>2]|0;
         $665 = HEAP32[$528>>2]|0;
         $666 = ((($665) + ($16<<6)|0) + ($630<<2)|0);
         $667 = $666;
         $668 = $667;
         HEAP8[$668>>0]=$661&255;HEAP8[$668+1>>0]=($661>>8)&255;HEAP8[$668+2>>0]=($661>>16)&255;HEAP8[$668+3>>0]=$661>>24;
         $669 = (($667) + 4)|0;
         $670 = $669;
         HEAP8[$670>>0]=$664&255;HEAP8[$670+1>>0]=($664>>8)&255;HEAP8[$670+2>>0]=($664>>16)&255;HEAP8[$670+3>>0]=$664>>24;
         $671 = HEAP32[$528>>2]|0;
         $672 = ((($671) + ($16<<6)|0) + ($653<<2)|0);
         $673 = $672;
         $674 = $673;
         HEAP8[$674>>0]=$661&255;HEAP8[$674+1>>0]=($661>>8)&255;HEAP8[$674+2>>0]=($661>>16)&255;HEAP8[$674+3>>0]=$661>>24;
         $675 = (($673) + 4)|0;
         $676 = $675;
         HEAP8[$676>>0]=$664&255;HEAP8[$676+1>>0]=($664>>8)&255;HEAP8[$676+2>>0]=($664>>16)&255;HEAP8[$676+3>>0]=$664>>24;
         $677 = $7;
         $678 = $677;
         $679 = HEAP32[$678>>2]|0;
         $680 = (($677) + 4)|0;
         $681 = $680;
         $682 = HEAP32[$681>>2]|0;
         $683 = (($3) + ($632<<2)|0);
         $684 = $683;
         $685 = $684;
         HEAP8[$685>>0]=$679&255;HEAP8[$685+1>>0]=($679>>8)&255;HEAP8[$685+2>>0]=($679>>16)&255;HEAP8[$685+3>>0]=$679>>24;
         $686 = (($684) + 4)|0;
         $687 = $686;
         HEAP8[$687>>0]=$682&255;HEAP8[$687+1>>0]=($682>>8)&255;HEAP8[$687+2>>0]=($682>>16)&255;HEAP8[$687+3>>0]=$682>>24;
         $688 = (($632) + 6)|0;
         $689 = (($3) + ($688<<2)|0);
         $690 = $689;
         $691 = $690;
         HEAP8[$691>>0]=$679&255;HEAP8[$691+1>>0]=($679>>8)&255;HEAP8[$691+2>>0]=($679>>16)&255;HEAP8[$691+3>>0]=$679>>24;
         $692 = (($690) + 4)|0;
         $693 = $692;
         HEAP8[$693>>0]=$682&255;HEAP8[$693+1>>0]=($682>>8)&255;HEAP8[$693+2>>0]=($682>>16)&255;HEAP8[$693+3>>0]=$682>>24;
         $694 = (($4) + ($632<<2)|0);
         $695 = $694;
         $696 = $695;
         HEAP8[$696>>0]=$661&255;HEAP8[$696+1>>0]=($661>>8)&255;HEAP8[$696+2>>0]=($661>>16)&255;HEAP8[$696+3>>0]=$661>>24;
         $697 = (($695) + 4)|0;
         $698 = $697;
         HEAP8[$698>>0]=$664&255;HEAP8[$698+1>>0]=($664>>8)&255;HEAP8[$698+2>>0]=($664>>16)&255;HEAP8[$698+3>>0]=$664>>24;
         $699 = (($4) + ($688<<2)|0);
         $700 = $699;
         $701 = $700;
         HEAP8[$701>>0]=$661&255;HEAP8[$701+1>>0]=($661>>8)&255;HEAP8[$701+2>>0]=($661>>16)&255;HEAP8[$701+3>>0]=$661>>24;
         $702 = (($700) + 4)|0;
         $703 = $702;
         HEAP8[$703>>0]=$664&255;HEAP8[$703+1>>0]=($664>>8)&255;HEAP8[$703+2>>0]=($664>>16)&255;HEAP8[$703+3>>0]=$664>>24;
        } else {
         $704 = HEAP32[$527>>2]|0;
         if ($602) {
          HEAP32[$525>>2] = $631;
          $705 = HEAP32[$8>>2]|0;
          HEAP32[$526>>2] = $705;
          $706 = $7;
          $707 = $706;
          $708 = HEAP32[$707>>2]|0;
          $709 = (($706) + 4)|0;
          $710 = $709;
          $711 = HEAP32[$710>>2]|0;
          $712 = ((($704) + ($16<<6)|0) + ($630<<2)|0);
          $713 = $712;
          $714 = $713;
          HEAP8[$714>>0]=$708&255;HEAP8[$714+1>>0]=($708>>8)&255;HEAP8[$714+2>>0]=($708>>16)&255;HEAP8[$714+3>>0]=$708>>24;
          $715 = (($713) + 4)|0;
          $716 = $715;
          HEAP8[$716>>0]=$711&255;HEAP8[$716+1>>0]=($711>>8)&255;HEAP8[$716+2>>0]=($711>>16)&255;HEAP8[$716+3>>0]=$711>>24;
          $717 = $8;
          $718 = $717;
          $719 = HEAP32[$718>>2]|0;
          $720 = (($717) + 4)|0;
          $721 = $720;
          $722 = HEAP32[$721>>2]|0;
          $723 = HEAP32[$528>>2]|0;
          $724 = ((($723) + ($16<<6)|0) + ($630<<2)|0);
          $725 = $724;
          $726 = $725;
          HEAP8[$726>>0]=$719&255;HEAP8[$726+1>>0]=($719>>8)&255;HEAP8[$726+2>>0]=($719>>16)&255;HEAP8[$726+3>>0]=$719>>24;
          $727 = (($725) + 4)|0;
          $728 = $727;
          HEAP8[$728>>0]=$722&255;HEAP8[$728+1>>0]=($722>>8)&255;HEAP8[$728+2>>0]=($722>>16)&255;HEAP8[$728+3>>0]=$722>>24;
          $729 = $7;
          $730 = $729;
          $731 = HEAP32[$730>>2]|0;
          $732 = (($729) + 4)|0;
          $733 = $732;
          $734 = HEAP32[$733>>2]|0;
          $735 = (($3) + ($632<<2)|0);
          $736 = $735;
          $737 = $736;
          HEAP8[$737>>0]=$731&255;HEAP8[$737+1>>0]=($731>>8)&255;HEAP8[$737+2>>0]=($731>>16)&255;HEAP8[$737+3>>0]=$731>>24;
          $738 = (($736) + 4)|0;
          $739 = $738;
          HEAP8[$739>>0]=$734&255;HEAP8[$739+1>>0]=($734>>8)&255;HEAP8[$739+2>>0]=($734>>16)&255;HEAP8[$739+3>>0]=$734>>24;
          $740 = (($4) + ($632<<2)|0);
          $741 = $740;
          $742 = $741;
          HEAP8[$742>>0]=$719&255;HEAP8[$742+1>>0]=($719>>8)&255;HEAP8[$742+2>>0]=($719>>16)&255;HEAP8[$742+3>>0]=$719>>24;
          $743 = (($741) + 4)|0;
          $744 = $743;
          HEAP8[$744>>0]=$722&255;HEAP8[$744+1>>0]=($722>>8)&255;HEAP8[$744+2>>0]=($722>>16)&255;HEAP8[$744+3>>0]=$722>>24;
          break;
         }
         $745 = ((($704) + ($16<<6)|0) + ($630<<2)|0);
         HEAP8[$745>>0]=$631&255;HEAP8[$745+1>>0]=($631>>8)&255;HEAP8[$745+2>>0]=($631>>16)&255;HEAP8[$745+3>>0]=$631>>24;
         if ($603) {
          $746 = HEAP32[$7>>2]|0;
          $747 = HEAP32[$527>>2]|0;
          $748 = (($630) + 4)|0;
          $749 = ((($747) + ($16<<6)|0) + ($748<<2)|0);
          HEAP8[$749>>0]=$746&255;HEAP8[$749+1>>0]=($746>>8)&255;HEAP8[$749+2>>0]=($746>>16)&255;HEAP8[$749+3>>0]=$746>>24;
          $750 = HEAP32[$8>>2]|0;
          $751 = HEAP32[$528>>2]|0;
          $752 = ((($751) + ($16<<6)|0) + ($630<<2)|0);
          HEAP8[$752>>0]=$750&255;HEAP8[$752+1>>0]=($750>>8)&255;HEAP8[$752+2>>0]=($750>>16)&255;HEAP8[$752+3>>0]=$750>>24;
          $753 = HEAP32[$528>>2]|0;
          $754 = ((($753) + ($16<<6)|0) + ($748<<2)|0);
          HEAP8[$754>>0]=$750&255;HEAP8[$754+1>>0]=($750>>8)&255;HEAP8[$754+2>>0]=($750>>16)&255;HEAP8[$754+3>>0]=$750>>24;
          $755 = HEAP32[$7>>2]|0;
          $756 = (($3) + ($632<<2)|0);
          HEAP8[$756>>0]=$755&255;HEAP8[$756+1>>0]=($755>>8)&255;HEAP8[$756+2>>0]=($755>>16)&255;HEAP8[$756+3>>0]=$755>>24;
          $757 = (($632) + 6)|0;
          $758 = (($3) + ($757<<2)|0);
          HEAP8[$758>>0]=$755&255;HEAP8[$758+1>>0]=($755>>8)&255;HEAP8[$758+2>>0]=($755>>16)&255;HEAP8[$758+3>>0]=$755>>24;
          $$pn = $757;$$sink = $750;$$sink559 = $750;$$sink562 = $4;
         } else {
          $759 = HEAP32[$8>>2]|0;
          $760 = HEAP32[$528>>2]|0;
          $761 = ((($760) + ($16<<6)|0) + ($630<<2)|0);
          HEAP8[$761>>0]=$759&255;HEAP8[$761+1>>0]=($759>>8)&255;HEAP8[$761+2>>0]=($759>>16)&255;HEAP8[$761+3>>0]=$759>>24;
          $762 = HEAP32[$7>>2]|0;
          $$pn = $632;$$sink = $759;$$sink559 = $762;$$sink562 = $3;
         }
         $763 = (($$sink562) + ($632<<2)|0);
         HEAP8[$763>>0]=$$sink559&255;HEAP8[$763+1>>0]=($$sink559>>8)&255;HEAP8[$763+2>>0]=($$sink559>>16)&255;HEAP8[$763+3>>0]=$$sink559>>24;
         $764 = (($4) + ($$pn<<2)|0);
         HEAP8[$764>>0]=$$sink&255;HEAP8[$764+1>>0]=($$sink>>8)&255;HEAP8[$764+2>>0]=($$sink>>16)&255;HEAP8[$764+3>>0]=$$sink>>24;
        }
       } while(0);
       $765 = (($$0421526) + 1)|0;
       $766 = ($765|0)<($598|0);
       if ($766) {
        $$0421526 = $765;
       } else {
        break;
       }
      }
     }
     $767 = (($$6420528) + 1)|0;
     $768 = ($767|0)<(4);
     if ($768) {
      $$6420528 = $767;
     } else {
      break;
     }
    }
    $$24 = 0;
    STACKTOP = sp;return ($$24|0);
   }
   else if ((label|0) == 59) {
    $$23$ph = $$3$i;
   }
  } while(0);
  $$24 = $$23$ph;
  STACKTOP = sp;return ($$24|0);
  break;
 }
 default: {
  $$24 = 0;
  STACKTOP = sp;return ($$24|0);
 }
 }
 return (0)|0;
}
function __ZN7WelsDec16ParseRefIdxCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPhPA30_aiiiiRa($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$062 = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $9 = sp;
 $10 = ($6|0)==(1);
 if ($10) {
  HEAP8[$8>>0] = 0;
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $11 = ((($0)) + 241932|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 3932|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($12)) + 4040|0);
 $16 = HEAP32[$15>>2]|0;
 L5: do {
  switch ($5|0) {
  case 0:  {
   $17 = HEAP32[$1>>2]|0;
   $18 = ($17|0)==(0);
   if ($18) {
    $29 = 0;
   } else {
    $19 = ((($1)) + 20|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==(512);
    if ($21) {
     $29 = 0;
    } else {
     $22 = HEAP8[11103]|0;
     $23 = $22&255;
     $24 = (($23) + -6)|0;
     $25 = ((($3) + (($4*30)|0)|0) + ($24)|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = ($26<<24>>24)>(0);
     $29 = $27;
    }
   }
   $28 = $29&1;
   $30 = ((($1)) + 4|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $$062 = $28;$$sink = 0;
   } else {
    $33 = ((($1)) + 16|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ($34|0)==(512);
    if ($35) {
     $$062 = $28;$$sink = 0;
    } else {
     $36 = HEAP8[11103]|0;
     $37 = $36&255;
     $38 = (($37) + -1)|0;
     $39 = ((($3) + (($4*30)|0)|0) + ($38)|0);
     $40 = HEAP8[$39>>0]|0;
     $41 = ($40<<24>>24)>(0);
     $$062 = $28;$$sink = $41;
    }
   }
   break;
  }
  case 4:  {
   $42 = HEAP32[$1>>2]|0;
   $43 = ($42|0)==(0);
   if ($43) {
    $54 = 0;
   } else {
    $44 = ((($1)) + 20|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($45|0)==(512);
    if ($46) {
     $54 = 0;
    } else {
     $47 = HEAP8[(11107)>>0]|0;
     $48 = $47&255;
     $49 = (($48) + -6)|0;
     $50 = ((($3) + (($4*30)|0)|0) + ($49)|0);
     $51 = HEAP8[$50>>0]|0;
     $52 = ($51<<24>>24)>(0);
     $54 = $52;
    }
   }
   $53 = $54&1;
   $55 = HEAP8[(15571)>>0]|0;
   $56 = $55&255;
   $57 = (($56) + -1)|0;
   $58 = ((($14) + ($16<<4)|0) + ($57)|0);
   $59 = HEAP8[$58>>0]|0;
   $60 = ($59<<24>>24)>(0);
   $$062 = $53;$$sink = $60;
   break;
  }
  default: {
   $61 = ($5|0)==(8);
   $62 = (15567 + ($5)|0);
   $63 = HEAP8[$62>>0]|0;
   $64 = $63&255;
   $65 = (($64) + -4)|0;
   $66 = ((($14) + ($16<<4)|0) + ($65)|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = ($67<<24>>24)>(0);
   $69 = $68&1;
   if (!($61)) {
    $82 = (($64) + -1)|0;
    $83 = ((($14) + ($16<<4)|0) + ($82)|0);
    $84 = HEAP8[$83>>0]|0;
    $85 = ($84<<24>>24)>(0);
    $$062 = $69;$$sink = $85;
    break L5;
   }
   $70 = ((($1)) + 4|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ($71|0)==(0);
   if ($72) {
    $$062 = $69;$$sink = 0;
   } else {
    $73 = ((($1)) + 16|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($74|0)==(512);
    if ($75) {
     $$062 = $69;$$sink = 0;
    } else {
     $76 = HEAP8[(11111)>>0]|0;
     $77 = $76&255;
     $78 = (($77) + -1)|0;
     $79 = ((($3) + (($4*30)|0)|0) + ($78)|0);
     $80 = HEAP8[$79>>0]|0;
     $81 = ($80<<24>>24)>(0);
     $$062 = $69;$$sink = $81;
    }
   }
  }
  }
 } while(0);
 $86 = $$sink&1;
 $87 = $$062 << 1;
 $88 = $87 | $86;
 $89 = ((($0)) + 512232|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($0)) + 511417|0);
 $92 = (($91) + ($88<<1)|0);
 $93 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($90,$92,$9)|0);
 $94 = ($93|0)==(0);
 do {
  if ($94) {
   $95 = HEAP32[$9>>2]|0;
   $96 = ($95|0)==(0);
   if ($96) {
    $103 = 0;
   } else {
    $97 = HEAP32[$89>>2]|0;
    $98 = ((($0)) + 511425|0);
    $99 = (__ZN7WelsDec19DecodeUnaryBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementEiRj($97,$98,1,$9)|0);
    $100 = ($99|0)==(0);
    if (!($100)) {
     $$2 = $99;
     break;
    }
    $101 = HEAP32[$9>>2]|0;
    $102 = (($101) + 1)|0;
    HEAP32[$9>>2] = $102;
    $phitmp = $102&255;
    $103 = $phitmp;
   }
   HEAP8[$8>>0] = $103;
   $$2 = 0;
  } else {
   $$2 = $93;
  }
 } while(0);
 $$3 = $$2;
 STACKTOP = sp;return ($$3|0);
}
function __ZN7WelsDec17ParseMvdInfoCabacEPNS_21TagWelsDecoderContextEPNS_16TagNeighborAvailEPA30_aPA30_A2_siaaRs($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$ = 0, $$068 = 0, $$073 = 0, $$169 = 0, $$3 = 0, $$neg = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $8 = sp;
 $9 = ((($0)) + 511389|0);
 $10 = $6 << 24 >> 24;
 $11 = ($10*7)|0;
 $12 = (($9) + ($11<<1)|0);
 HEAP16[$7>>1] = 0;
 $13 = $5 << 24 >> 24;
 $14 = (11103 + ($4)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15&255;
 $17 = (($16) + -6)|0;
 $18 = ((($2) + (($13*30)|0)|0) + ($17)|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)>(-1);
 if ($20) {
  $21 = (((($3) + (($13*120)|0)|0) + ($17<<2)|0) + ($10<<1)|0);
  $22 = HEAP16[$21>>1]|0;
  $23 = $22 << 16 >> 16;
  $24 = $23 >> 31;
  $25 = $24 ^ $23;
  $26 = (($25) - ($24))|0;
  $$068 = $26;
 } else {
  $$068 = 0;
 }
 $27 = (($16) + -1)|0;
 $28 = ((($2) + (($13*30)|0)|0) + ($27)|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = ($29<<24>>24)>(-1);
 if ($30) {
  $31 = (((($3) + (($13*120)|0)|0) + ($27<<2)|0) + ($10<<1)|0);
  $32 = HEAP16[$31>>1]|0;
  $33 = $32 << 16 >> 16;
  $34 = $33 >> 31;
  $35 = $34 ^ $33;
  $$neg = $33 >>> 31;
  $36 = (($$neg) + ($$068))|0;
  $37 = (($36) + ($35))|0;
  $$169 = $37;
 } else {
  $$169 = $$068;
 }
 $38 = ($$169|0)<(3);
 $39 = ($$169|0)>(32);
 $$ = $39 ? 2 : 1;
 $$073 = $38 ? 0 : $$;
 $40 = ((($0)) + 512232|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (($12) + ($$073<<1)|0);
 $43 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($41,$42,$8)|0);
 $44 = ($43|0)==(0);
 if (!($44)) {
  $$3 = $43;
  STACKTOP = sp;return ($$3|0);
 }
 $45 = HEAP32[$8>>2]|0;
 $46 = ($45|0)==(0);
 do {
  if ($46) {
   $$sink = 0;
  } else {
   $47 = HEAP32[$40>>2]|0;
   $48 = ((($12)) + 6|0);
   $49 = (__ZN7WelsDec16DecodeUEGMvCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementEjRj($47,$48,3,$8)|0);
   $50 = ($49|0)==(0);
   if (!($50)) {
    $$3 = $49;
    STACKTOP = sp;return ($$3|0);
   }
   $51 = HEAP32[$8>>2]|0;
   $52 = (($51) + 1)|0;
   $53 = $52&65535;
   HEAP16[$7>>1] = $53;
   $54 = HEAP32[$40>>2]|0;
   $55 = (__ZN7WelsDec17DecodeBypassCabacEPNS_19SWelsCabacDecEngineERj($54,$8)|0);
   $56 = ($55|0)==(0);
   if (!($56)) {
    $$3 = $55;
    STACKTOP = sp;return ($$3|0);
   }
   $57 = HEAP32[$8>>2]|0;
   $58 = ($57|0)==(0);
   if ($58) {
    $$3 = 0;
    STACKTOP = sp;return ($$3|0);
   } else {
    $59 = HEAP16[$7>>1]|0;
    $60 = $59&65535;
    $61 = (0 - ($60))|0;
    $62 = $61&65535;
    $$sink = $62;
    break;
   }
  }
 } while(0);
 HEAP16[$7>>1] = $$sink;
 $$3 = 0;
 STACKTOP = sp;return ($$3|0);
}
function __ZN7WelsDec16DecodeUEGMvCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementEjRj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$032 = 0, $$4 = 0, $$5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $5 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$1,$3)|0);
 $6 = ($5|0)==(0);
 if (!($6)) {
  $$5 = $5;
  STACKTOP = sp;return ($$5|0);
 }
 $7 = HEAP32[$3>>2]|0;
 $8 = ($7|0)==(0);
 if ($8) {
  $$5 = 0;
  STACKTOP = sp;return ($$5|0);
 }
 HEAP32[$3>>2] = 0;
 $$032 = 1;
 while(1) {
  $9 = (($$032) + 1)|0;
  $10 = (10510 + ($$032<<1)|0);
  $11 = HEAP16[$10>>1]|0;
  $12 = $11 << 16 >> 16;
  $13 = (($1) + ($12<<1)|0);
  $14 = (__ZN7WelsDec14DecodeBinCabacEPNS_19SWelsCabacDecEngineEPNS_19SWels_Cabac_ElementERj($0,$13,$4)|0);
  $15 = ($14|0)==(0);
  if (!($15)) {
   $$4 = $14;
   break;
  }
  $16 = HEAP32[$3>>2]|0;
  $17 = (($16) + 1)|0;
  HEAP32[$3>>2] = $17;
  $18 = HEAP32[$4>>2]|0;
  $19 = ($18|0)!=(0);
  $20 = ($9|0)!=(8);
  $21 = $20 & $19;
  if ($21) {
   $$032 = $9;
  } else {
   label = 6;
   break;
  }
 }
 if ((label|0) == 6) {
  if ($19) {
   $22 = (__ZN7WelsDec20DecodeExpBypassCabacEPNS_19SWelsCabacDecEngineEiRj($0,3,$4)|0);
   $23 = ($22|0)==(0);
   if ($23) {
    $24 = HEAP32[$4>>2]|0;
    $25 = (($24) + 1)|0;
    $26 = HEAP32[$3>>2]|0;
    $27 = (($25) + ($26))|0;
    HEAP32[$3>>2] = $27;
    $$4 = 0;
   } else {
    $$4 = $22;
   }
  } else {
   $$4 = 0;
  }
 }
 $$5 = $$4;
 STACKTOP = sp;return ($$5|0);
}
function __ZN7WelsDec7InitFmoEPNS_6TagFmoEPNS_6TagPpsEiiPN10WelsCommon12CMemoryAlignE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i46$i = 0, $$044$i$i = 0, $$045$i$i = 0, $$1$i$i = 0, $$not$i$i = 0, $$not48$i$i = 0, $$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $brmerge$i$i = 0, $exitcond$i$i = 0, $or$cond$i = 0, $or$cond3$i = 0, $or$cond47$i$i = 0, $or$cond5$i$i = 0, $or$cond5$i45$i = 0, $or$cond7$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)==(0|0);
 $6 = ($1|0)==(0|0);
 $or$cond$i = $5 | $6;
 if ($or$cond$i) {
  $$0$i = 1;
  return ($$0$i|0);
 }
 $7 = ((($0)) + 4|0);
 $8 = Math_imul($3, $2)|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0$i = 1;
  return ($$0$i|0);
 }
 $10 = HEAP32[$0>>2]|0;
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($4,$10,26005);
 $11 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($4,$8,26005)|0);
 HEAP32[$0>>2] = $11;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$0$i = 1;
  return ($$0$i|0);
 }
 HEAP32[$7>>2] = $8;
 $13 = ((($1)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14>>>0)<(2);
 $16 = ($8|0)>(0);
 $or$cond3$i = $16 & $15;
 if ($or$cond3$i) {
  _memset(($11|0),0,($8|0))|0;
  $17 = ((($0)) + 8|0);
  HEAP32[$17>>2] = 1;
  $$0$i = 0;
  return ($$0$i|0);
 }
 $18 = ((($1)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($0)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($19|0)==($21|0);
 if ($22) {
  $23 = ((($0)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($14|0)==($24|0);
  if (!($25)) {
   label = 8;
  }
 } else {
  label = 8;
 }
 L16: do {
  if ((label|0) == 8) {
   switch ($19|0) {
   case 0:  {
    $26 = ($8|0)<(1);
    $27 = ($14>>>0)>(7);
    $or$cond5$i$i = $26 | $27;
    if ($or$cond5$i$i) {
     $$0$i = 1;
     return ($$0$i|0);
    } else {
     $$045$i$i = 0;
    }
    while(1) {
     $$044$i$i = 0;$$1$i$i = $$045$i$i;
     while(1) {
      $28 = $$044$i$i&255;
      $29 = (((($1)) + 16|0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $$0$i$i = 0;
      while(1) {
       $31 = HEAP32[$0>>2]|0;
       $32 = (($$0$i$i) + ($$1$i$i))|0;
       $33 = (($31) + ($32)|0);
       HEAP8[$33>>0] = $$044$i$i;
       $34 = (($$0$i$i) + 1)|0;
       $35 = ($34|0)<($30|0);
       $36 = (($34) + ($$1$i$i))|0;
       $37 = ($36|0)<($8|0);
       $or$cond47$i$i = $35 & $37;
       if ($or$cond47$i$i) {
        $$0$i$i = $34;
       } else {
        break;
       }
      }
      $38 = (($30) + ($$1$i$i))|0;
      $39 = (($$044$i$i) + 1)<<24>>24;
      $40 = $39&255;
      $41 = ($38|0)<($8|0);
      $$not$i$i = ($40>>>0)>=($14>>>0);
      $$not48$i$i = $41 ^ 1;
      $brmerge$i$i = $$not$i$i | $$not48$i$i;
      if ($brmerge$i$i) {
       break;
      } else {
       $$044$i$i = $39;$$1$i$i = $38;
      }
     }
     if ($41) {
      $$045$i$i = $38;
     } else {
      break;
     }
    }
    break;
   }
   case 1:  {
    $42 = ($8|0)<(1);
    $43 = ($2|0)==(0);
    $or$cond5$i45$i = $43 | $42;
    $44 = ($14>>>0)>(7);
    $or$cond7$i$i = $or$cond5$i45$i | $44;
    if ($or$cond7$i$i) {
     $$0$i = 1;
     return ($$0$i|0);
    } else {
     $$0$i46$i = 0;$53 = $11;
    }
    while(1) {
     $45 = (($$0$i46$i|0) % ($2|0))&-1;
     $46 = (($$0$i46$i|0) / ($2|0))&-1;
     $47 = Math_imul($46, $14)|0;
     $48 = $47 >>> 1;
     $49 = (($48) + ($45))|0;
     $50 = (($49>>>0) % ($14>>>0))&-1;
     $51 = $50&255;
     $52 = (($53) + ($$0$i46$i)|0);
     HEAP8[$52>>0] = $51;
     $54 = (($$0$i46$i) + 1)|0;
     $exitcond$i$i = ($54|0)==($8|0);
     if ($exitcond$i$i) {
      break L16;
     }
     $$pre$i$i = HEAP32[$0>>2]|0;
     $$0$i46$i = $54;$53 = $$pre$i$i;
    }
    break;
   }
   default: {
    $$0$i = 1;
    return ($$0$i|0);
   }
   }
  }
 } while(0);
 $55 = HEAP32[$13>>2]|0;
 $56 = ((($0)) + 8|0);
 HEAP32[$56>>2] = $55;
 $57 = HEAP32[$18>>2]|0;
 HEAP32[$20>>2] = $57;
 $$0$i = 0;
 return ($$0$i|0);
}
function _WelsRequestMem($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$0$i = 0, $$0 = 0, $$0$i = 0, $$025$i = 0, $$025$i$1 = 0, $$025$i35$i = 0, $$025$i63$i = 0, $$03050$i = 0, $$05981$i = 0, $$07892$i = 0, $$07893$i = 0, $$07898$i = 0, $$080$i = 0, $$080$ph$i = 0, $$08095$i = 0, $$094$i = 0, $$094$off0 = 0, $$96 = 0, $$lcssa$i = 0, $$lcssa$i$1 = 0;
 var $$lcssa$i39$i = 0, $$lcssa$i67$i = 0, $$not = 0, $$pre = 0, $$pre$i = 0, $$pre$i107 = 0, $$pre$i113 = 0, $$pre$i113$1 = 0, $$pre$i37$i = 0, $$pre$i65$i = 0, $$pre$phi134Z2D = 0, $$pre$phiZ2D = 0, $$pre133 = 0, $$pre28$i = 0, $$pre28$i$1 = 0, $$pre28$i38$i = 0, $$pre28$i66$i = 0, $$pre29$i = 0, $$pre29$i$1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond$i = 0, $not$ = 0, $or$cond = 0, $or$cond$i97 = 0, $or$cond3 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0;
 var $vararg_buffer4 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = $1 << 4;
 $4 = $2 << 4;
 $5 = ((($0)) + 562528|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($0|0)==(0|0);
 $8 = ($3|0)<(1);
 $or$cond = $7 | $8;
 $9 = ($4|0)<(1);
 $or$cond3 = $or$cond | $9;
 if ($or$cond3) {
  $$0 = 4;
  STACKTOP = sp;return ($$0|0);
 }
 $10 = ((($0)) + 241924|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$0$i = 18;
 } else {
  $13 = ((($11)) + 296|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 2)|0;
  $$0$i = $15;
 }
 $16 = ($$0$i|0)>(2);
 $$$0$i = $16 ? $$0$i : 2;
 $17 = ((($0)) + 209448|0);
 HEAP32[$17>>2] = $$$0$i;
 $18 = ((($0)) + 209440|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $$094$off0 = 1;
 } else {
  $21 = ((($19)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $not$ = ($22|0)!=($$$0$i|0);
  $$094$off0 = $not$;
 }
 $23 = ((($0)) + 64|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = ($24<<24>>24)==(0);
 if (!($25)) {
  $26 = ((($0)) + 68|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($3|0)==($27|0);
  if ($28) {
   $29 = ((($0)) + 72|0);
   $30 = HEAP32[$29>>2]|0;
   $$not = ($4|0)!=($30|0);
   $brmerge = $$094$off0 | $$not;
   if (!($brmerge)) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 __ZN7WelsDec15WelsResetRefPicEPNS_21TagWelsDecoderContextE($0);
 $31 = HEAP8[$23>>0]|0;
 $32 = ($31<<24>>24)==(0);
 do {
  if ($32) {
   HEAP32[$vararg_buffer12>>2] = $3;
   $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
   HEAP32[$vararg_ptr15>>2] = $4;
   $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
   HEAP32[$vararg_ptr16>>2] = $$$0$i;
   __Z7WelsLogP13TagLogContextiPKcz($0,4,26558,$vararg_buffer12);
   label = 58;
  } else {
   $33 = ((($0)) + 68|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($3|0)==($34|0);
   if ($35) {
    $36 = ((($0)) + 72|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($4|0)==($37|0);
    if ($38) {
     $39 = HEAP32[$18>>2]|0;
     $40 = ($39|0)==(0|0);
     if (!($40)) {
      $41 = ((($39)) + 4|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ($42|0)==($$$0$i|0);
      if (!($43)) {
       HEAP32[$vararg_buffer>>2] = $3;
       $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
       HEAP32[$vararg_ptr1>>2] = $4;
       $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
       HEAP32[$vararg_ptr2>>2] = $42;
       $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
       HEAP32[$vararg_ptr3>>2] = $$$0$i;
       __Z7WelsLogP13TagLogContextiPKcz($0,4,26269,$vararg_buffer);
       $44 = HEAP32[$18>>2]|0;
       $45 = ((($44)) + 4|0);
       $46 = HEAP32[$45>>2]|0;
       $47 = ($46|0)<($$$0$i|0);
       $48 = ($46|0)<(1);
       $49 = ($$$0$i|0)<(1);
       $or$cond$i97 = $49 | $48;
       if ($47) {
        if ($or$cond$i97) {
         $$0 = 1;
         STACKTOP = sp;return ($$0|0);
        }
        $50 = HEAP32[$5>>2]|0;
        $51 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($50,12,26381)|0);
        $52 = $51;
        $53 = ($51|0)==(0|0);
        if ($53) {
         $$0 = 1;
         STACKTOP = sp;return ($$0|0);
        }
        $54 = $$$0$i << 2;
        $55 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($50,$54,26390)|0);
        HEAP32[$51>>2] = $55;
        $56 = ($55|0)==(0|0);
        if ($56) {
         $57 = ((($51)) + 4|0);
         HEAP32[$57>>2] = 0;
         $58 = ((($51)) + 8|0);
         HEAP32[$58>>2] = 0;
         __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($50,$51,22245);
         $$0 = 1;
         STACKTOP = sp;return ($$0|0);
        } else {
         $$05981$i = $46;
        }
        while(1) {
         $59 = (__ZN7WelsDec12AllocPictureEPNS_21TagWelsDecoderContextEii($0,$3,$4)|0);
         $60 = ($59|0)==(0|0);
         if ($60) {
          break;
         }
         $73 = HEAP32[$51>>2]|0;
         $74 = (($73) + ($$05981$i<<2)|0);
         HEAP32[$74>>2] = $59;
         $75 = (($$05981$i) + 1)|0;
         $76 = ($75|0)<($$$0$i|0);
         if ($76) {
          $$05981$i = $75;
         } else {
          label = 28;
          break;
         }
        }
        if ((label|0) == 28) {
         $$pre$i = HEAP32[$51>>2]|0;
         $77 = HEAP32[$44>>2]|0;
         $78 = $46 << 2;
         _memcpy(($$pre$i|0),($77|0),($78|0))|0;
         $79 = ((($51)) + 4|0);
         HEAP32[$79>>2] = $$$0$i;
         $80 = ((($44)) + 8|0);
         $81 = HEAP32[$80>>2]|0;
         $82 = ((($51)) + 8|0);
         HEAP32[$82>>2] = $81;
         HEAP32[$18>>2] = $52;
         $83 = HEAP32[$79>>2]|0;
         $84 = ($83|0)>(0);
         if ($84) {
          $$080$i = 0;
          while(1) {
           $87 = HEAP32[$51>>2]|0;
           $88 = (($87) + ($$080$i<<2)|0);
           $89 = HEAP32[$88>>2]|0;
           $90 = ((($89)) + 68|0);
           HEAP8[$90>>0] = 0;
           $91 = HEAP32[$51>>2]|0;
           $92 = (($91) + ($$080$i<<2)|0);
           $93 = HEAP32[$92>>2]|0;
           $94 = ((($93)) + 69|0);
           HEAP8[$94>>0] = 0;
           $95 = HEAP32[$51>>2]|0;
           $96 = (($95) + ($$080$i<<2)|0);
           $97 = HEAP32[$96>>2]|0;
           $98 = ((($97)) + 70|0);
           HEAP8[$98>>0] = 0;
           $99 = HEAP32[$51>>2]|0;
           $100 = (($99) + ($$080$i<<2)|0);
           $101 = HEAP32[$100>>2]|0;
           $102 = ((($101)) + 71|0);
           HEAP8[$102>>0] = 1;
           $103 = HEAP32[$51>>2]|0;
           $104 = (($103) + ($$080$i<<2)|0);
           $105 = HEAP32[$104>>2]|0;
           $106 = ((($105)) + 72|0);
           HEAP8[$106>>0] = 0;
           $107 = (($$080$i) + 1)|0;
           $108 = HEAP32[$79>>2]|0;
           $109 = ($107|0)<($108|0);
           if ($109) {
            $$080$i = $107;
           } else {
            break;
           }
          }
         }
         $85 = HEAP32[$44>>2]|0;
         $86 = ($85|0)==(0|0);
         if (!($86)) {
          __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($50,$85,26400);
          HEAP32[$44>>2] = 0;
         }
         HEAP32[$45>>2] = 0;
         HEAP32[$80>>2] = 0;
         __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($50,$44,26418);
         $$pre$phi134Z2D = $36;$$pre$phiZ2D = $33;
         break;
        }
        $61 = ((($51)) + 4|0);
        HEAP32[$61>>2] = $$05981$i;
        $62 = HEAP32[$51>>2]|0;
        $63 = ($62|0)==(0|0);
        if (!($63)) {
         $64 = ($$05981$i|0)>(0);
         if ($64) {
          $$025$i63$i = 0;$248 = $$05981$i;$66 = $62;
          while(1) {
           $65 = (($66) + ($$025$i63$i<<2)|0);
           $67 = HEAP32[$65>>2]|0;
           $68 = ($67|0)==(0|0);
           if ($68) {
            $249 = $66;$71 = $248;
           } else {
            __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($67,$50);
            $$pre$i65$i = HEAP32[$61>>2]|0;
            $$pre28$i66$i = HEAP32[$51>>2]|0;
            $249 = $$pre28$i66$i;$71 = $$pre$i65$i;
           }
           $69 = (($$025$i63$i) + 1)|0;
           $70 = ($69|0)<($71|0);
           if ($70) {
            $$025$i63$i = $69;$248 = $71;$66 = $249;
           } else {
            $$lcssa$i67$i = $249;
            break;
           }
          }
         } else {
          $$lcssa$i67$i = $62;
         }
         __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($50,$$lcssa$i67$i,22230);
         HEAP32[$51>>2] = 0;
        }
        HEAP32[$61>>2] = 0;
        $72 = ((($51)) + 8|0);
        HEAP32[$72>>2] = 0;
        __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($50,$51,22245);
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       }
       if ($or$cond$i97) {
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       }
       $110 = HEAP32[$5>>2]|0;
       $111 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($110,12,26381)|0);
       $112 = ($111|0)==(0|0);
       if ($112) {
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       }
       $113 = $$$0$i << 2;
       $114 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($110,$113,26390)|0);
       HEAP32[$111>>2] = $114;
       $115 = ($114|0)==(0|0);
       if ($115) {
        $120 = ((($111)) + 4|0);
        HEAP32[$120>>2] = 0;
        $121 = ((($111)) + 8|0);
        HEAP32[$121>>2] = 0;
        __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($110,$111,22245);
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       }
       $116 = ($46|0)>(0);
       L69: do {
        if ($116) {
         $117 = ((($0)) + 316852|0);
         $118 = HEAP32[$117>>2]|0;
         $119 = HEAP32[$44>>2]|0;
         $$07898$i = 0;
         while(1) {
          $122 = (($119) + ($$07898$i<<2)|0);
          $123 = HEAP32[$122>>2]|0;
          $124 = ($118|0)==($123|0);
          if ($124) {
           break;
          }
          $125 = (($$07898$i) + 1)|0;
          $126 = ($125|0)<($46|0);
          if ($126) {
           $$07898$i = $125;
          } else {
           $$07892$i = $125;$135 = $119;
           label = 44;
           break L69;
          }
         }
         $127 = ($$07898$i|0)<($$$0$i|0);
         if ($127) {
          $$07892$i = $$07898$i;$135 = $119;
          label = 44;
         } else {
          $128 = $118;
          HEAP32[$114>>2] = $128;
          $129 = ((($111)) + 8|0);
          HEAP32[$129>>2] = 0;
          $130 = HEAP32[$111>>2]|0;
          $131 = ((($130)) + 4|0);
          $132 = HEAP32[$44>>2]|0;
          $133 = (($$$0$i) + -1)|0;
          $134 = $133 << 2;
          _memcpy(($131|0),($132|0),($134|0))|0;
          $$07893$i = $$07898$i;$$080$ph$i = $133;
         }
        } else {
         $$pre$i107 = HEAP32[$44>>2]|0;
         $$07892$i = 0;$135 = $$pre$i107;
         label = 44;
        }
       } while(0);
       if ((label|0) == 44) {
        _memcpy(($114|0),($135|0),($113|0))|0;
        $136 = ($$07892$i|0)<($$$0$i|0);
        $137 = $136 ? $$07892$i : 0;
        $138 = ((($111)) + 8|0);
        HEAP32[$138>>2] = $137;
        $$07893$i = $$07892$i;$$080$ph$i = $$$0$i;
       }
       $139 = ($$080$ph$i|0)<($46|0);
       if ($139) {
        $$08095$i = $$080$ph$i;
        while(1) {
         $140 = ($$07893$i|0)==($$08095$i|0);
         do {
          if (!($140)) {
           $141 = HEAP32[$44>>2]|0;
           $142 = (($141) + ($$08095$i<<2)|0);
           $143 = HEAP32[$142>>2]|0;
           $144 = ($143|0)==(0|0);
           if ($144) {
            break;
           }
           __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($143,$110);
           $145 = HEAP32[$44>>2]|0;
           $146 = (($145) + ($$08095$i<<2)|0);
           HEAP32[$146>>2] = 0;
          }
         } while(0);
         $147 = (($$08095$i) + 1)|0;
         $exitcond$i = ($147|0)==($46|0);
         if ($exitcond$i) {
          break;
         } else {
          $$08095$i = $147;
         }
        }
       }
       $148 = ((($111)) + 4|0);
       HEAP32[$148>>2] = $$$0$i;
       HEAP32[$18>>2] = $111;
       $149 = HEAP32[$148>>2]|0;
       $150 = ($149|0)>(0);
       if ($150) {
        $$094$i = 0;
        while(1) {
         $153 = HEAP32[$111>>2]|0;
         $154 = (($153) + ($$094$i<<2)|0);
         $155 = HEAP32[$154>>2]|0;
         $156 = ((($155)) + 68|0);
         HEAP8[$156>>0] = 0;
         $157 = HEAP32[$111>>2]|0;
         $158 = (($157) + ($$094$i<<2)|0);
         $159 = HEAP32[$158>>2]|0;
         $160 = ((($159)) + 69|0);
         HEAP8[$160>>0] = 0;
         $161 = HEAP32[$111>>2]|0;
         $162 = (($161) + ($$094$i<<2)|0);
         $163 = HEAP32[$162>>2]|0;
         $164 = ((($163)) + 70|0);
         HEAP8[$164>>0] = 0;
         $165 = HEAP32[$111>>2]|0;
         $166 = (($165) + ($$094$i<<2)|0);
         $167 = HEAP32[$166>>2]|0;
         $168 = ((($167)) + 71|0);
         HEAP8[$168>>0] = 1;
         $169 = HEAP32[$111>>2]|0;
         $170 = (($169) + ($$094$i<<2)|0);
         $171 = HEAP32[$170>>2]|0;
         $172 = ((($171)) + 72|0);
         HEAP8[$172>>0] = 0;
         $173 = (($$094$i) + 1)|0;
         $174 = HEAP32[$148>>2]|0;
         $175 = ($173|0)<($174|0);
         if ($175) {
          $$094$i = $173;
         } else {
          break;
         }
        }
       }
       $151 = HEAP32[$44>>2]|0;
       $152 = ($151|0)==(0|0);
       if (!($152)) {
        __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($110,$151,26400);
        HEAP32[$44>>2] = 0;
       }
       HEAP32[$45>>2] = 0;
       $176 = ((($44)) + 8|0);
       HEAP32[$176>>2] = 0;
       __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($110,$44,26418);
       $$pre$phi134Z2D = $36;$$pre$phiZ2D = $33;
       break;
      }
     }
    }
   }
   $177 = ((($0)) + 72|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = HEAP32[$18>>2]|0;
   $180 = ((($179)) + 4|0);
   $181 = HEAP32[$180>>2]|0;
   HEAP32[$vararg_buffer4>>2] = $34;
   $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
   HEAP32[$vararg_ptr7>>2] = $178;
   $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
   HEAP32[$vararg_ptr8>>2] = $3;
   $vararg_ptr9 = ((($vararg_buffer4)) + 12|0);
   HEAP32[$vararg_ptr9>>2] = $4;
   $vararg_ptr10 = ((($vararg_buffer4)) + 16|0);
   HEAP32[$vararg_ptr10>>2] = $181;
   $vararg_ptr11 = ((($vararg_buffer4)) + 20|0);
   HEAP32[$vararg_ptr11>>2] = $$$0$i;
   __Z7WelsLogP13TagLogContextiPKcz($0,4,26429,$vararg_buffer4);
   label = 58;
  }
 } while(0);
 do {
  if ((label|0) == 58) {
   $182 = HEAP32[$18>>2]|0;
   $183 = ($182|0)==(0|0);
   if (!($183)) {
    $184 = HEAP32[$182>>2]|0;
    $185 = ($184|0)==(0|0);
    $$pre29$i = ((($182)) + 4|0);
    if (!($185)) {
     $186 = HEAP32[$$pre29$i>>2]|0;
     $187 = ($186|0)>(0);
     if ($187) {
      $$025$i = 0;$189 = $184;$250 = $186;
      while(1) {
       $188 = (($189) + ($$025$i<<2)|0);
       $190 = HEAP32[$188>>2]|0;
       $191 = ($190|0)==(0|0);
       if ($191) {
        $194 = $250;$251 = $189;
       } else {
        __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($190,$6);
        $$pre$i113 = HEAP32[$$pre29$i>>2]|0;
        $$pre28$i = HEAP32[$182>>2]|0;
        $194 = $$pre$i113;$251 = $$pre28$i;
       }
       $192 = (($$025$i) + 1)|0;
       $193 = ($192|0)<($194|0);
       if ($193) {
        $$025$i = $192;$189 = $251;$250 = $194;
       } else {
        $$lcssa$i = $251;
        break;
       }
      }
     } else {
      $$lcssa$i = $184;
     }
     __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($6,$$lcssa$i,22230);
     HEAP32[$182>>2] = 0;
    }
    HEAP32[$$pre29$i>>2] = 0;
    $195 = ((($182)) + 8|0);
    HEAP32[$195>>2] = 0;
    __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($6,$182,22245);
    HEAP32[$18>>2] = 0;
   }
   $196 = ((($0)) + 209444|0);
   $197 = HEAP32[$196>>2]|0;
   $198 = ($197|0)==(0|0);
   if (!($198)) {
    $234 = HEAP32[$197>>2]|0;
    $235 = ($234|0)==(0|0);
    $$pre29$i$1 = ((($197)) + 4|0);
    if (!($235)) {
     $236 = HEAP32[$$pre29$i$1>>2]|0;
     $237 = ($236|0)>(0);
     if ($237) {
      $$025$i$1 = 0;$239 = $234;$254 = $236;
      while(1) {
       $238 = (($239) + ($$025$i$1<<2)|0);
       $240 = HEAP32[$238>>2]|0;
       $241 = ($240|0)==(0|0);
       if ($241) {
        $244 = $254;$255 = $239;
       } else {
        __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($240,$6);
        $$pre$i113$1 = HEAP32[$$pre29$i$1>>2]|0;
        $$pre28$i$1 = HEAP32[$197>>2]|0;
        $244 = $$pre$i113$1;$255 = $$pre28$i$1;
       }
       $242 = (($$025$i$1) + 1)|0;
       $243 = ($242|0)<($244|0);
       if ($243) {
        $$025$i$1 = $242;$239 = $255;$254 = $244;
       } else {
        $$lcssa$i$1 = $255;
        break;
       }
      }
     } else {
      $$lcssa$i$1 = $234;
     }
     __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($6,$$lcssa$i$1,22230);
     HEAP32[$197>>2] = 0;
    }
    HEAP32[$$pre29$i$1>>2] = 0;
    $245 = ((($197)) + 8|0);
    HEAP32[$245>>2] = 0;
    __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($6,$197,22245);
    HEAP32[$196>>2] = 0;
   }
   $246 = ((($0)) + 316852|0);
   HEAP32[$246>>2] = 0;
   $247 = ($$$0$i|0)<(1);
   if ($247) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $199 = HEAP32[$5>>2]|0;
   $200 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($199,12,26381)|0);
   $201 = ($200|0)==(0|0);
   if ($201) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $202 = $$$0$i << 2;
   $203 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($199,$202,26390)|0);
   HEAP32[$200>>2] = $203;
   $204 = ($203|0)==(0|0);
   if ($204) {
    $205 = ((($200)) + 4|0);
    HEAP32[$205>>2] = 0;
    $206 = ((($200)) + 8|0);
    HEAP32[$206>>2] = 0;
    __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($199,$200,22245);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$03050$i = 0;
   }
   while(1) {
    $207 = (__ZN7WelsDec12AllocPictureEPNS_21TagWelsDecoderContextEii($0,$3,$4)|0);
    $208 = ($207|0)==(0|0);
    if ($208) {
     break;
    }
    $221 = HEAP32[$200>>2]|0;
    $222 = (($221) + ($$03050$i<<2)|0);
    HEAP32[$222>>2] = $207;
    $223 = (($$03050$i) + 1)|0;
    $224 = ($223|0)<($$$0$i|0);
    if ($224) {
     $$03050$i = $223;
    } else {
     label = 79;
     break;
    }
   }
   if ((label|0) == 79) {
    $225 = ((($200)) + 4|0);
    HEAP32[$225>>2] = $$$0$i;
    $226 = ((($200)) + 8|0);
    HEAP32[$226>>2] = 0;
    HEAP32[$18>>2] = $200;
    $$pre = ((($0)) + 68|0);
    $$pre133 = ((($0)) + 72|0);
    $$pre$phi134Z2D = $$pre133;$$pre$phiZ2D = $$pre;
    break;
   }
   $209 = ((($200)) + 4|0);
   HEAP32[$209>>2] = $$03050$i;
   $210 = HEAP32[$200>>2]|0;
   $211 = ($210|0)==(0|0);
   if (!($211)) {
    $212 = ($$03050$i|0)>(0);
    if ($212) {
     $$025$i35$i = 0;$214 = $210;$252 = $$03050$i;
     while(1) {
      $213 = (($214) + ($$025$i35$i<<2)|0);
      $215 = HEAP32[$213>>2]|0;
      $216 = ($215|0)==(0|0);
      if ($216) {
       $219 = $252;$253 = $214;
      } else {
       __ZN7WelsDec11FreePictureEPNS_10TagPictureEPN10WelsCommon12CMemoryAlignE($215,$199);
       $$pre$i37$i = HEAP32[$209>>2]|0;
       $$pre28$i38$i = HEAP32[$200>>2]|0;
       $219 = $$pre$i37$i;$253 = $$pre28$i38$i;
      }
      $217 = (($$025$i35$i) + 1)|0;
      $218 = ($217|0)<($219|0);
      if ($218) {
       $$025$i35$i = $217;$214 = $253;$252 = $219;
      } else {
       $$lcssa$i39$i = $253;
       break;
      }
     }
    } else {
     $$lcssa$i39$i = $210;
    }
    __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($199,$$lcssa$i39$i,22230);
    HEAP32[$200>>2] = 0;
   }
   HEAP32[$209>>2] = 0;
   $220 = ((($200)) + 8|0);
   HEAP32[$220>>2] = 0;
   __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($199,$200,22245);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$pre$phiZ2D>>2] = $3;
 HEAP32[$$pre$phi134Z2D>>2] = $4;
 HEAP8[$23>>0] = 1;
 $227 = ((($0)) + 5464|0);
 HEAP32[$227>>2] = 0;
 $228 = ((($0)) + 512232|0);
 $229 = HEAP32[$228>>2]|0;
 $230 = ($229|0)==(0|0);
 if ($230) {
  $231 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($6,32,22253)|0);
  HEAP32[$228>>2] = $231;
  $232 = $231;
 } else {
  $232 = $229;
 }
 $233 = ($232|0)==(0|0);
 $$96 = $233&1;
 $$0 = $$96;
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec22InitialDqLayersContextEPNS_21TagWelsDecoderContextEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$3 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond198 = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 $4 = ($1|0)<(1);
 $or$cond = $3 | $4;
 $5 = ($2|0)<(1);
 $or$cond3 = $or$cond | $5;
 if ($or$cond3) {
  $$3 = 4;
  return ($$3|0);
 }
 $6 = (($1) + 15)|0;
 $7 = $6 >> 4;
 $8 = ((($0)) + 5456|0);
 HEAP32[$8>>2] = $7;
 $9 = (($2) + 15)|0;
 $10 = $9 >> 4;
 $11 = ((($0)) + 5460|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($0)) + 241952|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)==(0);
 if (!($14)) {
  $15 = ((($0)) + 241940|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)<($1|0);
  if (!($17)) {
   $18 = ((($0)) + 241944|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($19|0)<($2|0);
   if (!($20)) {
    $$3 = 0;
    return ($$3|0);
   }
  }
 }
 $21 = ((($0)) + 562528|0);
 $22 = HEAP32[$21>>2]|0;
 __ZN7WelsDec24UninitialDqLayersContextEPNS_21TagWelsDecoderContextE($0);
 $23 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,4116,26232)|0);
 $24 = ($23|0)==(0|0);
 if ($24) {
  $$3 = 1;
  return ($$3|0);
 }
 _memset(($23|0),0,4116)|0;
 $25 = HEAP32[$8>>2]|0;
 $26 = HEAP32[$11>>2]|0;
 $27 = $25 << 1;
 $28 = Math_imul($27, $26)|0;
 $29 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$28,21511)|0);
 $30 = ((($0)) + 5344|0);
 HEAP32[$30>>2] = $29;
 $31 = HEAP32[$8>>2]|0;
 $32 = HEAP32[$11>>2]|0;
 $33 = $31 << 6;
 $34 = Math_imul($33, $32)|0;
 $35 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$34,21531)|0);
 $36 = ((($0)) + 5348|0);
 HEAP32[$36>>2] = $35;
 $37 = HEAP32[$8>>2]|0;
 $38 = HEAP32[$11>>2]|0;
 $39 = $37 << 4;
 $40 = Math_imul($39, $38)|0;
 $41 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$40,21549)|0);
 $42 = ((($0)) + 5356|0);
 HEAP32[$42>>2] = $41;
 $43 = HEAP32[$8>>2]|0;
 $44 = HEAP32[$11>>2]|0;
 $45 = Math_imul($44, $43)|0;
 $46 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$45,21651)|0);
 $47 = ((($0)) + 5372|0);
 HEAP32[$47>>2] = $46;
 $48 = HEAP32[$8>>2]|0;
 $49 = HEAP32[$11>>2]|0;
 $50 = Math_imul($49, $48)|0;
 $51 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$50,21573)|0);
 $52 = ((($0)) + 5364|0);
 HEAP32[$52>>2] = $51;
 $53 = HEAP32[$8>>2]|0;
 $54 = HEAP32[$11>>2]|0;
 $55 = Math_imul($54, $53)|0;
 $56 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$55,21617)|0);
 $57 = ((($0)) + 5368|0);
 HEAP32[$57>>2] = $56;
 $58 = HEAP32[$8>>2]|0;
 $59 = HEAP32[$11>>2]|0;
 $60 = $58 << 1;
 $61 = Math_imul($60, $59)|0;
 $62 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$61,21671)|0);
 $63 = ((($0)) + 5376|0);
 HEAP32[$63>>2] = $62;
 $64 = HEAP32[$8>>2]|0;
 $65 = HEAP32[$11>>2]|0;
 $66 = $64 << 6;
 $67 = Math_imul($66, $65)|0;
 $68 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$67,21693)|0);
 $69 = ((($0)) + 5380|0);
 HEAP32[$69>>2] = $68;
 $70 = HEAP32[$8>>2]|0;
 $71 = HEAP32[$11>>2]|0;
 $72 = $70 << 1;
 $73 = Math_imul($72, $71)|0;
 $74 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$73,21712)|0);
 $75 = ((($0)) + 5388|0);
 HEAP32[$75>>2] = $74;
 $76 = HEAP32[$8>>2]|0;
 $77 = HEAP32[$11>>2]|0;
 $78 = ($76*24)|0;
 $79 = Math_imul($78, $77)|0;
 $80 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$79,21731)|0);
 $81 = ((($0)) + 5392|0);
 HEAP32[$81>>2] = $80;
 $82 = HEAP32[$8>>2]|0;
 $83 = HEAP32[$11>>2]|0;
 $84 = ($82*24)|0;
 $85 = Math_imul($84, $83)|0;
 $86 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$85,21748)|0);
 $87 = ((($0)) + 5396|0);
 HEAP32[$87>>2] = $86;
 $88 = HEAP32[$8>>2]|0;
 $89 = HEAP32[$11>>2]|0;
 $90 = ($88*768)|0;
 $91 = Math_imul($90, $89)|0;
 $92 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$91,21767)|0);
 $93 = ((($0)) + 5400|0);
 HEAP32[$93>>2] = $92;
 $94 = HEAP32[$8>>2]|0;
 $95 = HEAP32[$11>>2]|0;
 $96 = $94 << 3;
 $97 = Math_imul($96, $95)|0;
 $98 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$97,21793)|0);
 $99 = ((($0)) + 5404|0);
 HEAP32[$99>>2] = $98;
 $100 = HEAP32[$8>>2]|0;
 $101 = HEAP32[$11>>2]|0;
 $102 = $100 << 4;
 $103 = Math_imul($102, $101)|0;
 $104 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$103,21820)|0);
 $105 = ((($0)) + 5408|0);
 HEAP32[$105>>2] = $104;
 $106 = HEAP32[$8>>2]|0;
 $107 = HEAP32[$11>>2]|0;
 $108 = Math_imul($107, $106)|0;
 $109 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$108,21851)|0);
 $110 = ((($0)) + 5412|0);
 HEAP32[$110>>2] = $109;
 $111 = HEAP32[$8>>2]|0;
 $112 = HEAP32[$11>>2]|0;
 $113 = Math_imul($112, $111)|0;
 $114 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$113,21880)|0);
 $115 = ((($0)) + 5416|0);
 HEAP32[$115>>2] = $114;
 $116 = HEAP32[$8>>2]|0;
 $117 = HEAP32[$11>>2]|0;
 $118 = Math_imul($117, $116)|0;
 $119 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$118,21908)|0);
 $120 = ((($0)) + 5420|0);
 HEAP32[$120>>2] = $119;
 $121 = HEAP32[$8>>2]|0;
 $122 = HEAP32[$11>>2]|0;
 $123 = $121 << 2;
 $124 = Math_imul($123, $122)|0;
 $125 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$124,21925)|0);
 $126 = ((($0)) + 5432|0);
 HEAP32[$126>>2] = $125;
 $127 = HEAP32[$8>>2]|0;
 $128 = HEAP32[$11>>2]|0;
 $129 = $127 << 2;
 $130 = Math_imul($129, $128)|0;
 $131 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$130,21948)|0);
 $132 = ((($0)) + 5436|0);
 HEAP32[$132>>2] = $131;
 $133 = HEAP32[$8>>2]|0;
 $134 = HEAP32[$11>>2]|0;
 $135 = Math_imul($134, $133)|0;
 $136 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$135,21970)|0);
 $137 = ((($0)) + 5440|0);
 HEAP32[$137>>2] = $136;
 $138 = HEAP32[$8>>2]|0;
 $139 = HEAP32[$11>>2]|0;
 $140 = Math_imul($139, $138)|0;
 $141 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$140,22000)|0);
 $142 = ((($0)) + 5444|0);
 HEAP32[$142>>2] = $141;
 $143 = HEAP32[$8>>2]|0;
 $144 = HEAP32[$11>>2]|0;
 $145 = Math_imul($144, $143)|0;
 $146 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$145,22037)|0);
 $147 = ((($0)) + 5448|0);
 HEAP32[$147>>2] = $146;
 $148 = HEAP32[$8>>2]|0;
 $149 = HEAP32[$11>>2]|0;
 $150 = Math_imul($149, $148)|0;
 $151 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($22,$150,26241)|0);
 $152 = ((($0)) + 5452|0);
 HEAP32[$152>>2] = $151;
 $153 = HEAP32[$30>>2]|0;
 $154 = ($153|0)==(0|0);
 if ($154) {
  $$3 = 1;
  return ($$3|0);
 }
 $155 = HEAP32[$36>>2]|0;
 $156 = ($155|0)==(0|0);
 if ($156) {
  $$3 = 1;
  return ($$3|0);
 }
 $157 = HEAP32[$42>>2]|0;
 $158 = ($157|0)==(0|0);
 if ($158) {
  $$3 = 1;
  return ($$3|0);
 }
 $159 = HEAP32[$47>>2]|0;
 $160 = ($159|0)==(0|0);
 if ($160) {
  $$3 = 1;
  return ($$3|0);
 }
 $161 = HEAP32[$63>>2]|0;
 $162 = ($161|0)==(0|0);
 if ($162) {
  $$3 = 1;
  return ($$3|0);
 }
 $163 = HEAP32[$69>>2]|0;
 $164 = ($163|0)==(0|0);
 if ($164) {
  $$3 = 1;
  return ($$3|0);
 }
 $165 = HEAP32[$75>>2]|0;
 $166 = ($165|0)==(0|0);
 if ($166) {
  $$3 = 1;
  return ($$3|0);
 }
 $167 = HEAP32[$81>>2]|0;
 $168 = ($167|0)==(0|0);
 if ($168) {
  $$3 = 1;
  return ($$3|0);
 }
 $169 = HEAP32[$87>>2]|0;
 $170 = ($169|0)==(0|0);
 if ($170) {
  $$3 = 1;
  return ($$3|0);
 }
 $171 = HEAP32[$93>>2]|0;
 $172 = ($171|0)==(0|0);
 if ($172) {
  $$3 = 1;
  return ($$3|0);
 }
 $173 = HEAP32[$99>>2]|0;
 $174 = ($173|0)==(0|0);
 if ($174) {
  $$3 = 1;
  return ($$3|0);
 }
 $175 = HEAP32[$105>>2]|0;
 $176 = ($175|0)==(0|0);
 if ($176) {
  $$3 = 1;
  return ($$3|0);
 }
 $177 = HEAP32[$115>>2]|0;
 $178 = ($177|0)==(0|0);
 if ($178) {
  $$3 = 1;
  return ($$3|0);
 }
 $179 = HEAP32[$120>>2]|0;
 $180 = ($179|0)==(0|0);
 if ($180) {
  $$3 = 1;
  return ($$3|0);
 }
 $181 = HEAP32[$126>>2]|0;
 $182 = ($181|0)==(0|0);
 if ($182) {
  $$3 = 1;
  return ($$3|0);
 }
 $183 = HEAP32[$132>>2]|0;
 $184 = ($183|0)==(0|0);
 if ($184) {
  $$3 = 1;
  return ($$3|0);
 }
 $185 = HEAP32[$137>>2]|0;
 $186 = ($185|0)==(0|0);
 if ($186) {
  $$3 = 1;
  return ($$3|0);
 }
 $187 = HEAP32[$142>>2]|0;
 $188 = ($187|0)==(0|0);
 $189 = ($151|0)==(0|0);
 $or$cond198 = $189 | $188;
 if ($or$cond198) {
  $$3 = 1;
  return ($$3|0);
 }
 $190 = HEAP32[$147>>2]|0;
 $191 = ($190|0)==(0|0);
 if ($191) {
  $$3 = 1;
  return ($$3|0);
 }
 $192 = HEAP32[$8>>2]|0;
 $193 = HEAP32[$11>>2]|0;
 $194 = $192 << 2;
 $195 = Math_imul($194, $193)|0;
 _memset(($183|0),-1,($195|0))|0;
 $196 = ((($0)) + 241936|0);
 HEAP32[$196>>2] = $23;
 HEAP8[$12>>0] = 1;
 $197 = ((($0)) + 241940|0);
 HEAP32[$197>>2] = $1;
 $198 = ((($0)) + 241944|0);
 HEAP32[$198>>2] = $2;
 $$3 = 0;
 return ($$3|0);
}
function __ZN7WelsDec12AllocPictureEPNS_21TagWelsDecoderContextEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 562528|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($4,120,26624)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $$0 = 0;
  return ($$0|0);
 }
 dest=$5; stop=dest+120|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $7 = (($1) + 95)|0;
 $8 = $7 & -32;
 $9 = (($2) + 95)|0;
 $10 = $9 & -32;
 $11 = $8 >> 1;
 $12 = $10 >> 1;
 $13 = Math_imul($10, $8)|0;
 $14 = Math_imul($12, $11)|0;
 $15 = ((($0)) + 242344|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)==(0);
 do {
  if ($17) {
   $26 = $14 << 1;
   $27 = (($26) + ($13))|0;
   $28 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($4,$27,26633)|0);
   HEAP32[$5>>2] = $28;
   $29 = ($28|0)==(0|0);
   if (!($29)) {
    _memset(($28|0),-128,($27|0))|0;
    $30 = ((($5)) + 32|0);
    HEAP32[$30>>2] = $8;
    $31 = ((($5)) + 40|0);
    HEAP32[$31>>2] = $11;
    $32 = ((($5)) + 36|0);
    HEAP32[$32>>2] = $11;
    $33 = HEAP32[$5>>2]|0;
    $34 = (($33) + ($13)|0);
    $35 = ((($5)) + 4|0);
    HEAP32[$35>>2] = $34;
    $36 = (($34) + ($14)|0);
    $37 = ((($5)) + 8|0);
    HEAP32[$37>>2] = $36;
    $38 = $8 << 5;
    $39 = $38 | 32;
    $40 = (($33) + ($39)|0);
    $41 = ((($5)) + 16|0);
    HEAP32[$41>>2] = $40;
    $42 = $8 << 4;
    $43 = $42 >> 1;
    $44 = $43 | 16;
    $45 = (($34) + ($44)|0);
    $46 = ((($5)) + 20|0);
    HEAP32[$46>>2] = $45;
    $47 = (($36) + ($44)|0);
    $48 = ((($5)) + 24|0);
    HEAP32[$48>>2] = $47;
    break;
   }
   __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($4,$5,22292);
   $$0 = 0;
   return ($$0|0);
  } else {
   $18 = ((($5)) + 8|0);
   HEAP32[$18>>2] = 0;
   $19 = ((($5)) + 4|0);
   HEAP32[$19>>2] = 0;
   HEAP32[$5>>2] = 0;
   $20 = ((($5)) + 16|0);
   $21 = ((($5)) + 24|0);
   HEAP32[$21>>2] = 0;
   $22 = ((($5)) + 20|0);
   HEAP32[$22>>2] = 0;
   HEAP32[$20>>2] = 0;
   $23 = ((($5)) + 32|0);
   HEAP32[$23>>2] = $8;
   $24 = ((($5)) + 40|0);
   HEAP32[$24>>2] = $11;
   $25 = ((($5)) + 36|0);
   HEAP32[$25>>2] = $11;
  }
 } while(0);
 $49 = ((($5)) + 48|0);
 HEAP32[$49>>2] = 3;
 $50 = ((($5)) + 56|0);
 HEAP32[$50>>2] = $1;
 $51 = ((($5)) + 60|0);
 HEAP32[$51>>2] = $2;
 $52 = ((($5)) + 76|0);
 HEAP32[$52>>2] = -1;
 $53 = ((($5)) + 71|0);
 HEAP8[$53>>0] = 1;
 $$0 = $5;
 return ($$0|0);
}
function __ZN7WelsDec26CheckIntegrityNalUnitsListEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i117 = 0, $$0$i126 = 0, $$0$i145 = 0, $$0$i154 = 0, $$0$i71 = 0, $$0$i89 = 0, $$0$i98 = 0, $$0$in$i = 0, $$0$in$i116 = 0, $$0$in$i125 = 0, $$0$in$i144 = 0, $$0$in$i153 = 0, $$0$in$i70 = 0, $$0$in$i88 = 0, $$0$in$i97 = 0, $$0$in$ph$i = 0, $$0$in$ph$i122 = 0, $$0$in$ph$i150 = 0, $$0$in$ph$i94 = 0;
 var $$0$off0$ph$i = 0, $$0$off0$ph$i104 = 0, $$0$off0$ph$i132 = 0, $$0$off0$ph$i76 = 0, $$034$ph$i = 0, $$034$ph$i121 = 0, $$034$ph$i149 = 0, $$034$ph$i93 = 0, $$035$i = 0, $$035$i124 = 0, $$035$i152 = 0, $$035$i96 = 0, $$035$ph$i = 0, $$035$ph$i120 = 0, $$035$ph$i148 = 0, $$035$ph$i92 = 0, $$060260 = 0, $$072$ph$i = 0, $$072$ph$i103 = 0, $$072$ph$i131 = 0;
 var $$072$ph$i75 = 0, $$073$i = 0, $$073$i107 = 0, $$073$i135 = 0, $$073$i79 = 0, $$073$in$i = 0, $$073$in$i106 = 0, $$073$in$i134 = 0, $$073$in$i78 = 0, $$073$in$ph$i = 0, $$073$in$ph$i102 = 0, $$073$in$ph$i130 = 0, $$073$in$ph$i74 = 0, $$3 = 0, $$lcssa452 = 0, $$lcssa468 = 0, $$phi$trans$insert = 0, $$phi$trans$insert339 = 0, $$pre = 0, $$pre340 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $or$cond$i108 = 0, $or$cond$i127 = 0, $or$cond$i136 = 0, $or$cond$i155 = 0, $or$cond$i72 = 0, $or$cond$i80 = 0, $or$cond$i99 = 0, $or$cond74$i = 0;
 var $or$cond74$i109 = 0, $or$cond74$i137 = 0, $or$cond74$i81 = 0, $or$cond75$i = 0, $or$cond75$i110 = 0, $or$cond75$i138 = 0, $or$cond75$i82 = 0, $or$cond75$not$i = 0, $or$cond75$not$i111 = 0, $or$cond75$not$i139 = 0, $or$cond75$not$i83 = 0, $or$cond76$i = 0, $or$cond76$i112 = 0, $or$cond76$i140 = 0, $or$cond76$i84 = 0, $or$cond95$i = 0, $or$cond95$i113 = 0, $or$cond95$i141 = 0, $or$cond95$i85 = 0, $storemerge$$072$ph$i75 = 0;
 var $storemerge258 = 0, $storemerge65$$072$ph$i131 = 0, $storemerge65256$lcssa = 0, $storemerge65256507 = 0, $storemerge66$$072$ph$i103 = 0, $storemerge66255$lcssa = 0, $storemerge66255505 = 0, $storemerge67$$072$ph$i = 0, $storemerge67262 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241888|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$3 = 0;
  return ($$3|0);
 }
 $8 = ((($0)) + 242334|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)==(0);
 if (!($10)) {
  $15 = ((($2)) + 16|0);
  HEAP32[$15>>2] = 0;
  $16 = ($4|0)>(-1);
  if (!($16)) {
   $$3 = 0;
   return ($$3|0);
  }
  $17 = HEAP32[$2>>2]|0;
  $storemerge67262 = $4;
  while(1) {
   $18 = (($17) + ($storemerge67262<<2)|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 14|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = ($21<<24>>24)==(0);
   if (!($22)) {
    break;
   }
   $23 = (($storemerge67262) + -1)|0;
   $24 = ($storemerge67262|0)>(0);
   if ($24) {
    $storemerge67262 = $23;
   } else {
    $$3 = 0;
    label = 80;
    break;
   }
  }
  if ((label|0) == 80) {
   return ($$3|0);
  }
  $25 = ((($19)) + 15|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ((($19)) + 16|0);
  $28 = HEAP8[$27>>0]|0;
  $29 = ((($19)) + 17|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = ((($19)) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($19)) + 32|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($19)) + 24|0);
  $36 = HEAP32[$35>>2]|0;
  $$0$off0$ph$i = 1;$$072$ph$i = 0;$$073$in$ph$i = $storemerge67262;
  L15: while(1) {
   $$073$in$i = $$073$in$ph$i;
   while(1) {
    $$073$i = (($$073$in$i) + -1)|0;
    $37 = ($$073$in$i|0)>(0);
    if (!($37)) {
     break L15;
    }
    $38 = (($17) + ($$073$i<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ((($39)) + 14|0);
    $41 = HEAP8[$40>>0]|0;
    $42 = ($41<<24>>24)==(0);
    if ($42) {
     $$073$in$i = $$073$i;
    } else {
     break;
    }
   }
   $43 = ((($39)) + 15|0);
   $44 = HEAP8[$43>>0]|0;
   $45 = ($44<<24>>24)==($26<<24>>24);
   if (!($45)) {
    break;
   }
   $46 = ((($39)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ((($39)) + 32|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ((($39)) + 28|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($39)) + 17|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = ((($39)) + 16|0);
   $55 = HEAP8[$54>>0]|0;
   $56 = ($55<<24>>24)==($28<<24>>24);
   $57 = ($53<<24>>24)==($30<<24>>24);
   $or$cond$i = $57 & $56;
   $58 = ($51|0)==($32|0);
   $or$cond74$i = $58 & $or$cond$i;
   $59 = ($49|0)==($34|0);
   $or$cond75$i = $59 & $or$cond74$i;
   $or$cond75$not$i = $or$cond75$i ^ 1;
   $60 = ($47|0)==($36|0);
   $or$cond76$i = $60 | $or$cond75$not$i;
   if ($or$cond76$i) {
    break;
   } else {
    $$0$off0$ph$i = 0;$$072$ph$i = $$073$i;$$073$in$ph$i = $$073$i;
   }
  }
  $61 = ($storemerge67262|0)==($$072$ph$i|0);
  $or$cond95$i = $$0$off0$ph$i | $61;
  $storemerge67$$072$ph$i = $or$cond95$i ? $storemerge67262 : $$072$ph$i;
  HEAP32[$15>>2] = $storemerge67$$072$ph$i;
  $62 = HEAP32[$1>>2]|0;
  $63 = HEAP32[$62>>2]|0;
  $64 = (($63) + ($storemerge67$$072$ph$i<<2)|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($65)) + 15|0);
  $67 = HEAP8[$66>>0]|0;
  $68 = ((($65)) + 22|0);
  $69 = HEAP8[$68>>0]|0;
  $$0$in$ph$i150 = $storemerge67$$072$ph$i;$$034$ph$i149 = $67;$$035$ph$i148 = $69;
  L23: while(1) {
   $$0$in$i153 = $$0$in$ph$i150;$$035$i152 = $$035$ph$i148;
   while(1) {
    $$0$i154 = (($$0$in$i153) + 1)|0;
    $70 = ($$0$in$i153|0)<($4|0);
    if (!($70)) {
     break L23;
    }
    $71 = (($63) + ($$0$i154<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((($72)) + 15|0);
    $74 = HEAP8[$73>>0]|0;
    $75 = ((($72)) + 22|0);
    $76 = HEAP8[$75>>0]|0;
    $77 = ($74<<24>>24)==($$034$ph$i149<<24>>24);
    if ($77) {
     $$0$in$i153 = $$0$i154;$$035$i152 = $76;
    } else {
     break;
    }
   }
   $78 = ((($72)) + 3865|0);
   $79 = HEAP8[$78>>0]|0;
   $80 = ((($72)) + 16|0);
   $81 = HEAP8[$80>>0]|0;
   $82 = ($81<<24>>24)==(0);
   $83 = ($79<<24>>24)==($$035$i152<<24>>24);
   $or$cond$i155 = $83 & $82;
   if ($or$cond$i155) {
    $$0$in$ph$i150 = $$0$i154;$$034$ph$i149 = $74;$$035$ph$i148 = $76;
   } else {
    break;
   }
  }
  $84 = ((($62)) + 20|0);
  HEAP32[$84>>2] = $$0$in$i153;
  $85 = (($63) + ($$0$in$i153<<2)|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = ((($86)) + 22|0);
  $88 = HEAP8[$87>>0]|0;
  $89 = ((($0)) + 241948|0);
  HEAP8[$89>>0] = $88;
  $90 = HEAP32[$3>>2]|0;
  $91 = HEAP32[$2>>2]|0;
  $92 = (($91) + ($storemerge67$$072$ph$i<<2)|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = ((($93)) + 32|0);
  $95 = HEAP32[$94>>2]|0;
  $$0$in$i144 = $storemerge67$$072$ph$i;
  while(1) {
   $$0$i145 = (($$0$in$i144) + 1)|0;
   $96 = ($$0$i145|0)<($90|0);
   if (!($96)) {
    break;
   }
   $97 = (($91) + ($$0$i145<<2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ((($98)) + 32|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ($100|0)==($95|0);
   if ($101) {
    $$0$in$i144 = $$0$i145;
   } else {
    $$3 = 0;
    label = 80;
    break;
   }
  }
  if ((label|0) == 80) {
   return ($$3|0);
  }
  $102 = (($91) + ($90<<2)|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($103)) + 15|0);
  $105 = HEAP8[$104>>0]|0;
  $106 = $105&255;
  $107 = ((($0)) + 317136|0);
  HEAP32[$107>>2] = $106;
  $108 = HEAP32[$2>>2]|0;
  $109 = HEAP32[$3>>2]|0;
  $110 = (($108) + ($109<<2)|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($111)) + 1156|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = $113 << 4;
  $115 = ((($0)) + 317140|0);
  HEAP32[$115>>2] = $114;
  $116 = HEAP32[$2>>2]|0;
  $117 = HEAP32[$3>>2]|0;
  $118 = (($116) + ($117<<2)|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = ((($119)) + 1160|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = $121 << 4;
  $123 = ((($0)) + 317144|0);
  HEAP32[$123>>2] = $122;
  $$3 = 1;
  return ($$3|0);
 }
 $11 = ($4|0)>(-1);
 if (!($11)) {
  $$3 = 0;
  return ($$3|0);
 }
 $12 = ((($0)) + 317136|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$2>>2]|0;
 $$060260 = $4;
 while(1) {
  $125 = (($14) + ($$060260<<2)|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = ((($126)) + 15|0);
  $128 = HEAP8[$127>>0]|0;
  $129 = $128&255;
  $130 = ($13|0)==($129|0);
  if ($130) {
   break;
  }
  $135 = (($$060260) + -1)|0;
  $136 = ($$060260|0)>(0);
  if ($136) {
   $$060260 = $135;
  } else {
   label = 24;
   break;
  }
 }
 if ((label|0) == 24) {
  if (!($11)) {
   $$3 = 0;
   return ($$3|0);
  }
  $124 = HEAP32[$2>>2]|0;
  $storemerge258 = $4;
  while(1) {
   $307 = (($124) + ($storemerge258<<2)|0);
   $308 = HEAP32[$307>>2]|0;
   $309 = ((($308)) + 14|0);
   $310 = HEAP8[$309>>0]|0;
   $311 = ($310<<24>>24)==(0);
   if (!($311)) {
    break;
   }
   $312 = (($storemerge258) + -1)|0;
   $313 = ($storemerge258|0)>(0);
   if ($313) {
    $storemerge258 = $312;
   } else {
    $$3 = 0;
    label = 80;
    break;
   }
  }
  if ((label|0) == 80) {
   return ($$3|0);
  }
  $314 = ((($308)) + 15|0);
  $315 = HEAP8[$314>>0]|0;
  $316 = ((($308)) + 16|0);
  $317 = HEAP8[$316>>0]|0;
  $318 = ((($308)) + 17|0);
  $319 = HEAP8[$318>>0]|0;
  $320 = ((($308)) + 28|0);
  $321 = HEAP32[$320>>2]|0;
  $322 = ((($308)) + 32|0);
  $323 = HEAP32[$322>>2]|0;
  $324 = ((($308)) + 24|0);
  $325 = HEAP32[$324>>2]|0;
  $$0$off0$ph$i76 = 1;$$072$ph$i75 = 0;$$073$in$ph$i74 = $storemerge258;
  L55: while(1) {
   $$073$in$i78 = $$073$in$ph$i74;
   while(1) {
    $$073$i79 = (($$073$in$i78) + -1)|0;
    $326 = ($$073$in$i78|0)>(0);
    if (!($326)) {
     break L55;
    }
    $327 = (($124) + ($$073$i79<<2)|0);
    $328 = HEAP32[$327>>2]|0;
    $329 = ((($328)) + 14|0);
    $330 = HEAP8[$329>>0]|0;
    $331 = ($330<<24>>24)==(0);
    if ($331) {
     $$073$in$i78 = $$073$i79;
    } else {
     break;
    }
   }
   $332 = ((($328)) + 15|0);
   $333 = HEAP8[$332>>0]|0;
   $334 = ($333<<24>>24)==($315<<24>>24);
   if (!($334)) {
    break;
   }
   $335 = ((($328)) + 24|0);
   $336 = HEAP32[$335>>2]|0;
   $337 = ((($328)) + 32|0);
   $338 = HEAP32[$337>>2]|0;
   $339 = ((($328)) + 28|0);
   $340 = HEAP32[$339>>2]|0;
   $341 = ((($328)) + 17|0);
   $342 = HEAP8[$341>>0]|0;
   $343 = ((($328)) + 16|0);
   $344 = HEAP8[$343>>0]|0;
   $345 = ($344<<24>>24)==($317<<24>>24);
   $346 = ($342<<24>>24)==($319<<24>>24);
   $or$cond$i80 = $346 & $345;
   $347 = ($340|0)==($321|0);
   $or$cond74$i81 = $347 & $or$cond$i80;
   $348 = ($338|0)==($323|0);
   $or$cond75$i82 = $348 & $or$cond74$i81;
   $or$cond75$not$i83 = $or$cond75$i82 ^ 1;
   $349 = ($336|0)==($325|0);
   $or$cond76$i84 = $349 | $or$cond75$not$i83;
   if ($or$cond76$i84) {
    break;
   } else {
    $$0$off0$ph$i76 = 0;$$072$ph$i75 = $$073$i79;$$073$in$ph$i74 = $$073$i79;
   }
  }
  $350 = ($storemerge258|0)==($$072$ph$i75|0);
  $or$cond95$i85 = $$0$off0$ph$i76 | $350;
  $storemerge$$072$ph$i75 = $or$cond95$i85 ? $storemerge258 : $$072$ph$i75;
  $351 = ((($2)) + 16|0);
  HEAP32[$351>>2] = $storemerge$$072$ph$i75;
  $352 = HEAP32[$1>>2]|0;
  $353 = HEAP32[$352>>2]|0;
  $354 = (($353) + ($storemerge$$072$ph$i75<<2)|0);
  $355 = HEAP32[$354>>2]|0;
  $356 = ((($355)) + 15|0);
  $357 = HEAP8[$356>>0]|0;
  $358 = ((($355)) + 22|0);
  $359 = HEAP8[$358>>0]|0;
  $$0$in$ph$i = $storemerge$$072$ph$i75;$$034$ph$i = $357;$$035$ph$i = $359;
  L63: while(1) {
   $$0$in$i70 = $$0$in$ph$i;$$035$i = $$035$ph$i;
   while(1) {
    $$0$i71 = (($$0$in$i70) + 1)|0;
    $360 = ($$0$in$i70|0)<($4|0);
    if (!($360)) {
     break L63;
    }
    $361 = (($353) + ($$0$i71<<2)|0);
    $362 = HEAP32[$361>>2]|0;
    $363 = ((($362)) + 15|0);
    $364 = HEAP8[$363>>0]|0;
    $365 = ((($362)) + 22|0);
    $366 = HEAP8[$365>>0]|0;
    $367 = ($364<<24>>24)==($$034$ph$i<<24>>24);
    if ($367) {
     $$0$in$i70 = $$0$i71;$$035$i = $366;
    } else {
     break;
    }
   }
   $368 = ((($362)) + 3865|0);
   $369 = HEAP8[$368>>0]|0;
   $370 = ((($362)) + 16|0);
   $371 = HEAP8[$370>>0]|0;
   $372 = ($371<<24>>24)==(0);
   $373 = ($369<<24>>24)==($$035$i<<24>>24);
   $or$cond$i72 = $373 & $372;
   if ($or$cond$i72) {
    $$0$in$ph$i = $$0$i71;$$034$ph$i = $364;$$035$ph$i = $366;
   } else {
    break;
   }
  }
  $374 = ((($352)) + 20|0);
  HEAP32[$374>>2] = $$0$in$i70;
  $375 = (($353) + ($$0$in$i70<<2)|0);
  $376 = HEAP32[$375>>2]|0;
  $377 = ((($376)) + 22|0);
  $378 = HEAP8[$377>>0]|0;
  $379 = ((($0)) + 241948|0);
  HEAP8[$379>>0] = $378;
  $380 = HEAP32[$3>>2]|0;
  $381 = HEAP32[$2>>2]|0;
  $382 = (($381) + ($storemerge$$072$ph$i75<<2)|0);
  $383 = HEAP32[$382>>2]|0;
  $384 = ((($383)) + 32|0);
  $385 = HEAP32[$384>>2]|0;
  $$0$in$i = $storemerge$$072$ph$i75;
  while(1) {
   $$0$i = (($$0$in$i) + 1)|0;
   $386 = ($$0$i|0)<($380|0);
   if (!($386)) {
    $$3 = 1;
    label = 80;
    break;
   }
   $387 = (($381) + ($$0$i<<2)|0);
   $388 = HEAP32[$387>>2]|0;
   $389 = ((($388)) + 32|0);
   $390 = HEAP32[$389>>2]|0;
   $391 = ($390|0)==($385|0);
   if ($391) {
    $$0$in$i = $$0$i;
   } else {
    $$3 = 0;
    label = 80;
    break;
   }
  }
  if ((label|0) == 80) {
   return ($$3|0);
  }
 }
 $131 = ($$060260|0)>(-1);
 L77: do {
  if ($131) {
   $132 = ((($126)) + 14|0);
   $133 = HEAP8[$132>>0]|0;
   $134 = ($133<<24>>24)==(0);
   if ($134) {
    $storemerge65256507 = $$060260;
    while(1) {
     $141 = (($storemerge65256507) + -1)|0;
     $142 = ($storemerge65256507|0)>(0);
     if (!($142)) {
      break L77;
     }
     $$phi$trans$insert = (($14) + ($141<<2)|0);
     $$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $143 = ((($$pre)) + 14|0);
     $144 = HEAP8[$143>>0]|0;
     $145 = ($144<<24>>24)==(0);
     if ($145) {
      $storemerge65256507 = $141;
     } else {
      $$lcssa468 = $$pre;$storemerge65256$lcssa = $141;
      break;
     }
    }
   } else {
    $$lcssa468 = $126;$storemerge65256$lcssa = $$060260;
   }
   $146 = ((($$lcssa468)) + 15|0);
   $147 = HEAP8[$146>>0]|0;
   $148 = ((($$lcssa468)) + 16|0);
   $149 = HEAP8[$148>>0]|0;
   $150 = ((($$lcssa468)) + 17|0);
   $151 = HEAP8[$150>>0]|0;
   $152 = ((($$lcssa468)) + 28|0);
   $153 = HEAP32[$152>>2]|0;
   $154 = ((($$lcssa468)) + 32|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = ((($$lcssa468)) + 24|0);
   $157 = HEAP32[$156>>2]|0;
   $$0$off0$ph$i132 = 1;$$072$ph$i131 = 0;$$073$in$ph$i130 = $storemerge65256$lcssa;
   L84: while(1) {
    $$073$in$i134 = $$073$in$ph$i130;
    while(1) {
     $$073$i135 = (($$073$in$i134) + -1)|0;
     $158 = ($$073$in$i134|0)>(0);
     if (!($158)) {
      break L84;
     }
     $159 = (($14) + ($$073$i135<<2)|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ((($160)) + 14|0);
     $162 = HEAP8[$161>>0]|0;
     $163 = ($162<<24>>24)==(0);
     if ($163) {
      $$073$in$i134 = $$073$i135;
     } else {
      break;
     }
    }
    $164 = ((($160)) + 15|0);
    $165 = HEAP8[$164>>0]|0;
    $166 = ($165<<24>>24)==($147<<24>>24);
    if (!($166)) {
     break;
    }
    $167 = ((($160)) + 24|0);
    $168 = HEAP32[$167>>2]|0;
    $169 = ((($160)) + 32|0);
    $170 = HEAP32[$169>>2]|0;
    $171 = ((($160)) + 28|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = ((($160)) + 17|0);
    $174 = HEAP8[$173>>0]|0;
    $175 = ((($160)) + 16|0);
    $176 = HEAP8[$175>>0]|0;
    $177 = ($176<<24>>24)==($149<<24>>24);
    $178 = ($174<<24>>24)==($151<<24>>24);
    $or$cond$i136 = $178 & $177;
    $179 = ($172|0)==($153|0);
    $or$cond74$i137 = $179 & $or$cond$i136;
    $180 = ($170|0)==($155|0);
    $or$cond75$i138 = $180 & $or$cond74$i137;
    $or$cond75$not$i139 = $or$cond75$i138 ^ 1;
    $181 = ($168|0)==($157|0);
    $or$cond76$i140 = $181 | $or$cond75$not$i139;
    if ($or$cond76$i140) {
     break;
    } else {
     $$0$off0$ph$i132 = 0;$$072$ph$i131 = $$073$i135;$$073$in$ph$i130 = $$073$i135;
    }
   }
   $182 = ($storemerge65256$lcssa|0)==($$072$ph$i131|0);
   $or$cond95$i141 = $$0$off0$ph$i132 | $182;
   $storemerge65$$072$ph$i131 = $or$cond95$i141 ? $storemerge65256$lcssa : $$072$ph$i131;
   $183 = ((($2)) + 16|0);
   HEAP32[$183>>2] = $storemerge65$$072$ph$i131;
   $184 = HEAP32[$1>>2]|0;
   $185 = HEAP32[$184>>2]|0;
   $186 = (($185) + ($storemerge65$$072$ph$i131<<2)|0);
   $187 = HEAP32[$186>>2]|0;
   $188 = ((($187)) + 15|0);
   $189 = HEAP8[$188>>0]|0;
   $190 = ((($187)) + 22|0);
   $191 = HEAP8[$190>>0]|0;
   $$0$in$ph$i122 = $storemerge65$$072$ph$i131;$$034$ph$i121 = $189;$$035$ph$i120 = $191;
   L92: while(1) {
    $$0$in$i125 = $$0$in$ph$i122;$$035$i124 = $$035$ph$i120;
    while(1) {
     $$0$i126 = (($$0$in$i125) + 1)|0;
     $192 = ($$0$in$i125|0)<($$060260|0);
     if (!($192)) {
      break L92;
     }
     $193 = (($185) + ($$0$i126<<2)|0);
     $194 = HEAP32[$193>>2]|0;
     $195 = ((($194)) + 15|0);
     $196 = HEAP8[$195>>0]|0;
     $197 = ((($194)) + 22|0);
     $198 = HEAP8[$197>>0]|0;
     $199 = ($196<<24>>24)==($$034$ph$i121<<24>>24);
     if ($199) {
      $$0$in$i125 = $$0$i126;$$035$i124 = $198;
     } else {
      break;
     }
    }
    $200 = ((($194)) + 3865|0);
    $201 = HEAP8[$200>>0]|0;
    $202 = ((($194)) + 16|0);
    $203 = HEAP8[$202>>0]|0;
    $204 = ($203<<24>>24)==(0);
    $205 = ($201<<24>>24)==($$035$i124<<24>>24);
    $or$cond$i127 = $205 & $204;
    if ($or$cond$i127) {
     $$0$in$ph$i122 = $$0$i126;$$034$ph$i121 = $196;$$035$ph$i120 = $198;
    } else {
     break;
    }
   }
   $206 = ((($184)) + 20|0);
   HEAP32[$206>>2] = $$0$in$i125;
   $207 = (($185) + ($$0$in$i125<<2)|0);
   $208 = HEAP32[$207>>2]|0;
   $209 = ((($208)) + 22|0);
   $210 = HEAP8[$209>>0]|0;
   $211 = ((($0)) + 241948|0);
   HEAP8[$211>>0] = $210;
   $212 = HEAP32[$3>>2]|0;
   $213 = HEAP32[$2>>2]|0;
   $214 = (($213) + ($storemerge65$$072$ph$i131<<2)|0);
   $215 = HEAP32[$214>>2]|0;
   $216 = ((($215)) + 32|0);
   $217 = HEAP32[$216>>2]|0;
   $$0$in$i116 = $storemerge65$$072$ph$i131;
   while(1) {
    $$0$i117 = (($$0$in$i116) + 1)|0;
    $218 = ($$0$i117|0)<($212|0);
    if (!($218)) {
     $$3 = 1;
     label = 80;
     break;
    }
    $219 = (($213) + ($$0$i117<<2)|0);
    $220 = HEAP32[$219>>2]|0;
    $221 = ((($220)) + 32|0);
    $222 = HEAP32[$221>>2]|0;
    $223 = ($222|0)==($217|0);
    if ($223) {
     $$0$in$i116 = $$0$i117;
    } else {
     $$3 = 0;
     label = 80;
     break;
    }
   }
   if ((label|0) == 80) {
    return ($$3|0);
   }
  }
 } while(0);
 $137 = ($$060260|0)>($4|0);
 if ($137) {
  $$3 = 0;
  return ($$3|0);
 }
 $138 = ((($126)) + 14|0);
 $139 = HEAP8[$138>>0]|0;
 $140 = ($139<<24>>24)==(0);
 L109: do {
  if ($140) {
   $storemerge66255505 = $$060260;
   while(1) {
    $224 = (($storemerge66255505) + 1)|0;
    $225 = ($storemerge66255505|0)<($4|0);
    if (!($225)) {
     $$3 = 0;
     break;
    }
    $$phi$trans$insert339 = (($14) + ($224<<2)|0);
    $$pre340 = HEAP32[$$phi$trans$insert339>>2]|0;
    $226 = ((($$pre340)) + 14|0);
    $227 = HEAP8[$226>>0]|0;
    $228 = ($227<<24>>24)==(0);
    if ($228) {
     $storemerge66255505 = $224;
    } else {
     $$lcssa452 = $$pre340;$storemerge66255$lcssa = $224;
     break L109;
    }
   }
   return ($$3|0);
  } else {
   $$lcssa452 = $126;$storemerge66255$lcssa = $$060260;
  }
 } while(0);
 $229 = ((($$lcssa452)) + 15|0);
 $230 = HEAP8[$229>>0]|0;
 $231 = ((($$lcssa452)) + 16|0);
 $232 = HEAP8[$231>>0]|0;
 $233 = ((($$lcssa452)) + 17|0);
 $234 = HEAP8[$233>>0]|0;
 $235 = ((($$lcssa452)) + 28|0);
 $236 = HEAP32[$235>>2]|0;
 $237 = ((($$lcssa452)) + 32|0);
 $238 = HEAP32[$237>>2]|0;
 $239 = ((($$lcssa452)) + 24|0);
 $240 = HEAP32[$239>>2]|0;
 $$0$off0$ph$i104 = 1;$$072$ph$i103 = 0;$$073$in$ph$i102 = $storemerge66255$lcssa;
 L115: while(1) {
  $$073$in$i106 = $$073$in$ph$i102;
  while(1) {
   $$073$i107 = (($$073$in$i106) + -1)|0;
   $241 = ($$073$in$i106|0)>(0);
   if (!($241)) {
    break L115;
   }
   $242 = (($14) + ($$073$i107<<2)|0);
   $243 = HEAP32[$242>>2]|0;
   $244 = ((($243)) + 14|0);
   $245 = HEAP8[$244>>0]|0;
   $246 = ($245<<24>>24)==(0);
   if ($246) {
    $$073$in$i106 = $$073$i107;
   } else {
    break;
   }
  }
  $247 = ((($243)) + 15|0);
  $248 = HEAP8[$247>>0]|0;
  $249 = ($248<<24>>24)==($230<<24>>24);
  if (!($249)) {
   break;
  }
  $250 = ((($243)) + 24|0);
  $251 = HEAP32[$250>>2]|0;
  $252 = ((($243)) + 32|0);
  $253 = HEAP32[$252>>2]|0;
  $254 = ((($243)) + 28|0);
  $255 = HEAP32[$254>>2]|0;
  $256 = ((($243)) + 17|0);
  $257 = HEAP8[$256>>0]|0;
  $258 = ((($243)) + 16|0);
  $259 = HEAP8[$258>>0]|0;
  $260 = ($259<<24>>24)==($232<<24>>24);
  $261 = ($257<<24>>24)==($234<<24>>24);
  $or$cond$i108 = $261 & $260;
  $262 = ($255|0)==($236|0);
  $or$cond74$i109 = $262 & $or$cond$i108;
  $263 = ($253|0)==($238|0);
  $or$cond75$i110 = $263 & $or$cond74$i109;
  $or$cond75$not$i111 = $or$cond75$i110 ^ 1;
  $264 = ($251|0)==($240|0);
  $or$cond76$i112 = $264 | $or$cond75$not$i111;
  if ($or$cond76$i112) {
   break;
  } else {
   $$0$off0$ph$i104 = 0;$$072$ph$i103 = $$073$i107;$$073$in$ph$i102 = $$073$i107;
  }
 }
 $265 = ($storemerge66255$lcssa|0)==($$072$ph$i103|0);
 $or$cond95$i113 = $$0$off0$ph$i104 | $265;
 $storemerge66$$072$ph$i103 = $or$cond95$i113 ? $storemerge66255$lcssa : $$072$ph$i103;
 $266 = ((($2)) + 16|0);
 HEAP32[$266>>2] = $storemerge66$$072$ph$i103;
 $267 = HEAP32[$1>>2]|0;
 $268 = HEAP32[$267>>2]|0;
 $269 = (($268) + ($storemerge66$$072$ph$i103<<2)|0);
 $270 = HEAP32[$269>>2]|0;
 $271 = ((($270)) + 15|0);
 $272 = HEAP8[$271>>0]|0;
 $273 = ((($270)) + 22|0);
 $274 = HEAP8[$273>>0]|0;
 $$0$in$ph$i94 = $storemerge66$$072$ph$i103;$$034$ph$i93 = $272;$$035$ph$i92 = $274;
 L123: while(1) {
  $$0$in$i97 = $$0$in$ph$i94;$$035$i96 = $$035$ph$i92;
  while(1) {
   $$0$i98 = (($$0$in$i97) + 1)|0;
   $275 = ($$0$in$i97|0)<($4|0);
   if (!($275)) {
    break L123;
   }
   $276 = (($268) + ($$0$i98<<2)|0);
   $277 = HEAP32[$276>>2]|0;
   $278 = ((($277)) + 15|0);
   $279 = HEAP8[$278>>0]|0;
   $280 = ((($277)) + 22|0);
   $281 = HEAP8[$280>>0]|0;
   $282 = ($279<<24>>24)==($$034$ph$i93<<24>>24);
   if ($282) {
    $$0$in$i97 = $$0$i98;$$035$i96 = $281;
   } else {
    break;
   }
  }
  $283 = ((($277)) + 3865|0);
  $284 = HEAP8[$283>>0]|0;
  $285 = ((($277)) + 16|0);
  $286 = HEAP8[$285>>0]|0;
  $287 = ($286<<24>>24)==(0);
  $288 = ($284<<24>>24)==($$035$i96<<24>>24);
  $or$cond$i99 = $288 & $287;
  if ($or$cond$i99) {
   $$0$in$ph$i94 = $$0$i98;$$034$ph$i93 = $279;$$035$ph$i92 = $281;
  } else {
   break;
  }
 }
 $289 = ((($267)) + 20|0);
 HEAP32[$289>>2] = $$0$in$i97;
 $290 = (($268) + ($$0$in$i97<<2)|0);
 $291 = HEAP32[$290>>2]|0;
 $292 = ((($291)) + 22|0);
 $293 = HEAP8[$292>>0]|0;
 $294 = ((($0)) + 241948|0);
 HEAP8[$294>>0] = $293;
 $295 = HEAP32[$3>>2]|0;
 $296 = HEAP32[$2>>2]|0;
 $297 = (($296) + ($storemerge66$$072$ph$i103<<2)|0);
 $298 = HEAP32[$297>>2]|0;
 $299 = ((($298)) + 32|0);
 $300 = HEAP32[$299>>2]|0;
 $$0$in$i88 = $storemerge66$$072$ph$i103;
 while(1) {
  $$0$i89 = (($$0$in$i88) + 1)|0;
  $301 = ($$0$i89|0)<($295|0);
  if (!($301)) {
   $$3 = 1;
   label = 80;
   break;
  }
  $302 = (($296) + ($$0$i89<<2)|0);
  $303 = HEAP32[$302>>2]|0;
  $304 = ((($303)) + 32|0);
  $305 = HEAP32[$304>>2]|0;
  $306 = ($305|0)==($300|0);
  if ($306) {
   $$0$in$i88 = $$0$i89;
  } else {
   $$3 = 0;
   label = 80;
   break;
  }
 }
 if ((label|0) == 80) {
  return ($$3|0);
 }
 return (0)|0;
}
function __ZN7WelsDec26CheckAccessUnitBoundaryExtEPN10WelsCommon19TagNalUnitHeaderExtES2_PNS_15TagSliceHeadersES4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ((($3)) + 64|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 17|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ((($1)) + 17|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($7<<24>>24)==($9<<24>>24);
 if (!($10)) {
  $$0 = 1;
  return ($$0|0);
 }
 $11 = ((($2)) + 24|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($3)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($12|0)<($14|0);
 if ($15) {
  $$0 = 0;
  return ($$0|0);
 }
 $16 = ($12|0)>($14|0);
 if ($16) {
  $$0 = 1;
  return ($$0|0);
 }
 $17 = ((($0)) + 15|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = ((($1)) + 15|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($18&255)<($20&255);
 if ($21) {
  $$0 = 0;
  return ($$0|0);
 }
 $22 = ($18&255)>($20&255);
 if ($22) {
  $$0 = 1;
  return ($$0|0);
 }
 $23 = ((($0)) + 16|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = ((($1)) + 16|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = ($24&255)<($26&255);
 if ($27) {
  $$0 = 0;
  return ($$0|0);
 }
 $28 = ($24&255)>($26&255);
 if ($28) {
  $$0 = 1;
  return ($$0|0);
 }
 $29 = ((($2)) + 4|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ((($3)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($30|0)==($32|0);
 if (!($33)) {
  $$0 = 1;
  return ($$0|0);
 }
 $34 = ((($2)) + 76|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ((($3)) + 76|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($35|0)==($37|0);
 if (!($38)) {
  $$0 = 1;
  return ($$0|0);
 }
 $39 = ((($2)) + 64|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = HEAP32[$40>>2]|0;
 $42 = HEAP32[$5>>2]|0;
 $43 = ($41|0)==($42|0);
 if (!($43)) {
  $$0 = 1;
  return ($$0|0);
 }
 $44 = ((($2)) + 2737|0);
 $45 = HEAP8[$44>>0]|0;
 $46 = ((($3)) + 2737|0);
 $47 = HEAP8[$46>>0]|0;
 $48 = ($45<<24>>24)==($47<<24>>24);
 if (!($48)) {
  $$0 = 1;
  return ($$0|0);
 }
 $49 = ((($2)) + 2738|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = ((($3)) + 2738|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = ($50<<24>>24)==($52<<24>>24);
 if (!($53)) {
  $$0 = 1;
  return ($$0|0);
 }
 $54 = ((($0)) + 1|0);
 $55 = HEAP8[$54>>0]|0;
 $56 = ($55<<24>>24)!=(0);
 $57 = ((($1)) + 1|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = ($58<<24>>24)!=(0);
 $60 = $56 ^ $59;
 if ($60) {
  $$0 = 1;
  return ($$0|0);
 }
 $61 = ((($0)) + 12|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = ((($1)) + 12|0);
 $64 = HEAP8[$63>>0]|0;
 $65 = ($62<<24>>24)==($64<<24>>24);
 if (!($65)) {
  $$0 = 1;
  return ($$0|0);
 }
 $66 = ($62<<24>>24)==(0);
 if (!($66)) {
  $67 = ((($2)) + 2728|0);
  $68 = HEAP16[$67>>1]|0;
  $69 = ((($3)) + 2728|0);
  $70 = HEAP16[$69>>1]|0;
  $71 = ($68<<16>>16)==($70<<16>>16);
  if (!($71)) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $72 = ((($5)) + 20|0);
 $73 = HEAP32[$72>>2]|0;
 switch ($73|0) {
 case 0:  {
  $74 = ((($2)) + 8|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ((($3)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ($75|0)==($77|0);
  if (!($78)) {
   $$0 = 1;
   return ($$0|0);
  }
  $79 = ((($2)) + 12|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = ((($3)) + 12|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = ($80|0)==($82|0);
  if (!($83)) {
   $$0 = 1;
   return ($$0|0);
  }
  break;
 }
 case 1:  {
  $84 = ((($2)) + 16|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = ((($3)) + 16|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($85|0)==($87|0);
  if (!($88)) {
   $$0 = 1;
   return ($$0|0);
  }
  $89 = ((($2)) + 20|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ((($3)) + 20|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ($90|0)==($92|0);
  if (!($93)) {
   $$0 = 1;
   return ($$0|0);
  }
  break;
 }
 default: {
 }
 }
 $94 = ((($2)) + 68|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = ((($3)) + 68|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = (_memcmp($95,$97,684)|0);
 $99 = ($98|0)==(0);
 if ($99) {
  $100 = (_memcmp($40,$5,832)|0);
  $not$ = ($100|0)!=(0);
  return ($not$|0);
 } else {
  $$0 = 1;
  return ($$0|0);
 }
 return (0)|0;
}
function __ZN7WelsDec16MarkECFrameAsRefEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZN7WelsDec13WelsMarkAsRefEPNS_21TagWelsDecoderContextE($0)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = $1;
  return ($$0|0);
 }
 $3 = ((($0)) + 5464|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 $6 = ((($4)) + 56|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($4)) + 60|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($4)) + 32|0);
 $11 = ((($0)) + 317112|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 317116|0);
 _ExpandReferencingPicture($5,$7,$9,$10,$12,$13);
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec11DecInitBitsEPN10WelsCommon15TagBitStringAuxEPKhi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0|0);
 if ($3) {
  $$1 = 2;
  return ($$1|0);
 }
 $4 = (($2) + 7)|0;
 $5 = $4 >> 3;
 HEAP32[$0>>2] = $1;
 $6 = (($1) + ($5)|0);
 $7 = ((($0)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($0)) + 8|0);
 HEAP32[$8>>2] = $2;
 $9 = $1;
 $10 = ((($0)) + 16|0);
 HEAP32[$10>>2] = $9;
 $11 = ($5|0)>(0);
 if (!($11)) {
  $$1 = 2;
  return ($$1|0);
 }
 $12 = HEAP8[$1>>0]|0;
 $13 = $12&255;
 $14 = $13 << 24;
 $15 = ((($1)) + 1|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = $17 << 16;
 $19 = $18 | $14;
 $20 = ((($1)) + 2|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 $23 = $22 << 8;
 $24 = $19 | $23;
 $25 = ((($1)) + 3|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $26&255;
 $28 = $24 | $27;
 $29 = ((($0)) + 20|0);
 HEAP32[$29>>2] = $28;
 $30 = ((($1)) + 4|0);
 HEAP32[$10>>2] = $30;
 $31 = ((($0)) + 24|0);
 HEAP32[$31>>2] = -16;
 $$1 = 0;
 return ($$1|0);
}
function __ZN7WelsDec8ParseSpsEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxEPiS5_Phi($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$i = 0, $$$i671 = 0, $$$i680 = 0, $$$i689 = 0, $$$i710 = 0, $$$i719 = 0, $$$i731 = 0, $$$i741 = 0, $$$i750 = 0, $$$i759 = 0, $$$i771 = 0, $$$i780 = 0, $$$i792 = 0, $$$i801 = 0, $$$i813 = 0, $$$i822 = 0, $$$i831 = 0, $$$i840 = 0, $$$i887 = 0;
 var $$0 = 0, $$0$i888$ph = 0, $$05741868 = 0, $$0575 = 0, $$0576 = 0, $$06161870 = 0, $$1$i = 0, $$1$i674 = 0, $$1$i683 = 0, $$1$i692 = 0, $$1$i713 = 0, $$1$i722 = 0, $$1$i734 = 0, $$1$i744 = 0, $$1$i753 = 0, $$1$i762 = 0, $$1$i774 = 0, $$1$i783 = 0, $$1$i795 = 0, $$1$i804 = 0;
 var $$1$i816 = 0, $$1$i825 = 0, $$1$i834 = 0, $$1$i843 = 0, $$119$i = 0, $$119$i673 = 0, $$119$i682 = 0, $$119$i691 = 0, $$119$i712 = 0, $$119$i721 = 0, $$119$i733 = 0, $$119$i743 = 0, $$119$i752 = 0, $$119$i761 = 0, $$119$i773 = 0, $$119$i782 = 0, $$119$i794 = 0, $$119$i803 = 0, $$119$i815 = 0, $$119$i824 = 0;
 var $$119$i833 = 0, $$119$i842 = 0, $$2$i = 0, $$2$i672 = 0, $$2$i681 = 0, $$2$i690 = 0, $$2$i711 = 0, $$2$i720 = 0, $$2$i732 = 0, $$2$i742 = 0, $$2$i751 = 0, $$2$i760 = 0, $$2$i772 = 0, $$2$i781 = 0, $$2$i793 = 0, $$2$i802 = 0, $$2$i814 = 0, $$2$i823 = 0, $$2$i832 = 0, $$2$i841 = 0;
 var $$47 = 0, $$pr = 0, $$pre = 0, $$pre$phi$i$pre$phiZ2DZZ2D = 0, $$pre1874 = 0, $$pre1875 = 0, $$pre1876 = 0, $$pre1877 = 0, $$pre1878 = 0, $$pre1879 = 0, $$pre2092 = 0, $$pre2141 = 0, $$sink = 0, $$sroa$336$12 = 0, $$sroa$336$15 = 0, $$sroa$336$19 = 0, $$sroa$336$27 = 0, $$sroa$336$35 = 0, $$sroa$336$39$ph = 0, $$sroa$336$391866 = 0;
 var $$sroa$336$47 = 0, $$sroa$336$48 = 0, $$sroa$336$51 = 0, $$sroa$336$52 = 0, $$sroa$336$55 = 0, $$sroa$336$58 = 0, $$sroa$336$59 = 0, $$sroa$336$61 = 0, $$sroa$336$62 = 0, $$sroa$336$63 = 0, $$sroa$336$66 = 0, $$sroa$336$69 = 0, $$sroa$336$72 = 0, $$sroa$336$76 = 0, $$sroa$336$77 = 0, $$sroa$336$78 = 0, $$sroa$336$9 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i1710 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102344 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102345 = 0;
 var $$sroa$6907$0$$sroa$6907$16$$pre$i17102346 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102347 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102348 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102349 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102350 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102351 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102352 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102353 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102354 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102355 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102357 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102359 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102362 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102363 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102364 = 0, $$sroa$6907$0$$sroa$6907$16$$pre$i17102365 = 0;
 var $$sroa$6907$0$$sroa$6907$16$10001613 = 0, $$sroa$6907$0$$sroa$6907$16$10011672 = 0, $$sroa$6907$0$$sroa$6907$16$10021673 = 0, $$sroa$6907$0$$sroa$6907$16$10031674 = 0, $$sroa$6907$0$$sroa$6907$16$10051730 = 0, $$sroa$6907$0$$sroa$6907$16$10071714 = 0, $$sroa$6907$0$$sroa$6907$16$10081690 = 0, $$sroa$6907$0$$sroa$6907$16$100816902217 = 0, $$sroa$6907$0$$sroa$6907$16$100816902218 = 0, $$sroa$6907$0$$sroa$6907$16$100816902219 = 0, $$sroa$6907$0$$sroa$6907$16$100816902220 = 0, $$sroa$6907$0$$sroa$6907$16$100816902221 = 0, $$sroa$6907$0$$sroa$6907$16$100816902222 = 0, $$sroa$6907$0$$sroa$6907$16$100816902223 = 0, $$sroa$6907$0$$sroa$6907$16$100816902224 = 0, $$sroa$6907$0$$sroa$6907$16$100816902225 = 0, $$sroa$6907$0$$sroa$6907$16$100816902226 = 0, $$sroa$6907$0$$sroa$6907$16$100816902227 = 0, $$sroa$6907$0$$sroa$6907$16$100816902228 = 0, $$sroa$6907$0$$sroa$6907$16$10091692 = 0;
 var $$sroa$6907$0$$sroa$6907$16$10101693 = 0, $$sroa$6907$0$$sroa$6907$16$10111694 = 0, $$sroa$6907$0$$sroa$6907$16$10121713 = 0, $$sroa$6907$0$$sroa$6907$16$10131712 = 0, $$sroa$6907$0$$sroa$6907$16$10141711 = 0, $$sroa$6907$0$$sroa$6907$16$101417112278 = 0, $$sroa$6907$0$$sroa$6907$16$101417112279 = 0, $$sroa$6907$0$$sroa$6907$16$101417112280 = 0, $$sroa$6907$0$$sroa$6907$16$101417112281 = 0, $$sroa$6907$0$$sroa$6907$16$101417112282 = 0, $$sroa$6907$0$$sroa$6907$16$101417112283 = 0, $$sroa$6907$0$$sroa$6907$16$101417112284 = 0, $$sroa$6907$0$$sroa$6907$16$101417112285 = 0, $$sroa$6907$0$$sroa$6907$16$101417112286 = 0, $$sroa$6907$0$$sroa$6907$16$101417112287 = 0, $$sroa$6907$0$$sroa$6907$16$101417112288 = 0, $$sroa$6907$0$$sroa$6907$16$101417112289 = 0, $$sroa$6907$0$$sroa$6907$16$101417112290 = 0, $$sroa$6907$0$$sroa$6907$16$10151715 = 0, $$sroa$6907$0$$sroa$6907$16$10161691 = 0;
 var $$sroa$6907$0$$sroa$6907$16$10171698 = 0, $$sroa$6907$0$$sroa$6907$16$10181699 = 0, $$sroa$6907$0$$sroa$6907$16$10191697 = 0, $$sroa$6907$0$$sroa$6907$16$10201696 = 0, $$sroa$6907$0$$sroa$6907$16$10211695 = 0, $$sroa$6907$0$$sroa$6907$16$102116952257 = 0, $$sroa$6907$0$$sroa$6907$16$102116952258 = 0, $$sroa$6907$0$$sroa$6907$16$102116952259 = 0, $$sroa$6907$0$$sroa$6907$16$102116952260 = 0, $$sroa$6907$0$$sroa$6907$16$102116952261 = 0, $$sroa$6907$0$$sroa$6907$16$102116952262 = 0, $$sroa$6907$0$$sroa$6907$16$102116952263 = 0, $$sroa$6907$0$$sroa$6907$16$102116952264 = 0, $$sroa$6907$0$$sroa$6907$16$102116952265 = 0, $$sroa$6907$0$$sroa$6907$16$102116952266 = 0, $$sroa$6907$0$$sroa$6907$16$102116952267 = 0, $$sroa$6907$0$$sroa$6907$16$102116952268 = 0, $$sroa$6907$0$$sroa$6907$16$102116952269 = 0, $$sroa$6907$0$$sroa$6907$16$10241682 = 0, $$sroa$6907$0$$sroa$6907$16$10251705 = 0;
 var $$sroa$6907$0$$sroa$6907$16$102517052321 = 0, $$sroa$6907$0$$sroa$6907$16$102517052322 = 0, $$sroa$6907$0$$sroa$6907$16$102517052323 = 0, $$sroa$6907$0$$sroa$6907$16$102517052324 = 0, $$sroa$6907$0$$sroa$6907$16$102517052325 = 0, $$sroa$6907$0$$sroa$6907$16$102517052326 = 0, $$sroa$6907$0$$sroa$6907$16$102517052327 = 0, $$sroa$6907$0$$sroa$6907$16$102517052328 = 0, $$sroa$6907$0$$sroa$6907$16$102517052329 = 0, $$sroa$6907$0$$sroa$6907$16$102517052330 = 0, $$sroa$6907$0$$sroa$6907$16$102517052331 = 0, $$sroa$6907$0$$sroa$6907$16$102517052332 = 0, $$sroa$6907$0$$sroa$6907$16$102517052333 = 0, $$sroa$6907$0$$sroa$6907$16$102517052334 = 0, $$sroa$6907$0$$sroa$6907$16$102517052335 = 0, $$sroa$6907$0$$sroa$6907$16$10261706 = 0, $$sroa$6907$0$$sroa$6907$16$10271707 = 0, $$sroa$6907$0$$sroa$6907$16$10291611 = 0, $$sroa$6907$0$$sroa$6907$16$10311684 = 0, $$sroa$6907$0$$sroa$6907$16$10321683 = 0;
 var $$sroa$6907$0$$sroa$6907$16$10341680 = 0, $$sroa$6907$0$$sroa$6907$16$103416802143 = 0, $$sroa$6907$0$$sroa$6907$16$103416802144 = 0, $$sroa$6907$0$$sroa$6907$16$103416802145 = 0, $$sroa$6907$0$$sroa$6907$16$103416802146 = 0, $$sroa$6907$0$$sroa$6907$16$103416802147 = 0, $$sroa$6907$0$$sroa$6907$16$103416802148 = 0, $$sroa$6907$0$$sroa$6907$16$103416802149 = 0, $$sroa$6907$0$$sroa$6907$16$103416802150 = 0, $$sroa$6907$0$$sroa$6907$16$103416802151 = 0, $$sroa$6907$0$$sroa$6907$16$103416802152 = 0, $$sroa$6907$0$$sroa$6907$16$10421667 = 0, $$sroa$6907$0$$sroa$6907$16$10431668 = 0, $$sroa$6907$0$$sroa$6907$16$10441669 = 0, $$sroa$6907$0$$sroa$6907$16$10451840 = 0, $$sroa$6907$0$$sroa$6907$16$10461839 = 0, $$sroa$6907$0$$sroa$6907$16$10471838 = 0, $$sroa$6907$0$$sroa$6907$16$10481837 = 0, $$sroa$6907$0$$sroa$6907$16$10501736 = 0, $$sroa$6907$0$$sroa$6907$16$105017362066 = 0;
 var $$sroa$6907$0$$sroa$6907$16$105017362067 = 0, $$sroa$6907$0$$sroa$6907$16$105017362068 = 0, $$sroa$6907$0$$sroa$6907$16$105017362069 = 0, $$sroa$6907$0$$sroa$6907$16$105017362070 = 0, $$sroa$6907$0$$sroa$6907$16$10511666 = 0, $$sroa$6907$0$$sroa$6907$16$10521746 = 0, $$sroa$6907$0$$sroa$6907$16$105217462008 = 0, $$sroa$6907$0$$sroa$6907$16$105217462009 = 0, $$sroa$6907$0$$sroa$6907$16$10531747 = 0, $$sroa$6907$0$$sroa$6907$16$10541748 = 0, $$sroa$6907$0$$sroa$6907$16$10551749 = 0, $$sroa$6907$0$$sroa$6907$16$10561750 = 0, $$sroa$6907$0$$sroa$6907$16$10571828 = 0, $$sroa$6907$0$$sroa$6907$16$10581827 = 0, $$sroa$6907$0$$sroa$6907$16$10601616 = 0, $$sroa$6907$0$$sroa$6907$16$10611741 = 0, $$sroa$6907$0$$sroa$6907$16$106117412041 = 0, $$sroa$6907$0$$sroa$6907$16$106117412042 = 0, $$sroa$6907$0$$sroa$6907$16$106117412043 = 0, $$sroa$6907$0$$sroa$6907$16$106117412044 = 0;
 var $$sroa$6907$0$$sroa$6907$16$10621742 = 0, $$sroa$6907$0$$sroa$6907$16$10631743 = 0, $$sroa$6907$0$$sroa$6907$16$10641744 = 0, $$sroa$6907$0$$sroa$6907$16$10651745 = 0, $$sroa$6907$0$$sroa$6907$16$10661661 = 0, $$sroa$6907$0$$sroa$6907$16$10681618 = 0, $$sroa$6907$0$$sroa$6907$16$10691617 = 0, $$sroa$6907$0$$sroa$6907$16$10701768 = 0, $$sroa$6907$0$$sroa$6907$16$10711645 = 0, $$sroa$6907$0$$sroa$6907$16$107116451998 = 0, $$sroa$6907$0$$sroa$6907$16$107116451999 = 0, $$sroa$6907$0$$sroa$6907$16$10721731 = 0, $$sroa$6907$0$$sroa$6907$16$107217312094 = 0, $$sroa$6907$0$$sroa$6907$16$107217312095 = 0, $$sroa$6907$0$$sroa$6907$16$107217312096 = 0, $$sroa$6907$0$$sroa$6907$16$107217312097 = 0, $$sroa$6907$0$$sroa$6907$16$107217312098 = 0, $$sroa$6907$0$$sroa$6907$16$107217312099 = 0, $$sroa$6907$0$$sroa$6907$16$107217312100 = 0, $$sroa$6907$0$$sroa$6907$16$10731732 = 0;
 var $$sroa$6907$0$$sroa$6907$16$10741733 = 0, $$sroa$6907$0$$sroa$6907$16$10751734 = 0, $$sroa$6907$0$$sroa$6907$16$10761735 = 0, $$sroa$6907$0$$sroa$6907$16$10781737 = 0, $$sroa$6907$0$$sroa$6907$16$10791665 = 0, $$sroa$6907$0$$sroa$6907$16$107916652079 = 0, $$sroa$6907$0$$sroa$6907$16$107916652080 = 0, $$sroa$6907$0$$sroa$6907$16$107916652081 = 0, $$sroa$6907$0$$sroa$6907$16$107916652082 = 0, $$sroa$6907$0$$sroa$6907$16$107916652083 = 0, $$sroa$6907$0$$sroa$6907$16$107916652084 = 0, $$sroa$6907$0$$sroa$6907$16$10811656 = 0, $$sroa$6907$0$$sroa$6907$16$10821657 = 0, $$sroa$6907$0$$sroa$6907$16$10831658 = 0, $$sroa$6907$0$$sroa$6907$16$10841659 = 0, $$sroa$6907$0$$sroa$6907$16$10851825 = 0, $$sroa$6907$0$$sroa$6907$16$10861824 = 0, $$sroa$6907$0$$sroa$6907$16$10871823 = 0, $$sroa$6907$0$$sroa$6907$16$10881822 = 0, $$sroa$6907$0$$sroa$6907$16$10891655 = 0;
 var $$sroa$6907$0$$sroa$6907$16$108916552029 = 0, $$sroa$6907$0$$sroa$6907$16$108916552030 = 0, $$sroa$6907$0$$sroa$6907$16$108916552031 = 0, $$sroa$6907$0$$sroa$6907$16$108916552032 = 0, $$sroa$6907$0$$sroa$6907$16$10901650 = 0, $$sroa$6907$0$$sroa$6907$16$109016502018 = 0, $$sroa$6907$0$$sroa$6907$16$109016502019 = 0, $$sroa$6907$0$$sroa$6907$16$109016502020 = 0, $$sroa$6907$0$$sroa$6907$16$10911651 = 0, $$sroa$6907$0$$sroa$6907$16$10921652 = 0, $$sroa$6907$0$$sroa$6907$16$10931653 = 0, $$sroa$6907$0$$sroa$6907$16$10941654 = 0, $$sroa$6907$0$$sroa$6907$16$10951830 = 0, $$sroa$6907$0$$sroa$6907$16$10961834 = 0, $$sroa$6907$0$$sroa$6907$16$10971626 = 0, $$sroa$6907$0$$sroa$6907$16$10981646 = 0, $$sroa$6907$0$$sroa$6907$16$10991829 = 0, $$sroa$6907$0$$sroa$6907$16$11001648 = 0, $$sroa$6907$0$$sroa$6907$16$11011649 = 0, $$sroa$6907$0$$sroa$6907$16$11021629 = 0;
 var $$sroa$6907$0$$sroa$6907$16$11031628 = 0, $$sroa$6907$0$$sroa$6907$16$11041627 = 0, $$sroa$6907$0$$sroa$6907$16$11051769 = 0, $$sroa$6907$0$$sroa$6907$16$11071771 = 0, $$sroa$6907$0$$sroa$6907$16$110717711983 = 0, $$sroa$6907$0$$sroa$6907$16$11081772 = 0, $$sroa$6907$0$$sroa$6907$16$11091619 = 0, $$sroa$6907$0$$sroa$6907$16$11101647 = 0, $$sroa$6907$0$$sroa$6907$16$11111773 = 0, $$sroa$6907$0$$sroa$6907$16$11121833 = 0, $$sroa$6907$0$$sroa$6907$16$11131832 = 0, $$sroa$6907$0$$sroa$6907$16$11151789 = 0, $$sroa$6907$0$$sroa$6907$16$11161794 = 0, $$sroa$6907$0$$sroa$6907$16$11171795 = 0, $$sroa$6907$0$$sroa$6907$16$11181638 = 0, $$sroa$6907$0$$sroa$6907$16$11191637 = 0, $$sroa$6907$0$$sroa$6907$16$11201636 = 0, $$sroa$6907$0$$sroa$6907$16$11211779 = 0, $$sroa$6907$0$$sroa$6907$16$11231787 = 0, $$sroa$6907$0$$sroa$6907$16$11241788 = 0;
 var $$sroa$6907$0$$sroa$6907$16$11251793 = 0, $$sroa$6907$0$$sroa$6907$16$11261790 = 0, $$sroa$6907$0$$sroa$6907$16$11271785 = 0, $$sroa$6907$0$$sroa$6907$16$11281784 = 0, $$sroa$6907$0$$sroa$6907$16$11291783 = 0, $$sroa$6907$0$$sroa$6907$16$11301782 = 0, $$sroa$6907$0$$sroa$6907$16$11321780 = 0, $$sroa$6907$0$$sroa$6907$16$11331835 = 0, $$sroa$6907$0$$sroa$6907$16$11341770 = 0, $$sroa$6907$0$$sroa$6907$16$11351802 = 0, $$sroa$6907$0$$sroa$6907$16$11361631 = 0, $$sroa$6907$0$$sroa$6907$16$11381761 = 0, $$sroa$6907$0$$sroa$6907$16$113817611965 = 0, $$sroa$6907$0$$sroa$6907$16$11391762 = 0, $$sroa$6907$0$$sroa$6907$16$11401763 = 0, $$sroa$6907$0$$sroa$6907$16$11411764 = 0, $$sroa$6907$0$$sroa$6907$16$11421765 = 0, $$sroa$6907$0$$sroa$6907$16$11431805 = 0, $$sroa$6907$0$$sroa$6907$16$11441804 = 0, $$sroa$6907$0$$sroa$6907$16$11451803 = 0;
 var $$sroa$6907$0$$sroa$6907$16$11461639 = 0, $$sroa$6907$0$$sroa$6907$16$11481792 = 0, $$sroa$6907$0$$sroa$6907$16$11491622 = 0, $$sroa$6907$0$$sroa$6907$16$11501799 = 0, $$sroa$6907$0$$sroa$6907$16$11511800 = 0, $$sroa$6907$0$$sroa$6907$16$11521644 = 0, $$sroa$6907$0$$sroa$6907$16$11531738 = 0, $$sroa$6907$0$$sroa$6907$16$11541739 = 0, $$sroa$6907$0$$sroa$6907$16$11551740 = 0, $$sroa$6907$0$$sroa$6907$16$11561624 = 0, $$sroa$6907$0$$sroa$6907$16$11571623 = 0, $$sroa$6907$0$$sroa$6907$16$11581815 = 0, $$sroa$6907$0$$sroa$6907$16$11591621 = 0, $$sroa$6907$0$$sroa$6907$16$11611660 = 0, $$sroa$6907$0$$sroa$6907$16$116116602053 = 0, $$sroa$6907$0$$sroa$6907$16$116116602054 = 0, $$sroa$6907$0$$sroa$6907$16$116116602055 = 0, $$sroa$6907$0$$sroa$6907$16$116116602056 = 0, $$sroa$6907$0$$sroa$6907$16$116116602057 = 0, $$sroa$6907$0$$sroa$6907$16$11621662 = 0;
 var $$sroa$6907$0$$sroa$6907$16$11631663 = 0, $$sroa$6907$0$$sroa$6907$16$11641664 = 0, $$sroa$6907$0$$sroa$6907$16$11651797 = 0, $$sroa$6907$0$$sroa$6907$16$11661798 = 0, $$sroa$6907$0$$sroa$6907$16$11671814 = 0, $$sroa$6907$0$$sroa$6907$16$11681813 = 0, $$sroa$6907$0$$sroa$6907$16$11691812 = 0, $$sroa$6907$0$$sroa$6907$16$11721641 = 0, $$sroa$6907$0$$sroa$6907$16$11731642 = 0, $$sroa$6907$0$$sroa$6907$16$11741643 = 0, $$sroa$6907$0$$sroa$6907$16$11751820 = 0, $$sroa$6907$0$$sroa$6907$16$11761819 = 0, $$sroa$6907$0$$sroa$6907$16$11771818 = 0, $$sroa$6907$0$$sroa$6907$16$11781817 = 0, $$sroa$6907$0$$sroa$6907$16$9111728 = 0, $$sroa$6907$0$$sroa$6907$16$9121727 = 0, $$sroa$6907$0$$sroa$6907$16$9131726 = 0, $$sroa$6907$0$$sroa$6907$16$91317262161 = 0, $$sroa$6907$0$$sroa$6907$16$91317262162 = 0, $$sroa$6907$0$$sroa$6907$16$91317262163 = 0;
 var $$sroa$6907$0$$sroa$6907$16$91317262164 = 0, $$sroa$6907$0$$sroa$6907$16$91317262165 = 0, $$sroa$6907$0$$sroa$6907$16$91317262166 = 0, $$sroa$6907$0$$sroa$6907$16$91317262167 = 0, $$sroa$6907$0$$sroa$6907$16$91317262168 = 0, $$sroa$6907$0$$sroa$6907$16$91317262169 = 0, $$sroa$6907$0$$sroa$6907$16$91317262170 = 0, $$sroa$6907$0$$sroa$6907$16$9171725 = 0, $$sroa$6907$0$$sroa$6907$16$9201721 = 0, $$sroa$6907$0$$sroa$6907$16$92017212198 = 0, $$sroa$6907$0$$sroa$6907$16$92017212199 = 0, $$sroa$6907$0$$sroa$6907$16$92017212200 = 0, $$sroa$6907$0$$sroa$6907$16$92017212201 = 0, $$sroa$6907$0$$sroa$6907$16$92017212202 = 0, $$sroa$6907$0$$sroa$6907$16$92017212203 = 0, $$sroa$6907$0$$sroa$6907$16$92017212204 = 0, $$sroa$6907$0$$sroa$6907$16$92017212205 = 0, $$sroa$6907$0$$sroa$6907$16$92017212206 = 0, $$sroa$6907$0$$sroa$6907$16$92017212207 = 0, $$sroa$6907$0$$sroa$6907$16$92017212208 = 0;
 var $$sroa$6907$0$$sroa$6907$16$9211722 = 0, $$sroa$6907$0$$sroa$6907$16$9221723 = 0, $$sroa$6907$0$$sroa$6907$16$9251701 = 0, $$sroa$6907$0$$sroa$6907$16$9271767 = 0, $$sroa$6907$0$$sroa$6907$16$9291716 = 0, $$sroa$6907$0$$sroa$6907$16$92917162237 = 0, $$sroa$6907$0$$sroa$6907$16$92917162238 = 0, $$sroa$6907$0$$sroa$6907$16$92917162239 = 0, $$sroa$6907$0$$sroa$6907$16$92917162240 = 0, $$sroa$6907$0$$sroa$6907$16$92917162241 = 0, $$sroa$6907$0$$sroa$6907$16$92917162242 = 0, $$sroa$6907$0$$sroa$6907$16$92917162243 = 0, $$sroa$6907$0$$sroa$6907$16$92917162244 = 0, $$sroa$6907$0$$sroa$6907$16$92917162245 = 0, $$sroa$6907$0$$sroa$6907$16$92917162246 = 0, $$sroa$6907$0$$sroa$6907$16$92917162247 = 0, $$sroa$6907$0$$sroa$6907$16$92917162248 = 0, $$sroa$6907$0$$sroa$6907$16$9301717 = 0, $$sroa$6907$0$$sroa$6907$16$9311718 = 0, $$sroa$6907$0$$sroa$6907$16$9321719 = 0;
 var $$sroa$6907$0$$sroa$6907$16$9331720 = 0, $$sroa$6907$0$$sroa$6907$16$9351700 = 0, $$sroa$6907$0$$sroa$6907$16$93517002299 = 0, $$sroa$6907$0$$sroa$6907$16$93517002300 = 0, $$sroa$6907$0$$sroa$6907$16$93517002301 = 0, $$sroa$6907$0$$sroa$6907$16$93517002302 = 0, $$sroa$6907$0$$sroa$6907$16$93517002303 = 0, $$sroa$6907$0$$sroa$6907$16$93517002304 = 0, $$sroa$6907$0$$sroa$6907$16$93517002305 = 0, $$sroa$6907$0$$sroa$6907$16$93517002306 = 0, $$sroa$6907$0$$sroa$6907$16$93517002307 = 0, $$sroa$6907$0$$sroa$6907$16$93517002308 = 0, $$sroa$6907$0$$sroa$6907$16$93517002309 = 0, $$sroa$6907$0$$sroa$6907$16$93517002310 = 0, $$sroa$6907$0$$sroa$6907$16$93517002311 = 0, $$sroa$6907$0$$sroa$6907$16$93517002312 = 0, $$sroa$6907$0$$sroa$6907$16$9361685 = 0, $$sroa$6907$0$$sroa$6907$16$93616852179 = 0, $$sroa$6907$0$$sroa$6907$16$93616852180 = 0, $$sroa$6907$0$$sroa$6907$16$93616852181 = 0;
 var $$sroa$6907$0$$sroa$6907$16$93616852182 = 0, $$sroa$6907$0$$sroa$6907$16$93616852183 = 0, $$sroa$6907$0$$sroa$6907$16$93616852184 = 0, $$sroa$6907$0$$sroa$6907$16$93616852185 = 0, $$sroa$6907$0$$sroa$6907$16$93616852186 = 0, $$sroa$6907$0$$sroa$6907$16$93616852187 = 0, $$sroa$6907$0$$sroa$6907$16$93616852188 = 0, $$sroa$6907$0$$sroa$6907$16$93616852189 = 0, $$sroa$6907$0$$sroa$6907$16$9371686 = 0, $$sroa$6907$0$$sroa$6907$16$9381687 = 0, $$sroa$6907$0$$sroa$6907$16$9391688 = 0, $$sroa$6907$0$$sroa$6907$16$9401689 = 0, $$sroa$6907$0$$sroa$6907$16$9421778 = 0, $$sroa$6907$0$$sroa$6907$16$9431751 = 0, $$sroa$6907$0$$sroa$6907$16$94317511947 = 0, $$sroa$6907$0$$sroa$6907$16$9441752 = 0, $$sroa$6907$0$$sroa$6907$16$9451753 = 0, $$sroa$6907$0$$sroa$6907$16$9461754 = 0, $$sroa$6907$0$$sroa$6907$16$9471755 = 0, $$sroa$6907$0$$sroa$6907$16$9501777 = 0;
 var $$sroa$6907$0$$sroa$6907$16$9511774 = 0, $$sroa$6907$0$$sroa$6907$16$9521807 = 0, $$sroa$6907$0$$sroa$6907$16$9531775 = 0, $$sroa$6907$0$$sroa$6907$16$9541634 = 0, $$sroa$6907$0$$sroa$6907$16$9551633 = 0, $$sroa$6907$0$$sroa$6907$16$9561632 = 0, $$sroa$6907$0$$sroa$6907$16$9571766 = 0, $$sroa$6907$0$$sroa$6907$16$95717661974 = 0, $$sroa$6907$0$$sroa$6907$16$9591756 = 0, $$sroa$6907$0$$sroa$6907$16$95917561956 = 0, $$sroa$6907$0$$sroa$6907$16$9631704 = 0, $$sroa$6907$0$$sroa$6907$16$9641703 = 0, $$sroa$6907$0$$sroa$6907$16$9651702 = 0, $$sroa$6907$0$$sroa$6907$16$9661724 = 0, $$sroa$6907$0$$sroa$6907$16$9681757 = 0, $$sroa$6907$0$$sroa$6907$16$9691758 = 0, $$sroa$6907$0$$sroa$6907$16$9701759 = 0, $$sroa$6907$0$$sroa$6907$16$9711760 = 0, $$sroa$6907$0$$sroa$6907$16$9721810 = 0, $$sroa$6907$0$$sroa$6907$16$9731809 = 0;
 var $$sroa$6907$0$$sroa$6907$16$9741808 = 0, $$sroa$6907$0$$sroa$6907$16$9751678 = 0, $$sroa$6907$0$$sroa$6907$16$9761729 = 0, $$sroa$6907$0$$sroa$6907$16$9791709 = 0, $$sroa$6907$0$$sroa$6907$16$9801845 = 0, $$sroa$6907$0$$sroa$6907$16$9811844 = 0, $$sroa$6907$0$$sroa$6907$16$9821679 = 0, $$sroa$6907$0$$sroa$6907$16$9841843 = 0, $$sroa$6907$0$$sroa$6907$16$9851842 = 0, $$sroa$6907$0$$sroa$6907$16$9881677 = 0, $$sroa$6907$0$$sroa$6907$16$9891676 = 0, $$sroa$6907$0$$sroa$6907$16$9901675 = 0, $$sroa$6907$0$$sroa$6907$16$99016752125 = 0, $$sroa$6907$0$$sroa$6907$16$99016752126 = 0, $$sroa$6907$0$$sroa$6907$16$99016752127 = 0, $$sroa$6907$0$$sroa$6907$16$99016752128 = 0, $$sroa$6907$0$$sroa$6907$16$99016752129 = 0, $$sroa$6907$0$$sroa$6907$16$99016752130 = 0, $$sroa$6907$0$$sroa$6907$16$99016752131 = 0, $$sroa$6907$0$$sroa$6907$16$99016752132 = 0;
 var $$sroa$6907$0$$sroa$6907$16$99016752133 = 0, $$sroa$6907$0$$sroa$6907$16$9921681 = 0, $$sroa$6907$0$$sroa$6907$16$993 = 0, $$sroa$6907$0$$sroa$6907$16$994$cast = 0, $$sroa$6907$0$$sroa$6907$16$9951612 = 0, $$sroa$6907$0$$sroa$6907$16$9961614 = 0, $$sroa$6907$0$$sroa$6907$16$9971671 = 0, $$sroa$6907$0$$sroa$6907$16$9981670 = 0, $$sroa$6907$0$$sroa$6907$16$99816702109 = 0, $$sroa$6907$0$$sroa$6907$16$99816702110 = 0, $$sroa$6907$0$$sroa$6907$16$99816702111 = 0, $$sroa$6907$0$$sroa$6907$16$99816702112 = 0, $$sroa$6907$0$$sroa$6907$16$99816702113 = 0, $$sroa$6907$0$$sroa$6907$16$99816702114 = 0, $$sroa$6907$0$$sroa$6907$16$99816702115 = 0, $$sroa$6907$0$$sroa$6907$16$99816702116 = 0, $$sroa$6907$0$$sroa$6907$16$9991708 = 0, $$sroa$719$0 = 0, $$sroa$719$1 = 0, $$sroa$719$11$ph = 0;
 var $$sroa$719$111867 = 0, $$sroa$719$14 = 0, $$sroa$719$15 = 0, $$sroa$719$16 = 0, $$sroa$719$17 = 0, $$sroa$719$18 = 0, $$sroa$719$19 = 0, $$sroa$719$2 = 0, $$sroa$719$20 = 0, $$sroa$719$21 = 0, $$sroa$719$22 = 0, $$sroa$719$24 = 0, $$sroa$719$6 = 0, $$sroa$719$9 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0;
 var $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0;
 var $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0;
 var $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0;
 var $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0;
 var $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0;
 var $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0;
 var $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0;
 var $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0;
 var $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0;
 var $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0;
 var $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0;
 var $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0;
 var $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0;
 var $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0;
 var $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0;
 var $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0;
 var $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0;
 var $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0;
 var $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0;
 var $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0;
 var $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0;
 var $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0;
 var $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0;
 var $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0;
 var $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0;
 var $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0;
 var $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0;
 var $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0;
 var $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0;
 var $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0;
 var $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0;
 var $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0;
 var $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0;
 var $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0;
 var $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0;
 var $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0;
 var $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0;
 var $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0;
 var $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0;
 var $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0;
 var $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0;
 var $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0;
 var $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0;
 var $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0;
 var $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0;
 var $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0;
 var $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0;
 var $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0;
 var $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0;
 var $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0;
 var $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0;
 var $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0;
 var $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0;
 var $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0;
 var $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0;
 var $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0;
 var $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0;
 var $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0;
 var $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0;
 var $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0;
 var $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0;
 var $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0;
 var $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0;
 var $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0;
 var $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0;
 var $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0;
 var $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0;
 var $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0;
 var $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0;
 var $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0;
 var $2266 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0;
 var $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0;
 var $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0;
 var $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0;
 var $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0;
 var $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0;
 var $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0;
 var $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $storemerge$i$i$i = 0, $storemerge$i$i696 = 0, $storemerge$i$i699 = 0, $storemerge$i$i705 = 0, $storemerge$i$i726 = 0;
 var $storemerge$i$i808 = 0, $storemerge$i889 = 0, $storemerge$i895 = 0, $storemerge$i900 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer3 = 0, $vararg_buffer32 = 0, $vararg_buffer34 = 0, $vararg_buffer36 = 0, $vararg_buffer39 = 0, $vararg_buffer41 = 0, $vararg_buffer44 = 0;
 var $vararg_buffer46 = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024|0;
 $vararg_buffer46 = sp + 144|0;
 $vararg_buffer44 = sp + 136|0;
 $vararg_buffer41 = sp + 128|0;
 $vararg_buffer39 = sp + 120|0;
 $vararg_buffer36 = sp + 112|0;
 $vararg_buffer34 = sp + 104|0;
 $vararg_buffer32 = sp + 96|0;
 $vararg_buffer29 = sp + 88|0;
 $vararg_buffer27 = sp + 80|0;
 $vararg_buffer24 = sp + 72|0;
 $vararg_buffer21 = sp + 64|0;
 $vararg_buffer18 = sp + 56|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $6 = sp + 1016|0;
 $7 = sp + 152|0;
 $8 = sp + 148|0;
 $9 = ((($0)) + 92|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(15);
 $12 = ((($1)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13 >>> 24;
 $15 = ((($1)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$1>>2]|0;
 $18 = ((($1)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $13 << 8;
 HEAP32[$12>>2] = $20;
 $21 = ((($1)) + 24|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (($22) + 8)|0;
 HEAP32[$21>>2] = $23;
 $24 = ($22|0)>(-8);
 do {
  if ($24) {
   $25 = $19;
   $26 = (($25) - ($17))|0;
   $27 = (($16) + 1)|0;
   $28 = (($27) - ($17))|0;
   $29 = ($26|0)>($28|0);
   if ($29) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $30 = HEAP8[$19>>0]|0;
    $31 = $30&255;
    $32 = $31 << 8;
    $33 = ((($19)) + 1|0);
    $34 = HEAP8[$33>>0]|0;
    $35 = $34&255;
    $36 = $32 | $35;
    $37 = $36 << $23;
    $38 = $37 | $20;
    HEAP32[$12>>2] = $38;
    $39 = (($22) + -8)|0;
    HEAP32[$21>>2] = $39;
    $40 = ((($19)) + 2|0);
    HEAP32[$18>>2] = $40;
    $43 = $38;$46 = $39;$48 = $40;
    break;
   }
  } else {
   $43 = $20;$46 = $23;$48 = $19;
  }
 } while(0);
 HEAP32[$8>>2] = $14;
 $41 = $14&255;
 $42 = $43 >>> 31;
 $44 = $43 << 1;
 HEAP32[$12>>2] = $44;
 $45 = (($46) + 1)|0;
 HEAP32[$21>>2] = $45;
 $47 = ($46|0)>(-1);
 do {
  if ($47) {
   $49 = $48;
   $50 = (($49) - ($17))|0;
   $51 = (($16) + 1)|0;
   $52 = (($51) - ($17))|0;
   $53 = ($50|0)>($52|0);
   if ($53) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $54 = HEAP8[$48>>0]|0;
    $55 = $54&255;
    $56 = $55 << 8;
    $57 = ((($48)) + 1|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = $56 | $59;
    $61 = $60 << $45;
    $62 = $61 | $44;
    HEAP32[$12>>2] = $62;
    $63 = (($46) + -15)|0;
    HEAP32[$21>>2] = $63;
    $64 = ((($48)) + 2|0);
    HEAP32[$18>>2] = $64;
    $66 = $62;$69 = $63;$71 = $64;
    break;
   }
  } else {
   $66 = $44;$69 = $45;$71 = $48;
  }
 } while(0);
 HEAP32[$8>>2] = $42;
 $65 = $66 >>> 31;
 $67 = $66 << 1;
 HEAP32[$12>>2] = $67;
 $68 = (($69) + 1)|0;
 HEAP32[$21>>2] = $68;
 $70 = ($69|0)>(-1);
 do {
  if ($70) {
   $72 = $71;
   $73 = (($72) - ($17))|0;
   $74 = (($16) + 1)|0;
   $75 = (($74) - ($17))|0;
   $76 = ($73|0)>($75|0);
   if ($76) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $77 = HEAP8[$71>>0]|0;
    $78 = $77&255;
    $79 = $78 << 8;
    $80 = ((($71)) + 1|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = $81&255;
    $83 = $79 | $82;
    $84 = $83 << $68;
    $85 = $84 | $67;
    HEAP32[$12>>2] = $85;
    $86 = (($69) + -15)|0;
    HEAP32[$21>>2] = $86;
    $87 = ((($71)) + 2|0);
    HEAP32[$18>>2] = $87;
    $89 = $85;$92 = $86;$94 = $87;
    break;
   }
  } else {
   $89 = $67;$92 = $68;$94 = $71;
  }
 } while(0);
 HEAP32[$8>>2] = $65;
 $88 = $89 >>> 31;
 $90 = $89 << 1;
 HEAP32[$12>>2] = $90;
 $91 = (($92) + 1)|0;
 HEAP32[$21>>2] = $91;
 $93 = ($92|0)>(-1);
 do {
  if ($93) {
   $95 = $94;
   $96 = (($95) - ($17))|0;
   $97 = (($16) + 1)|0;
   $98 = (($97) - ($17))|0;
   $99 = ($96|0)>($98|0);
   if ($99) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $100 = HEAP8[$94>>0]|0;
    $101 = $100&255;
    $102 = $101 << 8;
    $103 = ((($94)) + 1|0);
    $104 = HEAP8[$103>>0]|0;
    $105 = $104&255;
    $106 = $102 | $105;
    $107 = $106 << $91;
    $108 = $107 | $90;
    HEAP32[$12>>2] = $108;
    $109 = (($92) + -15)|0;
    HEAP32[$21>>2] = $109;
    $110 = ((($94)) + 2|0);
    HEAP32[$18>>2] = $110;
    $112 = $108;$115 = $109;$117 = $110;
    break;
   }
  } else {
   $112 = $90;$115 = $91;$117 = $94;
  }
 } while(0);
 HEAP32[$8>>2] = $88;
 $111 = $112 >>> 31;
 $113 = $112 << 1;
 HEAP32[$12>>2] = $113;
 $114 = (($115) + 1)|0;
 HEAP32[$21>>2] = $114;
 $116 = ($115|0)>(-1);
 do {
  if ($116) {
   $118 = $117;
   $119 = (($118) - ($17))|0;
   $120 = (($16) + 1)|0;
   $121 = (($120) - ($17))|0;
   $122 = ($119|0)>($121|0);
   if ($122) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $123 = HEAP8[$117>>0]|0;
    $124 = $123&255;
    $125 = $124 << 8;
    $126 = ((($117)) + 1|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = $127&255;
    $129 = $125 | $128;
    $130 = $129 << $114;
    $131 = $130 | $113;
    HEAP32[$12>>2] = $131;
    $132 = (($115) + -15)|0;
    HEAP32[$21>>2] = $132;
    $133 = ((($117)) + 2|0);
    HEAP32[$18>>2] = $133;
    $136 = $131;$139 = $132;$141 = $133;
    break;
   }
  } else {
   $136 = $113;$139 = $114;$141 = $117;
  }
 } while(0);
 HEAP32[$8>>2] = $111;
 $134 = ($111|0)!=(0);
 $135 = $136 >>> 31;
 $137 = $136 << 1;
 HEAP32[$12>>2] = $137;
 $138 = (($139) + 1)|0;
 HEAP32[$21>>2] = $138;
 $140 = ($139|0)>(-1);
 do {
  if ($140) {
   $142 = $141;
   $143 = (($142) - ($17))|0;
   $144 = (($16) + 1)|0;
   $145 = (($144) - ($17))|0;
   $146 = ($143|0)>($145|0);
   if ($146) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $147 = HEAP8[$141>>0]|0;
    $148 = $147&255;
    $149 = $148 << 8;
    $150 = ((($141)) + 1|0);
    $151 = HEAP8[$150>>0]|0;
    $152 = $151&255;
    $153 = $149 | $152;
    $154 = $153 << $138;
    $155 = $154 | $137;
    HEAP32[$12>>2] = $155;
    $156 = (($139) + -15)|0;
    HEAP32[$21>>2] = $156;
    $157 = ((($141)) + 2|0);
    HEAP32[$18>>2] = $157;
    $159 = $155;$162 = $156;$164 = $157;
    break;
   }
  } else {
   $159 = $137;$162 = $138;$164 = $141;
  }
 } while(0);
 HEAP32[$8>>2] = $135;
 $158 = $159 >>> 31;
 $160 = $159 << 1;
 HEAP32[$12>>2] = $160;
 $161 = (($162) + 1)|0;
 HEAP32[$21>>2] = $161;
 $163 = ($162|0)>(-1);
 do {
  if ($163) {
   $165 = $164;
   $166 = (($165) - ($17))|0;
   $167 = (($16) + 1)|0;
   $168 = (($167) - ($17))|0;
   $169 = ($166|0)>($168|0);
   if ($169) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $170 = HEAP8[$164>>0]|0;
    $171 = $170&255;
    $172 = $171 << 8;
    $173 = ((($164)) + 1|0);
    $174 = HEAP8[$173>>0]|0;
    $175 = $174&255;
    $176 = $172 | $175;
    $177 = $176 << $161;
    $178 = $177 | $160;
    HEAP32[$12>>2] = $178;
    $179 = (($162) + -15)|0;
    HEAP32[$21>>2] = $179;
    $180 = ((($164)) + 2|0);
    HEAP32[$18>>2] = $180;
    $182 = $178;$185 = $179;$187 = $180;
    break;
   }
  } else {
   $182 = $160;$185 = $161;$187 = $164;
  }
 } while(0);
 HEAP32[$8>>2] = $158;
 $181 = $182 >>> 30;
 $183 = $182 << 2;
 HEAP32[$12>>2] = $183;
 $184 = (($185) + 2)|0;
 HEAP32[$21>>2] = $184;
 $186 = ($185|0)>(-2);
 do {
  if ($186) {
   $188 = $187;
   $189 = (($188) - ($17))|0;
   $190 = (($16) + 1)|0;
   $191 = (($190) - ($17))|0;
   $192 = ($189|0)>($191|0);
   if ($192) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $193 = HEAP8[$187>>0]|0;
    $194 = $193&255;
    $195 = $194 << 8;
    $196 = ((($187)) + 1|0);
    $197 = HEAP8[$196>>0]|0;
    $198 = $197&255;
    $199 = $195 | $198;
    $200 = $199 << $184;
    $201 = $200 | $183;
    HEAP32[$12>>2] = $201;
    $202 = (($185) + -14)|0;
    HEAP32[$21>>2] = $202;
    $203 = ((($187)) + 2|0);
    HEAP32[$18>>2] = $203;
    $205 = $201;$208 = $202;$210 = $203;
    break;
   }
  } else {
   $205 = $183;$208 = $184;$210 = $187;
  }
 } while(0);
 HEAP32[$8>>2] = $181;
 $204 = $205 >>> 24;
 $206 = $205 << 8;
 HEAP32[$12>>2] = $206;
 $207 = (($208) + 8)|0;
 HEAP32[$21>>2] = $207;
 $209 = ($208|0)>(-8);
 do {
  if ($209) {
   $211 = $210;
   $212 = (($211) - ($17))|0;
   $213 = (($16) + 1)|0;
   $214 = (($213) - ($17))|0;
   $215 = ($212|0)>($214|0);
   if ($215) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $216 = HEAP8[$210>>0]|0;
    $217 = $216&255;
    $218 = $217 << 8;
    $219 = ((($210)) + 1|0);
    $220 = HEAP8[$219>>0]|0;
    $221 = $220&255;
    $222 = $218 | $221;
    $223 = $222 << $207;
    $224 = $223 | $206;
    HEAP32[$12>>2] = $224;
    $225 = (($208) + -8)|0;
    HEAP32[$21>>2] = $225;
    $226 = ((($210)) + 2|0);
    HEAP32[$18>>2] = $226;
    break;
   }
  }
 } while(0);
 HEAP32[$8>>2] = $204;
 $227 = $204&255;
 $228 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
 $229 = ($228|0)==(0);
 if (!($229)) {
  $$47 = $228;
  STACKTOP = sp;return ($$47|0);
 }
 $230 = HEAP32[$8>>2]|0;
 $231 = ($230>>>0)>(31);
 if ($231) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27202,$vararg_buffer);
  $$47 = 263148;
  STACKTOP = sp;return ($$47|0);
 }
 _memset(($7|0),0,864)|0;
 do {
  switch ($227<<24>>24) {
  case 9:  {
   $$0$i888$ph = (7624);
   break;
  }
  case 10:  {
   $$0$i888$ph = 7592;
   break;
  }
  case 11:  {
   $$$i887 = $134 ? (7624) : (7656);
   $$0$i888$ph = $$$i887;
   break;
  }
  case 12:  {
   $$0$i888$ph = (7688);
   break;
  }
  case 13:  {
   $$0$i888$ph = (7720);
   break;
  }
  case 20:  {
   $$0$i888$ph = (7752);
   break;
  }
  case 21:  {
   $$0$i888$ph = (7784);
   break;
  }
  case 22:  {
   $$0$i888$ph = (7816);
   break;
  }
  case 30:  {
   $$0$i888$ph = (7848);
   break;
  }
  case 31:  {
   $$0$i888$ph = (7880);
   break;
  }
  case 32:  {
   $$0$i888$ph = (7912);
   break;
  }
  case 40:  {
   $$0$i888$ph = (7944);
   break;
  }
  case 41:  {
   $$0$i888$ph = (7976);
   break;
  }
  case 42:  {
   $$0$i888$ph = (8008);
   break;
  }
  case 50:  {
   $$0$i888$ph = (8040);
   break;
  }
  case 51:  {
   $$0$i888$ph = (8072);
   break;
  }
  case 52:  {
   $$0$i888$ph = (8104);
   break;
  }
  default: {
   HEAP32[$vararg_buffer1>>2] = $204;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,27229,$vararg_buffer1);
   $$47 = 263203;
   STACKTOP = sp;return ($$47|0);
  }
  }
 } while(0);
 $232 = ((($7)) + 828|0);
 HEAP32[$232>>2] = $$0$i888$ph;
 $233 = ((($7)) + 318|0);
 HEAP8[$233>>0] = 1;
 $234 = ((($7)) + 316|0);
 HEAP8[$234>>0] = $41;
 $235 = ((($7)) + 317|0);
 HEAP8[$235>>0] = $227;
 HEAP32[$7>>2] = $230;
 L82: do {
  switch ($41<<24>>24) {
  case 44: case 83: case 86: case 100: case 110: case 122: case -112: case -12:  {
   $236 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $237 = ($236|0)==(0);
   if (!($237)) {
    $$47 = $236;
    STACKTOP = sp;return ($$47|0);
   }
   $238 = HEAP32[$8>>2]|0;
   $239 = $238&255;
   HEAP8[$233>>0] = $239;
   $240 = $238 & 255;
   $241 = ($240>>>0)>(1);
   if ($241) {
    HEAP32[$vararg_buffer3>>2] = $240;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,27258,$vararg_buffer3);
    $$47 = 263203;
    STACKTOP = sp;return ($$47|0);
   }
   $242 = ((($7)) + 319|0);
   HEAP8[$242>>0] = $239;
   $243 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $244 = ($243|0)==(0);
   if (!($244)) {
    $$47 = $243;
    STACKTOP = sp;return ($$47|0);
   }
   $245 = HEAP32[$8>>2]|0;
   $246 = ($245|0)==(0);
   if (!($246)) {
    $247 = (($245) + 8)|0;
    HEAP32[$vararg_buffer6>>2] = $247;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,27308,$vararg_buffer6);
    $$47 = 263203;
    STACKTOP = sp;return ($$47|0);
   }
   $248 = ((($7)) + 320|0);
   HEAP8[$248>>0] = 8;
   $249 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $250 = ($249|0)==(0);
   if (!($250)) {
    $$47 = $249;
    STACKTOP = sp;return ($$47|0);
   }
   $251 = HEAP32[$8>>2]|0;
   $252 = ($251|0)==(0);
   if (!($252)) {
    $253 = (($251) + 8)|0;
    HEAP32[$vararg_buffer9>>2] = $253;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,27362,$vararg_buffer9);
    $$47 = 263203;
    STACKTOP = sp;return ($$47|0);
   }
   $254 = ((($7)) + 321|0);
   HEAP8[$254>>0] = 8;
   $255 = HEAP32[$12>>2]|0;
   $256 = $255 >>> 31;
   $257 = HEAP32[$15>>2]|0;
   $258 = HEAP32[$1>>2]|0;
   $259 = HEAP32[$18>>2]|0;
   $260 = $255 << 1;
   HEAP32[$12>>2] = $260;
   $261 = HEAP32[$21>>2]|0;
   $262 = (($261) + 1)|0;
   HEAP32[$21>>2] = $262;
   $263 = ($261|0)>(-1);
   do {
    if ($263) {
     $264 = $259;
     $265 = (($264) - ($258))|0;
     $266 = (($257) + 1)|0;
     $267 = (($266) - ($258))|0;
     $268 = ($265|0)>($267|0);
     if ($268) {
      $$47 = 11;
      STACKTOP = sp;return ($$47|0);
     } else {
      $269 = HEAP8[$259>>0]|0;
      $270 = $269&255;
      $271 = $270 << 8;
      $272 = ((($259)) + 1|0);
      $273 = HEAP8[$272>>0]|0;
      $274 = $273&255;
      $275 = $271 | $274;
      $276 = $275 << $262;
      $277 = $276 | $260;
      HEAP32[$12>>2] = $277;
      $278 = (($261) + -15)|0;
      HEAP32[$21>>2] = $278;
      $279 = ((($259)) + 2|0);
      HEAP32[$18>>2] = $279;
      $283 = $277;$286 = $278;$288 = $279;
      break;
     }
    } else {
     $283 = $260;$286 = $262;$288 = $259;
    }
   } while(0);
   HEAP32[$8>>2] = $256;
   $280 = ((($7)) + 334|0);
   $281 = $256&255;
   HEAP8[$280>>0] = $281;
   $282 = $283 >>> 31;
   $284 = $283 << 1;
   HEAP32[$12>>2] = $284;
   $285 = (($286) + 1)|0;
   HEAP32[$21>>2] = $285;
   $287 = ($286|0)>(-1);
   do {
    if ($287) {
     $289 = $288;
     $290 = (($289) - ($258))|0;
     $291 = (($257) + 1)|0;
     $292 = (($291) - ($258))|0;
     $293 = ($290|0)>($292|0);
     if ($293) {
      $$47 = 11;
      STACKTOP = sp;return ($$47|0);
     } else {
      $294 = HEAP8[$288>>0]|0;
      $295 = $294&255;
      $296 = $295 << 8;
      $297 = ((($288)) + 1|0);
      $298 = HEAP8[$297>>0]|0;
      $299 = $298&255;
      $300 = $296 | $299;
      $301 = $300 << $285;
      $302 = $301 | $284;
      HEAP32[$12>>2] = $302;
      $303 = (($286) + -15)|0;
      HEAP32[$21>>2] = $303;
      $304 = ((($288)) + 2|0);
      HEAP32[$18>>2] = $304;
      break;
     }
    }
   } while(0);
   HEAP32[$8>>2] = $282;
   $305 = ($282|0)==(0);
   $306 = ((($7)) + 335|0);
   $307 = $282&255;
   HEAP8[$306>>0] = $307;
   if ($305) {
    break L82;
   }
   $308 = ((($7)) + 336|0);
   $309 = ((($7)) + 348|0);
   $310 = ((($7)) + 444|0);
   $311 = (__ZN7WelsDec16ParseScalingListEPNS_6TagSpsEPN10WelsCommon15TagBitStringAuxEbPbPA16_hPA64_h($7,$1,0,$308,$309,$310)|0);
   $312 = ($311|0)==(0);
   if ($312) {
    break L82;
   } else {
    $$47 = $311;
   }
   STACKTOP = sp;return ($$47|0);
   break;
  }
  default: {
  }
  }
 } while(0);
 $313 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
 $314 = ($313|0)==(0);
 if (!($314)) {
  $$47 = $313;
  STACKTOP = sp;return ($$47|0);
 }
 $315 = HEAP32[$8>>2]|0;
 $316 = ($315>>>0)>(12);
 if ($316) {
  HEAP32[$vararg_buffer12>>2] = $315;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,27419,$vararg_buffer12);
  $$47 = 263175;
  STACKTOP = sp;return ($$47|0);
 }
 $317 = (($315) + 4)|0;
 $318 = ((($7)) + 16|0);
 HEAP32[$318>>2] = $317;
 $319 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
 $320 = ($319|0)==(0);
 if (!($320)) {
  $$47 = $319;
  STACKTOP = sp;return ($$47|0);
 }
 $321 = HEAP32[$8>>2]|0;
 $322 = ((($7)) + 20|0);
 HEAP32[$322>>2] = $321;
 L130: do {
  switch ($321|0) {
  case 0:  {
   $323 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $324 = ($323|0)==(0);
   if (!($324)) {
    $$47 = $323;
    STACKTOP = sp;return ($$47|0);
   }
   $325 = HEAP32[$8>>2]|0;
   $326 = ($325>>>0)>(12);
   if (!($326)) {
    $327 = (($325) + 4)|0;
    $328 = ((($7)) + 24|0);
    HEAP32[$328>>2] = $327;
    label = 91;
    break L130;
   }
   HEAP32[$vararg_buffer15>>2] = $325;
   __Z7WelsLogP13TagLogContextiPKcz($0,1,27463,$vararg_buffer15);
   $$47 = 263176;
   STACKTOP = sp;return ($$47|0);
   break;
  }
  case 1:  {
   $329 = HEAP32[$12>>2]|0;
   $330 = $329 >>> 31;
   $331 = HEAP32[$15>>2]|0;
   $332 = HEAP32[$1>>2]|0;
   $333 = HEAP32[$18>>2]|0;
   $334 = $329 << 1;
   HEAP32[$12>>2] = $334;
   $335 = HEAP32[$21>>2]|0;
   $336 = (($335) + 1)|0;
   HEAP32[$21>>2] = $336;
   $337 = ($335|0)>(-1);
   do {
    if ($337) {
     $338 = $333;
     $339 = (($338) - ($332))|0;
     $340 = (($331) + 1)|0;
     $341 = (($340) - ($332))|0;
     $342 = ($339|0)>($341|0);
     if ($342) {
      $$47 = 11;
      STACKTOP = sp;return ($$47|0);
     } else {
      $343 = HEAP8[$333>>0]|0;
      $344 = $343&255;
      $345 = $344 << 8;
      $346 = ((($333)) + 1|0);
      $347 = HEAP8[$346>>0]|0;
      $348 = $347&255;
      $349 = $345 | $348;
      $350 = $349 << $336;
      $351 = $350 | $334;
      HEAP32[$12>>2] = $351;
      $352 = (($335) + -15)|0;
      HEAP32[$21>>2] = $352;
      $353 = ((($333)) + 2|0);
      HEAP32[$18>>2] = $353;
      break;
     }
    }
   } while(0);
   HEAP32[$8>>2] = $330;
   $354 = ((($7)) + 322|0);
   $355 = $330&255;
   HEAP8[$354>>0] = $355;
   $356 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$6)|0);
   $357 = ($356|0)==(0);
   if (!($357)) {
    $$47 = $356;
    STACKTOP = sp;return ($$47|0);
   }
   $358 = HEAP32[$6>>2]|0;
   $359 = $358 & 1;
   $360 = ($359|0)==(0);
   $361 = $358 >>> 1;
   $362 = (0 - ($361))|0;
   $363 = (($358) + 1)|0;
   $364 = $363 >>> 1;
   $storemerge$i900 = $360 ? $362 : $364;
   $365 = ((($7)) + 28|0);
   HEAP32[$365>>2] = $storemerge$i900;
   $366 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$6)|0);
   $367 = ($366|0)==(0);
   if (!($367)) {
    $$47 = $366;
    STACKTOP = sp;return ($$47|0);
   }
   $368 = HEAP32[$6>>2]|0;
   $369 = $368 & 1;
   $370 = ($369|0)==(0);
   $371 = $368 >>> 1;
   $372 = (0 - ($371))|0;
   $373 = (($368) + 1)|0;
   $374 = $373 >>> 1;
   $storemerge$i895 = $370 ? $372 : $374;
   $375 = ((($7)) + 32|0);
   HEAP32[$375>>2] = $storemerge$i895;
   $376 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $377 = ($376|0)==(0);
   if (!($377)) {
    $$47 = $376;
    STACKTOP = sp;return ($$47|0);
   }
   $378 = HEAP32[$8>>2]|0;
   $379 = ($378>>>0)>(255);
   if ($379) {
    HEAP32[$vararg_buffer18>>2] = $378;
    __Z7WelsLogP13TagLogContextiPKcz($0,1,27515,$vararg_buffer18);
    $$47 = 263177;
    STACKTOP = sp;return ($$47|0);
   }
   $380 = ((($7)) + 36|0);
   HEAP32[$380>>2] = $378;
   $381 = ($378|0)==(0);
   if ($381) {
    label = 91;
    break L130;
   }
   $$06161870 = 0;
   while(1) {
    $382 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$6)|0);
    $383 = ($382|0)==(0);
    if (!($383)) {
     break;
    }
    $384 = HEAP32[$6>>2]|0;
    $385 = $384 & 1;
    $386 = ($385|0)==(0);
    $387 = $384 >>> 1;
    $388 = (0 - ($387))|0;
    $389 = (($384) + 1)|0;
    $390 = $389 >>> 1;
    $storemerge$i889 = $386 ? $388 : $390;
    $391 = $storemerge$i889&255;
    $392 = (((($7)) + 40|0) + ($$06161870)|0);
    HEAP8[$392>>0] = $391;
    $393 = (($$06161870) + 1)|0;
    $394 = HEAP32[$380>>2]|0;
    $395 = ($393|0)<($394|0);
    if ($395) {
     $$06161870 = $393;
    } else {
     label = 91;
     break L130;
    }
   }
   $$47 = $382;
   STACKTOP = sp;return ($$47|0);
   break;
  }
  default: {
   $396 = $321;
  }
  }
 } while(0);
 if ((label|0) == 91) {
  $$pr = HEAP32[$322>>2]|0;
  $396 = $$pr;
 }
 $397 = ($396>>>0)>(2);
 if ($397) {
  HEAP32[$vararg_buffer21>>2] = $396;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27571,$vararg_buffer21);
  $$47 = 263152;
  STACKTOP = sp;return ($$47|0);
 }
 $398 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
 $399 = ($398|0)==(0);
 if (!($399)) {
  $$47 = $398;
  STACKTOP = sp;return ($$47|0);
 }
 $400 = HEAP32[$8>>2]|0;
 $401 = ((($7)) + 296|0);
 HEAP32[$401>>2] = $400;
 $402 = HEAP32[$12>>2]|0;
 $403 = $402 >>> 31;
 $404 = HEAP32[$15>>2]|0;
 $405 = HEAP32[$1>>2]|0;
 $406 = HEAP32[$18>>2]|0;
 $407 = $402 << 1;
 HEAP32[$12>>2] = $407;
 $408 = HEAP32[$21>>2]|0;
 $409 = (($408) + 1)|0;
 HEAP32[$21>>2] = $409;
 $410 = ($408|0)>(-1);
 do {
  if ($410) {
   $411 = $406;
   $412 = (($411) - ($405))|0;
   $413 = (($404) + 1)|0;
   $414 = (($413) - ($405))|0;
   $415 = ($412|0)>($414|0);
   if ($415) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $416 = HEAP8[$406>>0]|0;
    $417 = $416&255;
    $418 = $417 << 8;
    $419 = ((($406)) + 1|0);
    $420 = HEAP8[$419>>0]|0;
    $421 = $420&255;
    $422 = $418 | $421;
    $423 = $422 << $409;
    $424 = $423 | $407;
    HEAP32[$12>>2] = $424;
    $425 = (($408) + -15)|0;
    HEAP32[$21>>2] = $425;
    $426 = ((($406)) + 2|0);
    HEAP32[$18>>2] = $426;
    break;
   }
  }
 } while(0);
 HEAP32[$8>>2] = $403;
 $427 = ((($7)) + 323|0);
 $428 = $403&255;
 HEAP8[$427>>0] = $428;
 $429 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
 $430 = ($429|0)==(0);
 if (!($430)) {
  $$47 = $429;
  STACKTOP = sp;return ($$47|0);
 }
 $431 = HEAP32[$8>>2]|0;
 $432 = (($431) + 1)|0;
 $433 = ((($7)) + 4|0);
 HEAP32[$433>>2] = $432;
 $434 = ($432>>>0)>(36864);
 if ($434) {
  HEAP32[$vararg_buffer24>>2] = $432;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,27606,$vararg_buffer24);
  $$47 = 263163;
  STACKTOP = sp;return ($$47|0);
 }
 $435 = (___muldi3(($432|0),0,($432|0),0)|0);
 $436 = tempRet0;
 $437 = ((($$0$i888$ph)) + 8|0);
 $438 = HEAP32[$437>>2]|0;
 $439 = $438 << 3;
 $440 = ($436>>>0)>(0);
 $441 = ($435>>>0)>($439>>>0);
 $442 = ($436|0)==(0);
 $443 = $442 & $441;
 $444 = $440 | $443;
 if ($444) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27656,$vararg_buffer27);
 }
 $445 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
 $446 = ($445|0)==(0);
 if (!($446)) {
  $$47 = $445;
  STACKTOP = sp;return ($$47|0);
 }
 $447 = HEAP32[$8>>2]|0;
 $448 = (($447) + 1)|0;
 $449 = ((($7)) + 8|0);
 HEAP32[$449>>2] = $448;
 $450 = ($448>>>0)>(36864);
 if ($450) {
  HEAP32[$vararg_buffer29>>2] = $448;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,27704,$vararg_buffer29);
  $$47 = 263163;
  STACKTOP = sp;return ($$47|0);
 }
 $451 = (___muldi3(($448|0),0,($448|0),0)|0);
 $452 = tempRet0;
 $453 = HEAP32[$437>>2]|0;
 $454 = $453 << 3;
 $455 = ($452>>>0)>(0);
 $456 = ($451>>>0)>($454>>>0);
 $457 = ($452|0)==(0);
 $458 = $457 & $456;
 $459 = $455 | $458;
 if ($459) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27755,$vararg_buffer32);
  $$pre = HEAP32[$449>>2]|0;
  $$pre1874 = HEAP32[$437>>2]|0;
  $462 = $$pre;$464 = $$pre1874;
 } else {
  $462 = $448;$464 = $453;
 }
 $460 = HEAP32[$433>>2]|0;
 $461 = Math_imul($462, $460)|0;
 $463 = ($461>>>0)>($464>>>0);
 if ($463) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27804,$vararg_buffer34);
 }
 $465 = ((($7)) + 12|0);
 HEAP32[$465>>2] = $461;
 $466 = HEAP32[$401>>2]|0;
 $467 = ($466|0)>(16);
 if ($467) {
  HEAP32[$vararg_buffer36>>2] = $466;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,27853,$vararg_buffer36);
  $$47 = 263162;
  STACKTOP = sp;return ($$47|0);
 }
 $468 = ((($$0$i888$ph)) + 12|0);
 $469 = HEAP32[$468>>2]|0;
 $470 = (($469>>>0) / ($461>>>0))&-1;
 $471 = ($470>>>0)<(16);
 $$ = $471 ? $470 : 16;
 $472 = ($466>>>0)>($$>>>0);
 if ($472) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27890,$vararg_buffer39);
 }
 $473 = HEAP32[$12>>2]|0;
 $474 = $473 >>> 31;
 $475 = HEAP32[$15>>2]|0;
 $476 = HEAP32[$1>>2]|0;
 $477 = HEAP32[$18>>2]|0;
 $478 = $473 << 1;
 HEAP32[$12>>2] = $478;
 $479 = HEAP32[$21>>2]|0;
 $480 = (($479) + 1)|0;
 HEAP32[$21>>2] = $480;
 $481 = ($479|0)>(-1);
 do {
  if ($481) {
   $482 = $477;
   $483 = (($482) - ($476))|0;
   $484 = (($475) + 1)|0;
   $485 = (($484) - ($476))|0;
   $486 = ($483|0)>($485|0);
   if ($486) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $487 = HEAP8[$477>>0]|0;
    $488 = $487&255;
    $489 = $488 << 8;
    $490 = ((($477)) + 1|0);
    $491 = HEAP8[$490>>0]|0;
    $492 = $491&255;
    $493 = $489 | $492;
    $494 = $493 << $480;
    $495 = $494 | $478;
    HEAP32[$12>>2] = $495;
    $496 = (($479) + -15)|0;
    HEAP32[$21>>2] = $496;
    $497 = ((($477)) + 2|0);
    HEAP32[$18>>2] = $497;
    $502 = $495;$505 = $496;$507 = $497;
    break;
   }
  } else {
   $502 = $478;$505 = $480;$507 = $477;
  }
 } while(0);
 HEAP32[$8>>2] = $474;
 $498 = ($474|0)==(0);
 $499 = ((($7)) + 324|0);
 $500 = $474&255;
 HEAP8[$499>>0] = $500;
 if ($498) {
  HEAP32[$vararg_buffer41>>2] = 0;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,27932,$vararg_buffer41);
  $$47 = 263205;
  STACKTOP = sp;return ($$47|0);
 }
 $501 = $502 >>> 31;
 $503 = $502 << 1;
 HEAP32[$12>>2] = $503;
 $504 = (($505) + 1)|0;
 HEAP32[$21>>2] = $504;
 $506 = ($505|0)>(-1);
 do {
  if ($506) {
   $508 = $507;
   $509 = (($508) - ($476))|0;
   $510 = (($475) + 1)|0;
   $511 = (($510) - ($476))|0;
   $512 = ($509|0)>($511|0);
   if ($512) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $513 = HEAP8[$507>>0]|0;
    $514 = $513&255;
    $515 = $514 << 8;
    $516 = ((($507)) + 1|0);
    $517 = HEAP8[$516>>0]|0;
    $518 = $517&255;
    $519 = $515 | $518;
    $520 = $519 << $504;
    $521 = $520 | $503;
    HEAP32[$12>>2] = $521;
    $522 = (($505) + -15)|0;
    HEAP32[$21>>2] = $522;
    $523 = ((($507)) + 2|0);
    HEAP32[$18>>2] = $523;
    $527 = $521;$530 = $522;$532 = $523;
    break;
   }
  } else {
   $527 = $503;$530 = $504;$532 = $507;
  }
 } while(0);
 HEAP32[$8>>2] = $501;
 $524 = ((($7)) + 326|0);
 $525 = $501&255;
 HEAP8[$524>>0] = $525;
 $526 = $527 >>> 31;
 $528 = $527 << 1;
 HEAP32[$12>>2] = $528;
 $529 = (($530) + 1)|0;
 HEAP32[$21>>2] = $529;
 $531 = ($530|0)>(-1);
 do {
  if ($531) {
   $533 = $532;
   $534 = (($533) - ($476))|0;
   $535 = (($475) + 1)|0;
   $536 = (($535) - ($476))|0;
   $537 = ($534|0)>($536|0);
   if ($537) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $538 = HEAP8[$532>>0]|0;
    $539 = $538&255;
    $540 = $539 << 8;
    $541 = ((($532)) + 1|0);
    $542 = HEAP8[$541>>0]|0;
    $543 = $542&255;
    $544 = $540 | $543;
    $545 = $544 << $529;
    $546 = $545 | $528;
    HEAP32[$12>>2] = $546;
    $547 = (($530) + -15)|0;
    HEAP32[$21>>2] = $547;
    $548 = ((($532)) + 2|0);
    HEAP32[$18>>2] = $548;
    $2264 = $547;$2265 = $548;$2266 = $546;
    break;
   }
  } else {
   $2264 = $529;$2265 = $532;$2266 = $528;
  }
 } while(0);
 HEAP32[$8>>2] = $526;
 $549 = ($526|0)==(0);
 $550 = ((($7)) + 327|0);
 $551 = $526&255;
 HEAP8[$550>>0] = $551;
 do {
  if ($549) {
   $578 = ((($7)) + 300|0);
   ;HEAP32[$578>>2]=0|0;HEAP32[$578+4>>2]=0|0;HEAP32[$578+8>>2]=0|0;HEAP32[$578+12>>2]=0|0;
   $580 = $2266;$583 = $2264;$585 = $2265;$588 = $476;$590 = $475;
  } else {
   $552 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $553 = ($552|0)==(0);
   if (!($553)) {
    $$47 = $552;
    STACKTOP = sp;return ($$47|0);
   }
   $554 = HEAP32[$8>>2]|0;
   $555 = ((($7)) + 300|0);
   HEAP32[$555>>2] = $554;
   $556 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $557 = ($556|0)==(0);
   if (!($557)) {
    $$47 = $556;
    STACKTOP = sp;return ($$47|0);
   }
   $558 = HEAP32[$8>>2]|0;
   $559 = ((($7)) + 308|0);
   HEAP32[$559>>2] = $558;
   $560 = HEAP32[$555>>2]|0;
   $561 = (($560) + ($558))|0;
   $562 = HEAP32[$433>>2]|0;
   $563 = $562 << 3;
   $564 = ($561|0)>($563|0);
   if ($564) {
    __Z7WelsLogP13TagLogContextiPKcz($0,1,27984,$vararg_buffer44);
    $$47 = 263156;
    STACKTOP = sp;return ($$47|0);
   }
   $565 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $566 = ($565|0)==(0);
   if (!($566)) {
    $$47 = $565;
    STACKTOP = sp;return ($$47|0);
   }
   $567 = HEAP32[$8>>2]|0;
   $568 = ((($7)) + 304|0);
   HEAP32[$568>>2] = $567;
   $569 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$8)|0);
   $570 = ($569|0)==(0);
   if (!($570)) {
    $$47 = $569;
    STACKTOP = sp;return ($$47|0);
   }
   $571 = HEAP32[$8>>2]|0;
   $572 = ((($7)) + 312|0);
   HEAP32[$572>>2] = $571;
   $573 = HEAP32[$568>>2]|0;
   $574 = (($573) + ($571))|0;
   $575 = HEAP32[$449>>2]|0;
   $576 = $575 << 3;
   $577 = ($574|0)>($576|0);
   if (!($577)) {
    $$pre1875 = HEAP32[$12>>2]|0;
    $$pre1876 = HEAP32[$15>>2]|0;
    $$pre1877 = HEAP32[$1>>2]|0;
    $$pre1878 = HEAP32[$18>>2]|0;
    $$pre1879 = HEAP32[$21>>2]|0;
    $580 = $$pre1875;$583 = $$pre1879;$585 = $$pre1878;$588 = $$pre1877;$590 = $$pre1876;
    break;
   }
   __Z7WelsLogP13TagLogContextiPKcz($0,1,28049,$vararg_buffer46);
   $$47 = 263156;
   STACKTOP = sp;return ($$47|0);
  }
 } while(0);
 $579 = $580 >>> 31;
 $581 = $580 << 1;
 HEAP32[$12>>2] = $581;
 $582 = (($583) + 1)|0;
 HEAP32[$21>>2] = $582;
 $584 = ($583|0)>(-1);
 do {
  if ($584) {
   $586 = $585;
   $587 = (($586) - ($588))|0;
   $589 = (($590) + 1)|0;
   $591 = (($589) - ($588))|0;
   $592 = ($587|0)>($591|0);
   if ($592) {
    $$47 = 11;
    STACKTOP = sp;return ($$47|0);
   } else {
    $593 = HEAP8[$585>>0]|0;
    $594 = $593&255;
    $595 = $594 << 8;
    $596 = ((($585)) + 1|0);
    $597 = HEAP8[$596>>0]|0;
    $598 = $597&255;
    $599 = $595 | $598;
    $600 = $599 << $582;
    $601 = $600 | $581;
    HEAP32[$12>>2] = $601;
    $602 = (($583) + -15)|0;
    HEAP32[$21>>2] = $602;
    $603 = ((($585)) + 2|0);
    HEAP32[$18>>2] = $603;
    break;
   }
  }
 } while(0);
 HEAP32[$8>>2] = $579;
 $604 = ((($7)) + 328|0);
 $605 = $579&255;
 HEAP8[$604>>0] = $605;
 $606 = ((($0)) + 242344|0);
 $607 = HEAP8[$606>>0]|0;
 $608 = ($607<<24>>24)==(0);
 do {
  if (!($608)) {
   $609 = ($5|0)>(123);
   if ($609) {
    $610 = ((($0)) + 116|0);
    $611 = HEAP32[$610>>2]|0;
    $612 = $611 | 16384;
    HEAP32[$610>>2] = $612;
    $$47 = 262145;
    STACKTOP = sp;return ($$47|0);
   }
   if (!($11)) {
    $613 = (((((($0)) + 242864|0) + (($230*136)|0)|0)) + 128|0);
    HEAP32[$613>>2] = $230;
    $$0576 = 0;
    while(1) {
     $614 = (($5) - ($$0576))|0;
     $615 = (($614) + -1)|0;
     $616 = (($4) + ($615)|0);
     $617 = HEAP8[$616>>0]|0;
     $618 = ($617<<24>>24)==(0);
     $619 = (($$0576) + 1)|0;
     if ($618) {
      $$0576 = $619;
     } else {
      break;
     }
    }
    $620 = $614&65535;
    $621 = (((((($0)) + 242864|0) + (($230*136)|0)|0)) + 132|0);
    HEAP16[$621>>1] = $620;
    $622 = HEAP8[$4>>0]|0;
    $623 = ($622<<24>>24)==(0);
    do {
     if ($623) {
      $624 = ((($4)) + 1|0);
      $625 = HEAP8[$624>>0]|0;
      $626 = ($625<<24>>24)==(0);
      if (!($626)) {
       $$0575 = 0;
       break;
      }
      $627 = ((($4)) + 2|0);
      $628 = HEAP8[$627>>0]|0;
      $629 = ($628<<24>>24)==(1);
      if (!($629)) {
       $$0575 = 0;
       break;
      }
      $630 = (((($0)) + 242864|0) + (($230*136)|0)|0);
      HEAP8[$630>>0] = 0;
      $631 = (($620) + 1)<<16>>16;
      HEAP16[$621>>1] = $631;
      $$0575 = 1;
     } else {
      $$0575 = 0;
     }
    } while(0);
    $632 = ((((($0)) + 242864|0) + (($230*136)|0)|0) + ($$0575)|0);
    _memcpy(($632|0),($4|0),($614|0))|0;
    break;
   }
   $633 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 128|0);
   HEAP32[$633>>2] = $230;
   $634 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 2|0);
   HEAP8[$634>>0] = 0;
   $635 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 1|0);
   HEAP8[$635>>0] = 0;
   $636 = (((($0)) + 247216|0) + (($230*136)|0)|0);
   HEAP8[$636>>0] = 0;
   $637 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 3|0);
   HEAP8[$637>>0] = 1;
   $638 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 4|0);
   HEAP8[$638>>0] = 103;
   $639 = ((($0)) + 562528|0);
   $640 = HEAP32[$639>>2]|0;
   $641 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($640,132,28113)|0);
   $642 = ($641|0)==(0|0);
   if ($642) {
    $2168 = ((($0)) + 116|0);
    $2169 = HEAP32[$2168>>2]|0;
    $2170 = $2169 | 16384;
    HEAP32[$2168>>2] = $2170;
    $$47 = $2170;
    STACKTOP = sp;return ($$47|0);
   }
   $643 = $641;
   HEAP32[$6>>2] = $643;
   $644 = ((($7)) + 330|0);
   $645 = HEAP8[$644>>0]|0;
   $646 = $645&255;
   $647 = ((($7)) + 329|0);
   $648 = HEAP8[$647>>0]|0;
   $649 = $648 | -102;
   $650 = $649&255;
   $651 = $650 << 1;
   $652 = $651 | $646;
   $653 = ((($7)) + 331|0);
   $654 = HEAP8[$653>>0]|0;
   $655 = $654&255;
   $656 = $652 << 1;
   $657 = $656 | $655;
   $658 = ((($7)) + 332|0);
   $659 = HEAP8[$658>>0]|0;
   $660 = $659&255;
   $661 = $657 << 1;
   $662 = $661 | $660;
   $663 = $662 << 12;
   $664 = HEAP8[$235>>0]|0;
   $665 = $664&255;
   $666 = $663 | $665;
   $667 = HEAP32[$7>>2]|0;
   $668 = (($667) + 1)|0;
   $669 = ($667>>>0)<(256);
   do {
    if ($669) {
     $670 = (8136 + ($667<<2)|0);
     $671 = HEAP32[$670>>2]|0;
     $672 = ($671|0)<(8);
     if ($672) {
      $673 = $666 << $671;
      $674 = $673 | $668;
      $675 = (8 - ($671))|0;
      $$sroa$336$9 = $674;$$sroa$6907$0$$sroa$6907$16$$pre$i17102365 = $641;$$sroa$719$0 = $675;
      break;
     } else {
      $676 = (($671) + -8)|0;
      $677 = $666 << 8;
      $678 = $668 >>> $676;
      $679 = $678 | $677;
      $680 = $679 >>> 24;
      $681 = $680&255;
      HEAP8[$641>>0] = $681;
      $682 = $679 >>> 16;
      $683 = $682&255;
      $$sroa$6907$0$$sroa$6907$16$9851842 = HEAP32[$6>>2]|0;
      $684 = ((($$sroa$6907$0$$sroa$6907$16$9851842)) + 1|0);
      HEAP8[$684>>0] = $683;
      $685 = $679 >>> 8;
      $686 = $685&255;
      $$sroa$6907$0$$sroa$6907$16$9841843 = HEAP32[$6>>2]|0;
      $687 = ((($$sroa$6907$0$$sroa$6907$16$9841843)) + 2|0);
      HEAP8[$687>>0] = $686;
      $688 = $678&255;
      $$sroa$6907$0$$sroa$6907$16$9811844 = HEAP32[$6>>2]|0;
      $689 = ((($$sroa$6907$0$$sroa$6907$16$9811844)) + 3|0);
      HEAP8[$689>>0] = $688;
      $$sroa$6907$0$$sroa$6907$16$9801845 = HEAP32[$6>>2]|0;
      $690 = ((($$sroa$6907$0$$sroa$6907$16$9801845)) + 4|0);
      $691 = $690;
      HEAP32[$6>>2] = $691;
      $692 = 1 << $676;
      $693 = (($692) + -1)|0;
      $694 = $693 & $668;
      $695 = (40 - ($671))|0;
      $$sroa$336$9 = $694;$$sroa$6907$0$$sroa$6907$16$$pre$i17102365 = $690;$$sroa$719$0 = $695;
      break;
     }
    } else {
     $696 = ($668>>>0)>(65535);
     $697 = $668 >>> 16;
     $$$i840 = $696 ? $697 : $668;
     $$2$i841 = $696 ? 16 : 0;
     $698 = $$$i840 & 65280;
     $699 = ($698|0)==(0);
     $700 = $$$i840 >>> 8;
     $701 = $$2$i841 | 8;
     $$119$i842 = $699 ? $$$i840 : $700;
     $$1$i843 = $699 ? $$2$i841 : $701;
     $702 = (($$119$i842) + -1)|0;
     $703 = (8136 + ($702<<2)|0);
     $704 = HEAP32[$703>>2]|0;
     $705 = $$1$i843 << 1;
     $706 = (($704) + ($705))|0;
     $707 = $706 | 1;
     $708 = ($707|0)<(8);
     if ($708) {
      $709 = $666 << $707;
      $710 = $709 | $668;
      $711 = (8 - ($707))|0;
      $$sroa$336$9 = $710;$$sroa$6907$0$$sroa$6907$16$$pre$i17102365 = $641;$$sroa$719$0 = $711;
      break;
     } else {
      $712 = (($707) + -8)|0;
      $713 = $666 << 8;
      $714 = $668 >>> $712;
      $715 = $714 | $713;
      $716 = $715 >>> 24;
      $717 = $716&255;
      HEAP8[$641>>0] = $717;
      $718 = $715 >>> 16;
      $719 = $718&255;
      $$sroa$6907$0$$sroa$6907$16$10291611 = HEAP32[$6>>2]|0;
      $720 = ((($$sroa$6907$0$$sroa$6907$16$10291611)) + 1|0);
      HEAP8[$720>>0] = $719;
      $721 = $715 >>> 8;
      $722 = $721&255;
      $$sroa$6907$0$$sroa$6907$16$9951612 = HEAP32[$6>>2]|0;
      $723 = ((($$sroa$6907$0$$sroa$6907$16$9951612)) + 2|0);
      HEAP8[$723>>0] = $722;
      $724 = $714&255;
      $$sroa$6907$0$$sroa$6907$16$10001613 = HEAP32[$6>>2]|0;
      $725 = ((($$sroa$6907$0$$sroa$6907$16$10001613)) + 3|0);
      HEAP8[$725>>0] = $724;
      $$sroa$6907$0$$sroa$6907$16$9961614 = HEAP32[$6>>2]|0;
      $726 = ((($$sroa$6907$0$$sroa$6907$16$9961614)) + 4|0);
      $727 = $726;
      HEAP32[$6>>2] = $727;
      $728 = 1 << $712;
      $729 = (($728) + -1)|0;
      $730 = $729 & $668;
      $731 = (40 - ($707))|0;
      $$sroa$336$9 = $730;$$sroa$6907$0$$sroa$6907$16$$pre$i17102365 = $726;$$sroa$719$0 = $731;
      break;
     }
    }
   } while(0);
   $732 = HEAP32[$318>>2]|0;
   $733 = (($732) + -4)|0;
   $734 = (($732) + -3)|0;
   $735 = ($733>>>0)<(256);
   do {
    if ($735) {
     $736 = (8136 + ($733<<2)|0);
     $737 = HEAP32[$736>>2]|0;
     $738 = ($$sroa$719$0|0)>($737|0);
     if ($738) {
      $739 = $$sroa$336$9 << $737;
      $740 = $739 | $734;
      $741 = (($$sroa$719$0) - ($737))|0;
      $$sroa$336$12 = $740;$$sroa$6907$0$$sroa$6907$16$$pre$i17102364 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102365;$$sroa$719$1 = $741;
      break;
     } else {
      $742 = (($737) - ($$sroa$719$0))|0;
      $743 = $$sroa$336$9 << $$sroa$719$0;
      $744 = $734 >>> $742;
      $745 = $744 | $743;
      $746 = $745 >>> 24;
      $747 = $746&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102365>>0] = $747;
      $748 = $745 >>> 16;
      $749 = $748&255;
      $$sroa$6907$0$$sroa$6907$16$10481837 = HEAP32[$6>>2]|0;
      $750 = ((($$sroa$6907$0$$sroa$6907$16$10481837)) + 1|0);
      HEAP8[$750>>0] = $749;
      $751 = $745 >>> 8;
      $752 = $751&255;
      $$sroa$6907$0$$sroa$6907$16$10471838 = HEAP32[$6>>2]|0;
      $753 = ((($$sroa$6907$0$$sroa$6907$16$10471838)) + 2|0);
      HEAP8[$753>>0] = $752;
      $754 = $745&255;
      $$sroa$6907$0$$sroa$6907$16$10461839 = HEAP32[$6>>2]|0;
      $755 = ((($$sroa$6907$0$$sroa$6907$16$10461839)) + 3|0);
      HEAP8[$755>>0] = $754;
      $$sroa$6907$0$$sroa$6907$16$10451840 = HEAP32[$6>>2]|0;
      $756 = ((($$sroa$6907$0$$sroa$6907$16$10451840)) + 4|0);
      $757 = $756;
      HEAP32[$6>>2] = $757;
      $758 = 1 << $742;
      $759 = (($758) + -1)|0;
      $760 = $759 & $734;
      $761 = (32 - ($742))|0;
      $$sroa$336$12 = $760;$$sroa$6907$0$$sroa$6907$16$$pre$i17102364 = $756;$$sroa$719$1 = $761;
      break;
     }
    } else {
     $762 = ($734>>>0)>(65535);
     $763 = $734 >>> 16;
     $$$i831 = $762 ? $763 : $734;
     $$2$i832 = $762 ? 16 : 0;
     $764 = $$$i831 & 65280;
     $765 = ($764|0)==(0);
     $766 = $$$i831 >>> 8;
     $767 = $$2$i832 | 8;
     $$119$i833 = $765 ? $$$i831 : $766;
     $$1$i834 = $765 ? $$2$i832 : $767;
     $768 = (($$119$i833) + -1)|0;
     $769 = (8136 + ($768<<2)|0);
     $770 = HEAP32[$769>>2]|0;
     $771 = $$1$i834 << 1;
     $772 = (($770) + ($771))|0;
     $773 = $772 | 1;
     $774 = ($$sroa$719$0|0)>($773|0);
     if ($774) {
      $775 = $$sroa$336$9 << $773;
      $776 = $775 | $734;
      $777 = (($$sroa$719$0) - ($773))|0;
      $$sroa$336$12 = $776;$$sroa$6907$0$$sroa$6907$16$$pre$i17102364 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102365;$$sroa$719$1 = $777;
      break;
     } else {
      $778 = (($773) - ($$sroa$719$0))|0;
      $779 = $$sroa$336$9 << $$sroa$719$0;
      $780 = $734 >>> $778;
      $781 = $780 | $779;
      $782 = $781 >>> 24;
      $783 = $782&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102365>>0] = $783;
      $784 = $781 >>> 16;
      $785 = $784&255;
      $$sroa$6907$0$$sroa$6907$16$10601616 = HEAP32[$6>>2]|0;
      $786 = ((($$sroa$6907$0$$sroa$6907$16$10601616)) + 1|0);
      HEAP8[$786>>0] = $785;
      $787 = $781 >>> 8;
      $788 = $787&255;
      $$sroa$6907$0$$sroa$6907$16$10691617 = HEAP32[$6>>2]|0;
      $789 = ((($$sroa$6907$0$$sroa$6907$16$10691617)) + 2|0);
      HEAP8[$789>>0] = $788;
      $790 = $781&255;
      $$sroa$6907$0$$sroa$6907$16$10681618 = HEAP32[$6>>2]|0;
      $791 = ((($$sroa$6907$0$$sroa$6907$16$10681618)) + 3|0);
      HEAP8[$791>>0] = $790;
      $$sroa$6907$0$$sroa$6907$16$11091619 = HEAP32[$6>>2]|0;
      $792 = ((($$sroa$6907$0$$sroa$6907$16$11091619)) + 4|0);
      $793 = $792;
      HEAP32[$6>>2] = $793;
      $794 = 1 << $778;
      $795 = (($794) + -1)|0;
      $796 = $795 & $734;
      $797 = (32 - ($778))|0;
      $$sroa$336$12 = $796;$$sroa$6907$0$$sroa$6907$16$$pre$i17102364 = $792;$$sroa$719$1 = $797;
      break;
     }
    }
   } while(0);
   $798 = HEAP32[$322>>2]|0;
   $799 = (($798) + 1)|0;
   $800 = ($798>>>0)<(256);
   do {
    if ($800) {
     $801 = (8136 + ($798<<2)|0);
     $802 = HEAP32[$801>>2]|0;
     $803 = ($$sroa$719$1|0)>($802|0);
     if ($803) {
      $804 = $$sroa$336$12 << $802;
      $805 = $804 | $799;
      $806 = (($$sroa$719$1) - ($802))|0;
      $$sroa$336$15 = $805;$$sroa$6907$0$$sroa$6907$16$$pre$i17102363 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102364;$$sroa$719$2 = $806;
      break;
     } else {
      $807 = (($802) - ($$sroa$719$1))|0;
      $808 = $$sroa$336$12 << $$sroa$719$1;
      $809 = $799 >>> $807;
      $810 = $809 | $808;
      $811 = $810 >>> 24;
      $812 = $811&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102364>>0] = $812;
      $813 = $810 >>> 16;
      $814 = $813&255;
      $$sroa$6907$0$$sroa$6907$16$11131832 = HEAP32[$6>>2]|0;
      $815 = ((($$sroa$6907$0$$sroa$6907$16$11131832)) + 1|0);
      HEAP8[$815>>0] = $814;
      $816 = $810 >>> 8;
      $817 = $816&255;
      $$sroa$6907$0$$sroa$6907$16$11121833 = HEAP32[$6>>2]|0;
      $818 = ((($$sroa$6907$0$$sroa$6907$16$11121833)) + 2|0);
      HEAP8[$818>>0] = $817;
      $819 = $810&255;
      $$sroa$6907$0$$sroa$6907$16$10961834 = HEAP32[$6>>2]|0;
      $820 = ((($$sroa$6907$0$$sroa$6907$16$10961834)) + 3|0);
      HEAP8[$820>>0] = $819;
      $$sroa$6907$0$$sroa$6907$16$11331835 = HEAP32[$6>>2]|0;
      $821 = ((($$sroa$6907$0$$sroa$6907$16$11331835)) + 4|0);
      $822 = $821;
      HEAP32[$6>>2] = $822;
      $823 = 1 << $807;
      $824 = (($823) + -1)|0;
      $825 = $824 & $799;
      $826 = (32 - ($807))|0;
      $$sroa$336$15 = $825;$$sroa$6907$0$$sroa$6907$16$$pre$i17102363 = $821;$$sroa$719$2 = $826;
      break;
     }
    } else {
     $827 = ($799>>>0)>(65535);
     $828 = $799 >>> 16;
     $$$i822 = $827 ? $828 : $799;
     $$2$i823 = $827 ? 16 : 0;
     $829 = $$$i822 & 65280;
     $830 = ($829|0)==(0);
     $831 = $$$i822 >>> 8;
     $832 = $$2$i823 | 8;
     $$119$i824 = $830 ? $$$i822 : $831;
     $$1$i825 = $830 ? $$2$i823 : $832;
     $833 = (($$119$i824) + -1)|0;
     $834 = (8136 + ($833<<2)|0);
     $835 = HEAP32[$834>>2]|0;
     $836 = $$1$i825 << 1;
     $837 = (($835) + ($836))|0;
     $838 = $837 | 1;
     $839 = ($$sroa$719$1|0)>($838|0);
     if ($839) {
      $840 = $$sroa$336$12 << $838;
      $841 = $840 | $799;
      $842 = (($$sroa$719$1) - ($838))|0;
      $$sroa$336$15 = $841;$$sroa$6907$0$$sroa$6907$16$$pre$i17102363 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102364;$$sroa$719$2 = $842;
      break;
     } else {
      $843 = (($838) - ($$sroa$719$1))|0;
      $844 = $$sroa$336$12 << $$sroa$719$1;
      $845 = $799 >>> $843;
      $846 = $845 | $844;
      $847 = $846 >>> 24;
      $848 = $847&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102364>>0] = $848;
      $849 = $846 >>> 16;
      $850 = $849&255;
      $$sroa$6907$0$$sroa$6907$16$11591621 = HEAP32[$6>>2]|0;
      $851 = ((($$sroa$6907$0$$sroa$6907$16$11591621)) + 1|0);
      HEAP8[$851>>0] = $850;
      $852 = $846 >>> 8;
      $853 = $852&255;
      $$sroa$6907$0$$sroa$6907$16$11491622 = HEAP32[$6>>2]|0;
      $854 = ((($$sroa$6907$0$$sroa$6907$16$11491622)) + 2|0);
      HEAP8[$854>>0] = $853;
      $855 = $846&255;
      $$sroa$6907$0$$sroa$6907$16$11571623 = HEAP32[$6>>2]|0;
      $856 = ((($$sroa$6907$0$$sroa$6907$16$11571623)) + 3|0);
      HEAP8[$856>>0] = $855;
      $$sroa$6907$0$$sroa$6907$16$11561624 = HEAP32[$6>>2]|0;
      $857 = ((($$sroa$6907$0$$sroa$6907$16$11561624)) + 4|0);
      $858 = $857;
      HEAP32[$6>>2] = $858;
      $859 = 1 << $843;
      $860 = (($859) + -1)|0;
      $861 = $860 & $799;
      $862 = (32 - ($843))|0;
      $$sroa$336$15 = $861;$$sroa$6907$0$$sroa$6907$16$$pre$i17102363 = $857;$$sroa$719$2 = $862;
      break;
     }
    }
   } while(0);
   $863 = HEAP32[$322>>2]|0;
   L316: do {
    switch ($863|0) {
    case 0:  {
     $864 = ((($7)) + 24|0);
     $865 = HEAP32[$864>>2]|0;
     $866 = (($865) + -4)|0;
     $867 = (($865) + -3)|0;
     $868 = ($866>>>0)<(256);
     if ($868) {
      $869 = (8136 + ($866<<2)|0);
      $870 = HEAP32[$869>>2]|0;
      $871 = ($$sroa$719$2|0)>($870|0);
      if ($871) {
       $872 = $$sroa$336$15 << $870;
       $873 = $872 | $867;
       $874 = (($$sroa$719$2) - ($870))|0;
       $$sroa$336$48 = $873;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$100816902226 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$101417112288 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$102116952267 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$102517052333 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$103416802150 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$105017362068 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$10521746 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$106117412042 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$10711645 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$107217312098 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$107916652082 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$108916552030 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$109016502018 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$116116602055 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$91317262168 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$92017212206 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$92917162246 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$93517002310 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$93616852187 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$99016752131 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$99816702114 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$719$15 = $874;
       break L316;
      } else {
       $875 = (($870) - ($$sroa$719$2))|0;
       $876 = $$sroa$336$15 << $$sroa$719$2;
       $877 = $867 >>> $875;
       $878 = $877 | $876;
       $879 = $878 >>> 24;
       $880 = $879&255;
       HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102363>>0] = $880;
       $881 = $878 >>> 16;
       $882 = $881&255;
       $$sroa$6907$0$$sroa$6907$16$10581827 = HEAP32[$6>>2]|0;
       $883 = ((($$sroa$6907$0$$sroa$6907$16$10581827)) + 1|0);
       HEAP8[$883>>0] = $882;
       $884 = $878 >>> 8;
       $885 = $884&255;
       $$sroa$6907$0$$sroa$6907$16$10571828 = HEAP32[$6>>2]|0;
       $886 = ((($$sroa$6907$0$$sroa$6907$16$10571828)) + 2|0);
       HEAP8[$886>>0] = $885;
       $887 = $878&255;
       $$sroa$6907$0$$sroa$6907$16$10991829 = HEAP32[$6>>2]|0;
       $888 = ((($$sroa$6907$0$$sroa$6907$16$10991829)) + 3|0);
       HEAP8[$888>>0] = $887;
       $$sroa$6907$0$$sroa$6907$16$10951830 = HEAP32[$6>>2]|0;
       $889 = ((($$sroa$6907$0$$sroa$6907$16$10951830)) + 4|0);
       $890 = $889;
       HEAP32[$6>>2] = $890;
       $891 = 1 << $875;
       $892 = (($891) + -1)|0;
       $893 = $892 & $867;
       $894 = (32 - ($875))|0;
       $$sroa$336$48 = $893;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $889;$$sroa$6907$0$$sroa$6907$16$100816902226 = $889;$$sroa$6907$0$$sroa$6907$16$101417112288 = $889;$$sroa$6907$0$$sroa$6907$16$102116952267 = $889;$$sroa$6907$0$$sroa$6907$16$102517052333 = $889;$$sroa$6907$0$$sroa$6907$16$103416802150 = $889;$$sroa$6907$0$$sroa$6907$16$105017362068 = $889;$$sroa$6907$0$$sroa$6907$16$10521746 = $889;$$sroa$6907$0$$sroa$6907$16$106117412042 = $889;$$sroa$6907$0$$sroa$6907$16$10711645 = $889;$$sroa$6907$0$$sroa$6907$16$107217312098 = $889;$$sroa$6907$0$$sroa$6907$16$107916652082 = $889;$$sroa$6907$0$$sroa$6907$16$108916552030 = $889;$$sroa$6907$0$$sroa$6907$16$109016502018 = $889;$$sroa$6907$0$$sroa$6907$16$116116602055 = $889;$$sroa$6907$0$$sroa$6907$16$91317262168 = $889;$$sroa$6907$0$$sroa$6907$16$92017212206 = $889;$$sroa$6907$0$$sroa$6907$16$92917162246 = $889;$$sroa$6907$0$$sroa$6907$16$93517002310 = $889;$$sroa$6907$0$$sroa$6907$16$93616852187 = $889;$$sroa$6907$0$$sroa$6907$16$99016752131 = $889;$$sroa$6907$0$$sroa$6907$16$99816702114 = $889;$$sroa$719$15 = $894;
       break L316;
      }
     } else {
      $895 = ($867>>>0)>(65535);
      $896 = $867 >>> 16;
      $$$i813 = $895 ? $896 : $867;
      $$2$i814 = $895 ? 16 : 0;
      $897 = $$$i813 & 65280;
      $898 = ($897|0)==(0);
      $899 = $$$i813 >>> 8;
      $900 = $$2$i814 | 8;
      $$119$i815 = $898 ? $$$i813 : $899;
      $$1$i816 = $898 ? $$2$i814 : $900;
      $901 = (($$119$i815) + -1)|0;
      $902 = (8136 + ($901<<2)|0);
      $903 = HEAP32[$902>>2]|0;
      $904 = $$1$i816 << 1;
      $905 = (($903) + ($904))|0;
      $906 = $905 | 1;
      $907 = ($$sroa$719$2|0)>($906|0);
      if ($907) {
       $908 = $$sroa$336$15 << $906;
       $909 = $908 | $867;
       $910 = (($$sroa$719$2) - ($906))|0;
       $$sroa$336$48 = $909;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$100816902226 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$101417112288 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$102116952267 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$102517052333 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$103416802150 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$105017362068 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$10521746 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$106117412042 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$10711645 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$107217312098 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$107916652082 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$108916552030 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$109016502018 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$116116602055 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$91317262168 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$92017212206 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$92917162246 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$93517002310 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$93616852187 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$99016752131 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$99816702114 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$719$15 = $910;
       break L316;
      } else {
       $911 = (($906) - ($$sroa$719$2))|0;
       $912 = $$sroa$336$15 << $$sroa$719$2;
       $913 = $867 >>> $911;
       $914 = $913 | $912;
       $915 = $914 >>> 24;
       $916 = $915&255;
       HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102363>>0] = $916;
       $917 = $914 >>> 16;
       $918 = $917&255;
       $$sroa$6907$0$$sroa$6907$16$10881822 = HEAP32[$6>>2]|0;
       $919 = ((($$sroa$6907$0$$sroa$6907$16$10881822)) + 1|0);
       HEAP8[$919>>0] = $918;
       $920 = $914 >>> 8;
       $921 = $920&255;
       $$sroa$6907$0$$sroa$6907$16$10871823 = HEAP32[$6>>2]|0;
       $922 = ((($$sroa$6907$0$$sroa$6907$16$10871823)) + 2|0);
       HEAP8[$922>>0] = $921;
       $923 = $914&255;
       $$sroa$6907$0$$sroa$6907$16$10861824 = HEAP32[$6>>2]|0;
       $924 = ((($$sroa$6907$0$$sroa$6907$16$10861824)) + 3|0);
       HEAP8[$924>>0] = $923;
       $$sroa$6907$0$$sroa$6907$16$10851825 = HEAP32[$6>>2]|0;
       $925 = ((($$sroa$6907$0$$sroa$6907$16$10851825)) + 4|0);
       $926 = $925;
       HEAP32[$6>>2] = $926;
       $927 = 1 << $911;
       $928 = (($927) + -1)|0;
       $929 = $928 & $867;
       $930 = (32 - ($911))|0;
       $$sroa$336$48 = $929;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $925;$$sroa$6907$0$$sroa$6907$16$100816902226 = $925;$$sroa$6907$0$$sroa$6907$16$101417112288 = $925;$$sroa$6907$0$$sroa$6907$16$102116952267 = $925;$$sroa$6907$0$$sroa$6907$16$102517052333 = $925;$$sroa$6907$0$$sroa$6907$16$103416802150 = $925;$$sroa$6907$0$$sroa$6907$16$105017362068 = $925;$$sroa$6907$0$$sroa$6907$16$10521746 = $925;$$sroa$6907$0$$sroa$6907$16$106117412042 = $925;$$sroa$6907$0$$sroa$6907$16$10711645 = $925;$$sroa$6907$0$$sroa$6907$16$107217312098 = $925;$$sroa$6907$0$$sroa$6907$16$107916652082 = $925;$$sroa$6907$0$$sroa$6907$16$108916552030 = $925;$$sroa$6907$0$$sroa$6907$16$109016502018 = $925;$$sroa$6907$0$$sroa$6907$16$116116602055 = $925;$$sroa$6907$0$$sroa$6907$16$91317262168 = $925;$$sroa$6907$0$$sroa$6907$16$92017212206 = $925;$$sroa$6907$0$$sroa$6907$16$92917162246 = $925;$$sroa$6907$0$$sroa$6907$16$93517002310 = $925;$$sroa$6907$0$$sroa$6907$16$93616852187 = $925;$$sroa$6907$0$$sroa$6907$16$99016752131 = $925;$$sroa$6907$0$$sroa$6907$16$99816702114 = $925;$$sroa$719$15 = $930;
       break L316;
      }
     }
     break;
    }
    case 1:  {
     $931 = ((($7)) + 322|0);
     $932 = HEAP8[$931>>0]|0;
     $933 = $932&255;
     $934 = ($$sroa$719$2|0)>(1);
     if ($934) {
      $935 = $$sroa$336$15 << 1;
      $936 = $933 | $935;
      $937 = (($$sroa$719$2) + -1)|0;
      $$sroa$336$19 = $936;$$sroa$6907$0$$sroa$6907$16$$pre$i17102362 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$storemerge$i$i808 = $937;
     } else {
      $938 = (1 - ($$sroa$719$2))|0;
      $939 = $$sroa$336$15 << $$sroa$719$2;
      $940 = $933 >>> $938;
      $941 = $940 | $939;
      $942 = $941 >>> 24;
      $943 = $942&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102363>>0] = $943;
      $944 = $941 >>> 16;
      $945 = $944&255;
      $$sroa$6907$0$$sroa$6907$16$10971626 = HEAP32[$6>>2]|0;
      $946 = ((($$sroa$6907$0$$sroa$6907$16$10971626)) + 1|0);
      HEAP8[$946>>0] = $945;
      $947 = $941 >>> 8;
      $948 = $947&255;
      $$sroa$6907$0$$sroa$6907$16$11041627 = HEAP32[$6>>2]|0;
      $949 = ((($$sroa$6907$0$$sroa$6907$16$11041627)) + 2|0);
      HEAP8[$949>>0] = $948;
      $950 = $941&255;
      $$sroa$6907$0$$sroa$6907$16$11031628 = HEAP32[$6>>2]|0;
      $951 = ((($$sroa$6907$0$$sroa$6907$16$11031628)) + 3|0);
      HEAP8[$951>>0] = $950;
      $$sroa$6907$0$$sroa$6907$16$11021629 = HEAP32[$6>>2]|0;
      $952 = ((($$sroa$6907$0$$sroa$6907$16$11021629)) + 4|0);
      $953 = $952;
      HEAP32[$6>>2] = $953;
      $954 = 1 << $938;
      $955 = (($954) + 1)|0;
      $956 = $933 & $955;
      $957 = (32 - ($938))|0;
      $$sroa$336$19 = $956;$$sroa$6907$0$$sroa$6907$16$$pre$i17102362 = $952;$storemerge$i$i808 = $957;
     }
     $958 = ((($7)) + 28|0);
     $959 = HEAP32[$958>>2]|0;
     $960 = ($959|0)==(0);
     do {
      if ($960) {
       $961 = ($storemerge$i$i808|0)>(1);
       if ($961) {
        $962 = $$sroa$336$19 << 1;
        $963 = $962 | 1;
        $964 = (($storemerge$i$i808) + -1)|0;
        $$sroa$336$27 = $963;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102362;$$sroa$719$6 = $964;
        break;
       } else {
        $965 = (1 - ($storemerge$i$i808))|0;
        $966 = $$sroa$336$19 << $storemerge$i$i808;
        $967 = 1 >>> $965;
        $968 = $967 | $966;
        $969 = $968 >>> 24;
        $970 = $969&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102362>>0] = $970;
        $971 = $968 >>> 16;
        $972 = $971&255;
        $$sroa$6907$0$$sroa$6907$16$11781817 = HEAP32[$6>>2]|0;
        $973 = ((($$sroa$6907$0$$sroa$6907$16$11781817)) + 1|0);
        HEAP8[$973>>0] = $972;
        $974 = $968 >>> 8;
        $975 = $974&255;
        $$sroa$6907$0$$sroa$6907$16$11771818 = HEAP32[$6>>2]|0;
        $976 = ((($$sroa$6907$0$$sroa$6907$16$11771818)) + 2|0);
        HEAP8[$976>>0] = $975;
        $977 = $968&255;
        $$sroa$6907$0$$sroa$6907$16$11761819 = HEAP32[$6>>2]|0;
        $978 = ((($$sroa$6907$0$$sroa$6907$16$11761819)) + 3|0);
        HEAP8[$978>>0] = $977;
        $$sroa$6907$0$$sroa$6907$16$11751820 = HEAP32[$6>>2]|0;
        $979 = ((($$sroa$6907$0$$sroa$6907$16$11751820)) + 4|0);
        $980 = $979;
        HEAP32[$6>>2] = $980;
        $981 = ($965|0)!=(0);
        $982 = $981&1;
        $983 = (32 - ($965))|0;
        $$sroa$336$27 = $982;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $979;$$sroa$719$6 = $983;
        break;
       }
      } else {
       $984 = ($959|0)>(0);
       if ($984) {
        $985 = $959 << 1;
        $986 = (($985) + -1)|0;
        $987 = ($986>>>0)<(256);
        if ($987) {
         $988 = (8136 + ($986<<2)|0);
         $989 = HEAP32[$988>>2]|0;
         $990 = ($storemerge$i$i808|0)>($989|0);
         if ($990) {
          $991 = $$sroa$336$19 << $989;
          $992 = $991 | $985;
          $993 = (($storemerge$i$i808) - ($989))|0;
          $$sroa$336$27 = $992;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102362;$$sroa$719$6 = $993;
          break;
         } else {
          $994 = (($989) - ($storemerge$i$i808))|0;
          $995 = $$sroa$336$19 << $storemerge$i$i808;
          $996 = $985 >>> $994;
          $997 = $996 | $995;
          $998 = $997 >>> 24;
          $999 = $998&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102362>>0] = $999;
          $1000 = $997 >>> 16;
          $1001 = $1000&255;
          $$sroa$6907$0$$sroa$6907$16$11691812 = HEAP32[$6>>2]|0;
          $1002 = ((($$sroa$6907$0$$sroa$6907$16$11691812)) + 1|0);
          HEAP8[$1002>>0] = $1001;
          $1003 = $997 >>> 8;
          $1004 = $1003&255;
          $$sroa$6907$0$$sroa$6907$16$11681813 = HEAP32[$6>>2]|0;
          $1005 = ((($$sroa$6907$0$$sroa$6907$16$11681813)) + 2|0);
          HEAP8[$1005>>0] = $1004;
          $1006 = $997&255;
          $$sroa$6907$0$$sroa$6907$16$11671814 = HEAP32[$6>>2]|0;
          $1007 = ((($$sroa$6907$0$$sroa$6907$16$11671814)) + 3|0);
          HEAP8[$1007>>0] = $1006;
          $$sroa$6907$0$$sroa$6907$16$11581815 = HEAP32[$6>>2]|0;
          $1008 = ((($$sroa$6907$0$$sroa$6907$16$11581815)) + 4|0);
          $1009 = $1008;
          HEAP32[$6>>2] = $1009;
          $1010 = 1 << $994;
          $1011 = (($1010) + -1)|0;
          $1012 = $1011 & $985;
          $1013 = (32 - ($994))|0;
          $$sroa$336$27 = $1012;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $1008;$$sroa$719$6 = $1013;
          break;
         }
        } else {
         $1014 = ($985>>>0)>(65535);
         $1015 = $959 >>> 15;
         $1016 = $1015 & 65535;
         $$$i792 = $1014 ? $1016 : $985;
         $$2$i793 = $1014 ? 16 : 0;
         $1017 = $$$i792 & 65280;
         $1018 = ($1017|0)==(0);
         $1019 = $$$i792 >>> 8;
         $1020 = $$2$i793 | 8;
         $$119$i794 = $1018 ? $$$i792 : $1019;
         $$1$i795 = $1018 ? $$2$i793 : $1020;
         $1021 = (($$119$i794) + -1)|0;
         $1022 = (8136 + ($1021<<2)|0);
         $1023 = HEAP32[$1022>>2]|0;
         $1024 = $$1$i795 << 1;
         $1025 = (($1023) + ($1024))|0;
         $1026 = $1025 | 1;
         $1027 = ($storemerge$i$i808|0)>($1026|0);
         if ($1027) {
          $1028 = $$sroa$336$19 << $1026;
          $1029 = $1028 | $985;
          $1030 = (($storemerge$i$i808) - ($1026))|0;
          $$sroa$336$27 = $1029;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102362;$$sroa$719$6 = $1030;
          break;
         } else {
          $1031 = (($1026) - ($storemerge$i$i808))|0;
          $1032 = $$sroa$336$19 << $storemerge$i$i808;
          $1033 = $985 >>> $1031;
          $1034 = $1033 | $1032;
          $1035 = $1034 >>> 24;
          $1036 = $1035&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102362>>0] = $1036;
          $1037 = $1034 >>> 16;
          $1038 = $1037&255;
          $$sroa$6907$0$$sroa$6907$16$9521807 = HEAP32[$6>>2]|0;
          $1039 = ((($$sroa$6907$0$$sroa$6907$16$9521807)) + 1|0);
          HEAP8[$1039>>0] = $1038;
          $1040 = $1034 >>> 8;
          $1041 = $1040&255;
          $$sroa$6907$0$$sroa$6907$16$9741808 = HEAP32[$6>>2]|0;
          $1042 = ((($$sroa$6907$0$$sroa$6907$16$9741808)) + 2|0);
          HEAP8[$1042>>0] = $1041;
          $1043 = $1034&255;
          $$sroa$6907$0$$sroa$6907$16$9731809 = HEAP32[$6>>2]|0;
          $1044 = ((($$sroa$6907$0$$sroa$6907$16$9731809)) + 3|0);
          HEAP8[$1044>>0] = $1043;
          $$sroa$6907$0$$sroa$6907$16$9721810 = HEAP32[$6>>2]|0;
          $1045 = ((($$sroa$6907$0$$sroa$6907$16$9721810)) + 4|0);
          $1046 = $1045;
          HEAP32[$6>>2] = $1046;
          $1047 = 1 << $1031;
          $1048 = (($1047) + -1)|0;
          $1049 = $1048 & $985;
          $1050 = (32 - ($1031))|0;
          $$sroa$336$27 = $1049;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $1045;$$sroa$719$6 = $1050;
          break;
         }
        }
       } else {
        $1051 = (0 - ($959))|0;
        $1052 = $1051 << 1;
        $1053 = $1052 | 1;
        $1054 = ($1052>>>0)<(256);
        if ($1054) {
         $1055 = (8136 + ($1052<<2)|0);
         $1056 = HEAP32[$1055>>2]|0;
         $1057 = ($storemerge$i$i808|0)>($1056|0);
         if ($1057) {
          $1058 = $$sroa$336$19 << $1056;
          $1059 = $1058 | $1053;
          $1060 = (($storemerge$i$i808) - ($1056))|0;
          $$sroa$336$27 = $1059;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102362;$$sroa$719$6 = $1060;
          break;
         } else {
          $1061 = (($1056) - ($storemerge$i$i808))|0;
          $1062 = $$sroa$336$19 << $storemerge$i$i808;
          $1063 = $1053 >>> $1061;
          $1064 = $1063 | $1062;
          $1065 = $1064 >>> 24;
          $1066 = $1065&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102362>>0] = $1066;
          $1067 = $1064 >>> 16;
          $1068 = $1067&255;
          $$sroa$6907$0$$sroa$6907$16$11351802 = HEAP32[$6>>2]|0;
          $1069 = ((($$sroa$6907$0$$sroa$6907$16$11351802)) + 1|0);
          HEAP8[$1069>>0] = $1068;
          $1070 = $1064 >>> 8;
          $1071 = $1070&255;
          $$sroa$6907$0$$sroa$6907$16$11451803 = HEAP32[$6>>2]|0;
          $1072 = ((($$sroa$6907$0$$sroa$6907$16$11451803)) + 2|0);
          HEAP8[$1072>>0] = $1071;
          $1073 = $1064&255;
          $$sroa$6907$0$$sroa$6907$16$11441804 = HEAP32[$6>>2]|0;
          $1074 = ((($$sroa$6907$0$$sroa$6907$16$11441804)) + 3|0);
          HEAP8[$1074>>0] = $1073;
          $$sroa$6907$0$$sroa$6907$16$11431805 = HEAP32[$6>>2]|0;
          $1075 = ((($$sroa$6907$0$$sroa$6907$16$11431805)) + 4|0);
          $1076 = $1075;
          HEAP32[$6>>2] = $1076;
          $1077 = 1 << $1061;
          $1078 = (($1077) + -1)|0;
          $1079 = $1078 & $1053;
          $1080 = (32 - ($1061))|0;
          $$sroa$336$27 = $1079;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $1075;$$sroa$719$6 = $1080;
          break;
         }
        } else {
         $1081 = ($1053>>>0)>(65535);
         $1082 = $1051 >>> 15;
         $1083 = $1082 & 65535;
         $$$i801 = $1081 ? $1083 : $1053;
         $$2$i802 = $1081 ? 16 : 0;
         $1084 = $$$i801 & 65280;
         $1085 = ($1084|0)==(0);
         $1086 = $$$i801 >>> 8;
         $1087 = $$2$i802 | 8;
         $$119$i803 = $1085 ? $$$i801 : $1086;
         $$1$i804 = $1085 ? $$2$i802 : $1087;
         $1088 = (($$119$i803) + -1)|0;
         $1089 = (8136 + ($1088<<2)|0);
         $1090 = HEAP32[$1089>>2]|0;
         $1091 = $$1$i804 << 1;
         $1092 = (($1090) + ($1091))|0;
         $1093 = $1092 | 1;
         $1094 = ($storemerge$i$i808|0)>($1093|0);
         if ($1094) {
          $1095 = $$sroa$336$19 << $1093;
          $1096 = $1095 | $1053;
          $1097 = (($storemerge$i$i808) - ($1093))|0;
          $$sroa$336$27 = $1096;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102362;$$sroa$719$6 = $1097;
          break;
         } else {
          $1098 = (($1093) - ($storemerge$i$i808))|0;
          $1099 = $$sroa$336$19 << $storemerge$i$i808;
          $1100 = $1053 >>> $1098;
          $1101 = $1100 | $1099;
          $1102 = $1101 >>> 24;
          $1103 = $1102&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102362>>0] = $1103;
          $1104 = $1101 >>> 16;
          $1105 = $1104&255;
          $$sroa$6907$0$$sroa$6907$16$11361631 = HEAP32[$6>>2]|0;
          $1106 = ((($$sroa$6907$0$$sroa$6907$16$11361631)) + 1|0);
          HEAP8[$1106>>0] = $1105;
          $1107 = $1101 >>> 8;
          $1108 = $1107&255;
          $$sroa$6907$0$$sroa$6907$16$9561632 = HEAP32[$6>>2]|0;
          $1109 = ((($$sroa$6907$0$$sroa$6907$16$9561632)) + 2|0);
          HEAP8[$1109>>0] = $1108;
          $1110 = $1101&255;
          $$sroa$6907$0$$sroa$6907$16$9551633 = HEAP32[$6>>2]|0;
          $1111 = ((($$sroa$6907$0$$sroa$6907$16$9551633)) + 3|0);
          HEAP8[$1111>>0] = $1110;
          $$sroa$6907$0$$sroa$6907$16$9541634 = HEAP32[$6>>2]|0;
          $1112 = ((($$sroa$6907$0$$sroa$6907$16$9541634)) + 4|0);
          $1113 = $1112;
          HEAP32[$6>>2] = $1113;
          $1114 = 1 << $1098;
          $1115 = (($1114) + -1)|0;
          $1116 = $1115 & $1053;
          $1117 = (32 - ($1098))|0;
          $$sroa$336$27 = $1116;$$sroa$6907$0$$sroa$6907$16$$pre$i17102361 = $1112;$$sroa$719$6 = $1117;
          break;
         }
        }
       }
      }
     } while(0);
     $1118 = ((($7)) + 32|0);
     $1119 = HEAP32[$1118>>2]|0;
     $1120 = ($1119|0)==(0);
     do {
      if ($1120) {
       $1121 = ($$sroa$719$6|0)>(1);
       if ($1121) {
        $1122 = $$sroa$336$27 << 1;
        $1123 = $1122 | 1;
        $1124 = (($$sroa$719$6) + -1)|0;
        $$sroa$336$35 = $1123;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102361;$$sroa$719$9 = $1124;
        break;
       } else {
        $1125 = (1 - ($$sroa$719$6))|0;
        $1126 = $$sroa$336$27 << $$sroa$719$6;
        $1127 = 1 >>> $1125;
        $1128 = $1127 | $1126;
        $1129 = $1128 >>> 24;
        $1130 = $1129&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102361>>0] = $1130;
        $1131 = $1128 >>> 16;
        $1132 = $1131&255;
        $$sroa$6907$0$$sroa$6907$16$11651797 = HEAP32[$6>>2]|0;
        $1133 = ((($$sroa$6907$0$$sroa$6907$16$11651797)) + 1|0);
        HEAP8[$1133>>0] = $1132;
        $1134 = $1128 >>> 8;
        $1135 = $1134&255;
        $$sroa$6907$0$$sroa$6907$16$11661798 = HEAP32[$6>>2]|0;
        $1136 = ((($$sroa$6907$0$$sroa$6907$16$11661798)) + 2|0);
        HEAP8[$1136>>0] = $1135;
        $1137 = $1128&255;
        $$sroa$6907$0$$sroa$6907$16$11501799 = HEAP32[$6>>2]|0;
        $1138 = ((($$sroa$6907$0$$sroa$6907$16$11501799)) + 3|0);
        HEAP8[$1138>>0] = $1137;
        $$sroa$6907$0$$sroa$6907$16$11511800 = HEAP32[$6>>2]|0;
        $1139 = ((($$sroa$6907$0$$sroa$6907$16$11511800)) + 4|0);
        $1140 = $1139;
        HEAP32[$6>>2] = $1140;
        $1141 = ($1125|0)!=(0);
        $1142 = $1141&1;
        $1143 = (32 - ($1125))|0;
        $$sroa$336$35 = $1142;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $1139;$$sroa$719$9 = $1143;
        break;
       }
      } else {
       $1144 = ($1119|0)>(0);
       if ($1144) {
        $1145 = $1119 << 1;
        $1146 = (($1145) + -1)|0;
        $1147 = ($1146>>>0)<(256);
        if ($1147) {
         $1148 = (8136 + ($1146<<2)|0);
         $1149 = HEAP32[$1148>>2]|0;
         $1150 = ($$sroa$719$6|0)>($1149|0);
         if ($1150) {
          $1151 = $$sroa$336$27 << $1149;
          $1152 = $1151 | $1145;
          $1153 = (($$sroa$719$6) - ($1149))|0;
          $$sroa$336$35 = $1152;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102361;$$sroa$719$9 = $1153;
          break;
         } else {
          $1154 = (($1149) - ($$sroa$719$6))|0;
          $1155 = $$sroa$336$27 << $$sroa$719$6;
          $1156 = $1145 >>> $1154;
          $1157 = $1156 | $1155;
          $1158 = $1157 >>> 24;
          $1159 = $1158&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102361>>0] = $1159;
          $1160 = $1157 >>> 16;
          $1161 = $1160&255;
          $$sroa$6907$0$$sroa$6907$16$11481792 = HEAP32[$6>>2]|0;
          $1162 = ((($$sroa$6907$0$$sroa$6907$16$11481792)) + 1|0);
          HEAP8[$1162>>0] = $1161;
          $1163 = $1157 >>> 8;
          $1164 = $1163&255;
          $$sroa$6907$0$$sroa$6907$16$11251793 = HEAP32[$6>>2]|0;
          $1165 = ((($$sroa$6907$0$$sroa$6907$16$11251793)) + 2|0);
          HEAP8[$1165>>0] = $1164;
          $1166 = $1157&255;
          $$sroa$6907$0$$sroa$6907$16$11161794 = HEAP32[$6>>2]|0;
          $1167 = ((($$sroa$6907$0$$sroa$6907$16$11161794)) + 3|0);
          HEAP8[$1167>>0] = $1166;
          $$sroa$6907$0$$sroa$6907$16$11171795 = HEAP32[$6>>2]|0;
          $1168 = ((($$sroa$6907$0$$sroa$6907$16$11171795)) + 4|0);
          $1169 = $1168;
          HEAP32[$6>>2] = $1169;
          $1170 = 1 << $1154;
          $1171 = (($1170) + -1)|0;
          $1172 = $1171 & $1145;
          $1173 = (32 - ($1154))|0;
          $$sroa$336$35 = $1172;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $1168;$$sroa$719$9 = $1173;
          break;
         }
        } else {
         $1174 = ($1145>>>0)>(65535);
         $1175 = $1119 >>> 15;
         $1176 = $1175 & 65535;
         $$$i771 = $1174 ? $1176 : $1145;
         $$2$i772 = $1174 ? 16 : 0;
         $1177 = $$$i771 & 65280;
         $1178 = ($1177|0)==(0);
         $1179 = $$$i771 >>> 8;
         $1180 = $$2$i772 | 8;
         $$119$i773 = $1178 ? $$$i771 : $1179;
         $$1$i774 = $1178 ? $$2$i772 : $1180;
         $1181 = (($$119$i773) + -1)|0;
         $1182 = (8136 + ($1181<<2)|0);
         $1183 = HEAP32[$1182>>2]|0;
         $1184 = $$1$i774 << 1;
         $1185 = (($1183) + ($1184))|0;
         $1186 = $1185 | 1;
         $1187 = ($$sroa$719$6|0)>($1186|0);
         if ($1187) {
          $1188 = $$sroa$336$27 << $1186;
          $1189 = $1188 | $1145;
          $1190 = (($$sroa$719$6) - ($1186))|0;
          $$sroa$336$35 = $1189;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102361;$$sroa$719$9 = $1190;
          break;
         } else {
          $1191 = (($1186) - ($$sroa$719$6))|0;
          $1192 = $$sroa$336$27 << $$sroa$719$6;
          $1193 = $1145 >>> $1191;
          $1194 = $1193 | $1192;
          $1195 = $1194 >>> 24;
          $1196 = $1195&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102361>>0] = $1196;
          $1197 = $1194 >>> 16;
          $1198 = $1197&255;
          $$sroa$6907$0$$sroa$6907$16$11231787 = HEAP32[$6>>2]|0;
          $1199 = ((($$sroa$6907$0$$sroa$6907$16$11231787)) + 1|0);
          HEAP8[$1199>>0] = $1198;
          $1200 = $1194 >>> 8;
          $1201 = $1200&255;
          $$sroa$6907$0$$sroa$6907$16$11241788 = HEAP32[$6>>2]|0;
          $1202 = ((($$sroa$6907$0$$sroa$6907$16$11241788)) + 2|0);
          HEAP8[$1202>>0] = $1201;
          $1203 = $1194&255;
          $$sroa$6907$0$$sroa$6907$16$11151789 = HEAP32[$6>>2]|0;
          $1204 = ((($$sroa$6907$0$$sroa$6907$16$11151789)) + 3|0);
          HEAP8[$1204>>0] = $1203;
          $$sroa$6907$0$$sroa$6907$16$11261790 = HEAP32[$6>>2]|0;
          $1205 = ((($$sroa$6907$0$$sroa$6907$16$11261790)) + 4|0);
          $1206 = $1205;
          HEAP32[$6>>2] = $1206;
          $1207 = 1 << $1191;
          $1208 = (($1207) + -1)|0;
          $1209 = $1208 & $1145;
          $1210 = (32 - ($1191))|0;
          $$sroa$336$35 = $1209;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $1205;$$sroa$719$9 = $1210;
          break;
         }
        }
       } else {
        $1211 = (0 - ($1119))|0;
        $1212 = $1211 << 1;
        $1213 = $1212 | 1;
        $1214 = ($1212>>>0)<(256);
        if ($1214) {
         $1215 = (8136 + ($1212<<2)|0);
         $1216 = HEAP32[$1215>>2]|0;
         $1217 = ($$sroa$719$6|0)>($1216|0);
         if ($1217) {
          $1218 = $$sroa$336$27 << $1216;
          $1219 = $1218 | $1213;
          $1220 = (($$sroa$719$6) - ($1216))|0;
          $$sroa$336$35 = $1219;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102361;$$sroa$719$9 = $1220;
          break;
         } else {
          $1221 = (($1216) - ($$sroa$719$6))|0;
          $1222 = $$sroa$336$27 << $$sroa$719$6;
          $1223 = $1213 >>> $1221;
          $1224 = $1223 | $1222;
          $1225 = $1224 >>> 24;
          $1226 = $1225&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102361>>0] = $1226;
          $1227 = $1224 >>> 16;
          $1228 = $1227&255;
          $$sroa$6907$0$$sroa$6907$16$11301782 = HEAP32[$6>>2]|0;
          $1229 = ((($$sroa$6907$0$$sroa$6907$16$11301782)) + 1|0);
          HEAP8[$1229>>0] = $1228;
          $1230 = $1224 >>> 8;
          $1231 = $1230&255;
          $$sroa$6907$0$$sroa$6907$16$11291783 = HEAP32[$6>>2]|0;
          $1232 = ((($$sroa$6907$0$$sroa$6907$16$11291783)) + 2|0);
          HEAP8[$1232>>0] = $1231;
          $1233 = $1224&255;
          $$sroa$6907$0$$sroa$6907$16$11281784 = HEAP32[$6>>2]|0;
          $1234 = ((($$sroa$6907$0$$sroa$6907$16$11281784)) + 3|0);
          HEAP8[$1234>>0] = $1233;
          $$sroa$6907$0$$sroa$6907$16$11271785 = HEAP32[$6>>2]|0;
          $1235 = ((($$sroa$6907$0$$sroa$6907$16$11271785)) + 4|0);
          $1236 = $1235;
          HEAP32[$6>>2] = $1236;
          $1237 = 1 << $1221;
          $1238 = (($1237) + -1)|0;
          $1239 = $1238 & $1213;
          $1240 = (32 - ($1221))|0;
          $$sroa$336$35 = $1239;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $1235;$$sroa$719$9 = $1240;
          break;
         }
        } else {
         $1241 = ($1213>>>0)>(65535);
         $1242 = $1211 >>> 15;
         $1243 = $1242 & 65535;
         $$$i780 = $1241 ? $1243 : $1213;
         $$2$i781 = $1241 ? 16 : 0;
         $1244 = $$$i780 & 65280;
         $1245 = ($1244|0)==(0);
         $1246 = $$$i780 >>> 8;
         $1247 = $$2$i781 | 8;
         $$119$i782 = $1245 ? $$$i780 : $1246;
         $$1$i783 = $1245 ? $$2$i781 : $1247;
         $1248 = (($$119$i782) + -1)|0;
         $1249 = (8136 + ($1248<<2)|0);
         $1250 = HEAP32[$1249>>2]|0;
         $1251 = $$1$i783 << 1;
         $1252 = (($1250) + ($1251))|0;
         $1253 = $1252 | 1;
         $1254 = ($$sroa$719$6|0)>($1253|0);
         if ($1254) {
          $1255 = $$sroa$336$27 << $1253;
          $1256 = $1255 | $1213;
          $1257 = (($$sroa$719$6) - ($1253))|0;
          $$sroa$336$35 = $1256;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102361;$$sroa$719$9 = $1257;
          break;
         } else {
          $1258 = (($1253) - ($$sroa$719$6))|0;
          $1259 = $$sroa$336$27 << $$sroa$719$6;
          $1260 = $1213 >>> $1258;
          $1261 = $1260 | $1259;
          $1262 = $1261 >>> 24;
          $1263 = $1262&255;
          HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102361>>0] = $1263;
          $1264 = $1261 >>> 16;
          $1265 = $1264&255;
          $$sroa$6907$0$$sroa$6907$16$11201636 = HEAP32[$6>>2]|0;
          $1266 = ((($$sroa$6907$0$$sroa$6907$16$11201636)) + 1|0);
          HEAP8[$1266>>0] = $1265;
          $1267 = $1261 >>> 8;
          $1268 = $1267&255;
          $$sroa$6907$0$$sroa$6907$16$11191637 = HEAP32[$6>>2]|0;
          $1269 = ((($$sroa$6907$0$$sroa$6907$16$11191637)) + 2|0);
          HEAP8[$1269>>0] = $1268;
          $1270 = $1261&255;
          $$sroa$6907$0$$sroa$6907$16$11181638 = HEAP32[$6>>2]|0;
          $1271 = ((($$sroa$6907$0$$sroa$6907$16$11181638)) + 3|0);
          HEAP8[$1271>>0] = $1270;
          $$sroa$6907$0$$sroa$6907$16$11461639 = HEAP32[$6>>2]|0;
          $1272 = ((($$sroa$6907$0$$sroa$6907$16$11461639)) + 4|0);
          $1273 = $1272;
          HEAP32[$6>>2] = $1273;
          $1274 = 1 << $1258;
          $1275 = (($1274) + -1)|0;
          $1276 = $1275 & $1213;
          $1277 = (32 - ($1258))|0;
          $$sroa$336$35 = $1276;$$sroa$6907$0$$sroa$6907$16$$pre$i17102360 = $1272;$$sroa$719$9 = $1277;
          break;
         }
        }
       }
      }
     } while(0);
     $1278 = ((($7)) + 36|0);
     $1279 = HEAP32[$1278>>2]|0;
     $1280 = (($1279) + 1)|0;
     $1281 = ($1279>>>0)<(256);
     do {
      if ($1281) {
       $1282 = (8136 + ($1279<<2)|0);
       $1283 = HEAP32[$1282>>2]|0;
       $1284 = ($$sroa$719$9|0)>($1283|0);
       if ($1284) {
        $1285 = $$sroa$336$35 << $1283;
        $1286 = $1285 | $1280;
        $1287 = (($$sroa$719$9) - ($1283))|0;
        $$sroa$336$39$ph = $1286;$$sroa$6907$0$$sroa$6907$16$$pre$i17102359 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102360;$$sroa$719$11$ph = $1287;
        break;
       } else {
        $1288 = (($1283) - ($$sroa$719$9))|0;
        $1289 = $$sroa$336$35 << $$sroa$719$9;
        $1290 = $1280 >>> $1288;
        $1291 = $1290 | $1289;
        $1292 = $1291 >>> 24;
        $1293 = $1292&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102360>>0] = $1293;
        $1294 = $1291 >>> 16;
        $1295 = $1294&255;
        $$sroa$6907$0$$sroa$6907$16$9501777 = HEAP32[$6>>2]|0;
        $1296 = ((($$sroa$6907$0$$sroa$6907$16$9501777)) + 1|0);
        HEAP8[$1296>>0] = $1295;
        $1297 = $1291 >>> 8;
        $1298 = $1297&255;
        $$sroa$6907$0$$sroa$6907$16$9421778 = HEAP32[$6>>2]|0;
        $1299 = ((($$sroa$6907$0$$sroa$6907$16$9421778)) + 2|0);
        HEAP8[$1299>>0] = $1298;
        $1300 = $1291&255;
        $$sroa$6907$0$$sroa$6907$16$11211779 = HEAP32[$6>>2]|0;
        $1301 = ((($$sroa$6907$0$$sroa$6907$16$11211779)) + 3|0);
        HEAP8[$1301>>0] = $1300;
        $$sroa$6907$0$$sroa$6907$16$11321780 = HEAP32[$6>>2]|0;
        $1302 = ((($$sroa$6907$0$$sroa$6907$16$11321780)) + 4|0);
        $1303 = $1302;
        HEAP32[$6>>2] = $1303;
        $1304 = 1 << $1288;
        $1305 = (($1304) + -1)|0;
        $1306 = $1305 & $1280;
        $1307 = (32 - ($1288))|0;
        $$sroa$336$39$ph = $1306;$$sroa$6907$0$$sroa$6907$16$$pre$i17102359 = $1302;$$sroa$719$11$ph = $1307;
        break;
       }
      } else {
       $1308 = ($1280>>>0)>(65535);
       $1309 = $1280 >>> 16;
       $$$i759 = $1308 ? $1309 : $1280;
       $$2$i760 = $1308 ? 16 : 0;
       $1310 = $$$i759 & 65280;
       $1311 = ($1310|0)==(0);
       $1312 = $$$i759 >>> 8;
       $1313 = $$2$i760 | 8;
       $$119$i761 = $1311 ? $$$i759 : $1312;
       $$1$i762 = $1311 ? $$2$i760 : $1313;
       $1314 = (($$119$i761) + -1)|0;
       $1315 = (8136 + ($1314<<2)|0);
       $1316 = HEAP32[$1315>>2]|0;
       $1317 = $$1$i762 << 1;
       $1318 = (($1316) + ($1317))|0;
       $1319 = $1318 | 1;
       $1320 = ($$sroa$719$9|0)>($1319|0);
       if ($1320) {
        $1321 = $$sroa$336$35 << $1319;
        $1322 = $1321 | $1280;
        $1323 = (($$sroa$719$9) - ($1319))|0;
        $$sroa$336$39$ph = $1322;$$sroa$6907$0$$sroa$6907$16$$pre$i17102359 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102360;$$sroa$719$11$ph = $1323;
        break;
       } else {
        $1324 = (($1319) - ($$sroa$719$9))|0;
        $1325 = $$sroa$336$35 << $$sroa$719$9;
        $1326 = $1280 >>> $1324;
        $1327 = $1326 | $1325;
        $1328 = $1327 >>> 24;
        $1329 = $1328&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$$pre$i17102360>>0] = $1329;
        $1330 = $1327 >>> 16;
        $1331 = $1330&255;
        $$sroa$6907$0$$sroa$6907$16$11721641 = HEAP32[$6>>2]|0;
        $1332 = ((($$sroa$6907$0$$sroa$6907$16$11721641)) + 1|0);
        HEAP8[$1332>>0] = $1331;
        $1333 = $1327 >>> 8;
        $1334 = $1333&255;
        $$sroa$6907$0$$sroa$6907$16$11731642 = HEAP32[$6>>2]|0;
        $1335 = ((($$sroa$6907$0$$sroa$6907$16$11731642)) + 2|0);
        HEAP8[$1335>>0] = $1334;
        $1336 = $1327&255;
        $$sroa$6907$0$$sroa$6907$16$11741643 = HEAP32[$6>>2]|0;
        $1337 = ((($$sroa$6907$0$$sroa$6907$16$11741643)) + 3|0);
        HEAP8[$1337>>0] = $1336;
        $$sroa$6907$0$$sroa$6907$16$11521644 = HEAP32[$6>>2]|0;
        $1338 = ((($$sroa$6907$0$$sroa$6907$16$11521644)) + 4|0);
        $1339 = $1338;
        HEAP32[$6>>2] = $1339;
        $1340 = 1 << $1324;
        $1341 = (($1340) + -1)|0;
        $1342 = $1341 & $1280;
        $1343 = (32 - ($1324))|0;
        $$sroa$336$39$ph = $1342;$$sroa$6907$0$$sroa$6907$16$$pre$i17102359 = $1338;$$sroa$719$11$ph = $1343;
        break;
       }
      }
     } while(0);
     $1344 = HEAP32[$1278>>2]|0;
     $1345 = ($1344|0)>(0);
     if (!($1345)) {
      $$sroa$336$48 = $$sroa$336$39$ph;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$100816902226 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$101417112288 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$102116952267 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$102517052333 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$103416802150 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$105017362068 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$10521746 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$106117412042 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$10711645 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$107217312098 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$107916652082 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$108916552030 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$109016502018 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$116116602055 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$91317262168 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$92017212206 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$92917162246 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$93517002310 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$93616852187 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$99016752131 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$99816702114 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$719$15 = $$sroa$719$11$ph;
      break L316;
     }
     $$05741868 = 0;$$sroa$336$391866 = $$sroa$336$39$ph;$$sroa$6907$0$$sroa$6907$16$$pre$i17102357 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$100816902227 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$101417112289 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$102116952268 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$102517052334 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$103416802151 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$105017362069 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$105217462008 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$106117412043 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$107116451998 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$107217312099 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$107916652083 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$108916552031 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$109016502019 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$11071771 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$11381761 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$116116602056 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$91317262169 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$92017212207 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$92917162247 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$93517002311 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$93616852188 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$9431751 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$9571766 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$9591756 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$99016752132 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$6907$0$$sroa$6907$16$99816702115 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102359;$$sroa$719$111867 = $$sroa$719$11$ph;
     while(1) {
      $1346 = (((($7)) + 40|0) + ($$05741868)|0);
      $1347 = HEAP8[$1346>>0]|0;
      $1348 = $1347 << 24 >> 24;
      $1349 = ($1347<<24>>24)==(0);
      do {
       if ($1349) {
        $1350 = ($$sroa$719$111867|0)>(1);
        if ($1350) {
         $1351 = $$sroa$336$391866 << 1;
         $1352 = $1351 | 1;
         $1353 = (($$sroa$719$111867) + -1)|0;
         $$sroa$336$47 = $1352;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102357;$$sroa$6907$0$$sroa$6907$16$100816902228 = $$sroa$6907$0$$sroa$6907$16$100816902227;$$sroa$6907$0$$sroa$6907$16$101417112290 = $$sroa$6907$0$$sroa$6907$16$101417112289;$$sroa$6907$0$$sroa$6907$16$102116952269 = $$sroa$6907$0$$sroa$6907$16$102116952268;$$sroa$6907$0$$sroa$6907$16$102517052335 = $$sroa$6907$0$$sroa$6907$16$102517052334;$$sroa$6907$0$$sroa$6907$16$103416802152 = $$sroa$6907$0$$sroa$6907$16$103416802151;$$sroa$6907$0$$sroa$6907$16$105017362070 = $$sroa$6907$0$$sroa$6907$16$105017362069;$$sroa$6907$0$$sroa$6907$16$105217462009 = $$sroa$6907$0$$sroa$6907$16$105217462008;$$sroa$6907$0$$sroa$6907$16$106117412044 = $$sroa$6907$0$$sroa$6907$16$106117412043;$$sroa$6907$0$$sroa$6907$16$107116451999 = $$sroa$6907$0$$sroa$6907$16$107116451998;$$sroa$6907$0$$sroa$6907$16$107217312100 = $$sroa$6907$0$$sroa$6907$16$107217312099;$$sroa$6907$0$$sroa$6907$16$107916652084 = $$sroa$6907$0$$sroa$6907$16$107916652083;$$sroa$6907$0$$sroa$6907$16$108916552032 = $$sroa$6907$0$$sroa$6907$16$108916552031;$$sroa$6907$0$$sroa$6907$16$109016502020 = $$sroa$6907$0$$sroa$6907$16$109016502019;$$sroa$6907$0$$sroa$6907$16$110717711983 = $$sroa$6907$0$$sroa$6907$16$11071771;$$sroa$6907$0$$sroa$6907$16$113817611965 = $$sroa$6907$0$$sroa$6907$16$11381761;$$sroa$6907$0$$sroa$6907$16$116116602057 = $$sroa$6907$0$$sroa$6907$16$116116602056;$$sroa$6907$0$$sroa$6907$16$91317262170 = $$sroa$6907$0$$sroa$6907$16$91317262169;$$sroa$6907$0$$sroa$6907$16$92017212208 = $$sroa$6907$0$$sroa$6907$16$92017212207;$$sroa$6907$0$$sroa$6907$16$92917162248 = $$sroa$6907$0$$sroa$6907$16$92917162247;$$sroa$6907$0$$sroa$6907$16$93517002312 = $$sroa$6907$0$$sroa$6907$16$93517002311;$$sroa$6907$0$$sroa$6907$16$93616852189 = $$sroa$6907$0$$sroa$6907$16$93616852188;$$sroa$6907$0$$sroa$6907$16$94317511947 = $$sroa$6907$0$$sroa$6907$16$9431751;$$sroa$6907$0$$sroa$6907$16$95717661974 = $$sroa$6907$0$$sroa$6907$16$9571766;$$sroa$6907$0$$sroa$6907$16$95917561956 = $$sroa$6907$0$$sroa$6907$16$9591756;$$sroa$6907$0$$sroa$6907$16$99016752133 = $$sroa$6907$0$$sroa$6907$16$99016752132;$$sroa$6907$0$$sroa$6907$16$99816702116 = $$sroa$6907$0$$sroa$6907$16$99816702115;$$sroa$719$14 = $1353;
         break;
        } else {
         $1354 = (1 - ($$sroa$719$111867))|0;
         $1355 = $$sroa$336$391866 << $$sroa$719$111867;
         $1356 = 1 >>> $1354;
         $1357 = $1356 | $1355;
         $1358 = $1357 >>> 24;
         $1359 = $1358&255;
         HEAP8[$$sroa$6907$0$$sroa$6907$16$11071771>>0] = $1359;
         $1360 = $1357 >>> 16;
         $1361 = $1360&255;
         $$sroa$6907$0$$sroa$6907$16$11081772 = HEAP32[$6>>2]|0;
         $1362 = ((($$sroa$6907$0$$sroa$6907$16$11081772)) + 1|0);
         HEAP8[$1362>>0] = $1361;
         $1363 = $1357 >>> 8;
         $1364 = $1363&255;
         $$sroa$6907$0$$sroa$6907$16$11111773 = HEAP32[$6>>2]|0;
         $1365 = ((($$sroa$6907$0$$sroa$6907$16$11111773)) + 2|0);
         HEAP8[$1365>>0] = $1364;
         $1366 = $1357&255;
         $$sroa$6907$0$$sroa$6907$16$9511774 = HEAP32[$6>>2]|0;
         $1367 = ((($$sroa$6907$0$$sroa$6907$16$9511774)) + 3|0);
         HEAP8[$1367>>0] = $1366;
         $$sroa$6907$0$$sroa$6907$16$9531775 = HEAP32[$6>>2]|0;
         $1368 = ((($$sroa$6907$0$$sroa$6907$16$9531775)) + 4|0);
         $1369 = $1368;
         HEAP32[$6>>2] = $1369;
         $1370 = ($1354|0)!=(0);
         $1371 = $1370&1;
         $1372 = (32 - ($1354))|0;
         $$sroa$336$47 = $1371;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $1368;$$sroa$6907$0$$sroa$6907$16$100816902228 = $1368;$$sroa$6907$0$$sroa$6907$16$101417112290 = $1368;$$sroa$6907$0$$sroa$6907$16$102116952269 = $1368;$$sroa$6907$0$$sroa$6907$16$102517052335 = $1368;$$sroa$6907$0$$sroa$6907$16$103416802152 = $1368;$$sroa$6907$0$$sroa$6907$16$105017362070 = $1368;$$sroa$6907$0$$sroa$6907$16$105217462009 = $1368;$$sroa$6907$0$$sroa$6907$16$106117412044 = $1368;$$sroa$6907$0$$sroa$6907$16$107116451999 = $1368;$$sroa$6907$0$$sroa$6907$16$107217312100 = $1368;$$sroa$6907$0$$sroa$6907$16$107916652084 = $1368;$$sroa$6907$0$$sroa$6907$16$108916552032 = $1368;$$sroa$6907$0$$sroa$6907$16$109016502020 = $1368;$$sroa$6907$0$$sroa$6907$16$110717711983 = $1368;$$sroa$6907$0$$sroa$6907$16$113817611965 = $1368;$$sroa$6907$0$$sroa$6907$16$116116602057 = $1368;$$sroa$6907$0$$sroa$6907$16$91317262170 = $1368;$$sroa$6907$0$$sroa$6907$16$92017212208 = $1368;$$sroa$6907$0$$sroa$6907$16$92917162248 = $1368;$$sroa$6907$0$$sroa$6907$16$93517002312 = $1368;$$sroa$6907$0$$sroa$6907$16$93616852189 = $1368;$$sroa$6907$0$$sroa$6907$16$94317511947 = $1368;$$sroa$6907$0$$sroa$6907$16$95717661974 = $1368;$$sroa$6907$0$$sroa$6907$16$95917561956 = $1368;$$sroa$6907$0$$sroa$6907$16$99016752133 = $1368;$$sroa$6907$0$$sroa$6907$16$99816702116 = $1368;$$sroa$719$14 = $1372;
         break;
        }
       } else {
        $1373 = ($1347<<24>>24)>(0);
        if ($1373) {
         $1374 = $1348 << 1;
         $1375 = (($1374) + -1)|0;
         $1376 = ($1375>>>0)<(256);
         if ($1376) {
          $1377 = (8136 + ($1375<<2)|0);
          $1378 = HEAP32[$1377>>2]|0;
          $1379 = ($$sroa$719$111867|0)>($1378|0);
          if ($1379) {
           $1380 = $$sroa$336$391866 << $1378;
           $1381 = $1380 | $1374;
           $1382 = (($$sroa$719$111867) - ($1378))|0;
           $$sroa$336$47 = $1381;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102357;$$sroa$6907$0$$sroa$6907$16$100816902228 = $$sroa$6907$0$$sroa$6907$16$100816902227;$$sroa$6907$0$$sroa$6907$16$101417112290 = $$sroa$6907$0$$sroa$6907$16$101417112289;$$sroa$6907$0$$sroa$6907$16$102116952269 = $$sroa$6907$0$$sroa$6907$16$102116952268;$$sroa$6907$0$$sroa$6907$16$102517052335 = $$sroa$6907$0$$sroa$6907$16$102517052334;$$sroa$6907$0$$sroa$6907$16$103416802152 = $$sroa$6907$0$$sroa$6907$16$103416802151;$$sroa$6907$0$$sroa$6907$16$105017362070 = $$sroa$6907$0$$sroa$6907$16$105017362069;$$sroa$6907$0$$sroa$6907$16$105217462009 = $$sroa$6907$0$$sroa$6907$16$105217462008;$$sroa$6907$0$$sroa$6907$16$106117412044 = $$sroa$6907$0$$sroa$6907$16$106117412043;$$sroa$6907$0$$sroa$6907$16$107116451999 = $$sroa$6907$0$$sroa$6907$16$107116451998;$$sroa$6907$0$$sroa$6907$16$107217312100 = $$sroa$6907$0$$sroa$6907$16$107217312099;$$sroa$6907$0$$sroa$6907$16$107916652084 = $$sroa$6907$0$$sroa$6907$16$107916652083;$$sroa$6907$0$$sroa$6907$16$108916552032 = $$sroa$6907$0$$sroa$6907$16$108916552031;$$sroa$6907$0$$sroa$6907$16$109016502020 = $$sroa$6907$0$$sroa$6907$16$109016502019;$$sroa$6907$0$$sroa$6907$16$110717711983 = $$sroa$6907$0$$sroa$6907$16$11071771;$$sroa$6907$0$$sroa$6907$16$113817611965 = $$sroa$6907$0$$sroa$6907$16$11381761;$$sroa$6907$0$$sroa$6907$16$116116602057 = $$sroa$6907$0$$sroa$6907$16$116116602056;$$sroa$6907$0$$sroa$6907$16$91317262170 = $$sroa$6907$0$$sroa$6907$16$91317262169;$$sroa$6907$0$$sroa$6907$16$92017212208 = $$sroa$6907$0$$sroa$6907$16$92017212207;$$sroa$6907$0$$sroa$6907$16$92917162248 = $$sroa$6907$0$$sroa$6907$16$92917162247;$$sroa$6907$0$$sroa$6907$16$93517002312 = $$sroa$6907$0$$sroa$6907$16$93517002311;$$sroa$6907$0$$sroa$6907$16$93616852189 = $$sroa$6907$0$$sroa$6907$16$93616852188;$$sroa$6907$0$$sroa$6907$16$94317511947 = $$sroa$6907$0$$sroa$6907$16$9431751;$$sroa$6907$0$$sroa$6907$16$95717661974 = $$sroa$6907$0$$sroa$6907$16$9571766;$$sroa$6907$0$$sroa$6907$16$95917561956 = $$sroa$6907$0$$sroa$6907$16$9591756;$$sroa$6907$0$$sroa$6907$16$99016752133 = $$sroa$6907$0$$sroa$6907$16$99016752132;$$sroa$6907$0$$sroa$6907$16$99816702116 = $$sroa$6907$0$$sroa$6907$16$99816702115;$$sroa$719$14 = $1382;
           break;
          } else {
           $1383 = (($1378) - ($$sroa$719$111867))|0;
           $1384 = $$sroa$336$391866 << $$sroa$719$111867;
           $1385 = $1374 >>> $1383;
           $1386 = $1385 | $1384;
           $1387 = $1386 >>> 24;
           $1388 = $1387&255;
           HEAP8[$$sroa$6907$0$$sroa$6907$16$9571766>>0] = $1388;
           $1389 = $1386 >>> 16;
           $1390 = $1389&255;
           $$sroa$6907$0$$sroa$6907$16$9271767 = HEAP32[$6>>2]|0;
           $1391 = ((($$sroa$6907$0$$sroa$6907$16$9271767)) + 1|0);
           HEAP8[$1391>>0] = $1390;
           $1392 = $1386 >>> 8;
           $1393 = $1392&255;
           $$sroa$6907$0$$sroa$6907$16$10701768 = HEAP32[$6>>2]|0;
           $1394 = ((($$sroa$6907$0$$sroa$6907$16$10701768)) + 2|0);
           HEAP8[$1394>>0] = $1393;
           $1395 = $1386&255;
           $$sroa$6907$0$$sroa$6907$16$11051769 = HEAP32[$6>>2]|0;
           $1396 = ((($$sroa$6907$0$$sroa$6907$16$11051769)) + 3|0);
           HEAP8[$1396>>0] = $1395;
           $$sroa$6907$0$$sroa$6907$16$11341770 = HEAP32[$6>>2]|0;
           $1397 = ((($$sroa$6907$0$$sroa$6907$16$11341770)) + 4|0);
           $1398 = $1397;
           HEAP32[$6>>2] = $1398;
           $1399 = 1 << $1383;
           $1400 = (($1399) + -1)|0;
           $1401 = $1400 & $1374;
           $1402 = (32 - ($1383))|0;
           $$sroa$336$47 = $1401;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $1397;$$sroa$6907$0$$sroa$6907$16$100816902228 = $1397;$$sroa$6907$0$$sroa$6907$16$101417112290 = $1397;$$sroa$6907$0$$sroa$6907$16$102116952269 = $1397;$$sroa$6907$0$$sroa$6907$16$102517052335 = $1397;$$sroa$6907$0$$sroa$6907$16$103416802152 = $1397;$$sroa$6907$0$$sroa$6907$16$105017362070 = $1397;$$sroa$6907$0$$sroa$6907$16$105217462009 = $1397;$$sroa$6907$0$$sroa$6907$16$106117412044 = $1397;$$sroa$6907$0$$sroa$6907$16$107116451999 = $1397;$$sroa$6907$0$$sroa$6907$16$107217312100 = $1397;$$sroa$6907$0$$sroa$6907$16$107916652084 = $1397;$$sroa$6907$0$$sroa$6907$16$108916552032 = $1397;$$sroa$6907$0$$sroa$6907$16$109016502020 = $1397;$$sroa$6907$0$$sroa$6907$16$110717711983 = $1397;$$sroa$6907$0$$sroa$6907$16$113817611965 = $1397;$$sroa$6907$0$$sroa$6907$16$116116602057 = $1397;$$sroa$6907$0$$sroa$6907$16$91317262170 = $1397;$$sroa$6907$0$$sroa$6907$16$92017212208 = $1397;$$sroa$6907$0$$sroa$6907$16$92917162248 = $1397;$$sroa$6907$0$$sroa$6907$16$93517002312 = $1397;$$sroa$6907$0$$sroa$6907$16$93616852189 = $1397;$$sroa$6907$0$$sroa$6907$16$94317511947 = $1397;$$sroa$6907$0$$sroa$6907$16$95717661974 = $1397;$$sroa$6907$0$$sroa$6907$16$95917561956 = $1397;$$sroa$6907$0$$sroa$6907$16$99016752133 = $1397;$$sroa$6907$0$$sroa$6907$16$99816702116 = $1397;$$sroa$719$14 = $1402;
           break;
          }
         } else {
          $1403 = ($1374>>>0)>(65535);
          $1404 = $1348 >>> 15;
          $1405 = $1404 & 65535;
          $$$i741 = $1403 ? $1405 : $1374;
          $$2$i742 = $1403 ? 16 : 0;
          $1406 = $$$i741 & 65280;
          $1407 = ($1406|0)==(0);
          $1408 = $$$i741 >>> 8;
          $1409 = $$2$i742 | 8;
          $$119$i743 = $1407 ? $$$i741 : $1408;
          $$1$i744 = $1407 ? $$2$i742 : $1409;
          $1410 = (($$119$i743) + -1)|0;
          $1411 = (8136 + ($1410<<2)|0);
          $1412 = HEAP32[$1411>>2]|0;
          $1413 = $$1$i744 << 1;
          $1414 = (($1412) + ($1413))|0;
          $1415 = $1414 | 1;
          $1416 = ($$sroa$719$111867|0)>($1415|0);
          if ($1416) {
           $1417 = $$sroa$336$391866 << $1415;
           $1418 = $1417 | $1374;
           $1419 = (($$sroa$719$111867) - ($1415))|0;
           $$sroa$336$47 = $1418;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102357;$$sroa$6907$0$$sroa$6907$16$100816902228 = $$sroa$6907$0$$sroa$6907$16$100816902227;$$sroa$6907$0$$sroa$6907$16$101417112290 = $$sroa$6907$0$$sroa$6907$16$101417112289;$$sroa$6907$0$$sroa$6907$16$102116952269 = $$sroa$6907$0$$sroa$6907$16$102116952268;$$sroa$6907$0$$sroa$6907$16$102517052335 = $$sroa$6907$0$$sroa$6907$16$102517052334;$$sroa$6907$0$$sroa$6907$16$103416802152 = $$sroa$6907$0$$sroa$6907$16$103416802151;$$sroa$6907$0$$sroa$6907$16$105017362070 = $$sroa$6907$0$$sroa$6907$16$105017362069;$$sroa$6907$0$$sroa$6907$16$105217462009 = $$sroa$6907$0$$sroa$6907$16$105217462008;$$sroa$6907$0$$sroa$6907$16$106117412044 = $$sroa$6907$0$$sroa$6907$16$106117412043;$$sroa$6907$0$$sroa$6907$16$107116451999 = $$sroa$6907$0$$sroa$6907$16$107116451998;$$sroa$6907$0$$sroa$6907$16$107217312100 = $$sroa$6907$0$$sroa$6907$16$107217312099;$$sroa$6907$0$$sroa$6907$16$107916652084 = $$sroa$6907$0$$sroa$6907$16$107916652083;$$sroa$6907$0$$sroa$6907$16$108916552032 = $$sroa$6907$0$$sroa$6907$16$108916552031;$$sroa$6907$0$$sroa$6907$16$109016502020 = $$sroa$6907$0$$sroa$6907$16$109016502019;$$sroa$6907$0$$sroa$6907$16$110717711983 = $$sroa$6907$0$$sroa$6907$16$11071771;$$sroa$6907$0$$sroa$6907$16$113817611965 = $$sroa$6907$0$$sroa$6907$16$11381761;$$sroa$6907$0$$sroa$6907$16$116116602057 = $$sroa$6907$0$$sroa$6907$16$116116602056;$$sroa$6907$0$$sroa$6907$16$91317262170 = $$sroa$6907$0$$sroa$6907$16$91317262169;$$sroa$6907$0$$sroa$6907$16$92017212208 = $$sroa$6907$0$$sroa$6907$16$92017212207;$$sroa$6907$0$$sroa$6907$16$92917162248 = $$sroa$6907$0$$sroa$6907$16$92917162247;$$sroa$6907$0$$sroa$6907$16$93517002312 = $$sroa$6907$0$$sroa$6907$16$93517002311;$$sroa$6907$0$$sroa$6907$16$93616852189 = $$sroa$6907$0$$sroa$6907$16$93616852188;$$sroa$6907$0$$sroa$6907$16$94317511947 = $$sroa$6907$0$$sroa$6907$16$9431751;$$sroa$6907$0$$sroa$6907$16$95717661974 = $$sroa$6907$0$$sroa$6907$16$9571766;$$sroa$6907$0$$sroa$6907$16$95917561956 = $$sroa$6907$0$$sroa$6907$16$9591756;$$sroa$6907$0$$sroa$6907$16$99016752133 = $$sroa$6907$0$$sroa$6907$16$99016752132;$$sroa$6907$0$$sroa$6907$16$99816702116 = $$sroa$6907$0$$sroa$6907$16$99816702115;$$sroa$719$14 = $1419;
           break;
          } else {
           $1420 = (($1415) - ($$sroa$719$111867))|0;
           $1421 = $$sroa$336$391866 << $$sroa$719$111867;
           $1422 = $1374 >>> $1420;
           $1423 = $1422 | $1421;
           $1424 = $1423 >>> 24;
           $1425 = $1424&255;
           HEAP8[$$sroa$6907$0$$sroa$6907$16$11381761>>0] = $1425;
           $1426 = $1423 >>> 16;
           $1427 = $1426&255;
           $$sroa$6907$0$$sroa$6907$16$11391762 = HEAP32[$6>>2]|0;
           $1428 = ((($$sroa$6907$0$$sroa$6907$16$11391762)) + 1|0);
           HEAP8[$1428>>0] = $1427;
           $1429 = $1423 >>> 8;
           $1430 = $1429&255;
           $$sroa$6907$0$$sroa$6907$16$11401763 = HEAP32[$6>>2]|0;
           $1431 = ((($$sroa$6907$0$$sroa$6907$16$11401763)) + 2|0);
           HEAP8[$1431>>0] = $1430;
           $1432 = $1423&255;
           $$sroa$6907$0$$sroa$6907$16$11411764 = HEAP32[$6>>2]|0;
           $1433 = ((($$sroa$6907$0$$sroa$6907$16$11411764)) + 3|0);
           HEAP8[$1433>>0] = $1432;
           $$sroa$6907$0$$sroa$6907$16$11421765 = HEAP32[$6>>2]|0;
           $1434 = ((($$sroa$6907$0$$sroa$6907$16$11421765)) + 4|0);
           $1435 = $1434;
           HEAP32[$6>>2] = $1435;
           $1436 = 1 << $1420;
           $1437 = (($1436) + -1)|0;
           $1438 = $1437 & $1374;
           $1439 = (32 - ($1420))|0;
           $$sroa$336$47 = $1438;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $1434;$$sroa$6907$0$$sroa$6907$16$100816902228 = $1434;$$sroa$6907$0$$sroa$6907$16$101417112290 = $1434;$$sroa$6907$0$$sroa$6907$16$102116952269 = $1434;$$sroa$6907$0$$sroa$6907$16$102517052335 = $1434;$$sroa$6907$0$$sroa$6907$16$103416802152 = $1434;$$sroa$6907$0$$sroa$6907$16$105017362070 = $1434;$$sroa$6907$0$$sroa$6907$16$105217462009 = $1434;$$sroa$6907$0$$sroa$6907$16$106117412044 = $1434;$$sroa$6907$0$$sroa$6907$16$107116451999 = $1434;$$sroa$6907$0$$sroa$6907$16$107217312100 = $1434;$$sroa$6907$0$$sroa$6907$16$107916652084 = $1434;$$sroa$6907$0$$sroa$6907$16$108916552032 = $1434;$$sroa$6907$0$$sroa$6907$16$109016502020 = $1434;$$sroa$6907$0$$sroa$6907$16$110717711983 = $1434;$$sroa$6907$0$$sroa$6907$16$113817611965 = $1434;$$sroa$6907$0$$sroa$6907$16$116116602057 = $1434;$$sroa$6907$0$$sroa$6907$16$91317262170 = $1434;$$sroa$6907$0$$sroa$6907$16$92017212208 = $1434;$$sroa$6907$0$$sroa$6907$16$92917162248 = $1434;$$sroa$6907$0$$sroa$6907$16$93517002312 = $1434;$$sroa$6907$0$$sroa$6907$16$93616852189 = $1434;$$sroa$6907$0$$sroa$6907$16$94317511947 = $1434;$$sroa$6907$0$$sroa$6907$16$95717661974 = $1434;$$sroa$6907$0$$sroa$6907$16$95917561956 = $1434;$$sroa$6907$0$$sroa$6907$16$99016752133 = $1434;$$sroa$6907$0$$sroa$6907$16$99816702116 = $1434;$$sroa$719$14 = $1439;
           break;
          }
         }
        } else {
         $1440 = (0 - ($1348))|0;
         $1441 = $1440 << 1;
         $1442 = $1441 | 1;
         $1443 = ($1441>>>0)<(256);
         if ($1443) {
          $1444 = (8136 + ($1441<<2)|0);
          $1445 = HEAP32[$1444>>2]|0;
          $1446 = ($$sroa$719$111867|0)>($1445|0);
          if ($1446) {
           $1447 = $$sroa$336$391866 << $1445;
           $1448 = $1447 | $1442;
           $1449 = (($$sroa$719$111867) - ($1445))|0;
           $$sroa$336$47 = $1448;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102357;$$sroa$6907$0$$sroa$6907$16$100816902228 = $$sroa$6907$0$$sroa$6907$16$100816902227;$$sroa$6907$0$$sroa$6907$16$101417112290 = $$sroa$6907$0$$sroa$6907$16$101417112289;$$sroa$6907$0$$sroa$6907$16$102116952269 = $$sroa$6907$0$$sroa$6907$16$102116952268;$$sroa$6907$0$$sroa$6907$16$102517052335 = $$sroa$6907$0$$sroa$6907$16$102517052334;$$sroa$6907$0$$sroa$6907$16$103416802152 = $$sroa$6907$0$$sroa$6907$16$103416802151;$$sroa$6907$0$$sroa$6907$16$105017362070 = $$sroa$6907$0$$sroa$6907$16$105017362069;$$sroa$6907$0$$sroa$6907$16$105217462009 = $$sroa$6907$0$$sroa$6907$16$105217462008;$$sroa$6907$0$$sroa$6907$16$106117412044 = $$sroa$6907$0$$sroa$6907$16$106117412043;$$sroa$6907$0$$sroa$6907$16$107116451999 = $$sroa$6907$0$$sroa$6907$16$107116451998;$$sroa$6907$0$$sroa$6907$16$107217312100 = $$sroa$6907$0$$sroa$6907$16$107217312099;$$sroa$6907$0$$sroa$6907$16$107916652084 = $$sroa$6907$0$$sroa$6907$16$107916652083;$$sroa$6907$0$$sroa$6907$16$108916552032 = $$sroa$6907$0$$sroa$6907$16$108916552031;$$sroa$6907$0$$sroa$6907$16$109016502020 = $$sroa$6907$0$$sroa$6907$16$109016502019;$$sroa$6907$0$$sroa$6907$16$110717711983 = $$sroa$6907$0$$sroa$6907$16$11071771;$$sroa$6907$0$$sroa$6907$16$113817611965 = $$sroa$6907$0$$sroa$6907$16$11381761;$$sroa$6907$0$$sroa$6907$16$116116602057 = $$sroa$6907$0$$sroa$6907$16$116116602056;$$sroa$6907$0$$sroa$6907$16$91317262170 = $$sroa$6907$0$$sroa$6907$16$91317262169;$$sroa$6907$0$$sroa$6907$16$92017212208 = $$sroa$6907$0$$sroa$6907$16$92017212207;$$sroa$6907$0$$sroa$6907$16$92917162248 = $$sroa$6907$0$$sroa$6907$16$92917162247;$$sroa$6907$0$$sroa$6907$16$93517002312 = $$sroa$6907$0$$sroa$6907$16$93517002311;$$sroa$6907$0$$sroa$6907$16$93616852189 = $$sroa$6907$0$$sroa$6907$16$93616852188;$$sroa$6907$0$$sroa$6907$16$94317511947 = $$sroa$6907$0$$sroa$6907$16$9431751;$$sroa$6907$0$$sroa$6907$16$95717661974 = $$sroa$6907$0$$sroa$6907$16$9571766;$$sroa$6907$0$$sroa$6907$16$95917561956 = $$sroa$6907$0$$sroa$6907$16$9591756;$$sroa$6907$0$$sroa$6907$16$99016752133 = $$sroa$6907$0$$sroa$6907$16$99016752132;$$sroa$6907$0$$sroa$6907$16$99816702116 = $$sroa$6907$0$$sroa$6907$16$99816702115;$$sroa$719$14 = $1449;
           break;
          } else {
           $1450 = (($1445) - ($$sroa$719$111867))|0;
           $1451 = $$sroa$336$391866 << $$sroa$719$111867;
           $1452 = $1442 >>> $1450;
           $1453 = $1452 | $1451;
           $1454 = $1453 >>> 24;
           $1455 = $1454&255;
           HEAP8[$$sroa$6907$0$$sroa$6907$16$9591756>>0] = $1455;
           $1456 = $1453 >>> 16;
           $1457 = $1456&255;
           $$sroa$6907$0$$sroa$6907$16$9681757 = HEAP32[$6>>2]|0;
           $1458 = ((($$sroa$6907$0$$sroa$6907$16$9681757)) + 1|0);
           HEAP8[$1458>>0] = $1457;
           $1459 = $1453 >>> 8;
           $1460 = $1459&255;
           $$sroa$6907$0$$sroa$6907$16$9691758 = HEAP32[$6>>2]|0;
           $1461 = ((($$sroa$6907$0$$sroa$6907$16$9691758)) + 2|0);
           HEAP8[$1461>>0] = $1460;
           $1462 = $1453&255;
           $$sroa$6907$0$$sroa$6907$16$9701759 = HEAP32[$6>>2]|0;
           $1463 = ((($$sroa$6907$0$$sroa$6907$16$9701759)) + 3|0);
           HEAP8[$1463>>0] = $1462;
           $$sroa$6907$0$$sroa$6907$16$9711760 = HEAP32[$6>>2]|0;
           $1464 = ((($$sroa$6907$0$$sroa$6907$16$9711760)) + 4|0);
           $1465 = $1464;
           HEAP32[$6>>2] = $1465;
           $1466 = 1 << $1450;
           $1467 = (($1466) + -1)|0;
           $1468 = $1467 & $1442;
           $1469 = (32 - ($1450))|0;
           $$sroa$336$47 = $1468;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $1464;$$sroa$6907$0$$sroa$6907$16$100816902228 = $1464;$$sroa$6907$0$$sroa$6907$16$101417112290 = $1464;$$sroa$6907$0$$sroa$6907$16$102116952269 = $1464;$$sroa$6907$0$$sroa$6907$16$102517052335 = $1464;$$sroa$6907$0$$sroa$6907$16$103416802152 = $1464;$$sroa$6907$0$$sroa$6907$16$105017362070 = $1464;$$sroa$6907$0$$sroa$6907$16$105217462009 = $1464;$$sroa$6907$0$$sroa$6907$16$106117412044 = $1464;$$sroa$6907$0$$sroa$6907$16$107116451999 = $1464;$$sroa$6907$0$$sroa$6907$16$107217312100 = $1464;$$sroa$6907$0$$sroa$6907$16$107916652084 = $1464;$$sroa$6907$0$$sroa$6907$16$108916552032 = $1464;$$sroa$6907$0$$sroa$6907$16$109016502020 = $1464;$$sroa$6907$0$$sroa$6907$16$110717711983 = $1464;$$sroa$6907$0$$sroa$6907$16$113817611965 = $1464;$$sroa$6907$0$$sroa$6907$16$116116602057 = $1464;$$sroa$6907$0$$sroa$6907$16$91317262170 = $1464;$$sroa$6907$0$$sroa$6907$16$92017212208 = $1464;$$sroa$6907$0$$sroa$6907$16$92917162248 = $1464;$$sroa$6907$0$$sroa$6907$16$93517002312 = $1464;$$sroa$6907$0$$sroa$6907$16$93616852189 = $1464;$$sroa$6907$0$$sroa$6907$16$94317511947 = $1464;$$sroa$6907$0$$sroa$6907$16$95717661974 = $1464;$$sroa$6907$0$$sroa$6907$16$95917561956 = $1464;$$sroa$6907$0$$sroa$6907$16$99016752133 = $1464;$$sroa$6907$0$$sroa$6907$16$99816702116 = $1464;$$sroa$719$14 = $1469;
           break;
          }
         } else {
          $1470 = ($1442>>>0)>(65535);
          $1471 = $1440 >>> 15;
          $1472 = $1471 & 65535;
          $$$i750 = $1470 ? $1472 : $1442;
          $$2$i751 = $1470 ? 16 : 0;
          $1473 = $$$i750 & 65280;
          $1474 = ($1473|0)==(0);
          $1475 = $$$i750 >>> 8;
          $1476 = $$2$i751 | 8;
          $$119$i752 = $1474 ? $$$i750 : $1475;
          $$1$i753 = $1474 ? $$2$i751 : $1476;
          $1477 = (($$119$i752) + -1)|0;
          $1478 = (8136 + ($1477<<2)|0);
          $1479 = HEAP32[$1478>>2]|0;
          $1480 = $$1$i753 << 1;
          $1481 = (($1479) + ($1480))|0;
          $1482 = $1481 | 1;
          $1483 = ($$sroa$719$111867|0)>($1482|0);
          if ($1483) {
           $1484 = $$sroa$336$391866 << $1482;
           $1485 = $1484 | $1442;
           $1486 = (($$sroa$719$111867) - ($1482))|0;
           $$sroa$336$47 = $1485;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102357;$$sroa$6907$0$$sroa$6907$16$100816902228 = $$sroa$6907$0$$sroa$6907$16$100816902227;$$sroa$6907$0$$sroa$6907$16$101417112290 = $$sroa$6907$0$$sroa$6907$16$101417112289;$$sroa$6907$0$$sroa$6907$16$102116952269 = $$sroa$6907$0$$sroa$6907$16$102116952268;$$sroa$6907$0$$sroa$6907$16$102517052335 = $$sroa$6907$0$$sroa$6907$16$102517052334;$$sroa$6907$0$$sroa$6907$16$103416802152 = $$sroa$6907$0$$sroa$6907$16$103416802151;$$sroa$6907$0$$sroa$6907$16$105017362070 = $$sroa$6907$0$$sroa$6907$16$105017362069;$$sroa$6907$0$$sroa$6907$16$105217462009 = $$sroa$6907$0$$sroa$6907$16$105217462008;$$sroa$6907$0$$sroa$6907$16$106117412044 = $$sroa$6907$0$$sroa$6907$16$106117412043;$$sroa$6907$0$$sroa$6907$16$107116451999 = $$sroa$6907$0$$sroa$6907$16$107116451998;$$sroa$6907$0$$sroa$6907$16$107217312100 = $$sroa$6907$0$$sroa$6907$16$107217312099;$$sroa$6907$0$$sroa$6907$16$107916652084 = $$sroa$6907$0$$sroa$6907$16$107916652083;$$sroa$6907$0$$sroa$6907$16$108916552032 = $$sroa$6907$0$$sroa$6907$16$108916552031;$$sroa$6907$0$$sroa$6907$16$109016502020 = $$sroa$6907$0$$sroa$6907$16$109016502019;$$sroa$6907$0$$sroa$6907$16$110717711983 = $$sroa$6907$0$$sroa$6907$16$11071771;$$sroa$6907$0$$sroa$6907$16$113817611965 = $$sroa$6907$0$$sroa$6907$16$11381761;$$sroa$6907$0$$sroa$6907$16$116116602057 = $$sroa$6907$0$$sroa$6907$16$116116602056;$$sroa$6907$0$$sroa$6907$16$91317262170 = $$sroa$6907$0$$sroa$6907$16$91317262169;$$sroa$6907$0$$sroa$6907$16$92017212208 = $$sroa$6907$0$$sroa$6907$16$92017212207;$$sroa$6907$0$$sroa$6907$16$92917162248 = $$sroa$6907$0$$sroa$6907$16$92917162247;$$sroa$6907$0$$sroa$6907$16$93517002312 = $$sroa$6907$0$$sroa$6907$16$93517002311;$$sroa$6907$0$$sroa$6907$16$93616852189 = $$sroa$6907$0$$sroa$6907$16$93616852188;$$sroa$6907$0$$sroa$6907$16$94317511947 = $$sroa$6907$0$$sroa$6907$16$9431751;$$sroa$6907$0$$sroa$6907$16$95717661974 = $$sroa$6907$0$$sroa$6907$16$9571766;$$sroa$6907$0$$sroa$6907$16$95917561956 = $$sroa$6907$0$$sroa$6907$16$9591756;$$sroa$6907$0$$sroa$6907$16$99016752133 = $$sroa$6907$0$$sroa$6907$16$99016752132;$$sroa$6907$0$$sroa$6907$16$99816702116 = $$sroa$6907$0$$sroa$6907$16$99816702115;$$sroa$719$14 = $1486;
           break;
          } else {
           $1487 = (($1482) - ($$sroa$719$111867))|0;
           $1488 = $$sroa$336$391866 << $$sroa$719$111867;
           $1489 = $1442 >>> $1487;
           $1490 = $1489 | $1488;
           $1491 = $1490 >>> 24;
           $1492 = $1491&255;
           HEAP8[$$sroa$6907$0$$sroa$6907$16$9431751>>0] = $1492;
           $1493 = $1490 >>> 16;
           $1494 = $1493&255;
           $$sroa$6907$0$$sroa$6907$16$9441752 = HEAP32[$6>>2]|0;
           $1495 = ((($$sroa$6907$0$$sroa$6907$16$9441752)) + 1|0);
           HEAP8[$1495>>0] = $1494;
           $1496 = $1490 >>> 8;
           $1497 = $1496&255;
           $$sroa$6907$0$$sroa$6907$16$9451753 = HEAP32[$6>>2]|0;
           $1498 = ((($$sroa$6907$0$$sroa$6907$16$9451753)) + 2|0);
           HEAP8[$1498>>0] = $1497;
           $1499 = $1490&255;
           $$sroa$6907$0$$sroa$6907$16$9461754 = HEAP32[$6>>2]|0;
           $1500 = ((($$sroa$6907$0$$sroa$6907$16$9461754)) + 3|0);
           HEAP8[$1500>>0] = $1499;
           $$sroa$6907$0$$sroa$6907$16$9471755 = HEAP32[$6>>2]|0;
           $1501 = ((($$sroa$6907$0$$sroa$6907$16$9471755)) + 4|0);
           $1502 = $1501;
           HEAP32[$6>>2] = $1502;
           $1503 = 1 << $1487;
           $1504 = (($1503) + -1)|0;
           $1505 = $1504 & $1442;
           $1506 = (32 - ($1487))|0;
           $$sroa$336$47 = $1505;$$sroa$6907$0$$sroa$6907$16$$pre$i17102358 = $1501;$$sroa$6907$0$$sroa$6907$16$100816902228 = $1501;$$sroa$6907$0$$sroa$6907$16$101417112290 = $1501;$$sroa$6907$0$$sroa$6907$16$102116952269 = $1501;$$sroa$6907$0$$sroa$6907$16$102517052335 = $1501;$$sroa$6907$0$$sroa$6907$16$103416802152 = $1501;$$sroa$6907$0$$sroa$6907$16$105017362070 = $1501;$$sroa$6907$0$$sroa$6907$16$105217462009 = $1501;$$sroa$6907$0$$sroa$6907$16$106117412044 = $1501;$$sroa$6907$0$$sroa$6907$16$107116451999 = $1501;$$sroa$6907$0$$sroa$6907$16$107217312100 = $1501;$$sroa$6907$0$$sroa$6907$16$107916652084 = $1501;$$sroa$6907$0$$sroa$6907$16$108916552032 = $1501;$$sroa$6907$0$$sroa$6907$16$109016502020 = $1501;$$sroa$6907$0$$sroa$6907$16$110717711983 = $1501;$$sroa$6907$0$$sroa$6907$16$113817611965 = $1501;$$sroa$6907$0$$sroa$6907$16$116116602057 = $1501;$$sroa$6907$0$$sroa$6907$16$91317262170 = $1501;$$sroa$6907$0$$sroa$6907$16$92017212208 = $1501;$$sroa$6907$0$$sroa$6907$16$92917162248 = $1501;$$sroa$6907$0$$sroa$6907$16$93517002312 = $1501;$$sroa$6907$0$$sroa$6907$16$93616852189 = $1501;$$sroa$6907$0$$sroa$6907$16$94317511947 = $1501;$$sroa$6907$0$$sroa$6907$16$95717661974 = $1501;$$sroa$6907$0$$sroa$6907$16$95917561956 = $1501;$$sroa$6907$0$$sroa$6907$16$99016752133 = $1501;$$sroa$6907$0$$sroa$6907$16$99816702116 = $1501;$$sroa$719$14 = $1506;
           break;
          }
         }
        }
       }
      } while(0);
      $1507 = (($$05741868) + 1)|0;
      $1508 = HEAP32[$1278>>2]|0;
      $1509 = ($1507|0)<($1508|0);
      if ($1509) {
       $$05741868 = $1507;$$sroa$336$391866 = $$sroa$336$47;$$sroa$6907$0$$sroa$6907$16$$pre$i17102357 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102358;$$sroa$6907$0$$sroa$6907$16$100816902227 = $$sroa$6907$0$$sroa$6907$16$100816902228;$$sroa$6907$0$$sroa$6907$16$101417112289 = $$sroa$6907$0$$sroa$6907$16$101417112290;$$sroa$6907$0$$sroa$6907$16$102116952268 = $$sroa$6907$0$$sroa$6907$16$102116952269;$$sroa$6907$0$$sroa$6907$16$102517052334 = $$sroa$6907$0$$sroa$6907$16$102517052335;$$sroa$6907$0$$sroa$6907$16$103416802151 = $$sroa$6907$0$$sroa$6907$16$103416802152;$$sroa$6907$0$$sroa$6907$16$105017362069 = $$sroa$6907$0$$sroa$6907$16$105017362070;$$sroa$6907$0$$sroa$6907$16$105217462008 = $$sroa$6907$0$$sroa$6907$16$105217462009;$$sroa$6907$0$$sroa$6907$16$106117412043 = $$sroa$6907$0$$sroa$6907$16$106117412044;$$sroa$6907$0$$sroa$6907$16$107116451998 = $$sroa$6907$0$$sroa$6907$16$107116451999;$$sroa$6907$0$$sroa$6907$16$107217312099 = $$sroa$6907$0$$sroa$6907$16$107217312100;$$sroa$6907$0$$sroa$6907$16$107916652083 = $$sroa$6907$0$$sroa$6907$16$107916652084;$$sroa$6907$0$$sroa$6907$16$108916552031 = $$sroa$6907$0$$sroa$6907$16$108916552032;$$sroa$6907$0$$sroa$6907$16$109016502019 = $$sroa$6907$0$$sroa$6907$16$109016502020;$$sroa$6907$0$$sroa$6907$16$11071771 = $$sroa$6907$0$$sroa$6907$16$110717711983;$$sroa$6907$0$$sroa$6907$16$11381761 = $$sroa$6907$0$$sroa$6907$16$113817611965;$$sroa$6907$0$$sroa$6907$16$116116602056 = $$sroa$6907$0$$sroa$6907$16$116116602057;$$sroa$6907$0$$sroa$6907$16$91317262169 = $$sroa$6907$0$$sroa$6907$16$91317262170;$$sroa$6907$0$$sroa$6907$16$92017212207 = $$sroa$6907$0$$sroa$6907$16$92017212208;$$sroa$6907$0$$sroa$6907$16$92917162247 = $$sroa$6907$0$$sroa$6907$16$92917162248;$$sroa$6907$0$$sroa$6907$16$93517002311 = $$sroa$6907$0$$sroa$6907$16$93517002312;$$sroa$6907$0$$sroa$6907$16$93616852188 = $$sroa$6907$0$$sroa$6907$16$93616852189;$$sroa$6907$0$$sroa$6907$16$9431751 = $$sroa$6907$0$$sroa$6907$16$94317511947;$$sroa$6907$0$$sroa$6907$16$9571766 = $$sroa$6907$0$$sroa$6907$16$95717661974;$$sroa$6907$0$$sroa$6907$16$9591756 = $$sroa$6907$0$$sroa$6907$16$95917561956;$$sroa$6907$0$$sroa$6907$16$99016752132 = $$sroa$6907$0$$sroa$6907$16$99016752133;$$sroa$6907$0$$sroa$6907$16$99816702115 = $$sroa$6907$0$$sroa$6907$16$99816702116;$$sroa$719$111867 = $$sroa$719$14;
      } else {
       $$sroa$336$48 = $$sroa$336$47;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102358;$$sroa$6907$0$$sroa$6907$16$100816902226 = $$sroa$6907$0$$sroa$6907$16$100816902228;$$sroa$6907$0$$sroa$6907$16$101417112288 = $$sroa$6907$0$$sroa$6907$16$101417112290;$$sroa$6907$0$$sroa$6907$16$102116952267 = $$sroa$6907$0$$sroa$6907$16$102116952269;$$sroa$6907$0$$sroa$6907$16$102517052333 = $$sroa$6907$0$$sroa$6907$16$102517052335;$$sroa$6907$0$$sroa$6907$16$103416802150 = $$sroa$6907$0$$sroa$6907$16$103416802152;$$sroa$6907$0$$sroa$6907$16$105017362068 = $$sroa$6907$0$$sroa$6907$16$105017362070;$$sroa$6907$0$$sroa$6907$16$10521746 = $$sroa$6907$0$$sroa$6907$16$105217462009;$$sroa$6907$0$$sroa$6907$16$106117412042 = $$sroa$6907$0$$sroa$6907$16$106117412044;$$sroa$6907$0$$sroa$6907$16$10711645 = $$sroa$6907$0$$sroa$6907$16$107116451999;$$sroa$6907$0$$sroa$6907$16$107217312098 = $$sroa$6907$0$$sroa$6907$16$107217312100;$$sroa$6907$0$$sroa$6907$16$107916652082 = $$sroa$6907$0$$sroa$6907$16$107916652084;$$sroa$6907$0$$sroa$6907$16$108916552030 = $$sroa$6907$0$$sroa$6907$16$108916552032;$$sroa$6907$0$$sroa$6907$16$109016502018 = $$sroa$6907$0$$sroa$6907$16$109016502020;$$sroa$6907$0$$sroa$6907$16$116116602055 = $$sroa$6907$0$$sroa$6907$16$116116602057;$$sroa$6907$0$$sroa$6907$16$91317262168 = $$sroa$6907$0$$sroa$6907$16$91317262170;$$sroa$6907$0$$sroa$6907$16$92017212206 = $$sroa$6907$0$$sroa$6907$16$92017212208;$$sroa$6907$0$$sroa$6907$16$92917162246 = $$sroa$6907$0$$sroa$6907$16$92917162248;$$sroa$6907$0$$sroa$6907$16$93517002310 = $$sroa$6907$0$$sroa$6907$16$93517002312;$$sroa$6907$0$$sroa$6907$16$93616852187 = $$sroa$6907$0$$sroa$6907$16$93616852189;$$sroa$6907$0$$sroa$6907$16$99016752131 = $$sroa$6907$0$$sroa$6907$16$99016752133;$$sroa$6907$0$$sroa$6907$16$99816702114 = $$sroa$6907$0$$sroa$6907$16$99816702116;$$sroa$719$15 = $$sroa$719$14;
       break;
      }
     }
     break;
    }
    default: {
     $$sroa$336$48 = $$sroa$336$15;$$sroa$6907$0$$sroa$6907$16$$pre$i17102356 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$100816902226 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$101417112288 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$102116952267 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$102517052333 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$103416802150 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$105017362068 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$10521746 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$106117412042 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$10711645 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$107217312098 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$107916652082 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$108916552030 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$109016502018 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$116116602055 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$91317262168 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$92017212206 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$92917162246 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$93517002310 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$93616852187 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$99016752131 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$6907$0$$sroa$6907$16$99816702114 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102363;$$sroa$719$15 = $$sroa$719$2;
    }
    }
   } while(0);
   $1510 = HEAP32[$401>>2]|0;
   $1511 = (($1510) + 1)|0;
   $1512 = ($1510>>>0)<(256);
   do {
    if ($1512) {
     $1513 = (8136 + ($1510<<2)|0);
     $1514 = HEAP32[$1513>>2]|0;
     $1515 = ($$sroa$719$15|0)>($1514|0);
     if ($1515) {
      $1516 = $$sroa$336$48 << $1514;
      $1517 = $1516 | $1511;
      $1518 = (($$sroa$719$15) - ($1514))|0;
      $$sroa$336$51 = $1517;$$sroa$6907$0$$sroa$6907$16$$pre$i17102355 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102356;$$sroa$6907$0$$sroa$6907$16$100816902225 = $$sroa$6907$0$$sroa$6907$16$100816902226;$$sroa$6907$0$$sroa$6907$16$101417112287 = $$sroa$6907$0$$sroa$6907$16$101417112288;$$sroa$6907$0$$sroa$6907$16$102116952266 = $$sroa$6907$0$$sroa$6907$16$102116952267;$$sroa$6907$0$$sroa$6907$16$102517052332 = $$sroa$6907$0$$sroa$6907$16$102517052333;$$sroa$6907$0$$sroa$6907$16$103416802149 = $$sroa$6907$0$$sroa$6907$16$103416802150;$$sroa$6907$0$$sroa$6907$16$105017362067 = $$sroa$6907$0$$sroa$6907$16$105017362068;$$sroa$6907$0$$sroa$6907$16$106117412041 = $$sroa$6907$0$$sroa$6907$16$106117412042;$$sroa$6907$0$$sroa$6907$16$107217312097 = $$sroa$6907$0$$sroa$6907$16$107217312098;$$sroa$6907$0$$sroa$6907$16$107916652081 = $$sroa$6907$0$$sroa$6907$16$107916652082;$$sroa$6907$0$$sroa$6907$16$108916552029 = $$sroa$6907$0$$sroa$6907$16$108916552030;$$sroa$6907$0$$sroa$6907$16$10901650 = $$sroa$6907$0$$sroa$6907$16$109016502018;$$sroa$6907$0$$sroa$6907$16$116116602054 = $$sroa$6907$0$$sroa$6907$16$116116602055;$$sroa$6907$0$$sroa$6907$16$91317262167 = $$sroa$6907$0$$sroa$6907$16$91317262168;$$sroa$6907$0$$sroa$6907$16$92017212205 = $$sroa$6907$0$$sroa$6907$16$92017212206;$$sroa$6907$0$$sroa$6907$16$92917162245 = $$sroa$6907$0$$sroa$6907$16$92917162246;$$sroa$6907$0$$sroa$6907$16$93517002309 = $$sroa$6907$0$$sroa$6907$16$93517002310;$$sroa$6907$0$$sroa$6907$16$93616852186 = $$sroa$6907$0$$sroa$6907$16$93616852187;$$sroa$6907$0$$sroa$6907$16$99016752130 = $$sroa$6907$0$$sroa$6907$16$99016752131;$$sroa$6907$0$$sroa$6907$16$99816702113 = $$sroa$6907$0$$sroa$6907$16$99816702114;$$sroa$719$16 = $1518;
      break;
     } else {
      $1519 = (($1514) - ($$sroa$719$15))|0;
      $1520 = $$sroa$336$48 << $$sroa$719$15;
      $1521 = $1511 >>> $1519;
      $1522 = $1521 | $1520;
      $1523 = $1522 >>> 24;
      $1524 = $1523&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$10521746>>0] = $1524;
      $1525 = $1522 >>> 16;
      $1526 = $1525&255;
      $$sroa$6907$0$$sroa$6907$16$10531747 = HEAP32[$6>>2]|0;
      $1527 = ((($$sroa$6907$0$$sroa$6907$16$10531747)) + 1|0);
      HEAP8[$1527>>0] = $1526;
      $1528 = $1522 >>> 8;
      $1529 = $1528&255;
      $$sroa$6907$0$$sroa$6907$16$10541748 = HEAP32[$6>>2]|0;
      $1530 = ((($$sroa$6907$0$$sroa$6907$16$10541748)) + 2|0);
      HEAP8[$1530>>0] = $1529;
      $1531 = $1522&255;
      $$sroa$6907$0$$sroa$6907$16$10551749 = HEAP32[$6>>2]|0;
      $1532 = ((($$sroa$6907$0$$sroa$6907$16$10551749)) + 3|0);
      HEAP8[$1532>>0] = $1531;
      $$sroa$6907$0$$sroa$6907$16$10561750 = HEAP32[$6>>2]|0;
      $1533 = ((($$sroa$6907$0$$sroa$6907$16$10561750)) + 4|0);
      $1534 = $1533;
      HEAP32[$6>>2] = $1534;
      $1535 = 1 << $1519;
      $1536 = (($1535) + -1)|0;
      $1537 = $1536 & $1511;
      $1538 = (32 - ($1519))|0;
      $$sroa$336$51 = $1537;$$sroa$6907$0$$sroa$6907$16$$pre$i17102355 = $1533;$$sroa$6907$0$$sroa$6907$16$100816902225 = $1533;$$sroa$6907$0$$sroa$6907$16$101417112287 = $1533;$$sroa$6907$0$$sroa$6907$16$102116952266 = $1533;$$sroa$6907$0$$sroa$6907$16$102517052332 = $1533;$$sroa$6907$0$$sroa$6907$16$103416802149 = $1533;$$sroa$6907$0$$sroa$6907$16$105017362067 = $1533;$$sroa$6907$0$$sroa$6907$16$106117412041 = $1533;$$sroa$6907$0$$sroa$6907$16$107217312097 = $1533;$$sroa$6907$0$$sroa$6907$16$107916652081 = $1533;$$sroa$6907$0$$sroa$6907$16$108916552029 = $1533;$$sroa$6907$0$$sroa$6907$16$10901650 = $1533;$$sroa$6907$0$$sroa$6907$16$116116602054 = $1533;$$sroa$6907$0$$sroa$6907$16$91317262167 = $1533;$$sroa$6907$0$$sroa$6907$16$92017212205 = $1533;$$sroa$6907$0$$sroa$6907$16$92917162245 = $1533;$$sroa$6907$0$$sroa$6907$16$93517002309 = $1533;$$sroa$6907$0$$sroa$6907$16$93616852186 = $1533;$$sroa$6907$0$$sroa$6907$16$99016752130 = $1533;$$sroa$6907$0$$sroa$6907$16$99816702113 = $1533;$$sroa$719$16 = $1538;
      break;
     }
    } else {
     $1539 = ($1511>>>0)>(65535);
     $1540 = $1511 >>> 16;
     $$$i731 = $1539 ? $1540 : $1511;
     $$2$i732 = $1539 ? 16 : 0;
     $1541 = $$$i731 & 65280;
     $1542 = ($1541|0)==(0);
     $1543 = $$$i731 >>> 8;
     $1544 = $$2$i732 | 8;
     $$119$i733 = $1542 ? $$$i731 : $1543;
     $$1$i734 = $1542 ? $$2$i732 : $1544;
     $1545 = (($$119$i733) + -1)|0;
     $1546 = (8136 + ($1545<<2)|0);
     $1547 = HEAP32[$1546>>2]|0;
     $1548 = $$1$i734 << 1;
     $1549 = (($1547) + ($1548))|0;
     $1550 = $1549 | 1;
     $1551 = ($$sroa$719$15|0)>($1550|0);
     if ($1551) {
      $1552 = $$sroa$336$48 << $1550;
      $1553 = $1552 | $1511;
      $1554 = (($$sroa$719$15) - ($1550))|0;
      $$sroa$336$51 = $1553;$$sroa$6907$0$$sroa$6907$16$$pre$i17102355 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102356;$$sroa$6907$0$$sroa$6907$16$100816902225 = $$sroa$6907$0$$sroa$6907$16$100816902226;$$sroa$6907$0$$sroa$6907$16$101417112287 = $$sroa$6907$0$$sroa$6907$16$101417112288;$$sroa$6907$0$$sroa$6907$16$102116952266 = $$sroa$6907$0$$sroa$6907$16$102116952267;$$sroa$6907$0$$sroa$6907$16$102517052332 = $$sroa$6907$0$$sroa$6907$16$102517052333;$$sroa$6907$0$$sroa$6907$16$103416802149 = $$sroa$6907$0$$sroa$6907$16$103416802150;$$sroa$6907$0$$sroa$6907$16$105017362067 = $$sroa$6907$0$$sroa$6907$16$105017362068;$$sroa$6907$0$$sroa$6907$16$106117412041 = $$sroa$6907$0$$sroa$6907$16$106117412042;$$sroa$6907$0$$sroa$6907$16$107217312097 = $$sroa$6907$0$$sroa$6907$16$107217312098;$$sroa$6907$0$$sroa$6907$16$107916652081 = $$sroa$6907$0$$sroa$6907$16$107916652082;$$sroa$6907$0$$sroa$6907$16$108916552029 = $$sroa$6907$0$$sroa$6907$16$108916552030;$$sroa$6907$0$$sroa$6907$16$10901650 = $$sroa$6907$0$$sroa$6907$16$109016502018;$$sroa$6907$0$$sroa$6907$16$116116602054 = $$sroa$6907$0$$sroa$6907$16$116116602055;$$sroa$6907$0$$sroa$6907$16$91317262167 = $$sroa$6907$0$$sroa$6907$16$91317262168;$$sroa$6907$0$$sroa$6907$16$92017212205 = $$sroa$6907$0$$sroa$6907$16$92017212206;$$sroa$6907$0$$sroa$6907$16$92917162245 = $$sroa$6907$0$$sroa$6907$16$92917162246;$$sroa$6907$0$$sroa$6907$16$93517002309 = $$sroa$6907$0$$sroa$6907$16$93517002310;$$sroa$6907$0$$sroa$6907$16$93616852186 = $$sroa$6907$0$$sroa$6907$16$93616852187;$$sroa$6907$0$$sroa$6907$16$99016752130 = $$sroa$6907$0$$sroa$6907$16$99016752131;$$sroa$6907$0$$sroa$6907$16$99816702113 = $$sroa$6907$0$$sroa$6907$16$99816702114;$$sroa$719$16 = $1554;
      break;
     } else {
      $1555 = (($1550) - ($$sroa$719$15))|0;
      $1556 = $$sroa$336$48 << $$sroa$719$15;
      $1557 = $1511 >>> $1555;
      $1558 = $1557 | $1556;
      $1559 = $1558 >>> 24;
      $1560 = $1559&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$10711645>>0] = $1560;
      $1561 = $1558 >>> 16;
      $1562 = $1561&255;
      $$sroa$6907$0$$sroa$6907$16$10981646 = HEAP32[$6>>2]|0;
      $1563 = ((($$sroa$6907$0$$sroa$6907$16$10981646)) + 1|0);
      HEAP8[$1563>>0] = $1562;
      $1564 = $1558 >>> 8;
      $1565 = $1564&255;
      $$sroa$6907$0$$sroa$6907$16$11101647 = HEAP32[$6>>2]|0;
      $1566 = ((($$sroa$6907$0$$sroa$6907$16$11101647)) + 2|0);
      HEAP8[$1566>>0] = $1565;
      $1567 = $1558&255;
      $$sroa$6907$0$$sroa$6907$16$11001648 = HEAP32[$6>>2]|0;
      $1568 = ((($$sroa$6907$0$$sroa$6907$16$11001648)) + 3|0);
      HEAP8[$1568>>0] = $1567;
      $$sroa$6907$0$$sroa$6907$16$11011649 = HEAP32[$6>>2]|0;
      $1569 = ((($$sroa$6907$0$$sroa$6907$16$11011649)) + 4|0);
      $1570 = $1569;
      HEAP32[$6>>2] = $1570;
      $1571 = 1 << $1555;
      $1572 = (($1571) + -1)|0;
      $1573 = $1572 & $1511;
      $1574 = (32 - ($1555))|0;
      $$sroa$336$51 = $1573;$$sroa$6907$0$$sroa$6907$16$$pre$i17102355 = $1569;$$sroa$6907$0$$sroa$6907$16$100816902225 = $1569;$$sroa$6907$0$$sroa$6907$16$101417112287 = $1569;$$sroa$6907$0$$sroa$6907$16$102116952266 = $1569;$$sroa$6907$0$$sroa$6907$16$102517052332 = $1569;$$sroa$6907$0$$sroa$6907$16$103416802149 = $1569;$$sroa$6907$0$$sroa$6907$16$105017362067 = $1569;$$sroa$6907$0$$sroa$6907$16$106117412041 = $1569;$$sroa$6907$0$$sroa$6907$16$107217312097 = $1569;$$sroa$6907$0$$sroa$6907$16$107916652081 = $1569;$$sroa$6907$0$$sroa$6907$16$108916552029 = $1569;$$sroa$6907$0$$sroa$6907$16$10901650 = $1569;$$sroa$6907$0$$sroa$6907$16$116116602054 = $1569;$$sroa$6907$0$$sroa$6907$16$91317262167 = $1569;$$sroa$6907$0$$sroa$6907$16$92017212205 = $1569;$$sroa$6907$0$$sroa$6907$16$92917162245 = $1569;$$sroa$6907$0$$sroa$6907$16$93517002309 = $1569;$$sroa$6907$0$$sroa$6907$16$93616852186 = $1569;$$sroa$6907$0$$sroa$6907$16$99016752130 = $1569;$$sroa$6907$0$$sroa$6907$16$99816702113 = $1569;$$sroa$719$16 = $1574;
      break;
     }
    }
   } while(0);
   $1575 = HEAP8[$427>>0]|0;
   $1576 = $1575&255;
   $1577 = ($$sroa$719$16|0)>(1);
   if ($1577) {
    $1578 = $$sroa$336$51 << 1;
    $1579 = $1576 | $1578;
    $1580 = (($$sroa$719$16) + -1)|0;
    $$sroa$336$52 = $1579;$$sroa$6907$0$$sroa$6907$16$$pre$i17102354 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102355;$$sroa$6907$0$$sroa$6907$16$100816902224 = $$sroa$6907$0$$sroa$6907$16$100816902225;$$sroa$6907$0$$sroa$6907$16$101417112286 = $$sroa$6907$0$$sroa$6907$16$101417112287;$$sroa$6907$0$$sroa$6907$16$102116952265 = $$sroa$6907$0$$sroa$6907$16$102116952266;$$sroa$6907$0$$sroa$6907$16$102517052331 = $$sroa$6907$0$$sroa$6907$16$102517052332;$$sroa$6907$0$$sroa$6907$16$103416802148 = $$sroa$6907$0$$sroa$6907$16$103416802149;$$sroa$6907$0$$sroa$6907$16$105017362066 = $$sroa$6907$0$$sroa$6907$16$105017362067;$$sroa$6907$0$$sroa$6907$16$10611741 = $$sroa$6907$0$$sroa$6907$16$106117412041;$$sroa$6907$0$$sroa$6907$16$107217312096 = $$sroa$6907$0$$sroa$6907$16$107217312097;$$sroa$6907$0$$sroa$6907$16$107916652080 = $$sroa$6907$0$$sroa$6907$16$107916652081;$$sroa$6907$0$$sroa$6907$16$10891655 = $$sroa$6907$0$$sroa$6907$16$108916552029;$$sroa$6907$0$$sroa$6907$16$116116602053 = $$sroa$6907$0$$sroa$6907$16$116116602054;$$sroa$6907$0$$sroa$6907$16$91317262166 = $$sroa$6907$0$$sroa$6907$16$91317262167;$$sroa$6907$0$$sroa$6907$16$92017212204 = $$sroa$6907$0$$sroa$6907$16$92017212205;$$sroa$6907$0$$sroa$6907$16$92917162244 = $$sroa$6907$0$$sroa$6907$16$92917162245;$$sroa$6907$0$$sroa$6907$16$93517002308 = $$sroa$6907$0$$sroa$6907$16$93517002309;$$sroa$6907$0$$sroa$6907$16$93616852185 = $$sroa$6907$0$$sroa$6907$16$93616852186;$$sroa$6907$0$$sroa$6907$16$99016752129 = $$sroa$6907$0$$sroa$6907$16$99016752130;$$sroa$6907$0$$sroa$6907$16$99816702112 = $$sroa$6907$0$$sroa$6907$16$99816702113;$storemerge$i$i726 = $1580;
   } else {
    $1581 = (1 - ($$sroa$719$16))|0;
    $1582 = $$sroa$336$51 << $$sroa$719$16;
    $1583 = $1576 >>> $1581;
    $1584 = $1583 | $1582;
    $1585 = $1584 >>> 24;
    $1586 = $1585&255;
    HEAP8[$$sroa$6907$0$$sroa$6907$16$10901650>>0] = $1586;
    $1587 = $1584 >>> 16;
    $1588 = $1587&255;
    $$sroa$6907$0$$sroa$6907$16$10911651 = HEAP32[$6>>2]|0;
    $1589 = ((($$sroa$6907$0$$sroa$6907$16$10911651)) + 1|0);
    HEAP8[$1589>>0] = $1588;
    $1590 = $1584 >>> 8;
    $1591 = $1590&255;
    $$sroa$6907$0$$sroa$6907$16$10921652 = HEAP32[$6>>2]|0;
    $1592 = ((($$sroa$6907$0$$sroa$6907$16$10921652)) + 2|0);
    HEAP8[$1592>>0] = $1591;
    $1593 = $1584&255;
    $$sroa$6907$0$$sroa$6907$16$10931653 = HEAP32[$6>>2]|0;
    $1594 = ((($$sroa$6907$0$$sroa$6907$16$10931653)) + 3|0);
    HEAP8[$1594>>0] = $1593;
    $$sroa$6907$0$$sroa$6907$16$10941654 = HEAP32[$6>>2]|0;
    $1595 = ((($$sroa$6907$0$$sroa$6907$16$10941654)) + 4|0);
    $1596 = $1595;
    HEAP32[$6>>2] = $1596;
    $1597 = 1 << $1581;
    $1598 = (($1597) + 1)|0;
    $1599 = $1598 & $1576;
    $1600 = (32 - ($1581))|0;
    $$sroa$336$52 = $1599;$$sroa$6907$0$$sroa$6907$16$$pre$i17102354 = $1595;$$sroa$6907$0$$sroa$6907$16$100816902224 = $1595;$$sroa$6907$0$$sroa$6907$16$101417112286 = $1595;$$sroa$6907$0$$sroa$6907$16$102116952265 = $1595;$$sroa$6907$0$$sroa$6907$16$102517052331 = $1595;$$sroa$6907$0$$sroa$6907$16$103416802148 = $1595;$$sroa$6907$0$$sroa$6907$16$105017362066 = $1595;$$sroa$6907$0$$sroa$6907$16$10611741 = $1595;$$sroa$6907$0$$sroa$6907$16$107217312096 = $1595;$$sroa$6907$0$$sroa$6907$16$107916652080 = $1595;$$sroa$6907$0$$sroa$6907$16$10891655 = $1595;$$sroa$6907$0$$sroa$6907$16$116116602053 = $1595;$$sroa$6907$0$$sroa$6907$16$91317262166 = $1595;$$sroa$6907$0$$sroa$6907$16$92017212204 = $1595;$$sroa$6907$0$$sroa$6907$16$92917162244 = $1595;$$sroa$6907$0$$sroa$6907$16$93517002308 = $1595;$$sroa$6907$0$$sroa$6907$16$93616852185 = $1595;$$sroa$6907$0$$sroa$6907$16$99016752129 = $1595;$$sroa$6907$0$$sroa$6907$16$99816702112 = $1595;$storemerge$i$i726 = $1600;
   }
   $1601 = HEAP32[$433>>2]|0;
   $1602 = (($1601) + -1)|0;
   $1603 = ($1602>>>0)<(256);
   do {
    if ($1603) {
     $1604 = (8136 + ($1602<<2)|0);
     $1605 = HEAP32[$1604>>2]|0;
     $1606 = ($storemerge$i$i726|0)>($1605|0);
     if ($1606) {
      $1607 = $$sroa$336$52 << $1605;
      $1608 = $1607 | $1601;
      $1609 = (($storemerge$i$i726) - ($1605))|0;
      $$sroa$336$55 = $1608;$$sroa$6907$0$$sroa$6907$16$$pre$i17102353 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102354;$$sroa$6907$0$$sroa$6907$16$100816902223 = $$sroa$6907$0$$sroa$6907$16$100816902224;$$sroa$6907$0$$sroa$6907$16$101417112285 = $$sroa$6907$0$$sroa$6907$16$101417112286;$$sroa$6907$0$$sroa$6907$16$102116952264 = $$sroa$6907$0$$sroa$6907$16$102116952265;$$sroa$6907$0$$sroa$6907$16$102517052330 = $$sroa$6907$0$$sroa$6907$16$102517052331;$$sroa$6907$0$$sroa$6907$16$103416802147 = $$sroa$6907$0$$sroa$6907$16$103416802148;$$sroa$6907$0$$sroa$6907$16$10501736 = $$sroa$6907$0$$sroa$6907$16$105017362066;$$sroa$6907$0$$sroa$6907$16$107217312095 = $$sroa$6907$0$$sroa$6907$16$107217312096;$$sroa$6907$0$$sroa$6907$16$107916652079 = $$sroa$6907$0$$sroa$6907$16$107916652080;$$sroa$6907$0$$sroa$6907$16$11611660 = $$sroa$6907$0$$sroa$6907$16$116116602053;$$sroa$6907$0$$sroa$6907$16$91317262165 = $$sroa$6907$0$$sroa$6907$16$91317262166;$$sroa$6907$0$$sroa$6907$16$92017212203 = $$sroa$6907$0$$sroa$6907$16$92017212204;$$sroa$6907$0$$sroa$6907$16$92917162243 = $$sroa$6907$0$$sroa$6907$16$92917162244;$$sroa$6907$0$$sroa$6907$16$93517002307 = $$sroa$6907$0$$sroa$6907$16$93517002308;$$sroa$6907$0$$sroa$6907$16$93616852184 = $$sroa$6907$0$$sroa$6907$16$93616852185;$$sroa$6907$0$$sroa$6907$16$99016752128 = $$sroa$6907$0$$sroa$6907$16$99016752129;$$sroa$6907$0$$sroa$6907$16$99816702111 = $$sroa$6907$0$$sroa$6907$16$99816702112;$$sroa$719$17 = $1609;
      break;
     } else {
      $1610 = (($1605) - ($storemerge$i$i726))|0;
      $1611 = $$sroa$336$52 << $storemerge$i$i726;
      $1612 = $1601 >>> $1610;
      $1613 = $1612 | $1611;
      $1614 = $1613 >>> 24;
      $1615 = $1614&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$10611741>>0] = $1615;
      $1616 = $1613 >>> 16;
      $1617 = $1616&255;
      $$sroa$6907$0$$sroa$6907$16$10621742 = HEAP32[$6>>2]|0;
      $1618 = ((($$sroa$6907$0$$sroa$6907$16$10621742)) + 1|0);
      HEAP8[$1618>>0] = $1617;
      $1619 = $1613 >>> 8;
      $1620 = $1619&255;
      $$sroa$6907$0$$sroa$6907$16$10631743 = HEAP32[$6>>2]|0;
      $1621 = ((($$sroa$6907$0$$sroa$6907$16$10631743)) + 2|0);
      HEAP8[$1621>>0] = $1620;
      $1622 = $1613&255;
      $$sroa$6907$0$$sroa$6907$16$10641744 = HEAP32[$6>>2]|0;
      $1623 = ((($$sroa$6907$0$$sroa$6907$16$10641744)) + 3|0);
      HEAP8[$1623>>0] = $1622;
      $$sroa$6907$0$$sroa$6907$16$10651745 = HEAP32[$6>>2]|0;
      $1624 = ((($$sroa$6907$0$$sroa$6907$16$10651745)) + 4|0);
      $1625 = $1624;
      HEAP32[$6>>2] = $1625;
      $1626 = 1 << $1610;
      $1627 = (($1626) + -1)|0;
      $1628 = $1627 & $1601;
      $1629 = (32 - ($1610))|0;
      $$sroa$336$55 = $1628;$$sroa$6907$0$$sroa$6907$16$$pre$i17102353 = $1624;$$sroa$6907$0$$sroa$6907$16$100816902223 = $1624;$$sroa$6907$0$$sroa$6907$16$101417112285 = $1624;$$sroa$6907$0$$sroa$6907$16$102116952264 = $1624;$$sroa$6907$0$$sroa$6907$16$102517052330 = $1624;$$sroa$6907$0$$sroa$6907$16$103416802147 = $1624;$$sroa$6907$0$$sroa$6907$16$10501736 = $1624;$$sroa$6907$0$$sroa$6907$16$107217312095 = $1624;$$sroa$6907$0$$sroa$6907$16$107916652079 = $1624;$$sroa$6907$0$$sroa$6907$16$11611660 = $1624;$$sroa$6907$0$$sroa$6907$16$91317262165 = $1624;$$sroa$6907$0$$sroa$6907$16$92017212203 = $1624;$$sroa$6907$0$$sroa$6907$16$92917162243 = $1624;$$sroa$6907$0$$sroa$6907$16$93517002307 = $1624;$$sroa$6907$0$$sroa$6907$16$93616852184 = $1624;$$sroa$6907$0$$sroa$6907$16$99016752128 = $1624;$$sroa$6907$0$$sroa$6907$16$99816702111 = $1624;$$sroa$719$17 = $1629;
      break;
     }
    } else {
     $1630 = ($1601>>>0)>(65535);
     $1631 = $1601 >>> 16;
     $$$i719 = $1630 ? $1631 : $1601;
     $$2$i720 = $1630 ? 16 : 0;
     $1632 = $$$i719 & 65280;
     $1633 = ($1632|0)==(0);
     $1634 = $$$i719 >>> 8;
     $1635 = $$2$i720 | 8;
     $$119$i721 = $1633 ? $$$i719 : $1634;
     $$1$i722 = $1633 ? $$2$i720 : $1635;
     $1636 = (($$119$i721) + -1)|0;
     $1637 = (8136 + ($1636<<2)|0);
     $1638 = HEAP32[$1637>>2]|0;
     $1639 = $$1$i722 << 1;
     $1640 = (($1638) + ($1639))|0;
     $1641 = $1640 | 1;
     $1642 = ($storemerge$i$i726|0)>($1641|0);
     if ($1642) {
      $1643 = $$sroa$336$52 << $1641;
      $1644 = $1643 | $1601;
      $1645 = (($storemerge$i$i726) - ($1641))|0;
      $$sroa$336$55 = $1644;$$sroa$6907$0$$sroa$6907$16$$pre$i17102353 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102354;$$sroa$6907$0$$sroa$6907$16$100816902223 = $$sroa$6907$0$$sroa$6907$16$100816902224;$$sroa$6907$0$$sroa$6907$16$101417112285 = $$sroa$6907$0$$sroa$6907$16$101417112286;$$sroa$6907$0$$sroa$6907$16$102116952264 = $$sroa$6907$0$$sroa$6907$16$102116952265;$$sroa$6907$0$$sroa$6907$16$102517052330 = $$sroa$6907$0$$sroa$6907$16$102517052331;$$sroa$6907$0$$sroa$6907$16$103416802147 = $$sroa$6907$0$$sroa$6907$16$103416802148;$$sroa$6907$0$$sroa$6907$16$10501736 = $$sroa$6907$0$$sroa$6907$16$105017362066;$$sroa$6907$0$$sroa$6907$16$107217312095 = $$sroa$6907$0$$sroa$6907$16$107217312096;$$sroa$6907$0$$sroa$6907$16$107916652079 = $$sroa$6907$0$$sroa$6907$16$107916652080;$$sroa$6907$0$$sroa$6907$16$11611660 = $$sroa$6907$0$$sroa$6907$16$116116602053;$$sroa$6907$0$$sroa$6907$16$91317262165 = $$sroa$6907$0$$sroa$6907$16$91317262166;$$sroa$6907$0$$sroa$6907$16$92017212203 = $$sroa$6907$0$$sroa$6907$16$92017212204;$$sroa$6907$0$$sroa$6907$16$92917162243 = $$sroa$6907$0$$sroa$6907$16$92917162244;$$sroa$6907$0$$sroa$6907$16$93517002307 = $$sroa$6907$0$$sroa$6907$16$93517002308;$$sroa$6907$0$$sroa$6907$16$93616852184 = $$sroa$6907$0$$sroa$6907$16$93616852185;$$sroa$6907$0$$sroa$6907$16$99016752128 = $$sroa$6907$0$$sroa$6907$16$99016752129;$$sroa$6907$0$$sroa$6907$16$99816702111 = $$sroa$6907$0$$sroa$6907$16$99816702112;$$sroa$719$17 = $1645;
      break;
     } else {
      $1646 = (($1641) - ($storemerge$i$i726))|0;
      $1647 = $$sroa$336$52 << $storemerge$i$i726;
      $1648 = $1601 >>> $1646;
      $1649 = $1648 | $1647;
      $1650 = $1649 >>> 24;
      $1651 = $1650&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$10891655>>0] = $1651;
      $1652 = $1649 >>> 16;
      $1653 = $1652&255;
      $$sroa$6907$0$$sroa$6907$16$10811656 = HEAP32[$6>>2]|0;
      $1654 = ((($$sroa$6907$0$$sroa$6907$16$10811656)) + 1|0);
      HEAP8[$1654>>0] = $1653;
      $1655 = $1649 >>> 8;
      $1656 = $1655&255;
      $$sroa$6907$0$$sroa$6907$16$10821657 = HEAP32[$6>>2]|0;
      $1657 = ((($$sroa$6907$0$$sroa$6907$16$10821657)) + 2|0);
      HEAP8[$1657>>0] = $1656;
      $1658 = $1649&255;
      $$sroa$6907$0$$sroa$6907$16$10831658 = HEAP32[$6>>2]|0;
      $1659 = ((($$sroa$6907$0$$sroa$6907$16$10831658)) + 3|0);
      HEAP8[$1659>>0] = $1658;
      $$sroa$6907$0$$sroa$6907$16$10841659 = HEAP32[$6>>2]|0;
      $1660 = ((($$sroa$6907$0$$sroa$6907$16$10841659)) + 4|0);
      $1661 = $1660;
      HEAP32[$6>>2] = $1661;
      $1662 = 1 << $1646;
      $1663 = (($1662) + -1)|0;
      $1664 = $1663 & $1601;
      $1665 = (32 - ($1646))|0;
      $$sroa$336$55 = $1664;$$sroa$6907$0$$sroa$6907$16$$pre$i17102353 = $1660;$$sroa$6907$0$$sroa$6907$16$100816902223 = $1660;$$sroa$6907$0$$sroa$6907$16$101417112285 = $1660;$$sroa$6907$0$$sroa$6907$16$102116952264 = $1660;$$sroa$6907$0$$sroa$6907$16$102517052330 = $1660;$$sroa$6907$0$$sroa$6907$16$103416802147 = $1660;$$sroa$6907$0$$sroa$6907$16$10501736 = $1660;$$sroa$6907$0$$sroa$6907$16$107217312095 = $1660;$$sroa$6907$0$$sroa$6907$16$107916652079 = $1660;$$sroa$6907$0$$sroa$6907$16$11611660 = $1660;$$sroa$6907$0$$sroa$6907$16$91317262165 = $1660;$$sroa$6907$0$$sroa$6907$16$92017212203 = $1660;$$sroa$6907$0$$sroa$6907$16$92917162243 = $1660;$$sroa$6907$0$$sroa$6907$16$93517002307 = $1660;$$sroa$6907$0$$sroa$6907$16$93616852184 = $1660;$$sroa$6907$0$$sroa$6907$16$99016752128 = $1660;$$sroa$6907$0$$sroa$6907$16$99816702111 = $1660;$$sroa$719$17 = $1665;
      break;
     }
    }
   } while(0);
   $1666 = HEAP32[$449>>2]|0;
   $1667 = (($1666) + -1)|0;
   $1668 = ($1667>>>0)<(256);
   do {
    if ($1668) {
     $1669 = (8136 + ($1667<<2)|0);
     $1670 = HEAP32[$1669>>2]|0;
     $1671 = ($$sroa$719$17|0)>($1670|0);
     if ($1671) {
      $1672 = $$sroa$336$55 << $1670;
      $1673 = $1672 | $1666;
      $1674 = (($$sroa$719$17) - ($1670))|0;
      $$sroa$336$58 = $1673;$$sroa$6907$0$$sroa$6907$16$$pre$i17102352 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102353;$$sroa$6907$0$$sroa$6907$16$100816902222 = $$sroa$6907$0$$sroa$6907$16$100816902223;$$sroa$6907$0$$sroa$6907$16$101417112284 = $$sroa$6907$0$$sroa$6907$16$101417112285;$$sroa$6907$0$$sroa$6907$16$102116952263 = $$sroa$6907$0$$sroa$6907$16$102116952264;$$sroa$6907$0$$sroa$6907$16$102517052329 = $$sroa$6907$0$$sroa$6907$16$102517052330;$$sroa$6907$0$$sroa$6907$16$103416802146 = $$sroa$6907$0$$sroa$6907$16$103416802147;$$sroa$6907$0$$sroa$6907$16$107217312094 = $$sroa$6907$0$$sroa$6907$16$107217312095;$$sroa$6907$0$$sroa$6907$16$10791665 = $$sroa$6907$0$$sroa$6907$16$107916652079;$$sroa$6907$0$$sroa$6907$16$91317262164 = $$sroa$6907$0$$sroa$6907$16$91317262165;$$sroa$6907$0$$sroa$6907$16$92017212202 = $$sroa$6907$0$$sroa$6907$16$92017212203;$$sroa$6907$0$$sroa$6907$16$92917162242 = $$sroa$6907$0$$sroa$6907$16$92917162243;$$sroa$6907$0$$sroa$6907$16$93517002306 = $$sroa$6907$0$$sroa$6907$16$93517002307;$$sroa$6907$0$$sroa$6907$16$93616852183 = $$sroa$6907$0$$sroa$6907$16$93616852184;$$sroa$6907$0$$sroa$6907$16$99016752127 = $$sroa$6907$0$$sroa$6907$16$99016752128;$$sroa$6907$0$$sroa$6907$16$99816702110 = $$sroa$6907$0$$sroa$6907$16$99816702111;$$sroa$719$18 = $1674;
      break;
     } else {
      $1675 = (($1670) - ($$sroa$719$17))|0;
      $1676 = $$sroa$336$55 << $$sroa$719$17;
      $1677 = $1666 >>> $1675;
      $1678 = $1677 | $1676;
      $1679 = $1678 >>> 24;
      $1680 = $1679&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$10501736>>0] = $1680;
      $1681 = $1678 >>> 16;
      $1682 = $1681&255;
      $$sroa$6907$0$$sroa$6907$16$10781737 = HEAP32[$6>>2]|0;
      $1683 = ((($$sroa$6907$0$$sroa$6907$16$10781737)) + 1|0);
      HEAP8[$1683>>0] = $1682;
      $1684 = $1678 >>> 8;
      $1685 = $1684&255;
      $$sroa$6907$0$$sroa$6907$16$11531738 = HEAP32[$6>>2]|0;
      $1686 = ((($$sroa$6907$0$$sroa$6907$16$11531738)) + 2|0);
      HEAP8[$1686>>0] = $1685;
      $1687 = $1678&255;
      $$sroa$6907$0$$sroa$6907$16$11541739 = HEAP32[$6>>2]|0;
      $1688 = ((($$sroa$6907$0$$sroa$6907$16$11541739)) + 3|0);
      HEAP8[$1688>>0] = $1687;
      $$sroa$6907$0$$sroa$6907$16$11551740 = HEAP32[$6>>2]|0;
      $1689 = ((($$sroa$6907$0$$sroa$6907$16$11551740)) + 4|0);
      $1690 = $1689;
      HEAP32[$6>>2] = $1690;
      $1691 = 1 << $1675;
      $1692 = (($1691) + -1)|0;
      $1693 = $1692 & $1666;
      $1694 = (32 - ($1675))|0;
      $$sroa$336$58 = $1693;$$sroa$6907$0$$sroa$6907$16$$pre$i17102352 = $1689;$$sroa$6907$0$$sroa$6907$16$100816902222 = $1689;$$sroa$6907$0$$sroa$6907$16$101417112284 = $1689;$$sroa$6907$0$$sroa$6907$16$102116952263 = $1689;$$sroa$6907$0$$sroa$6907$16$102517052329 = $1689;$$sroa$6907$0$$sroa$6907$16$103416802146 = $1689;$$sroa$6907$0$$sroa$6907$16$107217312094 = $1689;$$sroa$6907$0$$sroa$6907$16$10791665 = $1689;$$sroa$6907$0$$sroa$6907$16$91317262164 = $1689;$$sroa$6907$0$$sroa$6907$16$92017212202 = $1689;$$sroa$6907$0$$sroa$6907$16$92917162242 = $1689;$$sroa$6907$0$$sroa$6907$16$93517002306 = $1689;$$sroa$6907$0$$sroa$6907$16$93616852183 = $1689;$$sroa$6907$0$$sroa$6907$16$99016752127 = $1689;$$sroa$6907$0$$sroa$6907$16$99816702110 = $1689;$$sroa$719$18 = $1694;
      break;
     }
    } else {
     $1695 = ($1666>>>0)>(65535);
     $1696 = $1666 >>> 16;
     $$$i710 = $1695 ? $1696 : $1666;
     $$2$i711 = $1695 ? 16 : 0;
     $1697 = $$$i710 & 65280;
     $1698 = ($1697|0)==(0);
     $1699 = $$$i710 >>> 8;
     $1700 = $$2$i711 | 8;
     $$119$i712 = $1698 ? $$$i710 : $1699;
     $$1$i713 = $1698 ? $$2$i711 : $1700;
     $1701 = (($$119$i712) + -1)|0;
     $1702 = (8136 + ($1701<<2)|0);
     $1703 = HEAP32[$1702>>2]|0;
     $1704 = $$1$i713 << 1;
     $1705 = (($1703) + ($1704))|0;
     $1706 = $1705 | 1;
     $1707 = ($$sroa$719$17|0)>($1706|0);
     if ($1707) {
      $1708 = $$sroa$336$55 << $1706;
      $1709 = $1708 | $1666;
      $1710 = (($$sroa$719$17) - ($1706))|0;
      $$sroa$336$58 = $1709;$$sroa$6907$0$$sroa$6907$16$$pre$i17102352 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102353;$$sroa$6907$0$$sroa$6907$16$100816902222 = $$sroa$6907$0$$sroa$6907$16$100816902223;$$sroa$6907$0$$sroa$6907$16$101417112284 = $$sroa$6907$0$$sroa$6907$16$101417112285;$$sroa$6907$0$$sroa$6907$16$102116952263 = $$sroa$6907$0$$sroa$6907$16$102116952264;$$sroa$6907$0$$sroa$6907$16$102517052329 = $$sroa$6907$0$$sroa$6907$16$102517052330;$$sroa$6907$0$$sroa$6907$16$103416802146 = $$sroa$6907$0$$sroa$6907$16$103416802147;$$sroa$6907$0$$sroa$6907$16$107217312094 = $$sroa$6907$0$$sroa$6907$16$107217312095;$$sroa$6907$0$$sroa$6907$16$10791665 = $$sroa$6907$0$$sroa$6907$16$107916652079;$$sroa$6907$0$$sroa$6907$16$91317262164 = $$sroa$6907$0$$sroa$6907$16$91317262165;$$sroa$6907$0$$sroa$6907$16$92017212202 = $$sroa$6907$0$$sroa$6907$16$92017212203;$$sroa$6907$0$$sroa$6907$16$92917162242 = $$sroa$6907$0$$sroa$6907$16$92917162243;$$sroa$6907$0$$sroa$6907$16$93517002306 = $$sroa$6907$0$$sroa$6907$16$93517002307;$$sroa$6907$0$$sroa$6907$16$93616852183 = $$sroa$6907$0$$sroa$6907$16$93616852184;$$sroa$6907$0$$sroa$6907$16$99016752127 = $$sroa$6907$0$$sroa$6907$16$99016752128;$$sroa$6907$0$$sroa$6907$16$99816702110 = $$sroa$6907$0$$sroa$6907$16$99816702111;$$sroa$719$18 = $1710;
      break;
     } else {
      $1711 = (($1706) - ($$sroa$719$17))|0;
      $1712 = $$sroa$336$55 << $$sroa$719$17;
      $1713 = $1666 >>> $1711;
      $1714 = $1713 | $1712;
      $1715 = $1714 >>> 24;
      $1716 = $1715&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$11611660>>0] = $1716;
      $1717 = $1714 >>> 16;
      $1718 = $1717&255;
      $$sroa$6907$0$$sroa$6907$16$10661661 = HEAP32[$6>>2]|0;
      $1719 = ((($$sroa$6907$0$$sroa$6907$16$10661661)) + 1|0);
      HEAP8[$1719>>0] = $1718;
      $1720 = $1714 >>> 8;
      $1721 = $1720&255;
      $$sroa$6907$0$$sroa$6907$16$11621662 = HEAP32[$6>>2]|0;
      $1722 = ((($$sroa$6907$0$$sroa$6907$16$11621662)) + 2|0);
      HEAP8[$1722>>0] = $1721;
      $1723 = $1714&255;
      $$sroa$6907$0$$sroa$6907$16$11631663 = HEAP32[$6>>2]|0;
      $1724 = ((($$sroa$6907$0$$sroa$6907$16$11631663)) + 3|0);
      HEAP8[$1724>>0] = $1723;
      $$sroa$6907$0$$sroa$6907$16$11641664 = HEAP32[$6>>2]|0;
      $1725 = ((($$sroa$6907$0$$sroa$6907$16$11641664)) + 4|0);
      $1726 = $1725;
      HEAP32[$6>>2] = $1726;
      $1727 = 1 << $1711;
      $1728 = (($1727) + -1)|0;
      $1729 = $1728 & $1666;
      $1730 = (32 - ($1711))|0;
      $$sroa$336$58 = $1729;$$sroa$6907$0$$sroa$6907$16$$pre$i17102352 = $1725;$$sroa$6907$0$$sroa$6907$16$100816902222 = $1725;$$sroa$6907$0$$sroa$6907$16$101417112284 = $1725;$$sroa$6907$0$$sroa$6907$16$102116952263 = $1725;$$sroa$6907$0$$sroa$6907$16$102517052329 = $1725;$$sroa$6907$0$$sroa$6907$16$103416802146 = $1725;$$sroa$6907$0$$sroa$6907$16$107217312094 = $1725;$$sroa$6907$0$$sroa$6907$16$10791665 = $1725;$$sroa$6907$0$$sroa$6907$16$91317262164 = $1725;$$sroa$6907$0$$sroa$6907$16$92017212202 = $1725;$$sroa$6907$0$$sroa$6907$16$92917162242 = $1725;$$sroa$6907$0$$sroa$6907$16$93517002306 = $1725;$$sroa$6907$0$$sroa$6907$16$93616852183 = $1725;$$sroa$6907$0$$sroa$6907$16$99016752127 = $1725;$$sroa$6907$0$$sroa$6907$16$99816702110 = $1725;$$sroa$719$18 = $1730;
      break;
     }
    }
   } while(0);
   $1731 = HEAP8[$499>>0]|0;
   $1732 = $1731&255;
   $1733 = ($$sroa$719$18|0)>(1);
   if ($1733) {
    $1734 = $$sroa$336$58 << 1;
    $1735 = $1732 | $1734;
    $1736 = (($$sroa$719$18) + -1)|0;
    $$sroa$336$59 = $1735;$$sroa$6907$0$$sroa$6907$16$$pre$i17102351 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102352;$$sroa$6907$0$$sroa$6907$16$100816902221 = $$sroa$6907$0$$sroa$6907$16$100816902222;$$sroa$6907$0$$sroa$6907$16$101417112283 = $$sroa$6907$0$$sroa$6907$16$101417112284;$$sroa$6907$0$$sroa$6907$16$102116952262 = $$sroa$6907$0$$sroa$6907$16$102116952263;$$sroa$6907$0$$sroa$6907$16$102517052328 = $$sroa$6907$0$$sroa$6907$16$102517052329;$$sroa$6907$0$$sroa$6907$16$103416802145 = $$sroa$6907$0$$sroa$6907$16$103416802146;$$sroa$6907$0$$sroa$6907$16$10721731 = $$sroa$6907$0$$sroa$6907$16$107217312094;$$sroa$6907$0$$sroa$6907$16$91317262163 = $$sroa$6907$0$$sroa$6907$16$91317262164;$$sroa$6907$0$$sroa$6907$16$92017212201 = $$sroa$6907$0$$sroa$6907$16$92017212202;$$sroa$6907$0$$sroa$6907$16$92917162241 = $$sroa$6907$0$$sroa$6907$16$92917162242;$$sroa$6907$0$$sroa$6907$16$93517002305 = $$sroa$6907$0$$sroa$6907$16$93517002306;$$sroa$6907$0$$sroa$6907$16$93616852182 = $$sroa$6907$0$$sroa$6907$16$93616852183;$$sroa$6907$0$$sroa$6907$16$99016752126 = $$sroa$6907$0$$sroa$6907$16$99016752127;$$sroa$6907$0$$sroa$6907$16$99816702109 = $$sroa$6907$0$$sroa$6907$16$99816702110;$1757 = $1731;$storemerge$i$i705 = $1736;
   } else {
    $1737 = (1 - ($$sroa$719$18))|0;
    $1738 = $$sroa$336$58 << $$sroa$719$18;
    $1739 = $1732 >>> $1737;
    $1740 = $1739 | $1738;
    $1741 = $1740 >>> 24;
    $1742 = $1741&255;
    HEAP8[$$sroa$6907$0$$sroa$6907$16$10791665>>0] = $1742;
    $1743 = $1740 >>> 16;
    $1744 = $1743&255;
    $$sroa$6907$0$$sroa$6907$16$10511666 = HEAP32[$6>>2]|0;
    $1745 = ((($$sroa$6907$0$$sroa$6907$16$10511666)) + 1|0);
    HEAP8[$1745>>0] = $1744;
    $1746 = $1740 >>> 8;
    $1747 = $1746&255;
    $$sroa$6907$0$$sroa$6907$16$10421667 = HEAP32[$6>>2]|0;
    $1748 = ((($$sroa$6907$0$$sroa$6907$16$10421667)) + 2|0);
    HEAP8[$1748>>0] = $1747;
    $1749 = $1740&255;
    $$sroa$6907$0$$sroa$6907$16$10431668 = HEAP32[$6>>2]|0;
    $1750 = ((($$sroa$6907$0$$sroa$6907$16$10431668)) + 3|0);
    HEAP8[$1750>>0] = $1749;
    $$sroa$6907$0$$sroa$6907$16$10441669 = HEAP32[$6>>2]|0;
    $1751 = ((($$sroa$6907$0$$sroa$6907$16$10441669)) + 4|0);
    $1752 = $1751;
    HEAP32[$6>>2] = $1752;
    $1753 = 1 << $1737;
    $1754 = (($1753) + 1)|0;
    $1755 = $1754 & $1732;
    $1756 = (32 - ($1737))|0;
    $$pre2092 = HEAP8[$499>>0]|0;
    $$sroa$336$59 = $1755;$$sroa$6907$0$$sroa$6907$16$$pre$i17102351 = $1751;$$sroa$6907$0$$sroa$6907$16$100816902221 = $1751;$$sroa$6907$0$$sroa$6907$16$101417112283 = $1751;$$sroa$6907$0$$sroa$6907$16$102116952262 = $1751;$$sroa$6907$0$$sroa$6907$16$102517052328 = $1751;$$sroa$6907$0$$sroa$6907$16$103416802145 = $1751;$$sroa$6907$0$$sroa$6907$16$10721731 = $1751;$$sroa$6907$0$$sroa$6907$16$91317262163 = $1751;$$sroa$6907$0$$sroa$6907$16$92017212201 = $1751;$$sroa$6907$0$$sroa$6907$16$92917162241 = $1751;$$sroa$6907$0$$sroa$6907$16$93517002305 = $1751;$$sroa$6907$0$$sroa$6907$16$93616852182 = $1751;$$sroa$6907$0$$sroa$6907$16$99016752126 = $1751;$$sroa$6907$0$$sroa$6907$16$99816702109 = $1751;$1757 = $$pre2092;$storemerge$i$i705 = $1756;
   }
   $1758 = ($1757<<24>>24)==(0);
   do {
    if ($1758) {
     $1759 = ((($7)) + 325|0);
     $1760 = HEAP8[$1759>>0]|0;
     $1761 = $1760&255;
     $1762 = ($storemerge$i$i705|0)>(1);
     if ($1762) {
      $1763 = $$sroa$336$59 << 1;
      $1764 = $1761 | $1763;
      $1765 = (($storemerge$i$i705) + -1)|0;
      $$sroa$336$61 = $1764;$$sroa$6907$0$$sroa$6907$16$$pre$i17102350 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102351;$$sroa$6907$0$$sroa$6907$16$100816902220 = $$sroa$6907$0$$sroa$6907$16$100816902221;$$sroa$6907$0$$sroa$6907$16$101417112282 = $$sroa$6907$0$$sroa$6907$16$101417112283;$$sroa$6907$0$$sroa$6907$16$102116952261 = $$sroa$6907$0$$sroa$6907$16$102116952262;$$sroa$6907$0$$sroa$6907$16$102517052327 = $$sroa$6907$0$$sroa$6907$16$102517052328;$$sroa$6907$0$$sroa$6907$16$103416802144 = $$sroa$6907$0$$sroa$6907$16$103416802145;$$sroa$6907$0$$sroa$6907$16$91317262162 = $$sroa$6907$0$$sroa$6907$16$91317262163;$$sroa$6907$0$$sroa$6907$16$92017212200 = $$sroa$6907$0$$sroa$6907$16$92017212201;$$sroa$6907$0$$sroa$6907$16$92917162240 = $$sroa$6907$0$$sroa$6907$16$92917162241;$$sroa$6907$0$$sroa$6907$16$93517002304 = $$sroa$6907$0$$sroa$6907$16$93517002305;$$sroa$6907$0$$sroa$6907$16$93616852181 = $$sroa$6907$0$$sroa$6907$16$93616852182;$$sroa$6907$0$$sroa$6907$16$99016752125 = $$sroa$6907$0$$sroa$6907$16$99016752126;$$sroa$6907$0$$sroa$6907$16$9981670 = $$sroa$6907$0$$sroa$6907$16$99816702109;$$sroa$719$19 = $1765;
      break;
     } else {
      $1766 = (1 - ($storemerge$i$i705))|0;
      $1767 = $$sroa$336$59 << $storemerge$i$i705;
      $1768 = $1761 >>> $1766;
      $1769 = $1768 | $1767;
      $1770 = $1769 >>> 24;
      $1771 = $1770&255;
      HEAP8[$$sroa$6907$0$$sroa$6907$16$10721731>>0] = $1771;
      $1772 = $1769 >>> 16;
      $1773 = $1772&255;
      $$sroa$6907$0$$sroa$6907$16$10731732 = HEAP32[$6>>2]|0;
      $1774 = ((($$sroa$6907$0$$sroa$6907$16$10731732)) + 1|0);
      HEAP8[$1774>>0] = $1773;
      $1775 = $1769 >>> 8;
      $1776 = $1775&255;
      $$sroa$6907$0$$sroa$6907$16$10741733 = HEAP32[$6>>2]|0;
      $1777 = ((($$sroa$6907$0$$sroa$6907$16$10741733)) + 2|0);
      HEAP8[$1777>>0] = $1776;
      $1778 = $1769&255;
      $$sroa$6907$0$$sroa$6907$16$10751734 = HEAP32[$6>>2]|0;
      $1779 = ((($$sroa$6907$0$$sroa$6907$16$10751734)) + 3|0);
      HEAP8[$1779>>0] = $1778;
      $$sroa$6907$0$$sroa$6907$16$10761735 = HEAP32[$6>>2]|0;
      $1780 = ((($$sroa$6907$0$$sroa$6907$16$10761735)) + 4|0);
      $1781 = $1780;
      HEAP32[$6>>2] = $1781;
      $1782 = 1 << $1766;
      $1783 = (($1782) + 1)|0;
      $1784 = $1761 & $1783;
      $1785 = (32 - ($1766))|0;
      $$sroa$336$61 = $1784;$$sroa$6907$0$$sroa$6907$16$$pre$i17102350 = $1780;$$sroa$6907$0$$sroa$6907$16$100816902220 = $1780;$$sroa$6907$0$$sroa$6907$16$101417112282 = $1780;$$sroa$6907$0$$sroa$6907$16$102116952261 = $1780;$$sroa$6907$0$$sroa$6907$16$102517052327 = $1780;$$sroa$6907$0$$sroa$6907$16$103416802144 = $1780;$$sroa$6907$0$$sroa$6907$16$91317262162 = $1780;$$sroa$6907$0$$sroa$6907$16$92017212200 = $1780;$$sroa$6907$0$$sroa$6907$16$92917162240 = $1780;$$sroa$6907$0$$sroa$6907$16$93517002304 = $1780;$$sroa$6907$0$$sroa$6907$16$93616852181 = $1780;$$sroa$6907$0$$sroa$6907$16$99016752125 = $1780;$$sroa$6907$0$$sroa$6907$16$9981670 = $1780;$$sroa$719$19 = $1785;
      break;
     }
    } else {
     $$sroa$336$61 = $$sroa$336$59;$$sroa$6907$0$$sroa$6907$16$$pre$i17102350 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102351;$$sroa$6907$0$$sroa$6907$16$100816902220 = $$sroa$6907$0$$sroa$6907$16$100816902221;$$sroa$6907$0$$sroa$6907$16$101417112282 = $$sroa$6907$0$$sroa$6907$16$101417112283;$$sroa$6907$0$$sroa$6907$16$102116952261 = $$sroa$6907$0$$sroa$6907$16$102116952262;$$sroa$6907$0$$sroa$6907$16$102517052327 = $$sroa$6907$0$$sroa$6907$16$102517052328;$$sroa$6907$0$$sroa$6907$16$103416802144 = $$sroa$6907$0$$sroa$6907$16$103416802145;$$sroa$6907$0$$sroa$6907$16$91317262162 = $$sroa$6907$0$$sroa$6907$16$91317262163;$$sroa$6907$0$$sroa$6907$16$92017212200 = $$sroa$6907$0$$sroa$6907$16$92017212201;$$sroa$6907$0$$sroa$6907$16$92917162240 = $$sroa$6907$0$$sroa$6907$16$92917162241;$$sroa$6907$0$$sroa$6907$16$93517002304 = $$sroa$6907$0$$sroa$6907$16$93517002305;$$sroa$6907$0$$sroa$6907$16$93616852181 = $$sroa$6907$0$$sroa$6907$16$93616852182;$$sroa$6907$0$$sroa$6907$16$99016752125 = $$sroa$6907$0$$sroa$6907$16$99016752126;$$sroa$6907$0$$sroa$6907$16$9981670 = $$sroa$6907$0$$sroa$6907$16$99816702109;$$sroa$719$19 = $storemerge$i$i705;
    }
   } while(0);
   $1786 = HEAP8[$524>>0]|0;
   $1787 = $1786&255;
   $1788 = ($$sroa$719$19|0)>(1);
   if ($1788) {
    $1789 = $$sroa$336$61 << 1;
    $1790 = $1787 | $1789;
    $1791 = (($$sroa$719$19) + -1)|0;
    $$sroa$336$62 = $1790;$$sroa$6907$0$$sroa$6907$16$$pre$i17102349 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102350;$$sroa$6907$0$$sroa$6907$16$100816902219 = $$sroa$6907$0$$sroa$6907$16$100816902220;$$sroa$6907$0$$sroa$6907$16$101417112281 = $$sroa$6907$0$$sroa$6907$16$101417112282;$$sroa$6907$0$$sroa$6907$16$102116952260 = $$sroa$6907$0$$sroa$6907$16$102116952261;$$sroa$6907$0$$sroa$6907$16$102517052326 = $$sroa$6907$0$$sroa$6907$16$102517052327;$$sroa$6907$0$$sroa$6907$16$103416802143 = $$sroa$6907$0$$sroa$6907$16$103416802144;$$sroa$6907$0$$sroa$6907$16$91317262161 = $$sroa$6907$0$$sroa$6907$16$91317262162;$$sroa$6907$0$$sroa$6907$16$92017212199 = $$sroa$6907$0$$sroa$6907$16$92017212200;$$sroa$6907$0$$sroa$6907$16$92917162239 = $$sroa$6907$0$$sroa$6907$16$92917162240;$$sroa$6907$0$$sroa$6907$16$93517002303 = $$sroa$6907$0$$sroa$6907$16$93517002304;$$sroa$6907$0$$sroa$6907$16$93616852180 = $$sroa$6907$0$$sroa$6907$16$93616852181;$$sroa$6907$0$$sroa$6907$16$9901675 = $$sroa$6907$0$$sroa$6907$16$99016752125;$storemerge$i$i699 = $1791;
   } else {
    $1792 = (1 - ($$sroa$719$19))|0;
    $1793 = $$sroa$336$61 << $$sroa$719$19;
    $1794 = $1787 >>> $1792;
    $1795 = $1794 | $1793;
    $1796 = $1795 >>> 24;
    $1797 = $1796&255;
    HEAP8[$$sroa$6907$0$$sroa$6907$16$9981670>>0] = $1797;
    $1798 = $1795 >>> 16;
    $1799 = $1798&255;
    $$sroa$6907$0$$sroa$6907$16$9971671 = HEAP32[$6>>2]|0;
    $1800 = ((($$sroa$6907$0$$sroa$6907$16$9971671)) + 1|0);
    HEAP8[$1800>>0] = $1799;
    $1801 = $1795 >>> 8;
    $1802 = $1801&255;
    $$sroa$6907$0$$sroa$6907$16$10011672 = HEAP32[$6>>2]|0;
    $1803 = ((($$sroa$6907$0$$sroa$6907$16$10011672)) + 2|0);
    HEAP8[$1803>>0] = $1802;
    $1804 = $1795&255;
    $$sroa$6907$0$$sroa$6907$16$10021673 = HEAP32[$6>>2]|0;
    $1805 = ((($$sroa$6907$0$$sroa$6907$16$10021673)) + 3|0);
    HEAP8[$1805>>0] = $1804;
    $$sroa$6907$0$$sroa$6907$16$10031674 = HEAP32[$6>>2]|0;
    $1806 = ((($$sroa$6907$0$$sroa$6907$16$10031674)) + 4|0);
    $1807 = $1806;
    HEAP32[$6>>2] = $1807;
    $1808 = 1 << $1792;
    $1809 = (($1808) + 1)|0;
    $1810 = $1809 & $1787;
    $1811 = (32 - ($1792))|0;
    $$sroa$336$62 = $1810;$$sroa$6907$0$$sroa$6907$16$$pre$i17102349 = $1806;$$sroa$6907$0$$sroa$6907$16$100816902219 = $1806;$$sroa$6907$0$$sroa$6907$16$101417112281 = $1806;$$sroa$6907$0$$sroa$6907$16$102116952260 = $1806;$$sroa$6907$0$$sroa$6907$16$102517052326 = $1806;$$sroa$6907$0$$sroa$6907$16$103416802143 = $1806;$$sroa$6907$0$$sroa$6907$16$91317262161 = $1806;$$sroa$6907$0$$sroa$6907$16$92017212199 = $1806;$$sroa$6907$0$$sroa$6907$16$92917162239 = $1806;$$sroa$6907$0$$sroa$6907$16$93517002303 = $1806;$$sroa$6907$0$$sroa$6907$16$93616852180 = $1806;$$sroa$6907$0$$sroa$6907$16$9901675 = $1806;$storemerge$i$i699 = $1811;
   }
   $1812 = HEAP8[$550>>0]|0;
   $1813 = $1812&255;
   $1814 = ($storemerge$i$i699|0)>(1);
   if ($1814) {
    $1815 = $$sroa$336$62 << 1;
    $1816 = $1813 | $1815;
    $1817 = (($storemerge$i$i699) + -1)|0;
    $$sroa$336$63 = $1816;$$sroa$6907$0$$sroa$6907$16$$pre$i17102348 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102349;$$sroa$6907$0$$sroa$6907$16$100816902218 = $$sroa$6907$0$$sroa$6907$16$100816902219;$$sroa$6907$0$$sroa$6907$16$101417112280 = $$sroa$6907$0$$sroa$6907$16$101417112281;$$sroa$6907$0$$sroa$6907$16$102116952259 = $$sroa$6907$0$$sroa$6907$16$102116952260;$$sroa$6907$0$$sroa$6907$16$102517052325 = $$sroa$6907$0$$sroa$6907$16$102517052326;$$sroa$6907$0$$sroa$6907$16$10341680 = $$sroa$6907$0$$sroa$6907$16$103416802143;$$sroa$6907$0$$sroa$6907$16$9131726 = $$sroa$6907$0$$sroa$6907$16$91317262161;$$sroa$6907$0$$sroa$6907$16$92017212198 = $$sroa$6907$0$$sroa$6907$16$92017212199;$$sroa$6907$0$$sroa$6907$16$92917162238 = $$sroa$6907$0$$sroa$6907$16$92917162239;$$sroa$6907$0$$sroa$6907$16$93517002302 = $$sroa$6907$0$$sroa$6907$16$93517002303;$$sroa$6907$0$$sroa$6907$16$93616852179 = $$sroa$6907$0$$sroa$6907$16$93616852180;$1838 = $1812;$storemerge$i$i696 = $1817;
   } else {
    $1818 = (1 - ($storemerge$i$i699))|0;
    $1819 = $$sroa$336$62 << $storemerge$i$i699;
    $1820 = $1813 >>> $1818;
    $1821 = $1820 | $1819;
    $1822 = $1821 >>> 24;
    $1823 = $1822&255;
    HEAP8[$$sroa$6907$0$$sroa$6907$16$9901675>>0] = $1823;
    $1824 = $1821 >>> 16;
    $1825 = $1824&255;
    $$sroa$6907$0$$sroa$6907$16$9891676 = HEAP32[$6>>2]|0;
    $1826 = ((($$sroa$6907$0$$sroa$6907$16$9891676)) + 1|0);
    HEAP8[$1826>>0] = $1825;
    $1827 = $1821 >>> 8;
    $1828 = $1827&255;
    $$sroa$6907$0$$sroa$6907$16$9881677 = HEAP32[$6>>2]|0;
    $1829 = ((($$sroa$6907$0$$sroa$6907$16$9881677)) + 2|0);
    HEAP8[$1829>>0] = $1828;
    $1830 = $1821&255;
    $$sroa$6907$0$$sroa$6907$16$9751678 = HEAP32[$6>>2]|0;
    $1831 = ((($$sroa$6907$0$$sroa$6907$16$9751678)) + 3|0);
    HEAP8[$1831>>0] = $1830;
    $$sroa$6907$0$$sroa$6907$16$9821679 = HEAP32[$6>>2]|0;
    $1832 = ((($$sroa$6907$0$$sroa$6907$16$9821679)) + 4|0);
    $1833 = $1832;
    HEAP32[$6>>2] = $1833;
    $1834 = 1 << $1818;
    $1835 = (($1834) + 1)|0;
    $1836 = $1835 & $1813;
    $1837 = (32 - ($1818))|0;
    $$pre2141 = HEAP8[$550>>0]|0;
    $$sroa$336$63 = $1836;$$sroa$6907$0$$sroa$6907$16$$pre$i17102348 = $1832;$$sroa$6907$0$$sroa$6907$16$100816902218 = $1832;$$sroa$6907$0$$sroa$6907$16$101417112280 = $1832;$$sroa$6907$0$$sroa$6907$16$102116952259 = $1832;$$sroa$6907$0$$sroa$6907$16$102517052325 = $1832;$$sroa$6907$0$$sroa$6907$16$10341680 = $1832;$$sroa$6907$0$$sroa$6907$16$9131726 = $1832;$$sroa$6907$0$$sroa$6907$16$92017212198 = $1832;$$sroa$6907$0$$sroa$6907$16$92917162238 = $1832;$$sroa$6907$0$$sroa$6907$16$93517002302 = $1832;$$sroa$6907$0$$sroa$6907$16$93616852179 = $1832;$1838 = $$pre2141;$storemerge$i$i696 = $1837;
   }
   $1839 = ($1838<<24>>24)==(0);
   do {
    if ($1839) {
     $$sroa$336$76 = $$sroa$336$63;$$sroa$6907$0$$sroa$6907$16$$pre$i17102344 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102348;$$sroa$6907$0$$sroa$6907$16$102517052321 = $$sroa$6907$0$$sroa$6907$16$102517052325;$$sroa$6907$0$$sroa$6907$16$9351700 = $$sroa$6907$0$$sroa$6907$16$93517002302;$$sroa$719$24 = $storemerge$i$i696;
    } else {
     $1840 = ((($7)) + 300|0);
     $1841 = HEAP32[$1840>>2]|0;
     $1842 = (($1841) + 1)|0;
     $1843 = ($1841>>>0)<(256);
     do {
      if ($1843) {
       $1844 = (8136 + ($1841<<2)|0);
       $1845 = HEAP32[$1844>>2]|0;
       $1846 = ($storemerge$i$i696|0)>($1845|0);
       if ($1846) {
        $1847 = $$sroa$336$63 << $1845;
        $1848 = $1847 | $1842;
        $1849 = (($storemerge$i$i696) - ($1845))|0;
        $$sroa$336$66 = $1848;$$sroa$6907$0$$sroa$6907$16$$pre$i17102347 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102348;$$sroa$6907$0$$sroa$6907$16$100816902217 = $$sroa$6907$0$$sroa$6907$16$100816902218;$$sroa$6907$0$$sroa$6907$16$101417112279 = $$sroa$6907$0$$sroa$6907$16$101417112280;$$sroa$6907$0$$sroa$6907$16$102116952258 = $$sroa$6907$0$$sroa$6907$16$102116952259;$$sroa$6907$0$$sroa$6907$16$102517052324 = $$sroa$6907$0$$sroa$6907$16$102517052325;$$sroa$6907$0$$sroa$6907$16$9201721 = $$sroa$6907$0$$sroa$6907$16$92017212198;$$sroa$6907$0$$sroa$6907$16$92917162237 = $$sroa$6907$0$$sroa$6907$16$92917162238;$$sroa$6907$0$$sroa$6907$16$93517002301 = $$sroa$6907$0$$sroa$6907$16$93517002302;$$sroa$6907$0$$sroa$6907$16$9361685 = $$sroa$6907$0$$sroa$6907$16$93616852179;$$sroa$719$20 = $1849;
        break;
       } else {
        $1850 = (($1845) - ($storemerge$i$i696))|0;
        $1851 = $$sroa$336$63 << $storemerge$i$i696;
        $1852 = $1842 >>> $1850;
        $1853 = $1852 | $1851;
        $1854 = $1853 >>> 24;
        $1855 = $1854&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$9131726>>0] = $1855;
        $1856 = $1853 >>> 16;
        $1857 = $1856&255;
        $$sroa$6907$0$$sroa$6907$16$9121727 = HEAP32[$6>>2]|0;
        $1858 = ((($$sroa$6907$0$$sroa$6907$16$9121727)) + 1|0);
        HEAP8[$1858>>0] = $1857;
        $1859 = $1853 >>> 8;
        $1860 = $1859&255;
        $$sroa$6907$0$$sroa$6907$16$9111728 = HEAP32[$6>>2]|0;
        $1861 = ((($$sroa$6907$0$$sroa$6907$16$9111728)) + 2|0);
        HEAP8[$1861>>0] = $1860;
        $1862 = $1853&255;
        $$sroa$6907$0$$sroa$6907$16$9761729 = HEAP32[$6>>2]|0;
        $1863 = ((($$sroa$6907$0$$sroa$6907$16$9761729)) + 3|0);
        HEAP8[$1863>>0] = $1862;
        $$sroa$6907$0$$sroa$6907$16$10051730 = HEAP32[$6>>2]|0;
        $1864 = ((($$sroa$6907$0$$sroa$6907$16$10051730)) + 4|0);
        $1865 = $1864;
        HEAP32[$6>>2] = $1865;
        $1866 = 1 << $1850;
        $1867 = (($1866) + -1)|0;
        $1868 = $1867 & $1842;
        $1869 = (32 - ($1850))|0;
        $$sroa$336$66 = $1868;$$sroa$6907$0$$sroa$6907$16$$pre$i17102347 = $1864;$$sroa$6907$0$$sroa$6907$16$100816902217 = $1864;$$sroa$6907$0$$sroa$6907$16$101417112279 = $1864;$$sroa$6907$0$$sroa$6907$16$102116952258 = $1864;$$sroa$6907$0$$sroa$6907$16$102517052324 = $1864;$$sroa$6907$0$$sroa$6907$16$9201721 = $1864;$$sroa$6907$0$$sroa$6907$16$92917162237 = $1864;$$sroa$6907$0$$sroa$6907$16$93517002301 = $1864;$$sroa$6907$0$$sroa$6907$16$9361685 = $1864;$$sroa$719$20 = $1869;
        break;
       }
      } else {
       $1870 = ($1842>>>0)>(65535);
       $1871 = $1842 >>> 16;
       $$$i689 = $1870 ? $1871 : $1842;
       $$2$i690 = $1870 ? 16 : 0;
       $1872 = $$$i689 & 65280;
       $1873 = ($1872|0)==(0);
       $1874 = $$$i689 >>> 8;
       $1875 = $$2$i690 | 8;
       $$119$i691 = $1873 ? $$$i689 : $1874;
       $$1$i692 = $1873 ? $$2$i690 : $1875;
       $1876 = (($$119$i691) + -1)|0;
       $1877 = (8136 + ($1876<<2)|0);
       $1878 = HEAP32[$1877>>2]|0;
       $1879 = $$1$i692 << 1;
       $1880 = (($1878) + ($1879))|0;
       $1881 = $1880 | 1;
       $1882 = ($storemerge$i$i696|0)>($1881|0);
       if ($1882) {
        $1883 = $$sroa$336$63 << $1881;
        $1884 = $1883 | $1842;
        $1885 = (($storemerge$i$i696) - ($1881))|0;
        $$sroa$336$66 = $1884;$$sroa$6907$0$$sroa$6907$16$$pre$i17102347 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102348;$$sroa$6907$0$$sroa$6907$16$100816902217 = $$sroa$6907$0$$sroa$6907$16$100816902218;$$sroa$6907$0$$sroa$6907$16$101417112279 = $$sroa$6907$0$$sroa$6907$16$101417112280;$$sroa$6907$0$$sroa$6907$16$102116952258 = $$sroa$6907$0$$sroa$6907$16$102116952259;$$sroa$6907$0$$sroa$6907$16$102517052324 = $$sroa$6907$0$$sroa$6907$16$102517052325;$$sroa$6907$0$$sroa$6907$16$9201721 = $$sroa$6907$0$$sroa$6907$16$92017212198;$$sroa$6907$0$$sroa$6907$16$92917162237 = $$sroa$6907$0$$sroa$6907$16$92917162238;$$sroa$6907$0$$sroa$6907$16$93517002301 = $$sroa$6907$0$$sroa$6907$16$93517002302;$$sroa$6907$0$$sroa$6907$16$9361685 = $$sroa$6907$0$$sroa$6907$16$93616852179;$$sroa$719$20 = $1885;
        break;
       } else {
        $1886 = (($1881) - ($storemerge$i$i696))|0;
        $1887 = $$sroa$336$63 << $storemerge$i$i696;
        $1888 = $1842 >>> $1886;
        $1889 = $1888 | $1887;
        $1890 = $1889 >>> 24;
        $1891 = $1890&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$10341680>>0] = $1891;
        $1892 = $1889 >>> 16;
        $1893 = $1892&255;
        $$sroa$6907$0$$sroa$6907$16$9921681 = HEAP32[$6>>2]|0;
        $1894 = ((($$sroa$6907$0$$sroa$6907$16$9921681)) + 1|0);
        HEAP8[$1894>>0] = $1893;
        $1895 = $1889 >>> 8;
        $1896 = $1895&255;
        $$sroa$6907$0$$sroa$6907$16$10241682 = HEAP32[$6>>2]|0;
        $1897 = ((($$sroa$6907$0$$sroa$6907$16$10241682)) + 2|0);
        HEAP8[$1897>>0] = $1896;
        $1898 = $1889&255;
        $$sroa$6907$0$$sroa$6907$16$10321683 = HEAP32[$6>>2]|0;
        $1899 = ((($$sroa$6907$0$$sroa$6907$16$10321683)) + 3|0);
        HEAP8[$1899>>0] = $1898;
        $$sroa$6907$0$$sroa$6907$16$10311684 = HEAP32[$6>>2]|0;
        $1900 = ((($$sroa$6907$0$$sroa$6907$16$10311684)) + 4|0);
        $1901 = $1900;
        HEAP32[$6>>2] = $1901;
        $1902 = 1 << $1886;
        $1903 = (($1902) + -1)|0;
        $1904 = $1903 & $1842;
        $1905 = (32 - ($1886))|0;
        $$sroa$336$66 = $1904;$$sroa$6907$0$$sroa$6907$16$$pre$i17102347 = $1900;$$sroa$6907$0$$sroa$6907$16$100816902217 = $1900;$$sroa$6907$0$$sroa$6907$16$101417112279 = $1900;$$sroa$6907$0$$sroa$6907$16$102116952258 = $1900;$$sroa$6907$0$$sroa$6907$16$102517052324 = $1900;$$sroa$6907$0$$sroa$6907$16$9201721 = $1900;$$sroa$6907$0$$sroa$6907$16$92917162237 = $1900;$$sroa$6907$0$$sroa$6907$16$93517002301 = $1900;$$sroa$6907$0$$sroa$6907$16$9361685 = $1900;$$sroa$719$20 = $1905;
        break;
       }
      }
     } while(0);
     $1906 = ((($7)) + 308|0);
     $1907 = HEAP32[$1906>>2]|0;
     $1908 = (($1907) + 1)|0;
     $1909 = ($1907>>>0)<(256);
     do {
      if ($1909) {
       $1910 = (8136 + ($1907<<2)|0);
       $1911 = HEAP32[$1910>>2]|0;
       $1912 = ($$sroa$719$20|0)>($1911|0);
       if ($1912) {
        $1913 = $$sroa$336$66 << $1911;
        $1914 = $1913 | $1908;
        $1915 = (($$sroa$719$20) - ($1911))|0;
        $$sroa$336$69 = $1914;$$sroa$6907$0$$sroa$6907$16$$pre$i17102346 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102347;$$sroa$6907$0$$sroa$6907$16$10081690 = $$sroa$6907$0$$sroa$6907$16$100816902217;$$sroa$6907$0$$sroa$6907$16$101417112278 = $$sroa$6907$0$$sroa$6907$16$101417112279;$$sroa$6907$0$$sroa$6907$16$102116952257 = $$sroa$6907$0$$sroa$6907$16$102116952258;$$sroa$6907$0$$sroa$6907$16$102517052323 = $$sroa$6907$0$$sroa$6907$16$102517052324;$$sroa$6907$0$$sroa$6907$16$9291716 = $$sroa$6907$0$$sroa$6907$16$92917162237;$$sroa$6907$0$$sroa$6907$16$93517002300 = $$sroa$6907$0$$sroa$6907$16$93517002301;$$sroa$719$21 = $1915;
        break;
       } else {
        $1916 = (($1911) - ($$sroa$719$20))|0;
        $1917 = $$sroa$336$66 << $$sroa$719$20;
        $1918 = $1908 >>> $1916;
        $1919 = $1918 | $1917;
        $1920 = $1919 >>> 24;
        $1921 = $1920&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$9201721>>0] = $1921;
        $1922 = $1919 >>> 16;
        $1923 = $1922&255;
        $$sroa$6907$0$$sroa$6907$16$9211722 = HEAP32[$6>>2]|0;
        $1924 = ((($$sroa$6907$0$$sroa$6907$16$9211722)) + 1|0);
        HEAP8[$1924>>0] = $1923;
        $1925 = $1919 >>> 8;
        $1926 = $1925&255;
        $$sroa$6907$0$$sroa$6907$16$9221723 = HEAP32[$6>>2]|0;
        $1927 = ((($$sroa$6907$0$$sroa$6907$16$9221723)) + 2|0);
        HEAP8[$1927>>0] = $1926;
        $1928 = $1919&255;
        $$sroa$6907$0$$sroa$6907$16$9661724 = HEAP32[$6>>2]|0;
        $1929 = ((($$sroa$6907$0$$sroa$6907$16$9661724)) + 3|0);
        HEAP8[$1929>>0] = $1928;
        $$sroa$6907$0$$sroa$6907$16$9171725 = HEAP32[$6>>2]|0;
        $1930 = ((($$sroa$6907$0$$sroa$6907$16$9171725)) + 4|0);
        $1931 = $1930;
        HEAP32[$6>>2] = $1931;
        $1932 = 1 << $1916;
        $1933 = (($1932) + -1)|0;
        $1934 = $1933 & $1908;
        $1935 = (32 - ($1916))|0;
        $$sroa$336$69 = $1934;$$sroa$6907$0$$sroa$6907$16$$pre$i17102346 = $1930;$$sroa$6907$0$$sroa$6907$16$10081690 = $1930;$$sroa$6907$0$$sroa$6907$16$101417112278 = $1930;$$sroa$6907$0$$sroa$6907$16$102116952257 = $1930;$$sroa$6907$0$$sroa$6907$16$102517052323 = $1930;$$sroa$6907$0$$sroa$6907$16$9291716 = $1930;$$sroa$6907$0$$sroa$6907$16$93517002300 = $1930;$$sroa$719$21 = $1935;
        break;
       }
      } else {
       $1936 = ($1908>>>0)>(65535);
       $1937 = $1908 >>> 16;
       $$$i680 = $1936 ? $1937 : $1908;
       $$2$i681 = $1936 ? 16 : 0;
       $1938 = $$$i680 & 65280;
       $1939 = ($1938|0)==(0);
       $1940 = $$$i680 >>> 8;
       $1941 = $$2$i681 | 8;
       $$119$i682 = $1939 ? $$$i680 : $1940;
       $$1$i683 = $1939 ? $$2$i681 : $1941;
       $1942 = (($$119$i682) + -1)|0;
       $1943 = (8136 + ($1942<<2)|0);
       $1944 = HEAP32[$1943>>2]|0;
       $1945 = $$1$i683 << 1;
       $1946 = (($1944) + ($1945))|0;
       $1947 = $1946 | 1;
       $1948 = ($$sroa$719$20|0)>($1947|0);
       if ($1948) {
        $1949 = $$sroa$336$66 << $1947;
        $1950 = $1949 | $1908;
        $1951 = (($$sroa$719$20) - ($1947))|0;
        $$sroa$336$69 = $1950;$$sroa$6907$0$$sroa$6907$16$$pre$i17102346 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102347;$$sroa$6907$0$$sroa$6907$16$10081690 = $$sroa$6907$0$$sroa$6907$16$100816902217;$$sroa$6907$0$$sroa$6907$16$101417112278 = $$sroa$6907$0$$sroa$6907$16$101417112279;$$sroa$6907$0$$sroa$6907$16$102116952257 = $$sroa$6907$0$$sroa$6907$16$102116952258;$$sroa$6907$0$$sroa$6907$16$102517052323 = $$sroa$6907$0$$sroa$6907$16$102517052324;$$sroa$6907$0$$sroa$6907$16$9291716 = $$sroa$6907$0$$sroa$6907$16$92917162237;$$sroa$6907$0$$sroa$6907$16$93517002300 = $$sroa$6907$0$$sroa$6907$16$93517002301;$$sroa$719$21 = $1951;
        break;
       } else {
        $1952 = (($1947) - ($$sroa$719$20))|0;
        $1953 = $$sroa$336$66 << $$sroa$719$20;
        $1954 = $1908 >>> $1952;
        $1955 = $1954 | $1953;
        $1956 = $1955 >>> 24;
        $1957 = $1956&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$9361685>>0] = $1957;
        $1958 = $1955 >>> 16;
        $1959 = $1958&255;
        $$sroa$6907$0$$sroa$6907$16$9371686 = HEAP32[$6>>2]|0;
        $1960 = ((($$sroa$6907$0$$sroa$6907$16$9371686)) + 1|0);
        HEAP8[$1960>>0] = $1959;
        $1961 = $1955 >>> 8;
        $1962 = $1961&255;
        $$sroa$6907$0$$sroa$6907$16$9381687 = HEAP32[$6>>2]|0;
        $1963 = ((($$sroa$6907$0$$sroa$6907$16$9381687)) + 2|0);
        HEAP8[$1963>>0] = $1962;
        $1964 = $1955&255;
        $$sroa$6907$0$$sroa$6907$16$9391688 = HEAP32[$6>>2]|0;
        $1965 = ((($$sroa$6907$0$$sroa$6907$16$9391688)) + 3|0);
        HEAP8[$1965>>0] = $1964;
        $$sroa$6907$0$$sroa$6907$16$9401689 = HEAP32[$6>>2]|0;
        $1966 = ((($$sroa$6907$0$$sroa$6907$16$9401689)) + 4|0);
        $1967 = $1966;
        HEAP32[$6>>2] = $1967;
        $1968 = 1 << $1952;
        $1969 = (($1968) + -1)|0;
        $1970 = $1969 & $1908;
        $1971 = (32 - ($1952))|0;
        $$sroa$336$69 = $1970;$$sroa$6907$0$$sroa$6907$16$$pre$i17102346 = $1966;$$sroa$6907$0$$sroa$6907$16$10081690 = $1966;$$sroa$6907$0$$sroa$6907$16$101417112278 = $1966;$$sroa$6907$0$$sroa$6907$16$102116952257 = $1966;$$sroa$6907$0$$sroa$6907$16$102517052323 = $1966;$$sroa$6907$0$$sroa$6907$16$9291716 = $1966;$$sroa$6907$0$$sroa$6907$16$93517002300 = $1966;$$sroa$719$21 = $1971;
        break;
       }
      }
     } while(0);
     $1972 = ((($7)) + 304|0);
     $1973 = HEAP32[$1972>>2]|0;
     $1974 = (($1973) + 1)|0;
     $1975 = ($1973>>>0)<(256);
     do {
      if ($1975) {
       $1976 = (8136 + ($1973<<2)|0);
       $1977 = HEAP32[$1976>>2]|0;
       $1978 = ($$sroa$719$21|0)>($1977|0);
       if ($1978) {
        $1979 = $$sroa$336$69 << $1977;
        $1980 = $1979 | $1974;
        $1981 = (($$sroa$719$21) - ($1977))|0;
        $$sroa$336$72 = $1980;$$sroa$6907$0$$sroa$6907$16$$pre$i17102345 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102346;$$sroa$6907$0$$sroa$6907$16$10141711 = $$sroa$6907$0$$sroa$6907$16$101417112278;$$sroa$6907$0$$sroa$6907$16$10211695 = $$sroa$6907$0$$sroa$6907$16$102116952257;$$sroa$6907$0$$sroa$6907$16$102517052322 = $$sroa$6907$0$$sroa$6907$16$102517052323;$$sroa$6907$0$$sroa$6907$16$93517002299 = $$sroa$6907$0$$sroa$6907$16$93517002300;$$sroa$719$22 = $1981;
        break;
       } else {
        $1982 = (($1977) - ($$sroa$719$21))|0;
        $1983 = $$sroa$336$69 << $$sroa$719$21;
        $1984 = $1974 >>> $1982;
        $1985 = $1984 | $1983;
        $1986 = $1985 >>> 24;
        $1987 = $1986&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$9291716>>0] = $1987;
        $1988 = $1985 >>> 16;
        $1989 = $1988&255;
        $$sroa$6907$0$$sroa$6907$16$9301717 = HEAP32[$6>>2]|0;
        $1990 = ((($$sroa$6907$0$$sroa$6907$16$9301717)) + 1|0);
        HEAP8[$1990>>0] = $1989;
        $1991 = $1985 >>> 8;
        $1992 = $1991&255;
        $$sroa$6907$0$$sroa$6907$16$9311718 = HEAP32[$6>>2]|0;
        $1993 = ((($$sroa$6907$0$$sroa$6907$16$9311718)) + 2|0);
        HEAP8[$1993>>0] = $1992;
        $1994 = $1985&255;
        $$sroa$6907$0$$sroa$6907$16$9321719 = HEAP32[$6>>2]|0;
        $1995 = ((($$sroa$6907$0$$sroa$6907$16$9321719)) + 3|0);
        HEAP8[$1995>>0] = $1994;
        $$sroa$6907$0$$sroa$6907$16$9331720 = HEAP32[$6>>2]|0;
        $1996 = ((($$sroa$6907$0$$sroa$6907$16$9331720)) + 4|0);
        $1997 = $1996;
        HEAP32[$6>>2] = $1997;
        $1998 = 1 << $1982;
        $1999 = (($1998) + -1)|0;
        $2000 = $1999 & $1974;
        $2001 = (32 - ($1982))|0;
        $$sroa$336$72 = $2000;$$sroa$6907$0$$sroa$6907$16$$pre$i17102345 = $1996;$$sroa$6907$0$$sroa$6907$16$10141711 = $1996;$$sroa$6907$0$$sroa$6907$16$10211695 = $1996;$$sroa$6907$0$$sroa$6907$16$102517052322 = $1996;$$sroa$6907$0$$sroa$6907$16$93517002299 = $1996;$$sroa$719$22 = $2001;
        break;
       }
      } else {
       $2002 = ($1974>>>0)>(65535);
       $2003 = $1974 >>> 16;
       $$$i671 = $2002 ? $2003 : $1974;
       $$2$i672 = $2002 ? 16 : 0;
       $2004 = $$$i671 & 65280;
       $2005 = ($2004|0)==(0);
       $2006 = $$$i671 >>> 8;
       $2007 = $$2$i672 | 8;
       $$119$i673 = $2005 ? $$$i671 : $2006;
       $$1$i674 = $2005 ? $$2$i672 : $2007;
       $2008 = (($$119$i673) + -1)|0;
       $2009 = (8136 + ($2008<<2)|0);
       $2010 = HEAP32[$2009>>2]|0;
       $2011 = $$1$i674 << 1;
       $2012 = (($2010) + ($2011))|0;
       $2013 = $2012 | 1;
       $2014 = ($$sroa$719$21|0)>($2013|0);
       if ($2014) {
        $2015 = $$sroa$336$69 << $2013;
        $2016 = $2015 | $1974;
        $2017 = (($$sroa$719$21) - ($2013))|0;
        $$sroa$336$72 = $2016;$$sroa$6907$0$$sroa$6907$16$$pre$i17102345 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102346;$$sroa$6907$0$$sroa$6907$16$10141711 = $$sroa$6907$0$$sroa$6907$16$101417112278;$$sroa$6907$0$$sroa$6907$16$10211695 = $$sroa$6907$0$$sroa$6907$16$102116952257;$$sroa$6907$0$$sroa$6907$16$102517052322 = $$sroa$6907$0$$sroa$6907$16$102517052323;$$sroa$6907$0$$sroa$6907$16$93517002299 = $$sroa$6907$0$$sroa$6907$16$93517002300;$$sroa$719$22 = $2017;
        break;
       } else {
        $2018 = (($2013) - ($$sroa$719$21))|0;
        $2019 = $$sroa$336$69 << $$sroa$719$21;
        $2020 = $1974 >>> $2018;
        $2021 = $2020 | $2019;
        $2022 = $2021 >>> 24;
        $2023 = $2022&255;
        HEAP8[$$sroa$6907$0$$sroa$6907$16$10081690>>0] = $2023;
        $2024 = $2021 >>> 16;
        $2025 = $2024&255;
        $$sroa$6907$0$$sroa$6907$16$10161691 = HEAP32[$6>>2]|0;
        $2026 = ((($$sroa$6907$0$$sroa$6907$16$10161691)) + 1|0);
        HEAP8[$2026>>0] = $2025;
        $2027 = $2021 >>> 8;
        $2028 = $2027&255;
        $$sroa$6907$0$$sroa$6907$16$10091692 = HEAP32[$6>>2]|0;
        $2029 = ((($$sroa$6907$0$$sroa$6907$16$10091692)) + 2|0);
        HEAP8[$2029>>0] = $2028;
        $2030 = $2021&255;
        $$sroa$6907$0$$sroa$6907$16$10101693 = HEAP32[$6>>2]|0;
        $2031 = ((($$sroa$6907$0$$sroa$6907$16$10101693)) + 3|0);
        HEAP8[$2031>>0] = $2030;
        $$sroa$6907$0$$sroa$6907$16$10111694 = HEAP32[$6>>2]|0;
        $2032 = ((($$sroa$6907$0$$sroa$6907$16$10111694)) + 4|0);
        $2033 = $2032;
        HEAP32[$6>>2] = $2033;
        $2034 = 1 << $2018;
        $2035 = (($2034) + -1)|0;
        $2036 = $2035 & $1974;
        $2037 = (32 - ($2018))|0;
        $$sroa$336$72 = $2036;$$sroa$6907$0$$sroa$6907$16$$pre$i17102345 = $2032;$$sroa$6907$0$$sroa$6907$16$10141711 = $2032;$$sroa$6907$0$$sroa$6907$16$10211695 = $2032;$$sroa$6907$0$$sroa$6907$16$102517052322 = $2032;$$sroa$6907$0$$sroa$6907$16$93517002299 = $2032;$$sroa$719$22 = $2037;
        break;
       }
      }
     } while(0);
     $2038 = ((($7)) + 312|0);
     $2039 = HEAP32[$2038>>2]|0;
     $2040 = (($2039) + 1)|0;
     $2041 = ($2039>>>0)<(256);
     if ($2041) {
      $2042 = (8136 + ($2039<<2)|0);
      $2043 = HEAP32[$2042>>2]|0;
      $2044 = ($$sroa$719$22|0)>($2043|0);
      if ($2044) {
       $2045 = $$sroa$336$72 << $2043;
       $2046 = $2045 | $2040;
       $2047 = (($$sroa$719$22) - ($2043))|0;
       $$sroa$336$76 = $2046;$$sroa$6907$0$$sroa$6907$16$$pre$i17102344 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102345;$$sroa$6907$0$$sroa$6907$16$102517052321 = $$sroa$6907$0$$sroa$6907$16$102517052322;$$sroa$6907$0$$sroa$6907$16$9351700 = $$sroa$6907$0$$sroa$6907$16$93517002299;$$sroa$719$24 = $2047;
       break;
      } else {
       $2048 = (($2043) - ($$sroa$719$22))|0;
       $2049 = $$sroa$336$72 << $$sroa$719$22;
       $2050 = $2040 >>> $2048;
       $2051 = $2050 | $2049;
       $2052 = $2051 >>> 24;
       $2053 = $2052&255;
       HEAP8[$$sroa$6907$0$$sroa$6907$16$10141711>>0] = $2053;
       $2054 = $2051 >>> 16;
       $2055 = $2054&255;
       $$sroa$6907$0$$sroa$6907$16$10131712 = HEAP32[$6>>2]|0;
       $2056 = ((($$sroa$6907$0$$sroa$6907$16$10131712)) + 1|0);
       HEAP8[$2056>>0] = $2055;
       $2057 = $2051 >>> 8;
       $2058 = $2057&255;
       $$sroa$6907$0$$sroa$6907$16$10121713 = HEAP32[$6>>2]|0;
       $2059 = ((($$sroa$6907$0$$sroa$6907$16$10121713)) + 2|0);
       HEAP8[$2059>>0] = $2058;
       $2060 = $2051&255;
       $$sroa$6907$0$$sroa$6907$16$10071714 = HEAP32[$6>>2]|0;
       $2061 = ((($$sroa$6907$0$$sroa$6907$16$10071714)) + 3|0);
       HEAP8[$2061>>0] = $2060;
       $$sroa$6907$0$$sroa$6907$16$10151715 = HEAP32[$6>>2]|0;
       $2062 = ((($$sroa$6907$0$$sroa$6907$16$10151715)) + 4|0);
       $2063 = $2062;
       HEAP32[$6>>2] = $2063;
       $2064 = 1 << $2048;
       $2065 = (($2064) + -1)|0;
       $2066 = $2065 & $2040;
       $2067 = (32 - ($2048))|0;
       $$sroa$336$76 = $2066;$$sroa$6907$0$$sroa$6907$16$$pre$i17102344 = $2062;$$sroa$6907$0$$sroa$6907$16$102517052321 = $2062;$$sroa$6907$0$$sroa$6907$16$9351700 = $2062;$$sroa$719$24 = $2067;
       break;
      }
     } else {
      $2068 = ($2040>>>0)>(65535);
      $2069 = $2040 >>> 16;
      $$$i = $2068 ? $2069 : $2040;
      $$2$i = $2068 ? 16 : 0;
      $2070 = $$$i & 65280;
      $2071 = ($2070|0)==(0);
      $2072 = $$$i >>> 8;
      $2073 = $$2$i | 8;
      $$119$i = $2071 ? $$$i : $2072;
      $$1$i = $2071 ? $$2$i : $2073;
      $2074 = (($$119$i) + -1)|0;
      $2075 = (8136 + ($2074<<2)|0);
      $2076 = HEAP32[$2075>>2]|0;
      $2077 = $$1$i << 1;
      $2078 = (($2076) + ($2077))|0;
      $2079 = $2078 | 1;
      $2080 = ($$sroa$719$22|0)>($2079|0);
      if ($2080) {
       $2081 = $$sroa$336$72 << $2079;
       $2082 = $2081 | $2040;
       $2083 = (($$sroa$719$22) - ($2079))|0;
       $$sroa$336$76 = $2082;$$sroa$6907$0$$sroa$6907$16$$pre$i17102344 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102345;$$sroa$6907$0$$sroa$6907$16$102517052321 = $$sroa$6907$0$$sroa$6907$16$102517052322;$$sroa$6907$0$$sroa$6907$16$9351700 = $$sroa$6907$0$$sroa$6907$16$93517002299;$$sroa$719$24 = $2083;
       break;
      } else {
       $2084 = (($2079) - ($$sroa$719$22))|0;
       $2085 = $$sroa$336$72 << $$sroa$719$22;
       $2086 = $2040 >>> $2084;
       $2087 = $2086 | $2085;
       $2088 = $2087 >>> 24;
       $2089 = $2088&255;
       HEAP8[$$sroa$6907$0$$sroa$6907$16$10211695>>0] = $2089;
       $2090 = $2087 >>> 16;
       $2091 = $2090&255;
       $$sroa$6907$0$$sroa$6907$16$10201696 = HEAP32[$6>>2]|0;
       $2092 = ((($$sroa$6907$0$$sroa$6907$16$10201696)) + 1|0);
       HEAP8[$2092>>0] = $2091;
       $2093 = $2087 >>> 8;
       $2094 = $2093&255;
       $$sroa$6907$0$$sroa$6907$16$10191697 = HEAP32[$6>>2]|0;
       $2095 = ((($$sroa$6907$0$$sroa$6907$16$10191697)) + 2|0);
       HEAP8[$2095>>0] = $2094;
       $2096 = $2087&255;
       $$sroa$6907$0$$sroa$6907$16$10171698 = HEAP32[$6>>2]|0;
       $2097 = ((($$sroa$6907$0$$sroa$6907$16$10171698)) + 3|0);
       HEAP8[$2097>>0] = $2096;
       $$sroa$6907$0$$sroa$6907$16$10181699 = HEAP32[$6>>2]|0;
       $2098 = ((($$sroa$6907$0$$sroa$6907$16$10181699)) + 4|0);
       $2099 = $2098;
       HEAP32[$6>>2] = $2099;
       $2100 = 1 << $2084;
       $2101 = (($2100) + -1)|0;
       $2102 = $2101 & $2040;
       $2103 = (32 - ($2084))|0;
       $$sroa$336$76 = $2102;$$sroa$6907$0$$sroa$6907$16$$pre$i17102344 = $2098;$$sroa$6907$0$$sroa$6907$16$102517052321 = $2098;$$sroa$6907$0$$sroa$6907$16$9351700 = $2098;$$sroa$719$24 = $2103;
       break;
      }
     }
    }
   } while(0);
   $2104 = ($$sroa$719$24|0)>(1);
   if ($2104) {
    $2105 = $$sroa$336$76 << 1;
    $$sink = -1;$$sroa$336$77 = $2105;$$sroa$6907$0$$sroa$6907$16$$pre$i1710 = $$sroa$6907$0$$sroa$6907$16$$pre$i17102344;$$sroa$6907$0$$sroa$6907$16$10251705 = $$sroa$6907$0$$sroa$6907$16$102517052321;
   } else {
    $2106 = $$sroa$336$76 << $$sroa$719$24;
    $2107 = $2106 >>> 24;
    $2108 = $2107&255;
    HEAP8[$$sroa$6907$0$$sroa$6907$16$9351700>>0] = $2108;
    $2109 = $2106 >>> 16;
    $2110 = $2109&255;
    $$sroa$6907$0$$sroa$6907$16$9251701 = HEAP32[$6>>2]|0;
    $2111 = ((($$sroa$6907$0$$sroa$6907$16$9251701)) + 1|0);
    HEAP8[$2111>>0] = $2110;
    $2112 = $2106 >>> 8;
    $2113 = $2112&255;
    $$sroa$6907$0$$sroa$6907$16$9651702 = HEAP32[$6>>2]|0;
    $2114 = ((($$sroa$6907$0$$sroa$6907$16$9651702)) + 2|0);
    HEAP8[$2114>>0] = $2113;
    $2115 = $2106&255;
    $$sroa$6907$0$$sroa$6907$16$9641703 = HEAP32[$6>>2]|0;
    $2116 = ((($$sroa$6907$0$$sroa$6907$16$9641703)) + 3|0);
    HEAP8[$2116>>0] = $2115;
    $$sroa$6907$0$$sroa$6907$16$9631704 = HEAP32[$6>>2]|0;
    $2117 = ((($$sroa$6907$0$$sroa$6907$16$9631704)) + 4|0);
    $2118 = $2117;
    HEAP32[$6>>2] = $2118;
    $$sink = 31;$$sroa$336$77 = 0;$$sroa$6907$0$$sroa$6907$16$$pre$i1710 = $2117;$$sroa$6907$0$$sroa$6907$16$10251705 = $2117;
   }
   $2119 = (($$sink) + ($$sroa$719$24))|0;
   $2120 = ($2119|0)>(1);
   if ($2120) {
    $2121 = $$sroa$336$77 << 1;
    $2122 = $2121 | 1;
    $2123 = (($2119) + -1)|0;
    $$pre$phi$i$pre$phiZ2DZZ2D = $6;$$sroa$336$78 = $2122;$2146 = $$sroa$6907$0$$sroa$6907$16$$pre$i1710;$storemerge$i$i$i = $2123;
   } else {
    $2124 = (1 - ($2119))|0;
    $2125 = $$sroa$336$77 << $2119;
    $2126 = 1 >>> $2124;
    $2127 = $2126 | $2125;
    $2128 = $2127 >>> 24;
    $2129 = $2128&255;
    HEAP8[$$sroa$6907$0$$sroa$6907$16$10251705>>0] = $2129;
    $2130 = $2127 >>> 16;
    $2131 = $2130&255;
    $$sroa$6907$0$$sroa$6907$16$10261706 = HEAP32[$6>>2]|0;
    $2132 = ((($$sroa$6907$0$$sroa$6907$16$10261706)) + 1|0);
    HEAP8[$2132>>0] = $2131;
    $2133 = $2127 >>> 8;
    $2134 = $2133&255;
    $$sroa$6907$0$$sroa$6907$16$10271707 = HEAP32[$6>>2]|0;
    $2135 = ((($$sroa$6907$0$$sroa$6907$16$10271707)) + 2|0);
    HEAP8[$2135>>0] = $2134;
    $2136 = $2127&255;
    $$sroa$6907$0$$sroa$6907$16$9991708 = HEAP32[$6>>2]|0;
    $2137 = ((($$sroa$6907$0$$sroa$6907$16$9991708)) + 3|0);
    HEAP8[$2137>>0] = $2136;
    $$sroa$6907$0$$sroa$6907$16$9791709 = HEAP32[$6>>2]|0;
    $2138 = ((($$sroa$6907$0$$sroa$6907$16$9791709)) + 4|0);
    $2139 = $2138;
    HEAP32[$6>>2] = $2139;
    $2140 = ($2124|0)!=(0);
    $2141 = $2140&1;
    $2142 = (32 - ($2124))|0;
    $$pre$phi$i$pre$phiZ2DZZ2D = $6;$$sroa$336$78 = $2141;$2146 = $2138;$storemerge$i$i$i = $2142;
   }
   $2143 = $$sroa$336$78 << $storemerge$i$i$i;
   $2144 = $2143 >>> 24;
   $2145 = $2144&255;
   HEAP8[$2146>>0] = $2145;
   $2147 = $2143 >>> 16;
   $2148 = $2147&255;
   $2149 = HEAP32[$$pre$phi$i$pre$phiZ2DZZ2D>>2]|0;
   $2150 = ((($2149)) + 1|0);
   HEAP8[$2150>>0] = $2148;
   $2151 = $2143 >>> 8;
   $2152 = $2151&255;
   $2153 = HEAP32[$$pre$phi$i$pre$phiZ2DZZ2D>>2]|0;
   $2154 = ((($2153)) + 2|0);
   HEAP8[$2154>>0] = $2152;
   $2155 = $2143&255;
   $2156 = HEAP32[$$pre$phi$i$pre$phiZ2DZZ2D>>2]|0;
   $2157 = ((($2156)) + 3|0);
   HEAP8[$2157>>0] = $2155;
   $2158 = (($storemerge$i$i$i|0) / 8)&-1;
   $2159 = (4 - ($2158))|0;
   $2160 = HEAP32[$$pre$phi$i$pre$phiZ2DZZ2D>>2]|0;
   $2161 = (($2160) + ($2159)|0);
   HEAP32[$$pre$phi$i$pre$phiZ2DZZ2D>>2] = $2161;
   $$sroa$6907$0$$sroa$6907$16$994$cast = $2161;
   $2162 = (($$sroa$6907$0$$sroa$6907$16$994$cast) - ($643))|0;
   $2163 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 5|0);
   __ZN7WelsDec9RBSP2EBSPEPhS0_i($2163,$641,$2162);
   $$sroa$6907$0$$sroa$6907$16$993 = HEAP32[$6>>2]|0;
   $2164 = (5 - ($643))|0;
   $2165 = (($2164) + ($$sroa$6907$0$$sroa$6907$16$993))|0;
   $2166 = $2165&65535;
   $2167 = (((((($0)) + 247216|0) + (($230*136)|0)|0)) + 132|0);
   HEAP16[$2167>>1] = $2166;
   __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($640,$641,28147);
  }
 } while(0);
 L533: do {
  if ($11) {
   switch ($41<<24>>24) {
   case 83: case 86:  {
    break;
   }
   default: {
    break L533;
   }
   }
   $2171 = (__ZN7WelsDec15DecodeSpsSvcExtEPNS_21TagWelsDecoderContextEPNS_12TagSubsetSpsEPN10WelsCommon15TagBitStringAuxE($0,$7,$1)|0);
   $2172 = ($2171|0)==(0);
   if (!($2172)) {
    $$47 = -1;
    STACKTOP = sp;return ($$47|0);
   }
   $2173 = HEAP32[$12>>2]|0;
   $2174 = $2173 >>> 31;
   $2175 = HEAP32[$15>>2]|0;
   $2176 = HEAP32[$1>>2]|0;
   $2177 = HEAP32[$18>>2]|0;
   $2178 = $2173 << 1;
   HEAP32[$12>>2] = $2178;
   $2179 = HEAP32[$21>>2]|0;
   $2180 = (($2179) + 1)|0;
   HEAP32[$21>>2] = $2180;
   $2181 = ($2179|0)>(-1);
   do {
    if ($2181) {
     $2182 = $2177;
     $2183 = (($2182) - ($2176))|0;
     $2184 = (($2175) + 1)|0;
     $2185 = (($2184) - ($2176))|0;
     $2186 = ($2183|0)>($2185|0);
     if ($2186) {
      $$47 = 11;
      STACKTOP = sp;return ($$47|0);
     } else {
      $2187 = HEAP8[$2177>>0]|0;
      $2188 = $2187&255;
      $2189 = $2188 << 8;
      $2190 = ((($2177)) + 1|0);
      $2191 = HEAP8[$2190>>0]|0;
      $2192 = $2191&255;
      $2193 = $2189 | $2192;
      $2194 = $2193 << $2180;
      $2195 = $2194 | $2178;
      HEAP32[$12>>2] = $2195;
      $2196 = (($2179) + -15)|0;
      HEAP32[$21>>2] = $2196;
      $2197 = ((($2177)) + 2|0);
      HEAP32[$18>>2] = $2197;
      break;
     }
    }
   } while(0);
   HEAP32[$8>>2] = $2174;
   $2198 = ((($7)) + 860|0);
   $2199 = $2174&255;
   HEAP8[$2198>>0] = $2199;
   label = 331;
  } else {
   label = 331;
  }
 } while(0);
 L545: do {
  if ((label|0) == 331) {
   switch ($41<<24>>24) {
   case 83: case 86:  {
    break;
   }
   default: {
    break L545;
   }
   }
   $2200 = ((($0)) + 241949|0);
   HEAP8[$2200>>0] = 0;
  }
 } while(0);
 $2201 = HEAP32[$433>>2]|0;
 $2202 = $2201 << 4;
 HEAP32[$2>>2] = $2202;
 $2203 = HEAP32[$449>>2]|0;
 $2204 = $2203 << 4;
 HEAP32[$3>>2] = $2204;
 $2205 = (((($0)) + 209452|0) + (($230*864)|0)|0);
 $2206 = (((($0)) + 6192|0) + (($230*832)|0)|0);
 $$0 = $11 ? $2205 : $2206;
 $2207 = (__ZN7WelsDec14CheckSpsActiveEPNS_21TagWelsDecoderContextEPNS_6TagSpsEb($0,$$0,$11)|0);
 if (!($2207)) {
  if ($11) {
   $2259 = (((($0)) + 209452|0) + (($230*864)|0)|0);
   _memcpy(($2259|0),($7|0),864)|0;
   $2260 = (((($0)) + 242004|0) + ($230)|0);
   HEAP8[$2260>>0] = 1;
   $2261 = ((($0)) + 241955|0);
   HEAP8[$2261>>0] = 1;
   $$47 = 0;
   STACKTOP = sp;return ($$47|0);
  } else {
   _memcpy(($2206|0),($7|0),832)|0;
   $2262 = (((($0)) + 241972|0) + ($230)|0);
   HEAP8[$2262>>0] = 1;
   $2263 = ((($0)) + 241954|0);
   HEAP8[$2263>>0] = 1;
   $$47 = 0;
   STACKTOP = sp;return ($$47|0);
  }
 }
 if ($11) {
  $2208 = (((($0)) + 209452|0) + (($230*864)|0)|0);
  $2209 = (_memcmp($2208,$7,864)|0);
  $2210 = ($2209|0)==(0);
  if ($2210) {
   $$47 = 0;
   STACKTOP = sp;return ($$47|0);
  }
  $2211 = ((($0)) + 241888|0);
  $2212 = HEAP32[$2211>>2]|0;
  $2213 = ((($2212)) + 4|0);
  $2214 = HEAP32[$2213>>2]|0;
  $2215 = ($2214|0)==(0);
  if (!($2215)) {
   $2216 = ((($0)) + 237100|0);
   _memcpy(($2216|0),($7|0),864)|0;
   $2217 = ((($0)) + 317168|0);
   HEAP8[$2217>>0] = 1;
   $2218 = HEAP32[$2213>>2]|0;
   $2219 = (($2218) + -1)|0;
   $2220 = ((($2212)) + 20|0);
   HEAP32[$2220>>2] = $2219;
   $2221 = ((($0)) + 242336|0);
   $2222 = HEAP32[$2221>>2]|0;
   $2223 = $2222 | 4;
   HEAP32[$2221>>2] = $2223;
   $$47 = 0;
   STACKTOP = sp;return ($$47|0);
  }
  $2224 = ((($0)) + 241924|0);
  $2225 = HEAP32[$2224>>2]|0;
  $2226 = ($2225|0)==(0|0);
  do {
   if (!($2226)) {
    $2227 = HEAP32[$2225>>2]|0;
    $2228 = HEAP32[$7>>2]|0;
    $2229 = ($2227|0)==($2228|0);
    if (!($2229)) {
     break;
    }
    $2230 = ((($0)) + 237100|0);
    _memcpy(($2230|0),($7|0),864)|0;
    $2231 = ((($0)) + 242336|0);
    $2232 = HEAP32[$2231>>2]|0;
    $2233 = $2232 | 4;
    HEAP32[$2231>>2] = $2233;
    $$47 = 0;
    STACKTOP = sp;return ($$47|0);
   }
  } while(0);
  _memcpy(($2208|0),($7|0),864)|0;
  $$47 = 0;
  STACKTOP = sp;return ($$47|0);
 } else {
  $2234 = (_memcmp($2206,$7,832)|0);
  $2235 = ($2234|0)==(0);
  if ($2235) {
   $$47 = 0;
   STACKTOP = sp;return ($$47|0);
  }
  $2236 = ((($0)) + 241888|0);
  $2237 = HEAP32[$2236>>2]|0;
  $2238 = ((($2237)) + 4|0);
  $2239 = HEAP32[$2238>>2]|0;
  $2240 = ($2239|0)==(0);
  if (!($2240)) {
   $2241 = ((($0)) + 32816|0);
   _memcpy(($2241|0),($7|0),832)|0;
   $2242 = ((($0)) + 242336|0);
   $2243 = HEAP32[$2242>>2]|0;
   $2244 = $2243 | 2;
   HEAP32[$2242>>2] = $2244;
   $2245 = ((($0)) + 317168|0);
   HEAP8[$2245>>0] = 1;
   $2246 = HEAP32[$2238>>2]|0;
   $2247 = (($2246) + -1)|0;
   $2248 = ((($2237)) + 20|0);
   HEAP32[$2248>>2] = $2247;
   $$47 = 0;
   STACKTOP = sp;return ($$47|0);
  }
  $2249 = ((($0)) + 241924|0);
  $2250 = HEAP32[$2249>>2]|0;
  $2251 = ($2250|0)==(0|0);
  do {
   if (!($2251)) {
    $2252 = HEAP32[$2250>>2]|0;
    $2253 = HEAP32[$7>>2]|0;
    $2254 = ($2252|0)==($2253|0);
    if (!($2254)) {
     break;
    }
    $2255 = ((($0)) + 32816|0);
    _memcpy(($2255|0),($7|0),832)|0;
    $2256 = ((($0)) + 242336|0);
    $2257 = HEAP32[$2256>>2]|0;
    $2258 = $2257 | 2;
    HEAP32[$2256>>2] = $2258;
    $$47 = 0;
    STACKTOP = sp;return ($$47|0);
   }
  } while(0);
  _memcpy(($2206|0),($7|0),832)|0;
  $$47 = 0;
  STACKTOP = sp;return ($$47|0);
 }
 return (0)|0;
}
function __ZN7WelsDec8ParsePpsEPNS_21TagWelsDecoderContextEPNS_6TagPpsEPN10WelsCommon15TagBitStringAuxEPhi($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0293 = 0, $$0294463 = 0, $$25 = 0, $$neg$i = 0, $$neg5$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond21 = 0, $or$cond = 0;
 var $or$cond329 = 0, $or$cond331 = 0, $or$cond466 = 0, $storemerge$i = 0, $storemerge$i$off = 0, $storemerge$i358 = 0, $storemerge$i358$off = 0, $storemerge$i361 = 0, $storemerge$i364 = 0, $suba$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 736|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = sp + 732|0;
 $6 = sp + 48|0;
 $7 = sp + 44|0;
 $8 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  $$25 = $8;
  STACKTOP = sp;return ($$25|0);
 }
 $10 = HEAP32[$7>>2]|0;
 $11 = ($10>>>0)>(255);
 if ($11) {
  $$25 = 1005;
  STACKTOP = sp;return ($$25|0);
 }
 _memset(($6|0),0,684)|0;
 $12 = ((($6)) + 4|0);
 HEAP32[$12>>2] = $10;
 $13 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
 $14 = ($13|0)==(0);
 if (!($14)) {
  $$25 = $13;
  STACKTOP = sp;return ($$25|0);
 }
 $15 = HEAP32[$7>>2]|0;
 HEAP32[$6>>2] = $15;
 $16 = ($15|0)>(31);
 if ($16) {
  $$25 = 1004;
  STACKTOP = sp;return ($$25|0);
 }
 $17 = ((($2)) + 20|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 >>> 31;
 $20 = ((($2)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = HEAP32[$2>>2]|0;
 $23 = ((($2)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $18 << 1;
 HEAP32[$17>>2] = $25;
 $26 = ((($2)) + 24|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (($27) + 1)|0;
 HEAP32[$26>>2] = $28;
 $29 = ($27|0)>(-1);
 do {
  if ($29) {
   $30 = $24;
   $31 = (($30) - ($22))|0;
   $32 = (($21) + 1)|0;
   $33 = (($32) - ($22))|0;
   $34 = ($31|0)>($33|0);
   if ($34) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $35 = HEAP8[$24>>0]|0;
    $36 = $35&255;
    $37 = $36 << 8;
    $38 = ((($24)) + 1|0);
    $39 = HEAP8[$38>>0]|0;
    $40 = $39&255;
    $41 = $37 | $40;
    $42 = $41 << $28;
    $43 = $42 | $25;
    HEAP32[$17>>2] = $43;
    $44 = (($27) + -15)|0;
    HEAP32[$26>>2] = $44;
    $45 = ((($24)) + 2|0);
    HEAP32[$23>>2] = $45;
    $49 = $43;$52 = $44;$54 = $45;
    break;
   }
  } else {
   $49 = $25;$52 = $28;$54 = $24;
  }
 } while(0);
 HEAP32[$7>>2] = $19;
 $46 = ((($6)) + 176|0);
 $47 = $19&255;
 HEAP8[$46>>0] = $47;
 $48 = $49 >>> 31;
 $50 = $49 << 1;
 HEAP32[$17>>2] = $50;
 $51 = (($52) + 1)|0;
 HEAP32[$26>>2] = $51;
 $53 = ($52|0)>(-1);
 do {
  if ($53) {
   $55 = $54;
   $56 = (($55) - ($22))|0;
   $57 = (($21) + 1)|0;
   $58 = (($57) - ($22))|0;
   $59 = ($56|0)>($58|0);
   if ($59) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $60 = HEAP8[$54>>0]|0;
    $61 = $60&255;
    $62 = $61 << 8;
    $63 = ((($54)) + 1|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = $64&255;
    $66 = $62 | $65;
    $67 = $66 << $51;
    $68 = $67 | $50;
    HEAP32[$17>>2] = $68;
    $69 = (($52) + -15)|0;
    HEAP32[$26>>2] = $69;
    $70 = ((($54)) + 2|0);
    HEAP32[$23>>2] = $70;
    break;
   }
  }
 } while(0);
 HEAP32[$7>>2] = $48;
 $71 = ((($6)) + 177|0);
 $72 = $48&255;
 HEAP8[$71>>0] = $72;
 $73 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
 $74 = ($73|0)==(0);
 if (!($74)) {
  $$25 = $73;
  STACKTOP = sp;return ($$25|0);
 }
 $75 = HEAP32[$7>>2]|0;
 $76 = (($75) + 1)|0;
 $77 = ((($6)) + 8|0);
 HEAP32[$77>>2] = $76;
 $78 = ($76>>>0)>(8);
 if ($78) {
  $$25 = 1013;
  STACKTOP = sp;return ($$25|0);
 }
 $79 = ($76>>>0)>(1);
 L31: do {
  if ($79) {
   $80 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
   $81 = ($80|0)==(0);
   if (!($81)) {
    $$25 = $80;
    STACKTOP = sp;return ($$25|0);
   }
   $82 = HEAP32[$7>>2]|0;
   $83 = ((($6)) + 12|0);
   HEAP32[$83>>2] = $82;
   $84 = ($82>>>0)>(1);
   if ($84) {
    HEAP32[$vararg_buffer>>2] = $82;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,26725,$vararg_buffer);
    $$25 = 263204;
    STACKTOP = sp;return ($$25|0);
   }
   $cond21 = ($82|0)==(0);
   $85 = HEAP32[$77>>2]|0;
   $86 = ($85|0)!=(0);
   $or$cond466 = $cond21 & $86;
   if ($or$cond466) {
    $$0294463 = 0;
    while(1) {
     $87 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
     $88 = ($87|0)==(0);
     if (!($88)) {
      $$25 = $87;
      break;
     }
     $89 = HEAP32[$7>>2]|0;
     $90 = (($89) + 1)|0;
     $91 = (((($6)) + 16|0) + ($$0294463<<2)|0);
     HEAP32[$91>>2] = $90;
     $92 = (($$0294463) + 1)|0;
     $93 = HEAP32[$77>>2]|0;
     $94 = ($92>>>0)<($93>>>0);
     if ($94) {
      $$0294463 = $92;
     } else {
      break L31;
     }
    }
    STACKTOP = sp;return ($$25|0);
   }
  }
 } while(0);
 $95 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
 $96 = ($95|0)==(0);
 if (!($96)) {
  $$25 = $95;
  STACKTOP = sp;return ($$25|0);
 }
 $97 = HEAP32[$7>>2]|0;
 $98 = (($97) + 1)|0;
 $99 = ((($6)) + 152|0);
 HEAP32[$99>>2] = $98;
 $100 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$7)|0);
 $101 = ($100|0)==(0);
 if (!($101)) {
  $$25 = $100;
  STACKTOP = sp;return ($$25|0);
 }
 $102 = HEAP32[$7>>2]|0;
 $103 = (($102) + 1)|0;
 $104 = ((($6)) + 156|0);
 HEAP32[$104>>2] = $103;
 $105 = HEAP32[$99>>2]|0;
 $106 = ($105>>>0)>(16);
 $107 = ($103>>>0)>(16);
 $or$cond = $107 | $106;
 if ($or$cond) {
  $$25 = 1010;
  STACKTOP = sp;return ($$25|0);
 }
 $108 = HEAP32[$17>>2]|0;
 $109 = $108 >>> 31;
 $110 = HEAP32[$20>>2]|0;
 $111 = HEAP32[$2>>2]|0;
 $112 = HEAP32[$23>>2]|0;
 $113 = $108 << 1;
 HEAP32[$17>>2] = $113;
 $114 = HEAP32[$26>>2]|0;
 $115 = (($114) + 1)|0;
 HEAP32[$26>>2] = $115;
 $116 = ($114|0)>(-1);
 do {
  if ($116) {
   $117 = $112;
   $118 = (($117) - ($111))|0;
   $119 = (($110) + 1)|0;
   $120 = (($119) - ($111))|0;
   $121 = ($118|0)>($120|0);
   if ($121) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $122 = HEAP8[$112>>0]|0;
    $123 = $122&255;
    $124 = $123 << 8;
    $125 = ((($112)) + 1|0);
    $126 = HEAP8[$125>>0]|0;
    $127 = $126&255;
    $128 = $124 | $127;
    $129 = $128 << $115;
    $130 = $129 | $113;
    HEAP32[$17>>2] = $130;
    $131 = (($114) + -15)|0;
    HEAP32[$26>>2] = $131;
    $132 = ((($112)) + 2|0);
    HEAP32[$23>>2] = $132;
    $136 = $130;$139 = $131;$141 = $132;
    break;
   }
  } else {
   $136 = $113;$139 = $115;$141 = $112;
  }
 } while(0);
 HEAP32[$7>>2] = $109;
 $133 = ((($6)) + 182|0);
 $134 = $109&255;
 HEAP8[$133>>0] = $134;
 $135 = $136 >>> 30;
 $137 = $136 << 2;
 HEAP32[$17>>2] = $137;
 $138 = (($139) + 2)|0;
 HEAP32[$26>>2] = $138;
 $140 = ($139|0)>(-2);
 do {
  if ($140) {
   $142 = $141;
   $143 = (($142) - ($111))|0;
   $144 = (($110) + 1)|0;
   $145 = (($144) - ($111))|0;
   $146 = ($143|0)>($145|0);
   if ($146) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $147 = HEAP8[$141>>0]|0;
    $148 = $147&255;
    $149 = $148 << 8;
    $150 = ((($141)) + 1|0);
    $151 = HEAP8[$150>>0]|0;
    $152 = $151&255;
    $153 = $149 | $152;
    $154 = $153 << $138;
    $155 = $154 | $137;
    HEAP32[$17>>2] = $155;
    $156 = (($139) + -14)|0;
    HEAP32[$26>>2] = $156;
    $157 = ((($141)) + 2|0);
    HEAP32[$23>>2] = $157;
    break;
   }
  }
 } while(0);
 HEAP32[$7>>2] = $135;
 $158 = $135&255;
 $159 = ((($6)) + 183|0);
 HEAP8[$159>>0] = $158;
 $160 = ($135|0)==(0);
 if (!($160)) {
  HEAP32[$vararg_buffer1>>2] = $135;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,26782,$vararg_buffer1);
  $$25 = 263211;
  STACKTOP = sp;return ($$25|0);
 }
 $161 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$5)|0);
 $162 = ($161|0)==(0);
 if (!($162)) {
  $$25 = $161;
  STACKTOP = sp;return ($$25|0);
 }
 $163 = HEAP32[$5>>2]|0;
 $164 = $163 & 1;
 $165 = ($164|0)==(0);
 $166 = $163 >>> 1;
 $167 = (0 - ($166))|0;
 $168 = (($163) + 1)|0;
 $169 = $168 >>> 1;
 $storemerge$i361 = $165 ? $167 : $169;
 $170 = (($storemerge$i361) + 26)|0;
 $171 = ((($6)) + 160|0);
 HEAP32[$171>>2] = $170;
 $172 = ($storemerge$i361|0)<(-26);
 $173 = ($170|0)>(51);
 $or$cond329 = $172 | $173;
 if ($or$cond329) {
  HEAP32[$vararg_buffer4>>2] = $170;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,26835,$vararg_buffer4);
  $$25 = 263174;
  STACKTOP = sp;return ($$25|0);
 }
 $174 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$5)|0);
 $175 = ($174|0)==(0);
 if (!($175)) {
  $$25 = $174;
  STACKTOP = sp;return ($$25|0);
 }
 $176 = HEAP32[$5>>2]|0;
 $177 = $176 & 1;
 $178 = ($177|0)==(0);
 $179 = $176 >>> 1;
 $180 = (0 - ($179))|0;
 $181 = (($176) + 1)|0;
 $182 = $181 >>> 1;
 $storemerge$i364 = $178 ? $180 : $182;
 $183 = (($storemerge$i364) + 26)|0;
 $184 = ((($6)) + 164|0);
 HEAP32[$184>>2] = $183;
 $185 = ($storemerge$i364|0)<(-26);
 $186 = ($183|0)>(51);
 $or$cond331 = $185 | $186;
 if ($or$cond331) {
  HEAP32[$vararg_buffer7>>2] = $183;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,26878,$vararg_buffer7);
  $$25 = 263172;
  STACKTOP = sp;return ($$25|0);
 }
 $187 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$5)|0);
 $188 = ($187|0)==(0);
 if (!($188)) {
  $$25 = $187;
  STACKTOP = sp;return ($$25|0);
 }
 $189 = HEAP32[$5>>2]|0;
 $190 = $189 & 1;
 $191 = ($190|0)==(0);
 $192 = $189 >>> 1;
 $193 = (0 - ($192))|0;
 $194 = (($189) + 1)|0;
 $195 = $194 >>> 1;
 $storemerge$i358 = $191 ? $193 : $195;
 $196 = ((($6)) + 168|0);
 HEAP32[$196>>2] = $storemerge$i358;
 $storemerge$i358$off = (($storemerge$i358) + 12)|0;
 $197 = ($storemerge$i358$off>>>0)>(24);
 if ($197) {
  HEAP32[$vararg_buffer10>>2] = $storemerge$i358;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,26921,$vararg_buffer10);
  $$25 = 263173;
  STACKTOP = sp;return ($$25|0);
 }
 $198 = ((($6)) + 172|0);
 HEAP32[$198>>2] = $storemerge$i358;
 $199 = HEAP32[$17>>2]|0;
 $200 = $199 >>> 31;
 $201 = HEAP32[$20>>2]|0;
 $202 = HEAP32[$2>>2]|0;
 $203 = HEAP32[$23>>2]|0;
 $204 = $199 << 1;
 HEAP32[$17>>2] = $204;
 $205 = HEAP32[$26>>2]|0;
 $206 = (($205) + 1)|0;
 HEAP32[$26>>2] = $206;
 $207 = ($205|0)>(-1);
 $208 = $203;
 do {
  if ($207) {
   $209 = (($208) - ($202))|0;
   $210 = (($201) + 1)|0;
   $211 = (($210) - ($202))|0;
   $212 = ($209|0)>($211|0);
   if ($212) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $213 = HEAP8[$203>>0]|0;
    $214 = $213&255;
    $215 = $214 << 8;
    $216 = ((($203)) + 1|0);
    $217 = HEAP8[$216>>0]|0;
    $218 = $217&255;
    $219 = $215 | $218;
    $220 = $219 << $206;
    $221 = $220 | $204;
    HEAP32[$17>>2] = $221;
    $222 = (($205) + -15)|0;
    HEAP32[$26>>2] = $222;
    $223 = ((($203)) + 2|0);
    HEAP32[$23>>2] = $223;
    $224 = $223;
    $228 = $221;$231 = $222;$233 = $223;$415 = $224;
    break;
   }
  } else {
   $228 = $204;$231 = $206;$233 = $203;$415 = $208;
  }
 } while(0);
 HEAP32[$7>>2] = $200;
 $225 = ((($6)) + 179|0);
 $226 = $200&255;
 HEAP8[$225>>0] = $226;
 $227 = $228 >>> 31;
 $229 = $228 << 1;
 HEAP32[$17>>2] = $229;
 $230 = (($231) + 1)|0;
 HEAP32[$26>>2] = $230;
 $232 = ($231|0)>(-1);
 do {
  if ($232) {
   $234 = $233;
   $235 = (($234) - ($202))|0;
   $236 = (($201) + 1)|0;
   $237 = (($236) - ($202))|0;
   $238 = ($235|0)>($237|0);
   if ($238) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $239 = HEAP8[$233>>0]|0;
    $240 = $239&255;
    $241 = $240 << 8;
    $242 = ((($233)) + 1|0);
    $243 = HEAP8[$242>>0]|0;
    $244 = $243&255;
    $245 = $241 | $244;
    $246 = $245 << $230;
    $247 = $246 | $229;
    HEAP32[$17>>2] = $247;
    $248 = (($231) + -15)|0;
    HEAP32[$26>>2] = $248;
    $249 = ((($233)) + 2|0);
    HEAP32[$23>>2] = $249;
    $250 = $249;
    $254 = $247;$257 = $248;$259 = $249;$416 = $250;
    break;
   }
  } else {
   $254 = $229;$257 = $230;$259 = $233;$416 = $415;
  }
 } while(0);
 HEAP32[$7>>2] = $227;
 $251 = ((($6)) + 180|0);
 $252 = $227&255;
 HEAP8[$251>>0] = $252;
 $253 = $254 >>> 31;
 $255 = $254 << 1;
 HEAP32[$17>>2] = $255;
 $256 = (($257) + 1)|0;
 HEAP32[$26>>2] = $256;
 $258 = ($257|0)>(-1);
 do {
  if ($258) {
   $260 = $259;
   $261 = (($260) - ($202))|0;
   $262 = (($201) + 1)|0;
   $263 = (($262) - ($202))|0;
   $264 = ($261|0)>($263|0);
   if ($264) {
    $$25 = 11;
    STACKTOP = sp;return ($$25|0);
   } else {
    $265 = HEAP8[$259>>0]|0;
    $266 = $265&255;
    $267 = $266 << 8;
    $268 = ((($259)) + 1|0);
    $269 = HEAP8[$268>>0]|0;
    $270 = $269&255;
    $271 = $267 | $270;
    $272 = $271 << $256;
    $273 = $272 | $255;
    HEAP32[$17>>2] = $273;
    $274 = (($257) + -15)|0;
    HEAP32[$26>>2] = $274;
    $275 = ((($259)) + 2|0);
    HEAP32[$23>>2] = $275;
    $276 = $275;
    $281 = $276;$283 = $274;$287 = $273;$291 = $275;
    break;
   }
  } else {
   $281 = $416;$283 = $256;$287 = $255;$291 = $259;
  }
 } while(0);
 HEAP32[$7>>2] = $253;
 $277 = ((($6)) + 181|0);
 $278 = $253&255;
 HEAP8[$277>>0] = $278;
 $279 = ((($2)) + 8|0);
 $280 = HEAP32[$279>>2]|0;
 $suba$i = (($202) - ($281))|0;
 $$neg$i = $suba$i << 3;
 $$neg5$i = (($280) + 16)|0;
 $282 = (($$neg5$i) - ($283))|0;
 $284 = (($282) + ($$neg$i))|0;
 $285 = ($284|0)>(1);
 do {
  if ($285) {
   $286 = $287 >>> 31;
   $288 = $287 << 1;
   HEAP32[$17>>2] = $288;
   $289 = (($283) + 1)|0;
   HEAP32[$26>>2] = $289;
   $290 = ($283|0)>(-1);
   do {
    if ($290) {
     $292 = $291;
     $293 = (($292) - ($202))|0;
     $294 = (1 - ($202))|0;
     $295 = (($294) + ($201))|0;
     $296 = ($293|0)>($295|0);
     if ($296) {
      $$25 = 11;
      STACKTOP = sp;return ($$25|0);
     } else {
      $297 = HEAP8[$291>>0]|0;
      $298 = $297&255;
      $299 = $298 << 8;
      $300 = ((($291)) + 1|0);
      $301 = HEAP8[$300>>0]|0;
      $302 = $301&255;
      $303 = $299 | $302;
      $304 = $303 << $289;
      $305 = $304 | $288;
      HEAP32[$17>>2] = $305;
      $306 = (($283) + -15)|0;
      HEAP32[$26>>2] = $306;
      $307 = ((($291)) + 2|0);
      HEAP32[$23>>2] = $307;
      $311 = $305;$314 = $306;$316 = $307;
      break;
     }
    } else {
     $311 = $288;$314 = $289;$316 = $291;
    }
   } while(0);
   HEAP32[$7>>2] = $286;
   $308 = ((($6)) + 184|0);
   $309 = $286&255;
   HEAP8[$308>>0] = $309;
   $310 = $311 >>> 31;
   $312 = $311 << 1;
   HEAP32[$17>>2] = $312;
   $313 = (($314) + 1)|0;
   HEAP32[$26>>2] = $313;
   $315 = ($314|0)>(-1);
   do {
    if ($315) {
     $317 = $316;
     $318 = (($317) - ($202))|0;
     $319 = (($201) + 1)|0;
     $320 = (($319) - ($202))|0;
     $321 = ($318|0)>($320|0);
     if ($321) {
      $$25 = 11;
      STACKTOP = sp;return ($$25|0);
     } else {
      $322 = HEAP8[$316>>0]|0;
      $323 = $322&255;
      $324 = $323 << 8;
      $325 = ((($316)) + 1|0);
      $326 = HEAP8[$325>>0]|0;
      $327 = $326&255;
      $328 = $324 | $327;
      $329 = $328 << $313;
      $330 = $329 | $312;
      HEAP32[$17>>2] = $330;
      $331 = (($314) + -15)|0;
      HEAP32[$26>>2] = $331;
      $332 = ((($316)) + 2|0);
      HEAP32[$23>>2] = $332;
      break;
     }
    }
   } while(0);
   HEAP32[$7>>2] = $310;
   $333 = ($310|0)==(0);
   $334 = ((($6)) + 185|0);
   $335 = $310&255;
   HEAP8[$334>>0] = $335;
   do {
    if (!($333)) {
     $336 = HEAP32[$6>>2]|0;
     $337 = (((($0)) + 241972|0) + ($336)|0);
     $338 = HEAP8[$337>>0]|0;
     $339 = ($338<<24>>24)==(0);
     if ($339) {
      $346 = ((($0)) + 562525|0);
      HEAP8[$346>>0] = 1;
      $347 = ((($6)) + 186|0);
      $348 = ((($6)) + 198|0);
      $349 = ((($6)) + 294|0);
      $350 = (__ZN7WelsDec16ParseScalingListEPNS_6TagSpsEPN10WelsCommon15TagBitStringAuxEbPbPA16_hPA64_h(0,$2,1,$347,$348,$349)|0);
      $351 = ($350|0)==(0);
      if ($351) {
       break;
      } else {
       $$25 = $350;
      }
      STACKTOP = sp;return ($$25|0);
     } else {
      $340 = (((($0)) + 6192|0) + (($336*832)|0)|0);
      $341 = ((($6)) + 186|0);
      $342 = ((($6)) + 198|0);
      $343 = ((($6)) + 294|0);
      $344 = (__ZN7WelsDec16ParseScalingListEPNS_6TagSpsEPN10WelsCommon15TagBitStringAuxEbPbPA16_hPA64_h($340,$2,1,$341,$342,$343)|0);
      $345 = ($344|0)==(0);
      if ($345) {
       break;
      } else {
       $$25 = $344;
      }
      STACKTOP = sp;return ($$25|0);
     }
    }
   } while(0);
   $352 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$5)|0);
   $353 = ($352|0)==(0);
   if (!($353)) {
    $$25 = $352;
    STACKTOP = sp;return ($$25|0);
   }
   $354 = HEAP32[$5>>2]|0;
   $355 = $354 & 1;
   $356 = ($355|0)==(0);
   $357 = $354 >>> 1;
   $358 = (0 - ($357))|0;
   $359 = (($354) + 1)|0;
   $360 = $359 >>> 1;
   $storemerge$i = $356 ? $358 : $360;
   HEAP32[$198>>2] = $storemerge$i;
   $storemerge$i$off = (($storemerge$i) + 12)|0;
   $361 = ($storemerge$i$off>>>0)>(24);
   if (!($361)) {
    break;
   }
   HEAP32[$vararg_buffer13>>2] = $storemerge$i;
   __Z7WelsLogP13TagLogContextiPKcz($0,1,26921,$vararg_buffer13);
   $$25 = 263173;
   STACKTOP = sp;return ($$25|0);
  }
 } while(0);
 $362 = ((($0)) + 241888|0);
 $363 = HEAP32[$362>>2]|0;
 $364 = ((($363)) + 4|0);
 $365 = HEAP32[$364>>2]|0;
 $366 = ($365|0)==(0);
 L141: do {
  if ($366) {
   $386 = (((($0)) + 33648|0) + (($10*684)|0)|0);
   _memcpy(($386|0),($6|0),684)|0;
   $387 = (((($0)) + 242036|0) + ($10)|0);
   HEAP8[$387>>0] = 1;
  } else {
   $367 = HEAP32[$363>>2]|0;
   $368 = (($365) + -1)|0;
   $369 = (($367) + ($368<<2)|0);
   $370 = HEAP32[$369>>2]|0;
   $371 = ((($370)) + 92|0);
   $372 = HEAP32[$371>>2]|0;
   $373 = (((($0)) + 33648|0) + (($10*684)|0)|0);
   $374 = ($372|0)==($373|0);
   do {
    if ($374) {
     $375 = (_memcmp($373,$6,684)|0);
     $376 = ($375|0)==(0);
     if ($376) {
      break;
     }
     $377 = ((($0)) + 208752|0);
     _memcpy(($377|0),($6|0),684)|0;
     $378 = ((($0)) + 242336|0);
     $379 = HEAP32[$378>>2]|0;
     $380 = $379 | 1;
     HEAP32[$378>>2] = $380;
     $381 = ((($0)) + 317168|0);
     HEAP8[$381>>0] = 1;
     $382 = HEAP32[$364>>2]|0;
     $383 = (($382) + -1)|0;
     $384 = ((($363)) + 20|0);
     HEAP32[$384>>2] = $383;
     break L141;
    }
   } while(0);
   _memcpy(($373|0),($6|0),684)|0;
   $385 = (((($0)) + 242036|0) + ($10)|0);
   HEAP8[$385>>0] = 1;
  }
 } while(0);
 $388 = ((($0)) + 242344|0);
 $389 = HEAP8[$388>>0]|0;
 $390 = ($389<<24>>24)==(0);
 if ($390) {
  $$25 = 0;
  STACKTOP = sp;return ($$25|0);
 }
 $391 = ($4|0)>(123);
 if ($391) {
  $392 = ((($0)) + 116|0);
  $393 = HEAP32[$392>>2]|0;
  $394 = $393 | 16384;
  HEAP32[$392>>2] = $394;
  $$25 = 262145;
  STACKTOP = sp;return ($$25|0);
 }
 $395 = (((((($0)) + 282032|0) + (($10*136)|0)|0)) + 128|0);
 HEAP32[$395>>2] = $10;
 $$0293 = 0;
 while(1) {
  $396 = (($4) - ($$0293))|0;
  $397 = (($396) + -1)|0;
  $398 = (($3) + ($397)|0);
  $399 = HEAP8[$398>>0]|0;
  $400 = ($399<<24>>24)==(0);
  $401 = (($$0293) + 1)|0;
  if ($400) {
   $$0293 = $401;
  } else {
   break;
  }
 }
 $402 = $396&65535;
 $403 = (((((($0)) + 282032|0) + (($10*136)|0)|0)) + 132|0);
 HEAP16[$403>>1] = $402;
 $404 = HEAP8[$3>>0]|0;
 $405 = ($404<<24>>24)==(0);
 do {
  if ($405) {
   $406 = ((($3)) + 1|0);
   $407 = HEAP8[$406>>0]|0;
   $408 = ($407<<24>>24)==(0);
   if (!($408)) {
    $$0 = 0;
    break;
   }
   $409 = ((($3)) + 2|0);
   $410 = HEAP8[$409>>0]|0;
   $411 = ($410<<24>>24)==(1);
   if (!($411)) {
    $$0 = 0;
    break;
   }
   $412 = (((($0)) + 282032|0) + (($10*136)|0)|0);
   HEAP8[$412>>0] = 0;
   $413 = (($402) + 1)<<16>>16;
   HEAP16[$403>>1] = $413;
   $$0 = 1;
  } else {
   $$0 = 0;
  }
 } while(0);
 $414 = ((((($0)) + 282032|0) + (($10*136)|0)|0) + ($$0)|0);
 _memcpy(($414|0),($3|0),($396|0))|0;
 $$25 = 0;
 STACKTOP = sp;return ($$25|0);
}
function __ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$ph = 0, $$0$i7678 = 0, $$074 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >>> 24;
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   $9 = $3 >>> 16;
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (15782 + ($9)|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = (($13) + 8)|0;
    $$0$i$ph = $14;
    break;
   }
   $15 = $3 >>> 8;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = (15782 + ($15)|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = (($19) + 16)|0;
    $$0$i$ph = $20;
    break;
   }
   $21 = ($3|0)==(0);
   if ($21) {
    $$0 = 12;
    return ($$0|0);
   } else {
    $22 = (15782 + ($3)|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = (($24) + 24)|0;
    $$0$i$ph = $25;
    break;
   }
  } else {
   $6 = (15782 + ($4)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = $7&255;
   $$0$i$ph = $8;
  }
 } while(0);
 $26 = ((($0)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = HEAP32[$0>>2]|0;
 $29 = (($27) - ($28))|0;
 $30 = ($$0$i$ph|0)>(16);
 $31 = ((($0)) + 16|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32;
 $34 = (($33) - ($28))|0;
 do {
  if ($30) {
   $35 = $3 << 16;
   HEAP32[$2>>2] = $35;
   $36 = ((($0)) + 24|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37) + 16)|0;
   HEAP32[$36>>2] = $38;
   $39 = ($37|0)>(-16);
   do {
    if ($39) {
     $40 = (($29) + 1)|0;
     $41 = ($34|0)>($40|0);
     if ($41) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $42 = HEAP8[$32>>0]|0;
      $43 = $42&255;
      $44 = $43 << 8;
      $45 = ((($32)) + 1|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = $46&255;
      $48 = $44 | $47;
      $49 = $48 << $38;
      $50 = $49 | $35;
      HEAP32[$2>>2] = $50;
      HEAP32[$36>>2] = $37;
      $51 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $51;
      $54 = $50;$56 = $37;$58 = $51;
      break;
     }
    } else {
     $54 = $35;$56 = $38;$58 = $32;
    }
   } while(0);
   $52 = (($$0$i$ph) + -15)|0;
   $53 = $54 << $52;
   HEAP32[$2>>2] = $53;
   $55 = (($56) + ($52))|0;
   HEAP32[$36>>2] = $55;
   $57 = ($55|0)>(0);
   if ($57) {
    $59 = $58;
    $60 = (($59) - ($28))|0;
    $61 = (($29) + 1)|0;
    $62 = ($60|0)>($61|0);
    if ($62) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $63 = HEAP8[$58>>0]|0;
     $64 = $63&255;
     $65 = $64 << 8;
     $66 = ((($58)) + 1|0);
     $67 = HEAP8[$66>>0]|0;
     $68 = $67&255;
     $69 = $65 | $68;
     $70 = $69 << $55;
     $71 = $70 | $53;
     HEAP32[$2>>2] = $71;
     $72 = (($55) + -16)|0;
     HEAP32[$36>>2] = $72;
     $73 = ((($58)) + 2|0);
     HEAP32[$31>>2] = $73;
     $$pre$phiZ2D = $36;$101 = $73;$96 = $71;$99 = $72;
     label = 20;
     break;
    }
   } else {
    $$pre$phiZ2D = $36;$101 = $58;$96 = $53;$99 = $55;
    label = 20;
   }
  } else {
   $74 = (($$0$i$ph) + 1)|0;
   $75 = $3 << $74;
   HEAP32[$2>>2] = $75;
   $76 = ((($0)) + 24|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = (($77) + ($74))|0;
   HEAP32[$76>>2] = $78;
   $79 = ($78|0)>(0);
   do {
    if ($79) {
     $80 = (($29) + 1)|0;
     $81 = ($34|0)>($80|0);
     if ($81) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $82 = HEAP8[$32>>0]|0;
      $83 = $82&255;
      $84 = $83 << 8;
      $85 = ((($32)) + 1|0);
      $86 = HEAP8[$85>>0]|0;
      $87 = $86&255;
      $88 = $84 | $87;
      $89 = $88 << $78;
      $90 = $89 | $75;
      HEAP32[$2>>2] = $90;
      $91 = (($78) + -16)|0;
      HEAP32[$76>>2] = $91;
      $92 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $92;
      $120 = $91;$121 = $92;$122 = $90;
      break;
     }
    } else {
     $120 = $78;$121 = $32;$122 = $75;
    }
   } while(0);
   $93 = ($$0$i$ph|0)==(0);
   if ($93) {
    $$0$i7678 = 0;$$074 = 0;
   } else {
    $$pre$phiZ2D = $76;$101 = $121;$96 = $122;$99 = $120;
    label = 20;
   }
  }
 } while(0);
 do {
  if ((label|0) == 20) {
   $94 = (32 - ($$0$i$ph))|0;
   $95 = $96 >>> $94;
   $97 = $96 << $$0$i$ph;
   HEAP32[$2>>2] = $97;
   $98 = (($99) + ($$0$i$ph))|0;
   HEAP32[$$pre$phiZ2D>>2] = $98;
   $100 = ($98|0)>(0);
   if ($100) {
    $102 = $101;
    $103 = (($102) - ($28))|0;
    $104 = (($29) + 1)|0;
    $105 = ($103|0)>($104|0);
    if ($105) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $106 = HEAP8[$101>>0]|0;
     $107 = $106&255;
     $108 = $107 << 8;
     $109 = ((($101)) + 1|0);
     $110 = HEAP8[$109>>0]|0;
     $111 = $110&255;
     $112 = $108 | $111;
     $113 = $112 << $98;
     $114 = $113 | $97;
     HEAP32[$2>>2] = $114;
     $115 = (($98) + -16)|0;
     HEAP32[$$pre$phiZ2D>>2] = $115;
     $116 = ((($101)) + 2|0);
     HEAP32[$31>>2] = $116;
     $$0$i7678 = $$0$i$ph;$$074 = $95;
     break;
    }
   } else {
    $$0$i7678 = $$0$i$ph;$$074 = $95;
   }
  }
 } while(0);
 $117 = 1 << $$0$i7678;
 $118 = (($117) + -1)|0;
 $119 = (($118) + ($$074))|0;
 HEAP32[$1>>2] = $119;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec16ParseScalingListEPNS_6TagSpsEPN10WelsCommon15TagBitStringAuxEbPbPA16_hPA64_h($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$03953$i = 0, $$03953$us$i = 0, $$04052$i = 0, $$04052$us$i = 0, $$04151$i = 0, $$04151$us$i = 0, $$069 = 0, $$070$off0 = 0, $$075115 = 0, $$1 = 0, $$142$i = 0, $$142$us$i = 0, $$188 = 0, $$2 = 0, $$289 = 0, $$3$ph = 0, $$374 = 0, $$390$ph = 0, $$lobit = 0, $$off$i = 0;
 var $$off$us$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge$i$i = 0, $storemerge$i$us$i = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $6 = sp + 16|0;
 $7 = sp;
 $8 = ($0|0)==(0|0);
 if ($8) {
  $$069 = 12;$$070$off0 = 0;
 } else {
  $9 = ((($0)) + 318|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = ($10<<24>>24)!=(3);
  $12 = $11 ? 8 : 12;
  if ($2) {
   $13 = ((($0)) + 335|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = ($14<<24>>24)!=(0);
   $$069 = $12;$$070$off0 = $15;
  } else {
   $$069 = $12;$$070$off0 = 0;
  }
 }
 $16 = ((($0)) + 348|0);
 $17 = $$070$off0 ? $16 : 26962;
 HEAP32[$7>>2] = $17;
 $18 = ((($0)) + 396|0);
 $19 = $$070$off0 ? $18 : (26978);
 $20 = ((($7)) + 4|0);
 HEAP32[$20>>2] = $19;
 $21 = ((($0)) + 444|0);
 $22 = $$070$off0 ? $21 : 26994;
 $23 = ((($7)) + 8|0);
 HEAP32[$23>>2] = $22;
 $24 = ((($0)) + 508|0);
 $25 = $$070$off0 ? $24 : (27058);
 $26 = ((($7)) + 12|0);
 HEAP32[$26>>2] = $25;
 $27 = ((($1)) + 20|0);
 $28 = ((($1)) + 4|0);
 $29 = ((($1)) + 16|0);
 $30 = ((($1)) + 24|0);
 $$075115 = 0;
 L5: while(1) {
  $31 = HEAP32[$27>>2]|0;
  $32 = HEAP32[$28>>2]|0;
  $33 = HEAP32[$1>>2]|0;
  $34 = HEAP32[$29>>2]|0;
  $35 = $31 << 1;
  HEAP32[$27>>2] = $35;
  $36 = HEAP32[$30>>2]|0;
  $37 = (($36) + 1)|0;
  HEAP32[$30>>2] = $37;
  $38 = ($36|0)>(-1);
  if ($38) {
   $39 = $34;
   $40 = (($39) - ($33))|0;
   $41 = (($32) + 1)|0;
   $42 = (($41) - ($33))|0;
   $43 = ($40|0)>($42|0);
   if ($43) {
    $$374 = 11;
    label = 36;
    break;
   }
   $44 = HEAP8[$34>>0]|0;
   $45 = $44&255;
   $46 = $45 << 8;
   $47 = ((($34)) + 1|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = $48&255;
   $50 = $46 | $49;
   $51 = $50 << $37;
   $52 = $51 | $35;
   HEAP32[$27>>2] = $52;
   $53 = (($36) + -15)|0;
   HEAP32[$30>>2] = $53;
   $54 = ((($34)) + 2|0);
   HEAP32[$29>>2] = $54;
  }
  $55 = ($31|0)<(0);
  $56 = (($3) + ($$075115)|0);
  $$lobit = $31 >>> 31;
  $57 = $$lobit&255;
  HEAP8[$56>>0] = $57;
  $58 = ($$075115>>>0)<(6);
  L11: do {
   if ($55) {
    if ($58) {
     $59 = (($4) + ($$075115<<4)|0);
     $$03953$us$i = 0;$$04052$us$i = 8;$$04151$us$i = 8;$$188 = 0;
     while(1) {
      $60 = ($$04151$us$i|0)==(0);
      if ($60) {
       $$142$us$i = 0;$$289 = $$188;
      } else {
       $61 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$6)|0);
       $62 = ($61|0)==(0);
       if (!($62)) {
        label = 16;
        break L5;
       }
       $63 = HEAP32[$6>>2]|0;
       $64 = $63 & 1;
       $65 = ($64|0)==(0);
       $66 = $63 >>> 1;
       $67 = (0 - ($66))|0;
       $68 = (($63) + 1)|0;
       $69 = $68 >>> 1;
       $storemerge$i$us$i = $65 ? $67 : $69;
       $$off$us$i = (($storemerge$i$us$i) + 128)|0;
       $70 = ($$off$us$i>>>0)>(255);
       if ($70) {
        $$374 = 10013;
        label = 36;
        break L5;
       }
       $71 = $$04052$us$i | 256;
       $72 = (($storemerge$i$us$i) + ($71))|0;
       $73 = (($72|0) % 256)&-1;
       $74 = $73 | $$03953$us$i;
       $75 = ($74|0)==(0);
       $76 = $75&1;
       if ($75) {
        $$390$ph = $76;
        break;
       } else {
        $$142$us$i = $73;$$289 = $76;
       }
      }
      $77 = (27122 + ($$03953$us$i)|0);
      $78 = HEAP8[$77>>0]|0;
      $79 = $78&255;
      $80 = ($$142$us$i|0)==(0);
      $81 = $80 ? $$04052$us$i : $$142$us$i;
      $82 = $81&255;
      $83 = ((($4) + ($$075115<<4)|0) + ($79)|0);
      HEAP8[$83>>0] = $82;
      $84 = $81 & 255;
      $85 = (($$03953$us$i) + 1)|0;
      $86 = ($85|0)<(16);
      if ($86) {
       $$03953$us$i = $85;$$04052$us$i = $84;$$04151$us$i = $$142$us$i;$$188 = $$289;
      } else {
       $$390$ph = $$289;
       break;
      }
     }
     $87 = ($$390$ph<<24>>24)==(0);
     if ($87) {
      break;
     }
     $88 = (($$075115>>>0) / 3)&-1;
     $89 = (26962 + ($88<<4)|0);
     dest=$59; src=$89; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     break;
    } else {
     $90 = (($$075115) + -6)|0;
     $91 = (($5) + ($90<<6)|0);
     $$03953$i = 0;$$04052$i = 8;$$04151$i = 8;$$1 = 0;
     while(1) {
      $92 = ($$04151$i|0)==(0);
      if ($92) {
       $$142$i = 0;$$2 = $$1;
      } else {
       $93 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($1,$6)|0);
       $94 = ($93|0)==(0);
       if (!($94)) {
        label = 22;
        break L5;
       }
       $95 = HEAP32[$6>>2]|0;
       $96 = $95 & 1;
       $97 = ($96|0)==(0);
       $98 = $95 >>> 1;
       $99 = (0 - ($98))|0;
       $100 = (($95) + 1)|0;
       $101 = $100 >>> 1;
       $storemerge$i$i = $97 ? $99 : $101;
       $$off$i = (($storemerge$i$i) + 128)|0;
       $102 = ($$off$i>>>0)>(255);
       if ($102) {
        $$374 = 10013;
        label = 36;
        break L5;
       }
       $103 = $$04052$i | 256;
       $104 = (($storemerge$i$i) + ($103))|0;
       $105 = (($104|0) % 256)&-1;
       $106 = $105 | $$03953$i;
       $107 = ($106|0)==(0);
       $108 = $107&1;
       if ($107) {
        $$3$ph = $108;
        break;
       } else {
        $$142$i = $105;$$2 = $108;
       }
      }
      $109 = (27138 + ($$03953$i)|0);
      $110 = HEAP8[$109>>0]|0;
      $111 = $110&255;
      $112 = ($$142$i|0)==(0);
      $113 = $112 ? $$04052$i : $$142$i;
      $114 = $113&255;
      $115 = ((($5) + ($90<<6)|0) + ($111)|0);
      HEAP8[$115>>0] = $114;
      $116 = $113 & 255;
      $117 = (($$03953$i) + 1)|0;
      $118 = ($117|0)<(64);
      if ($118) {
       $$03953$i = $117;$$04052$i = $116;$$04151$i = $$142$i;$$1 = $$2;
      } else {
       $$3$ph = $$2;
       break;
      }
     }
     $119 = ($$3$ph<<24>>24)==(0);
     if ($119) {
      break;
     }
     $120 = $90 & 1;
     $121 = (26994 + ($120<<6)|0);
     dest=$91; src=$121; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     break;
    }
   } else {
    if ($58) {
     $122 = (($4) + ($$075115<<4)|0);
     switch ($$075115|0) {
     case 0: case 3:  {
      $125 = (($$075115>>>0) / 3)&-1;
      $126 = (($7) + ($125<<2)|0);
      $127 = HEAP32[$126>>2]|0;
      dest=$122; src=$127; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
      break L11;
      break;
     }
     default: {
      $123 = (($$075115) + -1)|0;
      $124 = (($4) + ($123<<4)|0);
      dest=$122; src=$124; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
      break L11;
     }
     }
    } else {
     $128 = $$075115 | 1;
     $129 = ($128|0)==(7);
     $130 = (($$075115) + -6)|0;
     $131 = (($5) + ($130<<6)|0);
     if ($129) {
      $132 = $$075115 & 1;
      $133 = $132 | 2;
      $134 = (($7) + ($133<<2)|0);
      $135 = HEAP32[$134>>2]|0;
      dest=$131; src=$135; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
      break;
     } else {
      $136 = (($$075115) + -8)|0;
      $137 = (($5) + ($136<<6)|0);
      dest=$131; src=$137; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
      break;
     }
    }
   }
  } while(0);
  $138 = (($$075115) + 1)|0;
  $139 = ($138>>>0)<($$069>>>0);
  if ($139) {
   $$075115 = $138;
  } else {
   $$374 = 0;
   label = 36;
   break;
  }
 }
 if ((label|0) == 16) {
  $$374 = $61;
  STACKTOP = sp;return ($$374|0);
 }
 else if ((label|0) == 22) {
  $$374 = $93;
  STACKTOP = sp;return ($$374|0);
 }
 else if ((label|0) == 36) {
  STACKTOP = sp;return ($$374|0);
 }
 return (0)|0;
}
function __ZN7WelsDec9RBSP2EBSPEPhS0_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01923 = 0, $$02022 = 0, $$024 = 0, $$1 = 0, $$121 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($1) + ($2)|0);
 $4 = ($2|0)>(0);
 if ($4) {
  $$01923 = $1;$$02022 = $0;$$024 = 0;
 } else {
  return;
 }
 while(1) {
  $5 = ($$024|0)==(2);
  if ($5) {
   $6 = HEAP8[$$01923>>0]|0;
   $7 = ($6&255)<(4);
   if ($7) {
    $8 = ((($$02022)) + 1|0);
    HEAP8[$$02022>>0] = 3;
    $$1 = 0;$$121 = $8;
   } else {
    $$1 = 2;$$121 = $$02022;
   }
  } else {
   $$1 = $$024;$$121 = $$02022;
  }
  $9 = HEAP8[$$01923>>0]|0;
  $10 = ($9<<24>>24)==(0);
  $11 = (($$1) + 1)|0;
  $$2 = $10 ? $11 : 0;
  $12 = ((($$01923)) + 1|0);
  $13 = ((($$121)) + 1|0);
  HEAP8[$$121>>0] = $9;
  $14 = ($12>>>0)<($3>>>0);
  if ($14) {
   $$01923 = $12;$$02022 = $13;$$024 = $$2;
  } else {
   break;
  }
 }
 return;
}
function __ZN7WelsDec15DecodeSpsSvcExtEPNS_21TagWelsDecoderContextEPNS_12TagSubsetSpsEPN10WelsCommon15TagBitStringAuxE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$16 = 0, $$lobit = 0, $$lobit287 = 0, $$lobit288 = 0, $$lobit289 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge$i = 0, $storemerge$i$off = 0;
 var $storemerge$i175 = 0, $storemerge$i175$off = 0, $storemerge$i180 = 0, $storemerge$i180$off = 0, $storemerge$i185 = 0, $storemerge$i185$off = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 36|0;
 $4 = ((($1)) + 832|0);
 $5 = ((($2)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($2)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$2>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $6 << 1;
 HEAP32[$5>>2] = $12;
 $13 = ((($2)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + 1)|0;
 HEAP32[$13>>2] = $15;
 $16 = ($14|0)>(-1);
 do {
  if ($16) {
   $17 = $11;
   $18 = (($17) - ($9))|0;
   $19 = (($8) + 1)|0;
   $20 = (($19) - ($9))|0;
   $21 = ($18|0)>($20|0);
   if ($21) {
    $$16 = 11;
    STACKTOP = sp;return ($$16|0);
   } else {
    $22 = HEAP8[$11>>0]|0;
    $23 = $22&255;
    $24 = $23 << 8;
    $25 = ((($11)) + 1|0);
    $26 = HEAP8[$25>>0]|0;
    $27 = $26&255;
    $28 = $24 | $27;
    $29 = $28 << $15;
    $30 = $29 | $12;
    HEAP32[$5>>2] = $30;
    $31 = (($14) + -15)|0;
    HEAP32[$13>>2] = $31;
    $32 = ((($11)) + 2|0);
    HEAP32[$10>>2] = $32;
    break;
   }
  }
 } while(0);
 $33 = ((($1)) + 853|0);
 $$lobit = $6 >>> 31;
 $34 = $$lobit&255;
 HEAP8[$33>>0] = $34;
 $35 = HEAP32[$5>>2]|0;
 $36 = $35 >>> 30;
 $37 = HEAP32[$7>>2]|0;
 $38 = HEAP32[$2>>2]|0;
 $39 = HEAP32[$10>>2]|0;
 $40 = $35 << 2;
 HEAP32[$5>>2] = $40;
 $41 = HEAP32[$13>>2]|0;
 $42 = (($41) + 2)|0;
 HEAP32[$13>>2] = $42;
 $43 = ($41|0)>(-2);
 do {
  if ($43) {
   $44 = $39;
   $45 = (($44) - ($38))|0;
   $46 = (($37) + 1)|0;
   $47 = (($46) - ($38))|0;
   $48 = ($45|0)>($47|0);
   if ($48) {
    $$16 = 11;
    STACKTOP = sp;return ($$16|0);
   } else {
    $49 = HEAP8[$39>>0]|0;
    $50 = $49&255;
    $51 = $50 << 8;
    $52 = ((($39)) + 1|0);
    $53 = HEAP8[$52>>0]|0;
    $54 = $53&255;
    $55 = $51 | $54;
    $56 = $55 << $42;
    $57 = $56 | $40;
    HEAP32[$5>>2] = $57;
    $58 = (($41) + -14)|0;
    HEAP32[$13>>2] = $58;
    $59 = ((($39)) + 2|0);
    HEAP32[$10>>2] = $59;
    break;
   }
  }
 } while(0);
 $60 = $36&255;
 $61 = ((($1)) + 848|0);
 HEAP8[$61>>0] = $60;
 $62 = ($36|0)==(3);
 if ($62) {
  HEAP32[$vararg_buffer>>2] = 3;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,28175,$vararg_buffer);
  $$16 = 263220;
  STACKTOP = sp;return ($$16|0);
 }
 $63 = ((($1)) + 849|0);
 HEAP8[$63>>0] = 0;
 $64 = ((($1)) + 850|0);
 HEAP8[$64>>0] = 1;
 $65 = HEAP32[$5>>2]|0;
 $66 = $65 >>> 31;
 $67 = HEAP32[$7>>2]|0;
 $68 = HEAP32[$2>>2]|0;
 $69 = HEAP32[$10>>2]|0;
 $70 = $65 << 1;
 HEAP32[$5>>2] = $70;
 $71 = HEAP32[$13>>2]|0;
 $72 = (($71) + 1)|0;
 HEAP32[$13>>2] = $72;
 $73 = ($71|0)>(-1);
 do {
  if ($73) {
   $74 = $69;
   $75 = (($74) - ($68))|0;
   $76 = (($67) + 1)|0;
   $77 = (($76) - ($68))|0;
   $78 = ($75|0)>($77|0);
   if ($78) {
    $$16 = 11;
    STACKTOP = sp;return ($$16|0);
   } else {
    $79 = HEAP8[$69>>0]|0;
    $80 = $79&255;
    $81 = $80 << 8;
    $82 = ((($69)) + 1|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83&255;
    $85 = $81 | $84;
    $86 = $85 << $72;
    $87 = $86 | $70;
    HEAP32[$5>>2] = $87;
    $88 = (($71) + -15)|0;
    HEAP32[$13>>2] = $88;
    $89 = ((($69)) + 2|0);
    HEAP32[$10>>2] = $89;
    break;
   }
  }
 } while(0);
 $90 = $66&255;
 HEAP8[$63>>0] = $90;
 $91 = HEAP32[$5>>2]|0;
 $92 = $91 >>> 30;
 $93 = HEAP32[$7>>2]|0;
 $94 = HEAP32[$2>>2]|0;
 $95 = HEAP32[$10>>2]|0;
 $96 = $91 << 2;
 HEAP32[$5>>2] = $96;
 $97 = HEAP32[$13>>2]|0;
 $98 = (($97) + 2)|0;
 HEAP32[$13>>2] = $98;
 $99 = ($97|0)>(-2);
 do {
  if ($99) {
   $100 = $95;
   $101 = (($100) - ($94))|0;
   $102 = (($93) + 1)|0;
   $103 = (($102) - ($94))|0;
   $104 = ($101|0)>($103|0);
   if ($104) {
    $$16 = 11;
    STACKTOP = sp;return ($$16|0);
   } else {
    $105 = HEAP8[$95>>0]|0;
    $106 = $105&255;
    $107 = $106 << 8;
    $108 = ((($95)) + 1|0);
    $109 = HEAP8[$108>>0]|0;
    $110 = $109&255;
    $111 = $107 | $110;
    $112 = $111 << $98;
    $113 = $112 | $96;
    HEAP32[$5>>2] = $113;
    $114 = (($97) + -14)|0;
    HEAP32[$13>>2] = $114;
    $115 = ((($95)) + 2|0);
    HEAP32[$10>>2] = $115;
    break;
   }
  }
 } while(0);
 $116 = $92&255;
 HEAP8[$64>>0] = $116;
 $117 = HEAP8[$63>>0]|0;
 $118 = ((($1)) + 851|0);
 HEAP8[$118>>0] = $117;
 $119 = ((($1)) + 852|0);
 HEAP8[$119>>0] = $116;
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;
 $120 = HEAP8[$61>>0]|0;
 $121 = ($120<<24>>24)==(1);
 do {
  if ($121) {
   $122 = HEAP32[$5>>2]|0;
   $123 = $122 >>> 31;
   $124 = HEAP32[$7>>2]|0;
   $125 = HEAP32[$2>>2]|0;
   $126 = HEAP32[$10>>2]|0;
   $127 = $122 << 1;
   HEAP32[$5>>2] = $127;
   $128 = HEAP32[$13>>2]|0;
   $129 = (($128) + 1)|0;
   HEAP32[$13>>2] = $129;
   $130 = ($128|0)>(-1);
   do {
    if ($130) {
     $131 = $126;
     $132 = (($131) - ($125))|0;
     $133 = (($124) + 1)|0;
     $134 = (($133) - ($125))|0;
     $135 = ($132|0)>($134|0);
     if ($135) {
      $$16 = 11;
      STACKTOP = sp;return ($$16|0);
     } else {
      $136 = HEAP8[$126>>0]|0;
      $137 = $136&255;
      $138 = $137 << 8;
      $139 = ((($126)) + 1|0);
      $140 = HEAP8[$139>>0]|0;
      $141 = $140&255;
      $142 = $138 | $141;
      $143 = $142 << $129;
      $144 = $143 | $127;
      HEAP32[$5>>2] = $144;
      $145 = (($128) + -15)|0;
      HEAP32[$13>>2] = $145;
      $146 = ((($126)) + 2|0);
      HEAP32[$10>>2] = $146;
      break;
     }
    }
   } while(0);
   $147 = $123&255;
   HEAP8[$118>>0] = $147;
   $148 = HEAP32[$5>>2]|0;
   $149 = $148 >>> 30;
   $150 = HEAP32[$7>>2]|0;
   $151 = HEAP32[$2>>2]|0;
   $152 = HEAP32[$10>>2]|0;
   $153 = $148 << 2;
   HEAP32[$5>>2] = $153;
   $154 = HEAP32[$13>>2]|0;
   $155 = (($154) + 2)|0;
   HEAP32[$13>>2] = $155;
   $156 = ($154|0)>(-2);
   do {
    if ($156) {
     $157 = $152;
     $158 = (($157) - ($151))|0;
     $159 = (($150) + 1)|0;
     $160 = (($159) - ($151))|0;
     $161 = ($158|0)>($160|0);
     if ($161) {
      $$16 = 11;
      STACKTOP = sp;return ($$16|0);
     } else {
      $162 = HEAP8[$152>>0]|0;
      $163 = $162&255;
      $164 = $163 << 8;
      $165 = ((($152)) + 1|0);
      $166 = HEAP8[$165>>0]|0;
      $167 = $166&255;
      $168 = $164 | $167;
      $169 = $168 << $155;
      $170 = $169 | $153;
      HEAP32[$5>>2] = $170;
      $171 = (($154) + -14)|0;
      HEAP32[$13>>2] = $171;
      $172 = ((($152)) + 2|0);
      HEAP32[$10>>2] = $172;
      break;
     }
    }
   } while(0);
   $173 = $149&255;
   HEAP8[$119>>0] = $173;
   $174 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$3)|0);
   $175 = ($174|0)==(0);
   if (!($175)) {
    $$16 = $174;
    STACKTOP = sp;return ($$16|0);
   }
   $176 = HEAP32[$3>>2]|0;
   $177 = $176 & 1;
   $178 = ($177|0)==(0);
   $179 = $176 >>> 1;
   $180 = (0 - ($179))|0;
   $181 = (($176) + 1)|0;
   $182 = $181 >>> 1;
   $storemerge$i185 = $178 ? $180 : $182;
   HEAP32[$4>>2] = $storemerge$i185;
   $storemerge$i185$off = (($storemerge$i185) + 32768)|0;
   $183 = ($storemerge$i185$off>>>0)>(65535);
   if ($183) {
    HEAP32[$vararg_buffer1>>2] = $storemerge$i185;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28252,$vararg_buffer1);
   }
   $184 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$3)|0);
   $185 = ($184|0)==(0);
   if (!($185)) {
    $$16 = $184;
    STACKTOP = sp;return ($$16|0);
   }
   $186 = HEAP32[$3>>2]|0;
   $187 = $186 & 1;
   $188 = ($187|0)==(0);
   $189 = $186 >>> 1;
   $190 = (0 - ($189))|0;
   $191 = (($186) + 1)|0;
   $192 = $191 >>> 1;
   $storemerge$i180 = $188 ? $190 : $192;
   $193 = ((($1)) + 836|0);
   HEAP32[$193>>2] = $storemerge$i180;
   $storemerge$i180$off = (($storemerge$i180) + 32768)|0;
   $194 = ($storemerge$i180$off>>>0)>(65535);
   if ($194) {
    HEAP32[$vararg_buffer4>>2] = $storemerge$i180;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28303,$vararg_buffer4);
   }
   $195 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$3)|0);
   $196 = ($195|0)==(0);
   if (!($196)) {
    $$16 = $195;
    STACKTOP = sp;return ($$16|0);
   }
   $197 = HEAP32[$3>>2]|0;
   $198 = $197 & 1;
   $199 = ($198|0)==(0);
   $200 = $197 >>> 1;
   $201 = (0 - ($200))|0;
   $202 = (($197) + 1)|0;
   $203 = $202 >>> 1;
   $storemerge$i175 = $199 ? $201 : $203;
   $204 = ((($1)) + 840|0);
   HEAP32[$204>>2] = $storemerge$i175;
   $storemerge$i175$off = (($storemerge$i175) + 32768)|0;
   $205 = ($storemerge$i175$off>>>0)>(65535);
   if ($205) {
    HEAP32[$vararg_buffer7>>2] = $storemerge$i175;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28353,$vararg_buffer7);
   }
   $206 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($2,$3)|0);
   $207 = ($206|0)==(0);
   if ($207) {
    $208 = HEAP32[$3>>2]|0;
    $209 = $208 & 1;
    $210 = ($209|0)==(0);
    $211 = $208 >>> 1;
    $212 = (0 - ($211))|0;
    $213 = (($208) + 1)|0;
    $214 = $213 >>> 1;
    $storemerge$i = $210 ? $212 : $214;
    $215 = ((($1)) + 844|0);
    HEAP32[$215>>2] = $storemerge$i;
    $storemerge$i$off = (($storemerge$i) + 32768)|0;
    $216 = ($storemerge$i$off>>>0)>(65535);
    if (!($216)) {
     break;
    }
    HEAP32[$vararg_buffer10>>2] = $storemerge$i;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,28405,$vararg_buffer10);
    break;
   } else {
    $$16 = $206;
    STACKTOP = sp;return ($$16|0);
   }
  }
 } while(0);
 $217 = HEAP32[$5>>2]|0;
 $218 = HEAP32[$7>>2]|0;
 $219 = HEAP32[$2>>2]|0;
 $220 = HEAP32[$10>>2]|0;
 $221 = $217 << 1;
 HEAP32[$5>>2] = $221;
 $222 = HEAP32[$13>>2]|0;
 $223 = (($222) + 1)|0;
 HEAP32[$13>>2] = $223;
 $224 = ($222|0)>(-1);
 do {
  if ($224) {
   $225 = $220;
   $226 = (($225) - ($219))|0;
   $227 = (($218) + 1)|0;
   $228 = (($227) - ($219))|0;
   $229 = ($226|0)>($228|0);
   if ($229) {
    $$16 = 11;
    STACKTOP = sp;return ($$16|0);
   } else {
    $230 = HEAP8[$220>>0]|0;
    $231 = $230&255;
    $232 = $231 << 8;
    $233 = ((($220)) + 1|0);
    $234 = HEAP8[$233>>0]|0;
    $235 = $234&255;
    $236 = $232 | $235;
    $237 = $236 << $223;
    $238 = $237 | $221;
    HEAP32[$5>>2] = $238;
    $239 = (($222) + -15)|0;
    HEAP32[$13>>2] = $239;
    $240 = ((($220)) + 2|0);
    HEAP32[$10>>2] = $240;
    break;
   }
  }
 } while(0);
 $241 = ($217|0)<(0);
 $242 = ((($1)) + 854|0);
 $$lobit287 = $217 >>> 31;
 $243 = $$lobit287&255;
 HEAP8[$242>>0] = $243;
 $244 = ((($1)) + 855|0);
 HEAP8[$244>>0] = 0;
 if ($241) {
  $245 = HEAP32[$5>>2]|0;
  $246 = HEAP32[$7>>2]|0;
  $247 = HEAP32[$2>>2]|0;
  $248 = HEAP32[$10>>2]|0;
  $249 = $245 << 1;
  HEAP32[$5>>2] = $249;
  $250 = HEAP32[$13>>2]|0;
  $251 = (($250) + 1)|0;
  HEAP32[$13>>2] = $251;
  $252 = ($250|0)>(-1);
  do {
   if ($252) {
    $253 = $248;
    $254 = (($253) - ($247))|0;
    $255 = (($246) + 1)|0;
    $256 = (($255) - ($247))|0;
    $257 = ($254|0)>($256|0);
    if ($257) {
     $$16 = 11;
     STACKTOP = sp;return ($$16|0);
    } else {
     $258 = HEAP8[$248>>0]|0;
     $259 = $258&255;
     $260 = $259 << 8;
     $261 = ((($248)) + 1|0);
     $262 = HEAP8[$261>>0]|0;
     $263 = $262&255;
     $264 = $260 | $263;
     $265 = $264 << $251;
     $266 = $265 | $249;
     HEAP32[$5>>2] = $266;
     $267 = (($250) + -15)|0;
     HEAP32[$13>>2] = $267;
     $268 = ((($248)) + 2|0);
     HEAP32[$10>>2] = $268;
     break;
    }
   }
  } while(0);
  $$lobit289 = $245 >>> 31;
  $269 = $$lobit289&255;
  HEAP8[$244>>0] = $269;
 }
 $270 = HEAP32[$5>>2]|0;
 $271 = HEAP32[$7>>2]|0;
 $272 = HEAP32[$2>>2]|0;
 $273 = HEAP32[$10>>2]|0;
 $274 = $270 << 1;
 HEAP32[$5>>2] = $274;
 $275 = HEAP32[$13>>2]|0;
 $276 = (($275) + 1)|0;
 HEAP32[$13>>2] = $276;
 $277 = ($275|0)>(-1);
 do {
  if ($277) {
   $278 = $273;
   $279 = (($278) - ($272))|0;
   $280 = (($271) + 1)|0;
   $281 = (($280) - ($272))|0;
   $282 = ($279|0)>($281|0);
   if ($282) {
    $$16 = 11;
    STACKTOP = sp;return ($$16|0);
   } else {
    $283 = HEAP8[$273>>0]|0;
    $284 = $283&255;
    $285 = $284 << 8;
    $286 = ((($273)) + 1|0);
    $287 = HEAP8[$286>>0]|0;
    $288 = $287&255;
    $289 = $285 | $288;
    $290 = $289 << $276;
    $291 = $290 | $274;
    HEAP32[$5>>2] = $291;
    $292 = (($275) + -15)|0;
    HEAP32[$13>>2] = $292;
    $293 = ((($273)) + 2|0);
    HEAP32[$10>>2] = $293;
    break;
   }
  }
 } while(0);
 $294 = ((($1)) + 856|0);
 $$lobit288 = $270 >>> 31;
 $295 = $$lobit288&255;
 HEAP8[$294>>0] = $295;
 $$16 = 0;
 STACKTOP = sp;return ($$16|0);
}
function __ZN7WelsDec14CheckSpsActiveEPNS_21TagWelsDecoderContextEPNS_6TagSpsEb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$07291 = 0, $$07488 = 0, $$11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 241892|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==($1|0);
 if ($5) {
  $$11 = 1;
  return ($$11|0);
 }
 $6 = ((($0)) + 241896|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($1|0);
 if ($8) {
  $$11 = 1;
  return ($$11|0);
 }
 $57 = ((($0)) + 241900|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = ($58|0)==($1|0);
 if ($59) {
  $$11 = 1;
  return ($$11|0);
 }
 $60 = ((($0)) + 241904|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ($61|0)==($1|0);
 if ($62) {
  $$11 = 1;
  return ($$11|0);
 }
 $63 = ((($0)) + 241908|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)==($1|0);
 if ($65) {
  $$11 = 1;
  return ($$11|0);
 }
 $66 = ((($0)) + 241912|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = ($67|0)==($1|0);
 if ($68) {
  $$11 = 1;
  return ($$11|0);
 }
 $69 = ((($0)) + 241916|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = ($70|0)==($1|0);
 if ($71) {
  $$11 = 1;
  return ($$11|0);
 }
 $72 = ((($0)) + 241920|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = ($73|0)==($1|0);
 if ($74) {
  $$11 = 1;
  return ($$11|0);
 }
 $75 = ((($1)) + 4|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = ($76|0)!=(0);
 if ($2) {
  if (!($77)) {
   $$11 = 0;
   return ($$11|0);
  }
  $9 = ((($1)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $$11 = 0;
   return ($$11|0);
  }
  $12 = HEAP32[$1>>2]|0;
  $13 = (((($0)) + 242004|0) + ($12)|0);
  $14 = HEAP8[$13>>0]|0;
  $15 = ($14<<24>>24)==(0);
  if ($15) {
   $$11 = 0;
   return ($$11|0);
  }
  $16 = ((($0)) + 241888|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($17)) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)>(0);
  if (!($20)) {
   $$11 = 0;
   return ($$11|0);
  }
  $21 = HEAP32[$17>>2]|0;
  $$07488 = 0;
  while(1) {
   $22 = (($21) + ($$07488<<2)|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($23)) + 3904|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = ($25<<24>>24)==(0);
   if (!($26)) {
    $27 = ((($23)) + 88|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = HEAP32[$28>>2]|0;
    $30 = ($29|0)==($12|0);
    if ($30) {
     $$11 = 1;
     label = 19;
     break;
    }
   }
   $31 = (($$07488) + 1)|0;
   $32 = ($31|0)<($19|0);
   if ($32) {
    $$07488 = $31;
   } else {
    $$11 = 0;
    label = 19;
    break;
   }
  }
  if ((label|0) == 19) {
   return ($$11|0);
  }
 } else {
  if (!($77)) {
   $$11 = 0;
   return ($$11|0);
  }
  $33 = ((($1)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ($34|0)==(0);
  if ($35) {
   $$11 = 0;
   return ($$11|0);
  }
  $36 = HEAP32[$1>>2]|0;
  $37 = (((($0)) + 241972|0) + ($36)|0);
  $38 = HEAP8[$37>>0]|0;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $$11 = 0;
   return ($$11|0);
  }
  $40 = ((($0)) + 241888|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($41)) + 4|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ($43|0)>(0);
  if (!($44)) {
   $$11 = 0;
   return ($$11|0);
  }
  $45 = HEAP32[$41>>2]|0;
  $$07291 = 0;
  while(1) {
   $46 = (($45) + ($$07291<<2)|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ((($47)) + 3904|0);
   $49 = HEAP8[$48>>0]|0;
   $50 = ($49<<24>>24)==(0);
   if ($50) {
    $51 = ((($47)) + 88|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==($36|0);
    if ($54) {
     $$11 = 1;
     label = 19;
     break;
    }
   }
   $55 = (($$07291) + 1)|0;
   $56 = ($55|0)<($43|0);
   if ($56) {
    $$07291 = $55;
   } else {
    $$11 = 0;
    label = 19;
    break;
   }
  }
  if ((label|0) == 19) {
   return ($$11|0);
  }
 }
 return (0)|0;
}
function __ZN7WelsDec18DecodeNalHeaderExtEPNS_10TagNalUnitEPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$lobit = 0, $$lobit27 = 0, $$lobit28 = 0, $$lobit29 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2&255;
 $4 = ((($0)) + 12|0);
 $5 = $3 >>> 6;
 $$lobit = $5 & 1;
 $6 = $$lobit&255;
 HEAP8[$4>>0] = $6;
 $7 = $3 & 63;
 $8 = $7&255;
 $9 = ((($0)) + 13|0);
 HEAP8[$9>>0] = $8;
 $10 = ((($1)) + 1|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = ($11&255) >>> 7;
 $14 = ((($0)) + 14|0);
 HEAP8[$14>>0] = $13;
 $15 = $12 >>> 4;
 $16 = $15 & 7;
 $17 = $16&255;
 $18 = ((($0)) + 15|0);
 HEAP8[$18>>0] = $17;
 $19 = $12 & 15;
 $20 = $19&255;
 $21 = ((($0)) + 16|0);
 HEAP8[$21>>0] = $20;
 $22 = ((($1)) + 2|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = ($23&255) >>> 5;
 $26 = ((($0)) + 17|0);
 HEAP8[$26>>0] = $25;
 $27 = ((($0)) + 18|0);
 $28 = $24 >>> 4;
 $$lobit27 = $28 & 1;
 $29 = $$lobit27&255;
 HEAP8[$27>>0] = $29;
 $30 = ((($0)) + 19|0);
 $31 = $24 >>> 3;
 $$lobit28 = $31 & 1;
 $32 = $$lobit28&255;
 HEAP8[$30>>0] = $32;
 $33 = ((($0)) + 20|0);
 $34 = $24 >>> 2;
 $$lobit29 = $34 & 1;
 $35 = $$lobit29&255;
 HEAP8[$33>>0] = $35;
 $36 = $24 & 3;
 $37 = $36&255;
 $38 = ((($0)) + 21|0);
 HEAP8[$38>>0] = $37;
 $39 = $16 << 4;
 $40 = $39 | $19;
 $41 = $40&255;
 $42 = ((($0)) + 22|0);
 HEAP8[$42>>0] = $41;
 return;
}
function __ZN7WelsDec18ParsePrefixNalUnitEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$7 = 0, $$lobit = 0, $$lobit79 = 0, $$lobit80 = 0, $$not = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $brmerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 237969|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $$7 = 0;
  return ($$7|0);
 }
 $5 = ((($0)) + 237992|0);
 $6 = ((($1)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$1>>2]|0;
 $11 = ((($1)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $7 << 1;
 HEAP32[$6>>2] = $13;
 $14 = ((($1)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + 1)|0;
 HEAP32[$14>>2] = $16;
 $17 = ($15|0)>(-1);
 do {
  if ($17) {
   $18 = $12;
   $19 = (($18) - ($10))|0;
   $20 = (($9) + 1)|0;
   $21 = (($20) - ($10))|0;
   $22 = ($19|0)>($21|0);
   if ($22) {
    $$7 = 11;
    return ($$7|0);
   } else {
    $23 = HEAP8[$12>>0]|0;
    $24 = $23&255;
    $25 = $24 << 8;
    $26 = ((($12)) + 1|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = $27&255;
    $29 = $25 | $28;
    $30 = $29 << $16;
    $31 = $30 | $13;
    HEAP32[$6>>2] = $31;
    $32 = (($15) + -15)|0;
    HEAP32[$14>>2] = $32;
    $33 = ((($12)) + 2|0);
    HEAP32[$11>>2] = $33;
    break;
   }
  }
 } while(0);
 $34 = ($7|0)<(0);
 $35 = ((($0)) + 239052|0);
 $$lobit = $7 >>> 31;
 $36 = $$lobit&255;
 HEAP8[$35>>0] = $36;
 $37 = ((($0)) + 237986|0);
 $38 = HEAP8[$37>>0]|0;
 $$not = ($38<<24>>24)!=(0);
 $brmerge = $34 | $$not;
 if ($brmerge) {
  $39 = ((($0)) + 237980|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $42 = (__ZN7WelsDec22ParseRefBasePicMarkingEPN10WelsCommon15TagBitStringAuxEPNS_23TagRefBasePicMarkingSynE($1,$5)|0);
   $43 = ($42|0)==(0);
   if (!($43)) {
    $$7 = $42;
    return ($$7|0);
   }
  }
 }
 $44 = HEAP32[$6>>2]|0;
 $45 = HEAP32[$8>>2]|0;
 $46 = HEAP32[$1>>2]|0;
 $47 = HEAP32[$11>>2]|0;
 $48 = $44 << 1;
 HEAP32[$6>>2] = $48;
 $49 = HEAP32[$14>>2]|0;
 $50 = (($49) + 1)|0;
 HEAP32[$14>>2] = $50;
 $51 = ($49|0)>(-1);
 do {
  if ($51) {
   $52 = $47;
   $53 = (($52) - ($46))|0;
   $54 = (($45) + 1)|0;
   $55 = (($54) - ($46))|0;
   $56 = ($53|0)>($55|0);
   if ($56) {
    $$7 = 11;
    return ($$7|0);
   } else {
    $57 = HEAP8[$47>>0]|0;
    $58 = $57&255;
    $59 = $58 << 8;
    $60 = ((($47)) + 1|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61&255;
    $63 = $59 | $62;
    $64 = $63 << $50;
    $65 = $64 | $48;
    HEAP32[$6>>2] = $65;
    $66 = (($49) + -15)|0;
    HEAP32[$14>>2] = $66;
    $67 = ((($47)) + 2|0);
    HEAP32[$11>>2] = $67;
    break;
   }
  }
 } while(0);
 $68 = ($44|0)<(0);
 $69 = ((($5)) + 1061|0);
 $$lobit79 = $44 >>> 31;
 $70 = $$lobit79&255;
 HEAP8[$69>>0] = $70;
 if (!($68)) {
  $$7 = 0;
  return ($$7|0);
 }
 $71 = HEAP32[$6>>2]|0;
 $72 = HEAP32[$8>>2]|0;
 $73 = HEAP32[$1>>2]|0;
 $74 = HEAP32[$11>>2]|0;
 $75 = $71 << 1;
 HEAP32[$6>>2] = $75;
 $76 = HEAP32[$14>>2]|0;
 $77 = (($76) + 1)|0;
 HEAP32[$14>>2] = $77;
 $78 = ($76|0)>(-1);
 do {
  if ($78) {
   $79 = $74;
   $80 = (($79) - ($73))|0;
   $81 = (($72) + 1)|0;
   $82 = (($81) - ($73))|0;
   $83 = ($80|0)>($82|0);
   if ($83) {
    $$7 = 11;
    return ($$7|0);
   } else {
    $84 = HEAP8[$74>>0]|0;
    $85 = $84&255;
    $86 = $85 << 8;
    $87 = ((($74)) + 1|0);
    $88 = HEAP8[$87>>0]|0;
    $89 = $88&255;
    $90 = $86 | $89;
    $91 = $90 << $77;
    $92 = $91 | $75;
    HEAP32[$6>>2] = $92;
    $93 = (($76) + -15)|0;
    HEAP32[$14>>2] = $93;
    $94 = ((($74)) + 2|0);
    HEAP32[$11>>2] = $94;
    break;
   }
  }
 } while(0);
 $95 = ((($5)) + 1062|0);
 $$lobit80 = $71 >>> 31;
 $96 = $$lobit80&255;
 HEAP8[$95>>0] = $96;
 $$7 = 0;
 return ($$7|0);
}
function __ZN7WelsDec13MemGetNextNalEPPNS_14TagAccessUnitsEPN10WelsCommon12CMemoryAlignE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$121 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 do {
  if ($7) {
   $$121 = $2;$15 = $4;
  } else {
   $8 = (($6) + 16)|0;
   $9 = (__ZN7WelsDec17ExpandNalUnitListEPPNS_14TagAccessUnitsEiiPN10WelsCommon12CMemoryAlignE($0,$6,$8,$1)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = HEAP32[$0>>2]|0;
    $$phi$trans$insert = ((($11)) + 4|0);
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $$121 = $11;$15 = $$pre;
    break;
   } else {
    $$1 = 0;
    return ($$1|0);
   }
  }
 } while(0);
 $12 = HEAP32[$$121>>2]|0;
 $13 = ((($$121)) + 4|0);
 $14 = (($15) + 1)|0;
 HEAP32[$13>>2] = $14;
 $16 = (($12) + ($15<<2)|0);
 $17 = HEAP32[$16>>2]|0;
 _memset(($17|0),0,3920)|0;
 $$1 = $17;
 return ($$1|0);
}
function __ZN7WelsDec20ForceClearCurrentNalEPNS_14TagAccessUnitsE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 }
 $4 = (($2) + -1)|0;
 HEAP32[$1>>2] = $4;
 return;
}
function __ZN7WelsDec26PrefetchNalHeaderExtSyntaxEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitES3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$061 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0|0);
 $4 = ($2|0)==(0|0);
 $or$cond = $3 | $4;
 if ($or$cond) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = ((($2)) + 24|0);
 $6 = ((($1)) + 100|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (((($0)) + 33648|0) + (($7*684)|0)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 15|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ((($1)) + 15|0);
 HEAP8[$12>>0] = $11;
 $13 = ((($2)) + 16|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ((($1)) + 16|0);
 HEAP8[$15>>0] = $14;
 $16 = ((($2)) + 17|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ((($1)) + 17|0);
 HEAP8[$18>>0] = $17;
 $19 = ((($2)) + 13|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ((($1)) + 13|0);
 HEAP8[$21>>0] = $20;
 $22 = ((($2)) + 12|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = ((($1)) + 12|0);
 HEAP8[$24>>0] = $23;
 $25 = ((($2)) + 14|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = ((($1)) + 14|0);
 HEAP8[$27>>0] = $26;
 $28 = ((($2)) + 19|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = ((($1)) + 19|0);
 HEAP8[$30>>0] = $29;
 $31 = ((($2)) + 20|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = ((($1)) + 20|0);
 HEAP8[$33>>0] = $32;
 $34 = ((($2)) + 18|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = ((($1)) + 18|0);
 HEAP8[$36>>0] = $35;
 $37 = ((($2)) + 22|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = ((($1)) + 22|0);
 HEAP8[$39>>0] = $38;
 $40 = ((($2)) + 1084|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = ((($1)) + 3853|0);
 HEAP8[$42>>0] = $41;
 $43 = ((($1)) + 2792|0);
 _memcpy(($43|0),($5|0),1060)|0;
 $44 = ((($1)) + 3848|0);
 $45 = HEAP8[$44>>0]|0;
 $46 = ($45<<24>>24)==(0);
 if ($46) {
  $$0 = 1;
  return ($$0|0);
 }
 $47 = ((($1)) + 28|0);
 $48 = (((((($0)) + 6192|0) + (($9*832)|0)|0)) + 16|0);
 $$061 = 0;
 L7: while(1) {
  $49 = (((($1)) + 2792|0) + ($$061<<4)|0);
  $50 = HEAP32[$49>>2]|0;
  switch ($50|0) {
  case 0:  {
   $$0 = 1;
   label = 7;
   break L7;
   break;
  }
  case 1:  {
   $51 = HEAP32[$47>>2]|0;
   $52 = (((((($1)) + 2792|0) + ($$061<<4)|0)) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($51) - ($53))|0;
   $55 = HEAP32[$48>>2]|0;
   $56 = 1 << $55;
   $57 = (($56) + -1)|0;
   $58 = $57 & $54;
   $59 = (((((($1)) + 2792|0) + ($$061<<4)|0)) + 4|0);
   HEAP32[$59>>2] = $58;
   break;
  }
  default: {
  }
  }
  $60 = (($$061) + 1)|0;
  $61 = ($60|0)<(66);
  if ($61) {
   $$061 = $60;
  } else {
   $$0 = 1;
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  return ($$0|0);
 }
 return (0)|0;
}
function __ZN7WelsDec23ParseSliceHeaderSyntaxsEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxEb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i = 0, $$0604 = 0, $$0605 = 0, $$49 = 0, $$648 = 0, $$708 = 0, $$not = 0, $$not649 = 0, $$not667 = 0, $$off = 0, $$off927 = 0, $$off928 = 0, $$off929 = 0, $$off930 = 0, $$off931 = 0, $$pr = 0, $$pr$pre = 0, $$pr883 = 0, $$pre = 0, $$sink = 0;
 var $$sink$i = 0, $$sink653 = 0, $$sink654 = 0, $$sink655 = 0, $$sink925 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0.0, $425 = 0.0, $426 = 0.0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $addconv646 = 0, $brmerge668 = 0, $brmerge671$not = 0, $brmerge672 = 0;
 var $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond650 = 0, $or$cond651 = 0, $or$cond707 = 0, $or$cond710 = 0, $storemerge$i = 0, $storemerge$i733 = 0, $storemerge$i736 = 0, $storemerge$i739 = 0, $storemerge$i742 = 0, $storemerge$i749 = 0, $storemerge$i752 = 0, $storemerge$i755 = 0, $sum = 0, $switch = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0;
 var $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer24 = 0, $vararg_buffer29 = 0, $vararg_buffer31 = 0, $vararg_buffer34 = 0, $vararg_buffer37 = 0, $vararg_buffer4 = 0, $vararg_buffer40 = 0, $vararg_buffer43 = 0, $vararg_buffer46 = 0, $vararg_buffer49 = 0, $vararg_buffer51 = 0, $vararg_buffer53 = 0, $vararg_buffer55 = 0, $vararg_buffer57 = 0, $vararg_buffer60 = 0, $vararg_buffer63 = 0, $vararg_buffer65 = 0;
 var $vararg_buffer68 = 0, $vararg_buffer7 = 0, $vararg_buffer71 = 0, $vararg_buffer74 = 0, $vararg_buffer77 = 0, $vararg_buffer80 = 0, $vararg_buffer83 = 0, $vararg_buffer85 = 0, $vararg_ptr1 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr22 = 0, $vararg_ptr23 = 0, $vararg_ptr27 = 0, $vararg_ptr28 = 0, $vararg_ptr88 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1344|0;
 $vararg_buffer85 = sp + 264|0;
 $vararg_buffer83 = sp + 256|0;
 $vararg_buffer80 = sp + 248|0;
 $vararg_buffer77 = sp + 240|0;
 $vararg_buffer74 = sp + 232|0;
 $vararg_buffer71 = sp + 224|0;
 $vararg_buffer68 = sp + 216|0;
 $vararg_buffer65 = sp + 208|0;
 $vararg_buffer63 = sp + 200|0;
 $vararg_buffer60 = sp + 192|0;
 $vararg_buffer57 = sp + 184|0;
 $vararg_buffer55 = sp + 176|0;
 $vararg_buffer53 = sp + 168|0;
 $vararg_buffer51 = sp + 160|0;
 $vararg_buffer49 = sp + 152|0;
 $vararg_buffer46 = sp + 144|0;
 $vararg_buffer43 = sp + 136|0;
 $vararg_buffer40 = sp + 128|0;
 $vararg_buffer37 = sp + 120|0;
 $vararg_buffer34 = sp + 112|0;
 $vararg_buffer31 = sp + 104|0;
 $vararg_buffer29 = sp + 96|0;
 $vararg_buffer24 = sp + 80|0;
 $vararg_buffer19 = sp + 64|0;
 $vararg_buffer17 = sp + 56|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 276|0;
 $4 = sp + 272|0;
 $5 = ((($0)) + 241888|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($6)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + -1)|0;
 $11 = (($7) + ($10<<2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $$49 = 1;
  STACKTOP = sp;return ($$49|0);
 }
 $14 = $2&1;
 $15 = ((($12)) + 24|0);
 $16 = ((($12)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($12)) + 3853|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ((($12)) + 2792|0);
 _memcpy(($3|0),($20|0),1060)|0;
 _memset(($15|0),0,3844)|0;
 HEAP8[$18>>0] = $19;
 _memcpy(($20|0),($3|0),1060)|0;
 $21 = ((($12)) + 3904|0);
 HEAP8[$21>>0] = $14;
 $22 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
 $23 = ($22|0)==(0);
 if (!($23)) {
  $$49 = $22;
  STACKTOP = sp;return ($$49|0);
 }
 $24 = HEAP32[$4>>2]|0;
 HEAP32[$15>>2] = $24;
 $25 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
 $26 = ($25|0)==(0);
 if (!($26)) {
  $$49 = $25;
  STACKTOP = sp;return ($$49|0);
 }
 $27 = HEAP32[$4>>2]|0;
 $28 = $27 & 255;
 $29 = ($28>>>0)>(9);
 if ($29) {
  $30 = HEAP32[$15>>2]|0;
  HEAP32[$vararg_buffer>>2] = $28;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $30;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29132,$vararg_buffer);
  $$49 = 328757;
  STACKTOP = sp;return ($$49|0);
 }
 $31 = ($28>>>0)>(4);
 $32 = (($27) + 251)|0;
 $$648 = $31 ? $32 : $27;
 $33 = $$648 & 255;
 $34 = ($33|0)==(1);
 if ($34) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29174,$vararg_buffer2);
  $$49 = 328746;
  STACKTOP = sp;return ($$49|0);
 }
 $35 = ($17|0)==(5);
 $$not649 = $35 ^ 1;
 $36 = ($33|0)==(2);
 $or$cond650 = $36 | $$not649;
 if (!($or$cond650)) {
  HEAP32[$vararg_buffer4>>2] = $33;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29224,$vararg_buffer4);
  $$49 = 328757;
  STACKTOP = sp;return ($$49|0);
 }
 $37 = ($33>>>0)>(2);
 $or$cond651 = $37 & $2;
 if ($or$cond651) {
  HEAP32[$vararg_buffer7>>2] = $33;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29264,$vararg_buffer7);
  $$49 = 328757;
  STACKTOP = sp;return ($$49|0);
 }
 $38 = ((($12)) + 2756|0);
 HEAP32[$38>>2] = $33;
 $39 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
 $40 = ($39|0)==(0);
 if (!($40)) {
  $$49 = $39;
  STACKTOP = sp;return ($$49|0);
 }
 $41 = HEAP32[$4>>2]|0;
 $42 = ($41|0)>(255);
 if ($42) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29288,$vararg_buffer10);
  $$49 = 328685;
  STACKTOP = sp;return ($$49|0);
 }
 $43 = (((($0)) + 242036|0) + ($41)|0);
 $44 = HEAP8[$43>>0]|0;
 $45 = ($44<<24>>24)==(0);
 if ($45) {
  $46 = ((($0)) + 512316|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (($47) + 1)|0;
  HEAP32[$46>>2] = $48;
  $49 = ((($0)) + 242292|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($50|0)==($41|0);
  $52 = ((($0)) + 242296|0);
  $53 = HEAP32[$52>>2]|0;
  if ($51) {
   $54 = (($53) + 1)|0;
   $$sink653 = $54;
  } else {
   HEAP32[$vararg_buffer12>>2] = $41;
   $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
   HEAP32[$vararg_ptr15>>2] = $50;
   $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
   HEAP32[$vararg_ptr16>>2] = $53;
   __Z7WelsLogP13TagLogContextiPKcz($0,1,29308,$vararg_buffer12);
   HEAP32[$49>>2] = $41;
   $$sink653 = 0;
  }
  HEAP32[$52>>2] = $$sink653;
  $55 = ((($0)) + 116|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = $56 | 16;
  HEAP32[$55>>2] = $57;
  $$49 = 328717;
  STACKTOP = sp;return ($$49|0);
 }
 $58 = ((($0)) + 242292|0);
 HEAP32[$58>>2] = -1;
 $59 = (((($0)) + 33648|0) + (($41*684)|0)|0);
 $60 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 8|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ($61|0)==(0);
 if ($62) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29369,$vararg_buffer17);
  $63 = ((($0)) + 116|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = $64 | 16;
  HEAP32[$63>>2] = $65;
  $$49 = 328682;
  STACKTOP = sp;return ($$49|0);
 }
 $66 = HEAP32[$59>>2]|0;
 do {
  if ($2) {
   $67 = (((($0)) + 209452|0) + (($66*864)|0)|0);
   $68 = (((($0)) + 242004|0) + ($66)|0);
   $69 = HEAP8[$68>>0]|0;
   $70 = ($69<<24>>24)==(0);
   if (!($70)) {
    $85 = ((($0)) + 242308|0);
    HEAP32[$85>>2] = -1;
    $$0604 = $67;$$0605 = $67;
    break;
   }
   $71 = ((($0)) + 512312|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (($72) + 1)|0;
   HEAP32[$71>>2] = $73;
   $74 = ((($0)) + 242308|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = HEAP32[$59>>2]|0;
   $77 = ($75|0)==($76|0);
   $78 = ((($0)) + 242312|0);
   $79 = HEAP32[$78>>2]|0;
   if ($77) {
    $81 = (($79) + 1)|0;
    $$sink654 = $81;
   } else {
    HEAP32[$vararg_buffer19>>2] = $76;
    $vararg_ptr22 = ((($vararg_buffer19)) + 4|0);
    HEAP32[$vararg_ptr22>>2] = $75;
    $vararg_ptr23 = ((($vararg_buffer19)) + 8|0);
    HEAP32[$vararg_ptr23>>2] = $79;
    __Z7WelsLogP13TagLogContextiPKcz($0,1,29392,$vararg_buffer19);
    $80 = HEAP32[$59>>2]|0;
    HEAP32[$74>>2] = $80;
    $$sink654 = 0;
   }
   HEAP32[$78>>2] = $$sink654;
   $82 = ((($0)) + 116|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = $83 | 16;
   HEAP32[$82>>2] = $84;
   $$49 = 328716;
   STACKTOP = sp;return ($$49|0);
  } else {
   $86 = (((($0)) + 241972|0) + ($66)|0);
   $87 = HEAP8[$86>>0]|0;
   $88 = ($87<<24>>24)==(0);
   if (!($88)) {
    $103 = ((($0)) + 242300|0);
    HEAP32[$103>>2] = -1;
    $104 = HEAP32[$59>>2]|0;
    $105 = (((($0)) + 6192|0) + (($104*832)|0)|0);
    $$0604 = 0;$$0605 = $105;
    break;
   }
   $89 = ((($0)) + 512308|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = (($90) + 1)|0;
   HEAP32[$89>>2] = $91;
   $92 = ((($0)) + 242300|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = HEAP32[$59>>2]|0;
   $95 = ($93|0)==($94|0);
   $96 = ((($0)) + 242304|0);
   $97 = HEAP32[$96>>2]|0;
   if ($95) {
    $99 = (($97) + 1)|0;
    $$sink655 = $99;
   } else {
    HEAP32[$vararg_buffer24>>2] = $94;
    $vararg_ptr27 = ((($vararg_buffer24)) + 4|0);
    HEAP32[$vararg_ptr27>>2] = $93;
    $vararg_ptr28 = ((($vararg_buffer24)) + 8|0);
    HEAP32[$vararg_ptr28>>2] = $97;
    __Z7WelsLogP13TagLogContextiPKcz($0,1,29457,$vararg_buffer24);
    $98 = HEAP32[$59>>2]|0;
    HEAP32[$92>>2] = $98;
    $$sink655 = 0;
   }
   HEAP32[$96>>2] = $$sink655;
   $100 = ((($0)) + 116|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = $101 | 16;
   HEAP32[$100>>2] = $102;
   $$49 = 328716;
   STACKTOP = sp;return ($$49|0);
  }
 } while(0);
 $106 = ((($12)) + 100|0);
 HEAP32[$106>>2] = $41;
 $107 = HEAP32[$59>>2]|0;
 $108 = ((($12)) + 96|0);
 HEAP32[$108>>2] = $107;
 $109 = ((($12)) + 92|0);
 HEAP32[$109>>2] = $59;
 $110 = ((($12)) + 88|0);
 HEAP32[$110>>2] = $$0605;
 $111 = ((($12)) + 2768|0);
 HEAP32[$111>>2] = $$0604;
 $$not = $2 ^ 1;
 $or$cond = $35 & $$not;
 if ($2) {
  $112 = ((($12)) + 12|0);
  $113 = HEAP8[$112>>0]|0;
  $114 = ($113<<24>>24)!=(0);
  $116 = $114;
 } else {
  $116 = $or$cond;
 }
 $115 = $116&1;
 $117 = ((($12)) + 104|0);
 HEAP8[$117>>0] = $115;
 $118 = ((($$0605)) + 16|0);
 $119 = HEAP32[$118>>2]|0;
 $120 = ($119|0)==(0);
 if ($120) {
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29518,$vararg_buffer29);
  $$49 = 328682;
  STACKTOP = sp;return ($$49|0);
 }
 $121 = HEAP32[$15>>2]|0;
 $122 = ((($$0605)) + 12|0);
 $123 = HEAP32[$122>>2]|0;
 $124 = ($121>>>0)>($123>>>0);
 if ($124) {
  HEAP32[$vararg_buffer31>>2] = $121;
  __Z7WelsLogP13TagLogContextiPKcz($0,1,29546,$vararg_buffer31);
  $$49 = 328700;
  STACKTOP = sp;return ($$49|0);
 }
 $125 = ((($1)) + 20|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = (32 - ($119))|0;
 $128 = $126 >>> $127;
 $129 = ((($1)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$1>>2]|0;
 $132 = ((($1)) + 16|0);
 $133 = HEAP32[$132>>2]|0;
 $134 = $126 << $119;
 HEAP32[$125>>2] = $134;
 $135 = ((($1)) + 24|0);
 $136 = HEAP32[$135>>2]|0;
 $137 = (($136) + ($119))|0;
 HEAP32[$135>>2] = $137;
 $138 = ($137|0)>(0);
 do {
  if ($138) {
   $139 = $133;
   $140 = (($139) - ($131))|0;
   $141 = (($130) + 1)|0;
   $142 = (($141) - ($131))|0;
   $143 = ($140|0)>($142|0);
   if ($143) {
    $$49 = 11;
    STACKTOP = sp;return ($$49|0);
   } else {
    $144 = HEAP8[$133>>0]|0;
    $145 = $144&255;
    $146 = $145 << 8;
    $147 = ((($133)) + 1|0);
    $148 = HEAP8[$147>>0]|0;
    $149 = $148&255;
    $150 = $146 | $149;
    $151 = $150 << $137;
    $152 = $151 | $134;
    HEAP32[$125>>2] = $152;
    $153 = (($137) + -16)|0;
    HEAP32[$135>>2] = $153;
    $154 = ((($133)) + 2|0);
    HEAP32[$132>>2] = $154;
    break;
   }
  }
 } while(0);
 HEAP32[$4>>2] = $128;
 $155 = ((($12)) + 28|0);
 HEAP32[$155>>2] = $128;
 $156 = ((($12)) + 2761|0);
 HEAP8[$156>>0] = 0;
 $157 = ((($12)) + 2762|0);
 HEAP8[$157>>0] = 0;
 $158 = ((($$0605)) + 324|0);
 $159 = HEAP8[$158>>0]|0;
 $160 = ($159<<24>>24)==(0);
 if ($160) {
  HEAP32[$vararg_buffer34>>2] = 0;
  __Z7WelsLogP13TagLogContextiPKcz($0,2,29582,$vararg_buffer34);
  $$49 = 328741;
  STACKTOP = sp;return ($$49|0);
 }
 $161 = ((($$0605)) + 4|0);
 $162 = HEAP32[$161>>2]|0;
 $163 = ((($12)) + 1156|0);
 HEAP32[$163>>2] = $162;
 $164 = ((($$0605)) + 8|0);
 $165 = HEAP32[$164>>2]|0;
 $166 = ((($12)) + 1160|0);
 HEAP32[$166>>2] = $165;
 do {
  if ($116) {
   $167 = ($128|0)==(0);
   if (!($167)) {
    HEAP32[$vararg_buffer37>>2] = $128;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,29650,$vararg_buffer37);
    $$49 = 328695;
    STACKTOP = sp;return ($$49|0);
   }
   $168 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
   $169 = ($168|0)==(0);
   if (!($169)) {
    $$49 = $168;
    STACKTOP = sp;return ($$49|0);
   }
   $170 = HEAP32[$4>>2]|0;
   $171 = ($170>>>0)>(65535);
   if (!($171)) {
    $172 = $170&65535;
    $173 = ((($12)) + 2752|0);
    HEAP16[$173>>1] = $172;
    $174 = ((($0)) + 242332|0);
    HEAP16[$174>>1] = $172;
    break;
   }
   HEAP32[$vararg_buffer40>>2] = $170;
   __Z7WelsLogP13TagLogContextiPKcz($0,1,29731,$vararg_buffer40);
   $$49 = 328696;
   STACKTOP = sp;return ($$49|0);
  }
 } while(0);
 $175 = ((($12)) + 36|0);
 HEAP32[$175>>2] = 0;
 $176 = ((($12)) + 44|0);
 HEAP32[$176>>2] = 0;
 $177 = ((($12)) + 40|0);
 HEAP32[$177>>2] = 0;
 $178 = ((($$0605)) + 20|0);
 $179 = HEAP32[$178>>2]|0;
 L100: do {
  switch ($179|0) {
  case 0:  {
   $180 = ((($$0605)) + 24|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = HEAP32[$125>>2]|0;
   $183 = (32 - ($181))|0;
   $184 = $182 >>> $183;
   $185 = HEAP32[$129>>2]|0;
   $186 = HEAP32[$1>>2]|0;
   $187 = HEAP32[$132>>2]|0;
   $188 = $182 << $181;
   HEAP32[$125>>2] = $188;
   $189 = HEAP32[$135>>2]|0;
   $190 = (($189) + ($181))|0;
   HEAP32[$135>>2] = $190;
   $191 = ($190|0)>(0);
   do {
    if ($191) {
     $192 = $187;
     $193 = (($192) - ($186))|0;
     $194 = (($185) + 1)|0;
     $195 = (($194) - ($186))|0;
     $196 = ($193|0)>($195|0);
     if ($196) {
      $$49 = 11;
      STACKTOP = sp;return ($$49|0);
     } else {
      $197 = HEAP8[$187>>0]|0;
      $198 = $197&255;
      $199 = $198 << 8;
      $200 = ((($187)) + 1|0);
      $201 = HEAP8[$200>>0]|0;
      $202 = $201&255;
      $203 = $199 | $202;
      $204 = $203 << $190;
      $205 = $204 | $188;
      HEAP32[$125>>2] = $205;
      $206 = (($190) + -16)|0;
      HEAP32[$135>>2] = $206;
      $207 = ((($187)) + 2|0);
      HEAP32[$132>>2] = $207;
      break;
     }
    }
   } while(0);
   HEAP32[$4>>2] = $184;
   $208 = ((($12)) + 32|0);
   HEAP32[$208>>2] = $184;
   $209 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 177|0);
   $210 = HEAP8[$209>>0]|0;
   $211 = ($210<<24>>24)==(0);
   if ($211) {
    break L100;
   }
   $212 = HEAP8[$156>>0]|0;
   $213 = ($212<<24>>24)==(0);
   if (!($213)) {
    break L100;
   }
   $214 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
   $215 = ($214|0)==(0);
   if ($215) {
    $216 = HEAP32[$3>>2]|0;
    $217 = $216 & 1;
    $218 = ($217|0)==(0);
    $219 = $216 >>> 1;
    $220 = (0 - ($219))|0;
    $221 = (($216) + 1)|0;
    $222 = $221 >>> 1;
    $storemerge$i736 = $218 ? $220 : $222;
    HEAP32[$175>>2] = $storemerge$i736;
    break L100;
   }
   $$49 = $214;
   STACKTOP = sp;return ($$49|0);
   break;
  }
  case 1:  {
   $223 = ((($$0605)) + 322|0);
   $224 = HEAP8[$223>>0]|0;
   $225 = ($224<<24>>24)==(0);
   if ($225) {
    $226 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
    $227 = ($226|0)==(0);
    if (!($227)) {
     $$49 = $226;
     STACKTOP = sp;return ($$49|0);
    }
    $228 = HEAP32[$3>>2]|0;
    $229 = $228 & 1;
    $230 = ($229|0)==(0);
    $231 = $228 >>> 1;
    $232 = (0 - ($231))|0;
    $233 = (($228) + 1)|0;
    $234 = $233 >>> 1;
    $storemerge$i739 = $230 ? $232 : $234;
    HEAP32[$177>>2] = $storemerge$i739;
    $235 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 177|0);
    $236 = HEAP8[$235>>0]|0;
    $237 = ($236<<24>>24)==(0);
    if ($237) {
     break L100;
    }
    $238 = HEAP8[$156>>0]|0;
    $239 = ($238<<24>>24)==(0);
    if (!($239)) {
     break L100;
    }
    $240 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
    $241 = ($240|0)==(0);
    if ($241) {
     $242 = HEAP32[$3>>2]|0;
     $243 = $242 & 1;
     $244 = ($243|0)==(0);
     $245 = $242 >>> 1;
     $246 = (0 - ($245))|0;
     $247 = (($242) + 1)|0;
     $248 = $247 >>> 1;
     $storemerge$i742 = $244 ? $246 : $248;
     HEAP32[$176>>2] = $storemerge$i742;
     break L100;
    }
    $$49 = $240;
    STACKTOP = sp;return ($$49|0);
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $249 = ((($12)) + 48|0);
 HEAP32[$249>>2] = 0;
 $250 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 181|0);
 $251 = HEAP8[$250>>0]|0;
 $252 = ($251<<24>>24)==(0);
 do {
  if (!($252)) {
   $253 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
   $254 = ($253|0)==(0);
   if (!($254)) {
    $$49 = $253;
    STACKTOP = sp;return ($$49|0);
   }
   $255 = HEAP32[$4>>2]|0;
   $256 = ($255>>>0)>(127);
   if (!($256)) {
    HEAP32[$249>>2] = $255;
    break;
   }
   HEAP32[$vararg_buffer43>>2] = $255;
   __Z7WelsLogP13TagLogContextiPKcz($0,1,29760,$vararg_buffer43);
   $$49 = 328697;
   STACKTOP = sp;return ($$49|0);
  }
 } while(0);
 $257 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 152|0);
 $258 = HEAP32[$257>>2]|0;
 $259 = ((($12)) + 52|0);
 HEAP32[$259>>2] = $258;
 $260 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 156|0);
 $261 = HEAP32[$260>>2]|0;
 $262 = ((($12)) + 56|0);
 HEAP32[$262>>2] = $261;
 $263 = ($33|0)==(0);
 if ($2) {
  $264 = ((($12)) + 16|0);
  $265 = HEAP8[$264>>0]|0;
  $266 = ($265<<24>>24)==(0);
  $267 = $263 & $266;
  if ($267) {
   label = 78;
  } else {
   $$pr = $258;
   label = 87;
  }
 } else {
  if ($263) {
   label = 78;
  } else {
   $$pr = $258;
   label = 87;
  }
 }
 do {
  if ((label|0) == 78) {
   $268 = HEAP32[$125>>2]|0;
   $269 = $268 >>> 31;
   $270 = HEAP32[$129>>2]|0;
   $271 = HEAP32[$1>>2]|0;
   $272 = HEAP32[$132>>2]|0;
   $273 = $268 << 1;
   HEAP32[$125>>2] = $273;
   $274 = HEAP32[$135>>2]|0;
   $275 = (($274) + 1)|0;
   HEAP32[$135>>2] = $275;
   $276 = ($274|0)>(-1);
   do {
    if ($276) {
     $277 = $272;
     $278 = (($277) - ($271))|0;
     $279 = (($270) + 1)|0;
     $280 = (($279) - ($271))|0;
     $281 = ($278|0)>($280|0);
     if ($281) {
      $$49 = 11;
      STACKTOP = sp;return ($$49|0);
     } else {
      $282 = HEAP8[$272>>0]|0;
      $283 = $282&255;
      $284 = $283 << 8;
      $285 = ((($272)) + 1|0);
      $286 = HEAP8[$285>>0]|0;
      $287 = $286&255;
      $288 = $284 | $287;
      $289 = $288 << $275;
      $290 = $289 | $273;
      HEAP32[$125>>2] = $290;
      $291 = (($274) + -15)|0;
      HEAP32[$135>>2] = $291;
      $292 = ((($272)) + 2|0);
      HEAP32[$132>>2] = $292;
      break;
     }
    }
   } while(0);
   HEAP32[$4>>2] = $269;
   $293 = ($269|0)==(0);
   $294 = ((($12)) + 2760|0);
   $295 = $269&255;
   HEAP8[$294>>0] = $295;
   if ($293) {
    $$pr$pre = HEAP32[$259>>2]|0;
    $$pr = $$pr$pre;
    label = 87;
    break;
   }
   $296 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
   $297 = ($296|0)==(0);
   if (!($297)) {
    $$49 = $296;
    STACKTOP = sp;return ($$49|0);
   }
   $298 = HEAP32[$4>>2]|0;
   $299 = ($298>>>0)>(15);
   if (!($299)) {
    $300 = (($298) + 1)|0;
    HEAP32[$259>>2] = $300;
    label = 88;
    break;
   }
   HEAP32[$vararg_buffer46>>2] = $298;
   __Z7WelsLogP13TagLogContextiPKcz($0,1,29796,$vararg_buffer46);
   $$49 = 328701;
   STACKTOP = sp;return ($$49|0);
  }
 } while(0);
 if ((label|0) == 87) {
  $301 = ($$pr|0)>(16);
  if (!($301)) {
   label = 88;
  }
 }
 do {
  if ((label|0) == 88) {
   $302 = HEAP32[$262>>2]|0;
   $303 = ($302|0)>(16);
   if ($303) {
    break;
   }
   $304 = (__ZN7WelsDec25ParseRefPicListReorderingEPN10WelsCommon15TagBitStringAuxEPNS_15TagSliceHeadersE($1,$15)|0);
   $305 = ($304|0)==(0);
   if (!($305)) {
    __Z7WelsLogP13TagLogContextiPKcz($0,2,29862,$vararg_buffer51);
    $$49 = $304;
    STACKTOP = sp;return ($$49|0);
   }
   $306 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 182|0);
   $307 = HEAP8[$306>>0]|0;
   $308 = ($307<<24>>24)==(0);
   $$not667 = $263 ^ 1;
   $brmerge668 = $308 | $$not667;
   do {
    if (!($brmerge668)) {
     $309 = (__ZN7WelsDec22ParsePredWeightedTableEPN10WelsCommon15TagBitStringAuxEPNS_15TagSliceHeadersE($1,$15)|0);
     $310 = ($309|0)==(0);
     if ($310) {
      break;
     }
     __Z7WelsLogP13TagLogContextiPKcz($0,2,29904,$vararg_buffer53);
     $$49 = $309;
     STACKTOP = sp;return ($$49|0);
    }
   } while(0);
   if ($2) {
    $311 = ((($12)) + 14|0);
    $312 = HEAP8[$311>>0]|0;
    $313 = ($312<<24>>24)==(0);
    if ($313) {
     $314 = ((($12)) + 16|0);
     $315 = HEAP8[$314>>0]|0;
     $316 = ($315<<24>>24)==(0);
     $$708 = $316&1;
     $$sink = $$708;
    } else {
     $$sink = 0;
    }
    $317 = ((($12)) + 3852|0);
    HEAP8[$317>>0] = $$sink;
   }
   $318 = ((($12)) + 1|0);
   $319 = HEAP8[$318>>0]|0;
   $320 = ($319<<24>>24)==(0);
   do {
    if (!($320)) {
     $321 = (__ZN7WelsDec21ParseDecRefPicMarkingEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxEPNS_15TagSliceHeadersEPNS_6TagSpsEb(0,$1,$15,$$0605,$116)|0);
     $322 = ($321|0)==(0);
     if (!($322)) {
      $$49 = $321;
      STACKTOP = sp;return ($$49|0);
     }
     if (!($2)) {
      break;
     }
     $323 = ((($$0604)) + 856|0);
     $324 = HEAP8[$323>>0]|0;
     $325 = ($324<<24>>24)==(0);
     if (!($325)) {
      break;
     }
     $326 = HEAP32[$125>>2]|0;
     $327 = $326 >>> 31;
     $328 = HEAP32[$129>>2]|0;
     $329 = HEAP32[$1>>2]|0;
     $330 = HEAP32[$132>>2]|0;
     $331 = $326 << 1;
     HEAP32[$125>>2] = $331;
     $332 = HEAP32[$135>>2]|0;
     $333 = (($332) + 1)|0;
     HEAP32[$135>>2] = $333;
     $334 = ($332|0)>(-1);
     do {
      if ($334) {
       $335 = $330;
       $336 = (($335) - ($329))|0;
       $337 = (($328) + 1)|0;
       $338 = (($337) - ($329))|0;
       $339 = ($336|0)>($338|0);
       if ($339) {
        $$49 = 11;
        STACKTOP = sp;return ($$49|0);
       } else {
        $340 = HEAP8[$330>>0]|0;
        $341 = $340&255;
        $342 = $341 << 8;
        $343 = ((($330)) + 1|0);
        $344 = HEAP8[$343>>0]|0;
        $345 = $344&255;
        $346 = $342 | $345;
        $347 = $346 << $333;
        $348 = $347 | $331;
        HEAP32[$125>>2] = $348;
        $349 = (($332) + -15)|0;
        HEAP32[$135>>2] = $349;
        $350 = ((($330)) + 2|0);
        HEAP32[$132>>2] = $350;
        break;
       }
      }
     } while(0);
     HEAP32[$4>>2] = $327;
     $351 = $327&255;
     HEAP8[$18>>0] = $351;
     $352 = ((($12)) + 18|0);
     $353 = HEAP8[$352>>0]|0;
     $notlhs = ($353<<24>>24)==(0);
     $notrhs = ($327|0)==(0);
     $brmerge671$not = $notrhs & $notlhs;
     $brmerge672 = $116 | $brmerge671$not;
     if ($brmerge672) {
      break;
     }
     __Z7WelsLogP13TagLogContextiPKcz($0,2,29941,$vararg_buffer55);
     $$49 = 328742;
     STACKTOP = sp;return ($$49|0);
    }
   } while(0);
   $354 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 176|0);
   $355 = HEAP8[$354>>0]|0;
   $356 = ($355<<24>>24)==(0);
   L194: do {
    if (!($356)) {
     $357 = HEAP32[$38>>2]|0;
     switch ($357|0) {
     case 4: case 2:  {
      $363 = ((($12)) + 1152|0);
      HEAP32[$363>>2] = 0;
      break L194;
      break;
     }
     default: {
     }
     }
     $358 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
     $359 = ($358|0)==(0);
     if (!($359)) {
      $$49 = $358;
      STACKTOP = sp;return ($$49|0);
     }
     $360 = HEAP32[$4>>2]|0;
     $361 = ((($12)) + 1152|0);
     HEAP32[$361>>2] = $360;
     $362 = ($360|0)>(2);
     if (!($362)) {
      break;
     }
     HEAP32[$vararg_buffer57>>2] = $360;
     __Z7WelsLogP13TagLogContextiPKcz($0,1,30030,$vararg_buffer57);
     $$49 = 1026;
     STACKTOP = sp;return ($$49|0);
    }
   } while(0);
   $364 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
   $365 = ($364|0)==(0);
   if (!($365)) {
    $$49 = $364;
    STACKTOP = sp;return ($$49|0);
   }
   $366 = HEAP32[$3>>2]|0;
   $367 = $366 & 1;
   $368 = ($367|0)==(0);
   $369 = $366 >>> 1;
   $370 = (0 - ($369))|0;
   $371 = (($366) + 1)|0;
   $372 = $371 >>> 1;
   $storemerge$i749 = $368 ? $370 : $372;
   $373 = ((($12)) + 60|0);
   HEAP32[$373>>2] = $storemerge$i749;
   $374 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 160|0);
   $375 = HEAP32[$374>>2]|0;
   $376 = (($375) + ($storemerge$i749))|0;
   $377 = ((($12)) + 64|0);
   HEAP32[$377>>2] = $376;
   $378 = ($376>>>0)>(51);
   if ($378) {
    HEAP32[$vararg_buffer60>>2] = $376;
    __Z7WelsLogP13TagLogContextiPKcz($0,2,30063,$vararg_buffer60);
    $$49 = 328707;
    STACKTOP = sp;return ($$49|0);
   }
   $$off = (($33) + -3)|0;
   $switch = ($$off>>>0)<(2);
   $or$cond710 = $switch & $$not;
   if ($or$cond710) {
    __Z7WelsLogP13TagLogContextiPKcz($0,2,30082,$vararg_buffer63);
    $$49 = 328744;
    STACKTOP = sp;return ($$49|0);
   }
   $379 = ((($12)) + 72|0);
   HEAP32[$379>>2] = 0;
   $380 = ((($12)) + 76|0);
   HEAP32[$380>>2] = 0;
   $381 = ((($12)) + 80|0);
   HEAP32[$381>>2] = 0;
   $382 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 179|0);
   $383 = HEAP8[$382>>0]|0;
   $384 = ($383<<24>>24)==(0);
   do {
    if (!($384)) {
     $385 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
     $386 = ($385|0)==(0);
     if (!($386)) {
      $$49 = $385;
      STACKTOP = sp;return ($$49|0);
     }
     $387 = HEAP32[$4>>2]|0;
     HEAP32[$379>>2] = $387;
     $388 = ($387>>>0)>(6);
     if ($388) {
      HEAP32[$vararg_buffer65>>2] = $387;
      __Z7WelsLogP13TagLogContextiPKcz($0,2,30102,$vararg_buffer65);
      $$49 = 1034;
      STACKTOP = sp;return ($$49|0);
     }
     $389 = ($387|0)==(1);
     if ($389) {
      break;
     }
     $390 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
     $391 = ($390|0)==(0);
     if (!($391)) {
      $$49 = $390;
      STACKTOP = sp;return ($$49|0);
     }
     $392 = HEAP32[$3>>2]|0;
     $393 = $392 & 1;
     $394 = ($393|0)==(0);
     $395 = $392 >>> 1;
     $396 = (0 - ($395))|0;
     $397 = (($392) + 1)|0;
     $398 = $397 >>> 1;
     $storemerge$i752 = $394 ? $396 : $398;
     $399 = $storemerge$i752 << 1;
     HEAP32[$380>>2] = $399;
     $$off927 = (($399) + 12)|0;
     $400 = ($$off927>>>0)>(24);
     if ($400) {
      HEAP32[$vararg_buffer68>>2] = $399;
      __Z7WelsLogP13TagLogContextiPKcz($0,1,30154,$vararg_buffer68);
      $$49 = 328702;
      STACKTOP = sp;return ($$49|0);
     }
     $401 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
     $402 = ($401|0)==(0);
     if (!($402)) {
      $$49 = $401;
      STACKTOP = sp;return ($$49|0);
     }
     $403 = HEAP32[$3>>2]|0;
     $404 = $403 & 1;
     $405 = ($404|0)==(0);
     $406 = $403 >>> 1;
     $407 = (0 - ($406))|0;
     $408 = (($403) + 1)|0;
     $409 = $408 >>> 1;
     $storemerge$i755 = $405 ? $407 : $409;
     $410 = $storemerge$i755 << 1;
     HEAP32[$381>>2] = $410;
     $$off928 = (($410) + 12)|0;
     $411 = ($$off928>>>0)>(24);
     if (!($411)) {
      break;
     }
     HEAP32[$vararg_buffer71>>2] = $410;
     __Z7WelsLogP13TagLogContextiPKcz($0,1,30203,$vararg_buffer71);
     $$49 = 328703;
     STACKTOP = sp;return ($$49|0);
    }
   } while(0);
   $412 = HEAP32[$60>>2]|0;
   $413 = ($412>>>0)>(1);
   do {
    if ($413) {
     $414 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 12|0);
     $415 = HEAP32[$414>>2]|0;
     $$off931 = (($415) + -3)|0;
     $416 = ($$off931>>>0)<(3);
     if (!($416)) {
      break;
     }
     $417 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 112|0);
     $418 = HEAP32[$417>>2]|0;
     $419 = ($418|0)==(0);
     if ($419) {
      $$sink925 = 0;
     } else {
      $420 = (((((($0)) + 33648|0) + (($41*684)|0)|0)) + 116|0);
      $421 = HEAP32[$420>>2]|0;
      $422 = (($421>>>0) / ($418>>>0))&-1;
      $423 = (($422) + 1)|0;
      $424 = (+($423>>>0));
      $425 = (+Math_log((+$424)));
      $426 = (+Math_ceil((+$425)));
      $427 = (~~(($426)));
      $428 = HEAP32[$125>>2]|0;
      $429 = (32 - ($427))|0;
      $430 = $428 >>> $429;
      $431 = HEAP32[$129>>2]|0;
      $432 = HEAP32[$1>>2]|0;
      $433 = HEAP32[$132>>2]|0;
      $434 = $428 << $427;
      HEAP32[$125>>2] = $434;
      $435 = HEAP32[$135>>2]|0;
      $436 = (($435) + ($427))|0;
      HEAP32[$135>>2] = $436;
      $437 = ($436|0)>(0);
      do {
       if ($437) {
        $438 = $433;
        $439 = (($438) - ($432))|0;
        $440 = (($431) + 1)|0;
        $441 = (($440) - ($432))|0;
        $442 = ($439|0)>($441|0);
        if ($442) {
         $$49 = 11;
         STACKTOP = sp;return ($$49|0);
        } else {
         $443 = HEAP8[$433>>0]|0;
         $444 = $443&255;
         $445 = $444 << 8;
         $446 = ((($433)) + 1|0);
         $447 = HEAP8[$446>>0]|0;
         $448 = $447&255;
         $449 = $445 | $448;
         $450 = $449 << $436;
         $451 = $450 | $434;
         HEAP32[$125>>2] = $451;
         $452 = (($436) + -16)|0;
         HEAP32[$135>>2] = $452;
         $453 = ((($433)) + 2|0);
         HEAP32[$132>>2] = $453;
         break;
        }
       }
      } while(0);
      HEAP32[$4>>2] = $430;
      $$sink925 = $430;
     }
     $454 = ((($12)) + 84|0);
     HEAP32[$454>>2] = $$sink925;
    }
   } while(0);
   if (!($2)) {
    $455 = ((($12)) + 14|0);
    $456 = HEAP8[$455>>0]|0;
    $457 = ($456<<24>>24)==(0);
    if ($457) {
     $458 = ((($12)) + 16|0);
     $459 = HEAP8[$458>>0]|0;
     $460 = ($459<<24>>24)==(0);
     $$$i = $460&1;
     $$sink$i = $$$i;
    } else {
     $$sink$i = 0;
    }
    $461 = ((($12)) + 3852|0);
    HEAP8[$461>>0] = $$sink$i;
    $462 = ((($12)) + 3865|0);
    HEAP8[$462>>0] = -1;
    $463 = ((($12)) + 2772|0);
    HEAP32[$463>>2] = 0;
    $464 = ((($12)) + 2776|0);
    HEAP32[$464>>2] = 0;
    $465 = ((($12)) + 2780|0);
    HEAP32[$465>>2] = 0;
    $466 = ((($12)) + 3854|0);
    HEAP8[$466>>0] = 0;
    $467 = ((($12)) + 3863|0);
    HEAP8[$467>>0] = 0;
    $468 = ((($12)) + 3864|0);
    HEAP8[$468>>0] = 1;
    $469 = HEAP32[$163>>2]|0;
    $470 = $469 << 4;
    $471 = ((($12)) + 2784|0);
    HEAP32[$471>>2] = $470;
    $472 = HEAP32[$166>>2]|0;
    $473 = $472 << 4;
    $474 = ((($12)) + 2788|0);
    HEAP32[$474>>2] = $473;
    $475 = ((($12)) + 3855|0);
    $476 = ((($12)) + 3866|0);
    HEAP8[$476>>0] = 0;
    $477 = ((($12)) + 3867|0);
    $478 = $475;
    $479 = $478;
    HEAP8[$479>>0]=0&255;HEAP8[$479+1>>0]=(0>>8)&255;HEAP8[$479+2>>0]=(0>>16)&255;HEAP8[$479+3>>0]=0>>24;
    $480 = (($478) + 4)|0;
    $481 = $480;
    HEAP8[$481>>0]=0&255;HEAP8[$481+1>>0]=(0>>8)&255;HEAP8[$481+2>>0]=(0>>16)&255;HEAP8[$481+3>>0]=0>>24;
    HEAP8[$477>>0] = 15;
    $$49 = 0;
    STACKTOP = sp;return ($$49|0);
   }
   HEAP32[$111>>2] = $$0604;
   $482 = ((($12)) + 14|0);
   $483 = HEAP8[$482>>0]|0;
   $484 = ($483<<24>>24)==(0);
   if ($484) {
    $485 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
    $486 = ($485|0)==(0);
    if (!($486)) {
     $$49 = $485;
     STACKTOP = sp;return ($$49|0);
    }
    $487 = HEAP32[$4>>2]|0;
    $488 = $487&255;
    $489 = ((($12)) + 3865|0);
    HEAP8[$489>>0] = $488;
    $490 = ((($$0604)) + 853|0);
    $491 = HEAP8[$490>>0]|0;
    $492 = ($491<<24>>24)==(0);
    do {
     if (!($492)) {
      $493 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$4)|0);
      $494 = ($493|0)==(0);
      if (!($494)) {
       $$49 = $493;
       STACKTOP = sp;return ($$49|0);
      }
      $495 = HEAP32[$4>>2]|0;
      $496 = ((($12)) + 2772|0);
      HEAP32[$496>>2] = $495;
      $497 = ($495>>>0)>(6);
      if ($497) {
       HEAP32[$vararg_buffer74>>2] = $495;
       __Z7WelsLogP13TagLogContextiPKcz($0,2,30248,$vararg_buffer74);
       $$49 = 1034;
       STACKTOP = sp;return ($$49|0);
      }
      $498 = ($495|0)==(1);
      if ($498) {
       break;
      }
      $499 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
      $500 = ($499|0)==(0);
      if (!($500)) {
       $$49 = $499;
       STACKTOP = sp;return ($$49|0);
      }
      $501 = HEAP32[$3>>2]|0;
      $502 = $501 & 1;
      $503 = ($502|0)==(0);
      $504 = $501 >>> 1;
      $505 = (0 - ($504))|0;
      $506 = (($501) + 1)|0;
      $507 = $506 >>> 1;
      $storemerge$i733 = $503 ? $505 : $507;
      $508 = $storemerge$i733 << 1;
      $509 = ((($12)) + 2776|0);
      HEAP32[$509>>2] = $508;
      $$off929 = (($508) + 12)|0;
      $510 = ($$off929>>>0)>(24);
      if ($510) {
       HEAP32[$vararg_buffer77>>2] = $508;
       __Z7WelsLogP13TagLogContextiPKcz($0,1,30312,$vararg_buffer77);
       $$49 = 328702;
       STACKTOP = sp;return ($$49|0);
      }
      $511 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$3)|0);
      $512 = ($511|0)==(0);
      if (!($512)) {
       $$49 = $511;
       STACKTOP = sp;return ($$49|0);
      }
      $513 = HEAP32[$3>>2]|0;
      $514 = $513 & 1;
      $515 = ($514|0)==(0);
      $516 = $513 >>> 1;
      $517 = (0 - ($516))|0;
      $518 = (($513) + 1)|0;
      $519 = $518 >>> 1;
      $storemerge$i = $515 ? $517 : $519;
      $520 = $storemerge$i << 1;
      $521 = ((($12)) + 2780|0);
      HEAP32[$521>>2] = $520;
      $$off930 = (($520) + 12)|0;
      $522 = ($$off930>>>0)>(24);
      if (!($522)) {
       break;
      }
      HEAP32[$vararg_buffer80>>2] = $520;
      __Z7WelsLogP13TagLogContextiPKcz($0,1,30367,$vararg_buffer80);
      $$49 = 328703;
      STACKTOP = sp;return ($$49|0);
     }
    } while(0);
    $523 = ((($$0604)) + 851|0);
    $524 = HEAP8[$523>>0]|0;
    $525 = ((($12)) + 3863|0);
    HEAP8[$525>>0] = $524;
    $526 = ((($$0604)) + 852|0);
    $527 = HEAP8[$526>>0]|0;
    $528 = ((($12)) + 3864|0);
    HEAP8[$528>>0] = $527;
    $529 = HEAP32[$125>>2]|0;
    $530 = $529 >>> 31;
    $531 = HEAP32[$129>>2]|0;
    $532 = HEAP32[$1>>2]|0;
    $533 = HEAP32[$132>>2]|0;
    $534 = $529 << 1;
    HEAP32[$125>>2] = $534;
    $535 = HEAP32[$135>>2]|0;
    $536 = (($535) + 1)|0;
    HEAP32[$135>>2] = $536;
    $537 = ($535|0)>(-1);
    do {
     if ($537) {
      $538 = $533;
      $539 = (($538) - ($532))|0;
      $540 = (($531) + 1)|0;
      $541 = (($540) - ($532))|0;
      $542 = ($539|0)>($541|0);
      if ($542) {
       $$49 = 11;
       STACKTOP = sp;return ($$49|0);
      } else {
       $543 = HEAP8[$533>>0]|0;
       $544 = $543&255;
       $545 = $544 << 8;
       $546 = ((($533)) + 1|0);
       $547 = HEAP8[$546>>0]|0;
       $548 = $547&255;
       $549 = $545 | $548;
       $550 = $549 << $536;
       $551 = $550 | $534;
       HEAP32[$125>>2] = $551;
       $552 = (($535) + -15)|0;
       HEAP32[$135>>2] = $552;
       $553 = ((($533)) + 2|0);
       HEAP32[$132>>2] = $553;
       break;
      }
     }
    } while(0);
    HEAP32[$4>>2] = $530;
    $554 = ((($12)) + 3854|0);
    $555 = $530&255;
    HEAP8[$554>>0] = $555;
    $556 = ((($$0604)) + 832|0);
    $557 = HEAP32[$556>>2]|0;
    $558 = ((($$0604)) + 836|0);
    $559 = HEAP32[$558>>2]|0;
    $560 = HEAP8[$158>>0]|0;
    $561 = $560&255;
    $562 = (2 - ($561))|0;
    $563 = ((($$0604)) + 840|0);
    $564 = HEAP32[$563>>2]|0;
    $565 = ((($$0604)) + 844|0);
    $566 = HEAP32[$565>>2]|0;
    $567 = HEAP32[$163>>2]|0;
    $568 = $567 << 4;
    $sum = (($564) + ($557))|0;
    $569 = (($568) - ($sum))|0;
    $570 = ((($12)) + 2784|0);
    HEAP32[$570>>2] = $569;
    $571 = HEAP32[$166>>2]|0;
    $572 = $571 << 4;
    $573 = (($566) + ($559))|0;
    $574 = Math_imul($573, $562)|0;
    $575 = HEAP8[$156>>0]|0;
    $addconv646 = (($575) + 1)<<24>>24;
    $576 = $addconv646&255;
    $577 = (($574|0) / ($576|0))&-1;
    $578 = (($572) - ($577))|0;
    $579 = ((($12)) + 2788|0);
    HEAP32[$579>>2] = $578;
    $$pre = HEAP8[$482>>0]|0;
    $588 = $$pre;
   } else {
    $580 = ((($12)) + 3865|0);
    HEAP8[$580>>0] = -1;
    $588 = $483;
   }
   $581 = ((($12)) + 3855|0);
   $582 = ((($12)) + 3856|0);
   $583 = ((($12)) + 3857|0);
   $584 = ((($12)) + 3858|0);
   $585 = ((($12)) + 3859|0);
   $586 = ((($12)) + 3860|0);
   $587 = ((($12)) + 3861|0);
   $589 = ($588<<24>>24)==(0);
   ;HEAP8[$581>>0]=0|0;HEAP8[$581+1>>0]=0|0;HEAP8[$581+2>>0]=0|0;HEAP8[$581+3>>0]=0|0;HEAP8[$581+4>>0]=0|0;HEAP8[$581+5>>0]=0|0;HEAP8[$581+6>>0]=0|0;
   do {
    if ($589) {
     $590 = ((($$0604)) + 854|0);
     $591 = HEAP8[$590>>0]|0;
     $592 = ((($12)) + 3862|0);
     HEAP8[$592>>0] = $591;
     $593 = HEAP32[$125>>2]|0;
     $594 = $593 >>> 31;
     $595 = HEAP32[$129>>2]|0;
     $596 = HEAP32[$1>>2]|0;
     $597 = HEAP32[$132>>2]|0;
     $598 = $593 << 1;
     HEAP32[$125>>2] = $598;
     $599 = HEAP32[$135>>2]|0;
     $600 = (($599) + 1)|0;
     HEAP32[$135>>2] = $600;
     $601 = ($599|0)>(-1);
     do {
      if ($601) {
       $602 = $597;
       $603 = (($602) - ($596))|0;
       $604 = (($595) + 1)|0;
       $605 = (($604) - ($596))|0;
       $606 = ($603|0)>($605|0);
       if ($606) {
        $$49 = 11;
        STACKTOP = sp;return ($$49|0);
       } else {
        $607 = HEAP8[$597>>0]|0;
        $608 = $607&255;
        $609 = $608 << 8;
        $610 = ((($597)) + 1|0);
        $611 = HEAP8[$610>>0]|0;
        $612 = $611&255;
        $613 = $609 | $612;
        $614 = $613 << $600;
        $615 = $614 | $598;
        HEAP32[$125>>2] = $615;
        $616 = (($599) + -15)|0;
        HEAP32[$135>>2] = $616;
        $617 = ((($597)) + 2|0);
        HEAP32[$132>>2] = $617;
        break;
       }
      }
     } while(0);
     HEAP32[$4>>2] = $594;
     $618 = ($594|0)==(0);
     $619 = $594&255;
     HEAP8[$581>>0] = $619;
     if (!($618)) {
      __Z7WelsLogP13TagLogContextiPKcz($0,2,30424,$vararg_buffer83);
      $$49 = 328748;
      STACKTOP = sp;return ($$49|0);
     }
     $620 = HEAP32[$125>>2]|0;
     $621 = $620 >>> 31;
     $622 = HEAP32[$129>>2]|0;
     $623 = HEAP32[$1>>2]|0;
     $624 = HEAP32[$132>>2]|0;
     $625 = $620 << 1;
     HEAP32[$125>>2] = $625;
     $626 = HEAP32[$135>>2]|0;
     $627 = (($626) + 1)|0;
     HEAP32[$135>>2] = $627;
     $628 = ($626|0)>(-1);
     do {
      if ($628) {
       $629 = $624;
       $630 = (($629) - ($623))|0;
       $631 = (($622) + 1)|0;
       $632 = (($631) - ($623))|0;
       $633 = ($630|0)>($632|0);
       if ($633) {
        $$49 = 11;
        STACKTOP = sp;return ($$49|0);
       } else {
        $634 = HEAP8[$624>>0]|0;
        $635 = $634&255;
        $636 = $635 << 8;
        $637 = ((($624)) + 1|0);
        $638 = HEAP8[$637>>0]|0;
        $639 = $638&255;
        $640 = $636 | $639;
        $641 = $640 << $627;
        $642 = $641 | $625;
        HEAP32[$125>>2] = $642;
        $643 = (($626) + -15)|0;
        HEAP32[$135>>2] = $643;
        $644 = ((($624)) + 2|0);
        HEAP32[$132>>2] = $644;
        break;
       }
      }
     } while(0);
     HEAP32[$4>>2] = $621;
     $645 = ($621|0)==(0);
     $646 = $621&255;
     HEAP8[$582>>0] = $646;
     if ($645) {
      $647 = HEAP32[$125>>2]|0;
      $648 = $647 >>> 31;
      $649 = HEAP32[$129>>2]|0;
      $650 = HEAP32[$1>>2]|0;
      $651 = HEAP32[$132>>2]|0;
      $652 = $647 << 1;
      HEAP32[$125>>2] = $652;
      $653 = HEAP32[$135>>2]|0;
      $654 = (($653) + 1)|0;
      HEAP32[$135>>2] = $654;
      $655 = ($653|0)>(-1);
      do {
       if ($655) {
        $656 = $651;
        $657 = (($656) - ($650))|0;
        $658 = (($649) + 1)|0;
        $659 = (($658) - ($650))|0;
        $660 = ($657|0)>($659|0);
        if ($660) {
         $$49 = 11;
         STACKTOP = sp;return ($$49|0);
        } else {
         $661 = HEAP8[$651>>0]|0;
         $662 = $661&255;
         $663 = $662 << 8;
         $664 = ((($651)) + 1|0);
         $665 = HEAP8[$664>>0]|0;
         $666 = $665&255;
         $667 = $663 | $666;
         $668 = $667 << $654;
         $669 = $668 | $652;
         HEAP32[$125>>2] = $669;
         $670 = (($653) + -15)|0;
         HEAP32[$135>>2] = $670;
         $671 = ((($651)) + 2|0);
         HEAP32[$132>>2] = $671;
         break;
        }
       }
      } while(0);
      HEAP32[$4>>2] = $648;
      $672 = $648&255;
      HEAP8[$583>>0] = $672;
      $673 = $672;
     } else {
      $$pr883 = HEAP8[$583>>0]|0;
      $673 = $$pr883;
     }
     $674 = ($673<<24>>24)==(0);
     do {
      if ($674) {
       $675 = HEAP32[$125>>2]|0;
       $676 = $675 >>> 31;
       $677 = HEAP32[$129>>2]|0;
       $678 = HEAP32[$1>>2]|0;
       $679 = HEAP32[$132>>2]|0;
       $680 = $675 << 1;
       HEAP32[$125>>2] = $680;
       $681 = HEAP32[$135>>2]|0;
       $682 = (($681) + 1)|0;
       HEAP32[$135>>2] = $682;
       $683 = ($681|0)>(-1);
       do {
        if ($683) {
         $684 = $679;
         $685 = (($684) - ($678))|0;
         $686 = (($677) + 1)|0;
         $687 = (($686) - ($678))|0;
         $688 = ($685|0)>($687|0);
         if ($688) {
          $$49 = 11;
          STACKTOP = sp;return ($$49|0);
         } else {
          $689 = HEAP8[$679>>0]|0;
          $690 = $689&255;
          $691 = $690 << 8;
          $692 = ((($679)) + 1|0);
          $693 = HEAP8[$692>>0]|0;
          $694 = $693&255;
          $695 = $691 | $694;
          $696 = $695 << $682;
          $697 = $696 | $680;
          HEAP32[$125>>2] = $697;
          $698 = (($681) + -15)|0;
          HEAP32[$135>>2] = $698;
          $699 = ((($679)) + 2|0);
          HEAP32[$132>>2] = $699;
          break;
         }
        }
       } while(0);
       HEAP32[$4>>2] = $676;
       $700 = ($676|0)==(0);
       $701 = $676&255;
       HEAP8[$584>>0] = $701;
       if (!($700)) {
        break;
       }
       $702 = HEAP32[$125>>2]|0;
       $703 = $702 >>> 31;
       $704 = HEAP32[$129>>2]|0;
       $705 = HEAP32[$1>>2]|0;
       $706 = HEAP32[$132>>2]|0;
       $707 = $702 << 1;
       HEAP32[$125>>2] = $707;
       $708 = HEAP32[$135>>2]|0;
       $709 = (($708) + 1)|0;
       HEAP32[$135>>2] = $709;
       $710 = ($708|0)>(-1);
       do {
        if ($710) {
         $711 = $706;
         $712 = (($711) - ($705))|0;
         $713 = (($704) + 1)|0;
         $714 = (($713) - ($705))|0;
         $715 = ($712|0)>($714|0);
         if ($715) {
          $$49 = 11;
          STACKTOP = sp;return ($$49|0);
         } else {
          $716 = HEAP8[$706>>0]|0;
          $717 = $716&255;
          $718 = $717 << 8;
          $719 = ((($706)) + 1|0);
          $720 = HEAP8[$719>>0]|0;
          $721 = $720&255;
          $722 = $718 | $721;
          $723 = $722 << $709;
          $724 = $723 | $707;
          HEAP32[$125>>2] = $724;
          $725 = (($708) + -15)|0;
          HEAP32[$135>>2] = $725;
          $726 = ((($706)) + 2|0);
          HEAP32[$132>>2] = $726;
          break;
         }
        }
       } while(0);
       HEAP32[$4>>2] = $703;
       $727 = $703&255;
       HEAP8[$585>>0] = $727;
      }
     } while(0);
     $728 = HEAP32[$125>>2]|0;
     $729 = $728 >>> 31;
     $730 = HEAP32[$129>>2]|0;
     $731 = HEAP32[$1>>2]|0;
     $732 = HEAP32[$132>>2]|0;
     $733 = $728 << 1;
     HEAP32[$125>>2] = $733;
     $734 = HEAP32[$135>>2]|0;
     $735 = (($734) + 1)|0;
     HEAP32[$135>>2] = $735;
     $736 = ($734|0)>(-1);
     do {
      if ($736) {
       $737 = $732;
       $738 = (($737) - ($731))|0;
       $739 = (($730) + 1)|0;
       $740 = (($739) - ($731))|0;
       $741 = ($738|0)>($740|0);
       if ($741) {
        $$49 = 11;
        STACKTOP = sp;return ($$49|0);
       } else {
        $742 = HEAP8[$732>>0]|0;
        $743 = $742&255;
        $744 = $743 << 8;
        $745 = ((($732)) + 1|0);
        $746 = HEAP8[$745>>0]|0;
        $747 = $746&255;
        $748 = $744 | $747;
        $749 = $748 << $735;
        $750 = $749 | $733;
        HEAP32[$125>>2] = $750;
        $751 = (($734) + -15)|0;
        HEAP32[$135>>2] = $751;
        $752 = ((($732)) + 2|0);
        HEAP32[$132>>2] = $752;
        break;
       }
      }
     } while(0);
     HEAP32[$4>>2] = $729;
     $753 = ($729|0)==(0);
     $754 = $729&255;
     HEAP8[$586>>0] = $754;
     if ($753) {
      $755 = HEAP32[$125>>2]|0;
      $756 = $755 >>> 31;
      $757 = HEAP32[$129>>2]|0;
      $758 = HEAP32[$1>>2]|0;
      $759 = HEAP32[$132>>2]|0;
      $760 = $755 << 1;
      HEAP32[$125>>2] = $760;
      $761 = HEAP32[$135>>2]|0;
      $762 = (($761) + 1)|0;
      HEAP32[$135>>2] = $762;
      $763 = ($761|0)>(-1);
      do {
       if ($763) {
        $764 = $759;
        $765 = (($764) - ($758))|0;
        $766 = (($757) + 1)|0;
        $767 = (($766) - ($758))|0;
        $768 = ($765|0)>($767|0);
        if ($768) {
         $$49 = 11;
         STACKTOP = sp;return ($$49|0);
        } else {
         $769 = HEAP8[$759>>0]|0;
         $770 = $769&255;
         $771 = $770 << 8;
         $772 = ((($759)) + 1|0);
         $773 = HEAP8[$772>>0]|0;
         $774 = $773&255;
         $775 = $771 | $774;
         $776 = $775 << $762;
         $777 = $776 | $760;
         HEAP32[$125>>2] = $777;
         $778 = (($761) + -15)|0;
         HEAP32[$135>>2] = $778;
         $779 = ((($759)) + 2|0);
         HEAP32[$132>>2] = $779;
         break;
        }
       }
      } while(0);
      HEAP32[$4>>2] = $756;
      $780 = $756&255;
      HEAP8[$587>>0] = $780;
     }
     $781 = ((($$0604)) + 855|0);
     $782 = HEAP8[$781>>0]|0;
     $783 = ($782<<24>>24)==(0);
     if ($783) {
      break;
     }
     $784 = HEAP32[$125>>2]|0;
     $785 = $784 >>> 31;
     $786 = HEAP32[$129>>2]|0;
     $787 = HEAP32[$1>>2]|0;
     $788 = HEAP32[$132>>2]|0;
     $789 = $784 << 1;
     HEAP32[$125>>2] = $789;
     $790 = HEAP32[$135>>2]|0;
     $791 = (($790) + 1)|0;
     HEAP32[$135>>2] = $791;
     $792 = ($790|0)>(-1);
     do {
      if ($792) {
       $793 = $788;
       $794 = (($793) - ($787))|0;
       $795 = (($786) + 1)|0;
       $796 = (($795) - ($787))|0;
       $797 = ($794|0)>($796|0);
       if ($797) {
        $$49 = 11;
        STACKTOP = sp;return ($$49|0);
       } else {
        $798 = HEAP8[$788>>0]|0;
        $799 = $798&255;
        $800 = $799 << 8;
        $801 = ((($788)) + 1|0);
        $802 = HEAP8[$801>>0]|0;
        $803 = $802&255;
        $804 = $800 | $803;
        $805 = $804 << $791;
        $806 = $805 | $789;
        HEAP32[$125>>2] = $806;
        $807 = (($790) + -15)|0;
        HEAP32[$135>>2] = $807;
        $808 = ((($788)) + 2|0);
        HEAP32[$132>>2] = $808;
        break;
       }
      }
     } while(0);
     HEAP32[$4>>2] = $785;
     $809 = $785&255;
     HEAP8[$592>>0] = $809;
    } else {
     $810 = ((($12)) + 3862|0);
     HEAP8[$810>>0] = 0;
    }
   } while(0);
   $811 = ((($$0604)) + 856|0);
   $812 = HEAP8[$811>>0]|0;
   $813 = ($812<<24>>24)==(0);
   if (!($813)) {
    $872 = ((($12)) + 3866|0);
    HEAP8[$872>>0] = 0;
    $873 = ((($12)) + 3867|0);
    HEAP8[$873>>0] = 15;
    $$49 = 0;
    STACKTOP = sp;return ($$49|0);
   }
   $814 = HEAP32[$125>>2]|0;
   $815 = $814 >>> 28;
   $816 = HEAP32[$129>>2]|0;
   $817 = HEAP32[$1>>2]|0;
   $818 = HEAP32[$132>>2]|0;
   $819 = $814 << 4;
   HEAP32[$125>>2] = $819;
   $820 = HEAP32[$135>>2]|0;
   $821 = (($820) + 4)|0;
   HEAP32[$135>>2] = $821;
   $822 = ($820|0)>(-4);
   do {
    if ($822) {
     $823 = $818;
     $824 = (($823) - ($817))|0;
     $825 = (($816) + 1)|0;
     $826 = (($825) - ($817))|0;
     $827 = ($824|0)>($826|0);
     if ($827) {
      $$49 = 11;
      STACKTOP = sp;return ($$49|0);
     } else {
      $828 = HEAP8[$818>>0]|0;
      $829 = $828&255;
      $830 = $829 << 8;
      $831 = ((($818)) + 1|0);
      $832 = HEAP8[$831>>0]|0;
      $833 = $832&255;
      $834 = $830 | $833;
      $835 = $834 << $821;
      $836 = $835 | $819;
      HEAP32[$125>>2] = $836;
      $837 = (($820) + -12)|0;
      HEAP32[$135>>2] = $837;
      $838 = ((($818)) + 2|0);
      HEAP32[$132>>2] = $838;
      break;
     }
    }
   } while(0);
   HEAP32[$4>>2] = $815;
   $839 = $815&255;
   $840 = ((($12)) + 3866|0);
   HEAP8[$840>>0] = $839;
   $841 = HEAP32[$125>>2]|0;
   $842 = $841 >>> 28;
   $843 = HEAP32[$129>>2]|0;
   $844 = HEAP32[$1>>2]|0;
   $845 = HEAP32[$132>>2]|0;
   $846 = $841 << 4;
   HEAP32[$125>>2] = $846;
   $847 = HEAP32[$135>>2]|0;
   $848 = (($847) + 4)|0;
   HEAP32[$135>>2] = $848;
   $849 = ($847|0)>(-4);
   do {
    if ($849) {
     $850 = $845;
     $851 = (($850) - ($844))|0;
     $852 = (($843) + 1)|0;
     $853 = (($852) - ($844))|0;
     $854 = ($851|0)>($853|0);
     if ($854) {
      $$49 = 11;
      STACKTOP = sp;return ($$49|0);
     } else {
      $855 = HEAP8[$845>>0]|0;
      $856 = $855&255;
      $857 = $856 << 8;
      $858 = ((($845)) + 1|0);
      $859 = HEAP8[$858>>0]|0;
      $860 = $859&255;
      $861 = $857 | $860;
      $862 = $861 << $848;
      $863 = $862 | $846;
      HEAP32[$125>>2] = $863;
      $864 = (($847) + -12)|0;
      HEAP32[$135>>2] = $864;
      $865 = ((($845)) + 2|0);
      HEAP32[$132>>2] = $865;
      break;
     }
    }
   } while(0);
   HEAP32[$4>>2] = $842;
   $866 = $842&255;
   $867 = ((($12)) + 3867|0);
   HEAP8[$867>>0] = $866;
   $868 = HEAP8[$840>>0]|0;
   $869 = ($868<<24>>24)==(0);
   $870 = ($842|0)==(15);
   $or$cond707 = $870 & $869;
   if ($or$cond707) {
    $$49 = 0;
    STACKTOP = sp;return ($$49|0);
   }
   $871 = $868&255;
   HEAP32[$vararg_buffer85>>2] = $871;
   $vararg_ptr88 = ((($vararg_buffer85)) + 4|0);
   HEAP32[$vararg_ptr88>>2] = $842;
   __Z7WelsLogP13TagLogContextiPKcz($0,2,30459,$vararg_buffer85);
   $$49 = 328745;
   STACKTOP = sp;return ($$49|0);
  }
 } while(0);
 __Z7WelsLogP13TagLogContextiPKcz($0,2,29843,$vararg_buffer49);
 $$49 = 328690;
 STACKTOP = sp;return ($$49|0);
}
function __ZN7WelsDec23CheckAccessUnitBoundaryEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitES3_PNS_6TagSpsE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 15|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (((($0)) + 241892|0) + ($6<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 $10 = ($8|0)==($3|0);
 $or$cond = $9 | $10;
 if (!($or$cond)) {
  $$0 = 1;
  return ($$0|0);
 }
 $11 = ((($2)) + 17|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ((($1)) + 17|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($12<<24>>24)==($14<<24>>24);
 if (!($15)) {
  $$0 = 1;
  return ($$0|0);
 }
 $16 = ((($2)) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($1)) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($17|0)==($19|0);
 if (!($20)) {
  $$0 = 1;
  return ($$0|0);
 }
 $21 = ((($2)) + 48|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($1)) + 48|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($22|0)>($24|0);
 if ($25) {
  $$0 = 1;
  return ($$0|0);
 }
 $26 = ((($2)) + 15|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = ($27&255)>($5&255);
 if ($28) {
  $$0 = 1;
  return ($$0|0);
 }
 $29 = ($27<<24>>24)==($5<<24>>24);
 if ($29) {
  $30 = ((($2)) + 100|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($1)) + 100|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ($31|0)==($33|0);
  if (!($34)) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $35 = ((($2)) + 2761|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = ((($1)) + 2761|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = ($36<<24>>24)==($38<<24>>24);
 if (!($39)) {
  $$0 = 1;
  return ($$0|0);
 }
 $40 = ((($2)) + 2762|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = ((($1)) + 2762|0);
 $43 = HEAP8[$42>>0]|0;
 $44 = ($41<<24>>24)==($43<<24>>24);
 if (!($44)) {
  $$0 = 1;
  return ($$0|0);
 }
 $45 = ((($2)) + 1|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = ($46<<24>>24)!=(0);
 $48 = ((($1)) + 1|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = ($49<<24>>24)!=(0);
 $51 = $47 ^ $50;
 if ($51) {
  $$0 = 1;
  return ($$0|0);
 }
 $52 = ((($2)) + 12|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = ((($1)) + 12|0);
 $55 = HEAP8[$54>>0]|0;
 $56 = ($53<<24>>24)==($55<<24>>24);
 if (!($56)) {
  $$0 = 1;
  return ($$0|0);
 }
 $57 = ($53<<24>>24)==(0);
 if (!($57)) {
  $58 = ((($2)) + 2752|0);
  $59 = HEAP16[$58>>1]|0;
  $60 = ((($1)) + 2752|0);
  $61 = HEAP16[$60>>1]|0;
  $62 = ($59<<16>>16)==($61<<16>>16);
  if (!($62)) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $63 = ((($3)) + 20|0);
 $64 = HEAP32[$63>>2]|0;
 switch ($64|0) {
 case 0:  {
  $65 = ((($2)) + 32|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($1)) + 32|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if (!($69)) {
   $$0 = 1;
   return ($$0|0);
  }
  $70 = ((($2)) + 36|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ((($1)) + 36|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ($71|0)==($73|0);
  if (!($74)) {
   $$0 = 1;
   return ($$0|0);
  }
  break;
 }
 case 1:  {
  $75 = ((($2)) + 40|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($1)) + 40|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = ($76|0)==($78|0);
  if (!($79)) {
   $$0 = 1;
   return ($$0|0);
  }
  $80 = ((($2)) + 44|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = ((($1)) + 44|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if (!($84)) {
   $$0 = 1;
   return ($$0|0);
  }
  break;
 }
 default: {
 }
 }
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$ph = 0, $$0$i7678 = 0, $$074 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 >>> 24;
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   $9 = $3 >>> 16;
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (15782 + ($9)|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12&255;
    $14 = (($13) + 8)|0;
    $$0$i$ph = $14;
    break;
   }
   $15 = $3 >>> 8;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = (15782 + ($15)|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18&255;
    $20 = (($19) + 16)|0;
    $$0$i$ph = $20;
    break;
   }
   $21 = ($3|0)==(0);
   if ($21) {
    $$0 = 12;
    return ($$0|0);
   } else {
    $22 = (15782 + ($3)|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = (($24) + 24)|0;
    $$0$i$ph = $25;
    break;
   }
  } else {
   $6 = (15782 + ($4)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = $7&255;
   $$0$i$ph = $8;
  }
 } while(0);
 $26 = ((($0)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = HEAP32[$0>>2]|0;
 $29 = (($27) - ($28))|0;
 $30 = ($$0$i$ph|0)>(16);
 $31 = ((($0)) + 16|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32;
 $34 = (($33) - ($28))|0;
 do {
  if ($30) {
   $35 = $3 << 16;
   HEAP32[$2>>2] = $35;
   $36 = ((($0)) + 24|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37) + 16)|0;
   HEAP32[$36>>2] = $38;
   $39 = ($37|0)>(-16);
   do {
    if ($39) {
     $40 = (($29) + 1)|0;
     $41 = ($34|0)>($40|0);
     if ($41) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $42 = HEAP8[$32>>0]|0;
      $43 = $42&255;
      $44 = $43 << 8;
      $45 = ((($32)) + 1|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = $46&255;
      $48 = $44 | $47;
      $49 = $48 << $38;
      $50 = $49 | $35;
      HEAP32[$2>>2] = $50;
      HEAP32[$36>>2] = $37;
      $51 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $51;
      $54 = $50;$56 = $37;$58 = $51;
      break;
     }
    } else {
     $54 = $35;$56 = $38;$58 = $32;
    }
   } while(0);
   $52 = (($$0$i$ph) + -15)|0;
   $53 = $54 << $52;
   HEAP32[$2>>2] = $53;
   $55 = (($56) + ($52))|0;
   HEAP32[$36>>2] = $55;
   $57 = ($55|0)>(0);
   if ($57) {
    $59 = $58;
    $60 = (($59) - ($28))|0;
    $61 = (($29) + 1)|0;
    $62 = ($60|0)>($61|0);
    if ($62) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $63 = HEAP8[$58>>0]|0;
     $64 = $63&255;
     $65 = $64 << 8;
     $66 = ((($58)) + 1|0);
     $67 = HEAP8[$66>>0]|0;
     $68 = $67&255;
     $69 = $65 | $68;
     $70 = $69 << $55;
     $71 = $70 | $53;
     HEAP32[$2>>2] = $71;
     $72 = (($55) + -16)|0;
     HEAP32[$36>>2] = $72;
     $73 = ((($58)) + 2|0);
     HEAP32[$31>>2] = $73;
     $$pre$phiZ2D = $36;$101 = $73;$96 = $71;$99 = $72;
     label = 20;
     break;
    }
   } else {
    $$pre$phiZ2D = $36;$101 = $58;$96 = $53;$99 = $55;
    label = 20;
   }
  } else {
   $74 = (($$0$i$ph) + 1)|0;
   $75 = $3 << $74;
   HEAP32[$2>>2] = $75;
   $76 = ((($0)) + 24|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = (($77) + ($74))|0;
   HEAP32[$76>>2] = $78;
   $79 = ($78|0)>(0);
   do {
    if ($79) {
     $80 = (($29) + 1)|0;
     $81 = ($34|0)>($80|0);
     if ($81) {
      $$0 = 11;
      return ($$0|0);
     } else {
      $82 = HEAP8[$32>>0]|0;
      $83 = $82&255;
      $84 = $83 << 8;
      $85 = ((($32)) + 1|0);
      $86 = HEAP8[$85>>0]|0;
      $87 = $86&255;
      $88 = $84 | $87;
      $89 = $88 << $78;
      $90 = $89 | $75;
      HEAP32[$2>>2] = $90;
      $91 = (($78) + -16)|0;
      HEAP32[$76>>2] = $91;
      $92 = ((($32)) + 2|0);
      HEAP32[$31>>2] = $92;
      $120 = $91;$121 = $92;$122 = $90;
      break;
     }
    } else {
     $120 = $78;$121 = $32;$122 = $75;
    }
   } while(0);
   $93 = ($$0$i$ph|0)==(0);
   if ($93) {
    $$0$i7678 = 0;$$074 = 0;
   } else {
    $$pre$phiZ2D = $76;$101 = $121;$96 = $122;$99 = $120;
    label = 20;
   }
  }
 } while(0);
 do {
  if ((label|0) == 20) {
   $94 = (32 - ($$0$i$ph))|0;
   $95 = $96 >>> $94;
   $97 = $96 << $$0$i$ph;
   HEAP32[$2>>2] = $97;
   $98 = (($99) + ($$0$i$ph))|0;
   HEAP32[$$pre$phiZ2D>>2] = $98;
   $100 = ($98|0)>(0);
   if ($100) {
    $102 = $101;
    $103 = (($102) - ($28))|0;
    $104 = (($29) + 1)|0;
    $105 = ($103|0)>($104|0);
    if ($105) {
     $$0 = 11;
     return ($$0|0);
    } else {
     $106 = HEAP8[$101>>0]|0;
     $107 = $106&255;
     $108 = $107 << 8;
     $109 = ((($101)) + 1|0);
     $110 = HEAP8[$109>>0]|0;
     $111 = $110&255;
     $112 = $108 | $111;
     $113 = $112 << $98;
     $114 = $113 | $97;
     HEAP32[$2>>2] = $114;
     $115 = (($98) + -16)|0;
     HEAP32[$$pre$phiZ2D>>2] = $115;
     $116 = ((($101)) + 2|0);
     HEAP32[$31>>2] = $116;
     $$0$i7678 = $$0$i$ph;$$074 = $95;
     break;
    }
   } else {
    $$0$i7678 = $$0$i$ph;$$074 = $95;
   }
  }
 } while(0);
 $117 = 1 << $$0$i7678;
 $118 = (($117) + -1)|0;
 $119 = (($118) + ($$074))|0;
 HEAP32[$1>>2] = $119;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec25ParseRefPicListReorderingEPN10WelsCommon15TagBitStringAuxEPNS_15TagSliceHeadersE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$082$us = 0, $$089113 = 0, $$089113$us = 0, $$10 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond7 = 0, $or$cond7$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($1)) + 2732|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 64|0);
 $6 = HEAP32[$5>>2]|0;
 switch ($4|0) {
 case 2: case 4:  {
  $$10 = 0;
  STACKTOP = sp;return ($$10|0);
  break;
 }
 default: {
 }
 }
 $7 = ((($0)) + 20|0);
 $8 = ((($0)) + 4|0);
 $9 = ((($0)) + 16|0);
 $10 = ((($0)) + 24|0);
 $11 = ($4|0)==(1);
 $12 = ((($6)) + 16|0);
 if ($11) {
  $$082$us = 0;
  L5: while(1) {
   $13 = HEAP32[$7>>2]|0;
   $14 = $13 >>> 31;
   $15 = HEAP32[$8>>2]|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$9>>2]|0;
   $18 = $13 << 1;
   HEAP32[$7>>2] = $18;
   $19 = HEAP32[$10>>2]|0;
   $20 = (($19) + 1)|0;
   HEAP32[$10>>2] = $20;
   $21 = ($19|0)>(-1);
   if ($21) {
    $22 = $17;
    $23 = (($22) - ($16))|0;
    $24 = (($15) + 1)|0;
    $25 = (($24) - ($16))|0;
    $26 = ($23|0)>($25|0);
    if ($26) {
     $$10 = 11;
     label = 38;
     break;
    }
    $27 = HEAP8[$17>>0]|0;
    $28 = $27&255;
    $29 = $28 << 8;
    $30 = ((($17)) + 1|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = $31&255;
    $33 = $29 | $32;
    $34 = $33 << $20;
    $35 = $34 | $18;
    HEAP32[$7>>2] = $35;
    $36 = (($19) + -15)|0;
    HEAP32[$10>>2] = $36;
    $37 = ((($17)) + 2|0);
    HEAP32[$9>>2] = $37;
   }
   HEAP32[$2>>2] = $14;
   $38 = ($14|0)==(0);
   $39 = (((($1)) + 340|0) + ($$082$us)|0);
   $40 = $14&255;
   HEAP8[$39>>0] = $40;
   L11: do {
    if (!($38)) {
     $70 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
     $71 = ($70|0)==(0);
     if (!($71)) {
      $$10 = $70;
      label = 38;
      break L5;
     }
     $48 = (((($1)) + 28|0) + ($$082$us<<2)|0);
     $$089113$us = 0;
     while(1) {
      $41 = HEAP32[$2>>2]|0;
      $42 = ($$089113$us|0)>(15);
      $43 = ($41>>>0)>(3);
      $or$cond7$us = $42 | $43;
      if ($or$cond7$us) {
       $$10 = 328759;
       label = 38;
       break L5;
      }
      $44 = $41&65535;
      $45 = ((((((($1)) + 84|0) + ($$082$us<<7)|0) + ($$089113$us<<3)|0)) + 6|0);
      HEAP16[$45>>1] = $44;
      $46 = ($41|0)==(3);
      if ($46) {
       break L11;
      }
      $47 = HEAP32[$48>>2]|0;
      $49 = ($$089113$us|0)<($47|0);
      if (!($49)) {
       $$10 = 328759;
       label = 38;
       break L5;
      }
      $50 = $41 | 1;
      $51 = ($50|0)==(1);
      if ($51) {
       $58 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
       $59 = ($58|0)==(0);
       if (!($59)) {
        $$10 = $58;
        label = 38;
        break L5;
       }
       $60 = HEAP32[$2>>2]|0;
       $61 = HEAP32[$12>>2]|0;
       $62 = 1 << $61;
       $63 = ($60>>>0)>($62>>>0);
       if ($63) {
        $$10 = 328759;
        label = 38;
        break L5;
       }
       $64 = ((((($1)) + 84|0) + ($$082$us<<7)|0) + ($$089113$us<<3)|0);
       HEAP32[$64>>2] = $60;
      } else {
       $52 = ($41|0)==(2);
       if ($52) {
        $53 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
        $54 = ($53|0)==(0);
        if (!($54)) {
         $$10 = $53;
         label = 38;
         break L5;
        }
        $55 = HEAP32[$2>>2]|0;
        $56 = $55&65535;
        $57 = ((((((($1)) + 84|0) + ($$082$us<<7)|0) + ($$089113$us<<3)|0)) + 4|0);
        HEAP16[$57>>1] = $56;
       }
      }
      $65 = (($$089113$us) + 1)|0;
      $66 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
      $67 = ($66|0)==(0);
      if ($67) {
       $$089113$us = $65;
      } else {
       $$10 = $66;
       label = 38;
       break L5;
      }
     }
    }
   } while(0);
   $68 = (($$082$us) + 1)|0;
   $69 = ($68|0)<(2);
   if ($69) {
    $$082$us = $68;
   } else {
    $$10 = 0;
    label = 38;
    break;
   }
  }
  if ((label|0) == 38) {
   STACKTOP = sp;return ($$10|0);
  }
 } else {
  $72 = HEAP32[$7>>2]|0;
  $73 = $72 >>> 31;
  $74 = HEAP32[$8>>2]|0;
  $75 = HEAP32[$0>>2]|0;
  $76 = HEAP32[$9>>2]|0;
  $77 = $72 << 1;
  HEAP32[$7>>2] = $77;
  $78 = HEAP32[$10>>2]|0;
  $79 = (($78) + 1)|0;
  HEAP32[$10>>2] = $79;
  $80 = ($78|0)>(-1);
  do {
   if ($80) {
    $81 = $76;
    $82 = (($81) - ($75))|0;
    $83 = (($74) + 1)|0;
    $84 = (($83) - ($75))|0;
    $85 = ($82|0)>($84|0);
    if ($85) {
     $$10 = 11;
     STACKTOP = sp;return ($$10|0);
    } else {
     $86 = HEAP8[$76>>0]|0;
     $87 = $86&255;
     $88 = $87 << 8;
     $89 = ((($76)) + 1|0);
     $90 = HEAP8[$89>>0]|0;
     $91 = $90&255;
     $92 = $88 | $91;
     $93 = $92 << $79;
     $94 = $93 | $77;
     HEAP32[$7>>2] = $94;
     $95 = (($78) + -15)|0;
     HEAP32[$10>>2] = $95;
     $96 = ((($76)) + 2|0);
     HEAP32[$9>>2] = $96;
     break;
    }
   }
  } while(0);
  HEAP32[$2>>2] = $73;
  $97 = ($73|0)==(0);
  $98 = ((($1)) + 340|0);
  $99 = $73&255;
  HEAP8[$98>>0] = $99;
  if ($97) {
   $$10 = 0;
   STACKTOP = sp;return ($$10|0);
  }
  $100 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
  $101 = ($100|0)==(0);
  if (!($101)) {
   $$10 = $100;
   STACKTOP = sp;return ($$10|0);
  }
  $102 = ((($1)) + 28|0);
  $$089113 = 0;
  while(1) {
   $103 = HEAP32[$2>>2]|0;
   $104 = ($$089113|0)>(15);
   $105 = ($103>>>0)>(3);
   $or$cond7 = $104 | $105;
   if ($or$cond7) {
    $$10 = 328759;
    label = 38;
    break;
   }
   $106 = $103&65535;
   $107 = (((((($1)) + 84|0) + ($$089113<<3)|0)) + 6|0);
   HEAP16[$107>>1] = $106;
   $108 = ($103|0)==(3);
   if ($108) {
    $$10 = 0;
    label = 38;
    break;
   }
   $109 = HEAP32[$102>>2]|0;
   $110 = ($$089113|0)<($109|0);
   if (!($110)) {
    $$10 = 328759;
    label = 38;
    break;
   }
   $111 = $103 | 1;
   $112 = ($111|0)==(1);
   if ($112) {
    $113 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
    $114 = ($113|0)==(0);
    if (!($114)) {
     $$10 = $113;
     label = 38;
     break;
    }
    $115 = HEAP32[$2>>2]|0;
    $116 = HEAP32[$12>>2]|0;
    $117 = 1 << $116;
    $118 = ($115>>>0)>($117>>>0);
    if ($118) {
     $$10 = 328759;
     label = 38;
     break;
    }
    $119 = (((($1)) + 84|0) + ($$089113<<3)|0);
    HEAP32[$119>>2] = $115;
   } else {
    $120 = ($103|0)==(2);
    if ($120) {
     $121 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
     $122 = ($121|0)==(0);
     if (!($122)) {
      $$10 = $121;
      label = 38;
      break;
     }
     $123 = HEAP32[$2>>2]|0;
     $124 = $123&65535;
     $125 = (((((($1)) + 84|0) + ($$089113<<3)|0)) + 4|0);
     HEAP16[$125>>1] = $124;
    }
   }
   $126 = (($$089113) + 1)|0;
   $127 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
   $128 = ($127|0)==(0);
   if ($128) {
    $$089113 = $126;
   } else {
    $$10 = $127;
    label = 38;
    break;
   }
  }
  if ((label|0) == 38) {
   STACKTOP = sp;return ($$10|0);
  }
 }
 return (0)|0;
}
function __ZN7WelsDec22ParsePredWeightedTableEPN10WelsCommon15TagBitStringAuxEPNS_15TagSliceHeadersE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0135213 = 0, $$15 = 0, $$15$ph = 0, $$lcssa = 0, $$lcssa235 = 0, $$off = 0, $$off$1 = 0, $$off136 = 0, $$off136$1 = 0, $$off137 = 0, $$off138 = 0, $$ph = 0, $$promoted = 0, $$sink = 0, $$sink17 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge$i = 0, $storemerge$i$1 = 0, $storemerge$i$1$sink = 0, $storemerge$i147 = 0, $storemerge$i150 = 0, $storemerge$i155 = 0;
 var $storemerge$i155$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp + 4|0;
 $3 = sp;
 $4 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$3)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $$15 = $4;
  STACKTOP = sp;return ($$15|0);
 }
 $6 = HEAP32[$3>>2]|0;
 $7 = ($6>>>0)>(7);
 if ($7) {
  $$15 = 328733;
  STACKTOP = sp;return ($$15|0);
 }
 $8 = ((($1)) + 344|0);
 HEAP32[$8>>2] = $6;
 $9 = ((($1)) + 64|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 319|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)==(0);
 do {
  if ($13) {
   $$promoted = $6;
  } else {
   $14 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$3)|0);
   $15 = ($14|0)==(0);
   if (!($15)) {
    $$15 = $14;
    STACKTOP = sp;return ($$15|0);
   }
   $16 = HEAP32[$3>>2]|0;
   $17 = ($16>>>0)>(7);
   if ($17) {
    $$15 = 328734;
    STACKTOP = sp;return ($$15|0);
   } else {
    $18 = ((($1)) + 348|0);
    HEAP32[$18>>2] = $16;
    $$promoted = $16;
    break;
   }
  }
 } while(0);
 $19 = ((($1)) + 28|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)>(0);
 if (!($21)) {
  $$15 = 0;
  STACKTOP = sp;return ($$15|0);
 }
 $22 = ((($0)) + 20|0);
 $23 = ((($0)) + 4|0);
 $24 = ((($0)) + 16|0);
 $25 = ((($0)) + 24|0);
 $26 = ((($1)) + 348|0);
 $$0135213 = 0;$140 = $$promoted;
 while(1) {
  $27 = HEAP32[$22>>2]|0;
  $28 = $27 >>> 31;
  $29 = HEAP32[$23>>2]|0;
  $30 = HEAP32[$0>>2]|0;
  $31 = HEAP32[$24>>2]|0;
  $32 = $27 << 1;
  HEAP32[$22>>2] = $32;
  $33 = HEAP32[$25>>2]|0;
  $34 = (($33) + 1)|0;
  HEAP32[$25>>2] = $34;
  $35 = ($33|0)>(-1);
  if ($35) {
   $36 = $31;
   $37 = (($36) - ($30))|0;
   $38 = (($29) + 1)|0;
   $39 = (($38) - ($30))|0;
   $40 = ($37|0)>($39|0);
   if ($40) {
    label = 37;
    break;
   }
   $41 = HEAP8[$31>>0]|0;
   $42 = $41&255;
   $43 = $42 << 8;
   $44 = ((($31)) + 1|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = $45&255;
   $47 = $43 | $46;
   $48 = $47 << $34;
   $49 = $48 | $32;
   HEAP32[$22>>2] = $49;
   $50 = (($33) + -15)|0;
   HEAP32[$25>>2] = $50;
   $51 = ((($31)) + 2|0);
   HEAP32[$24>>2] = $51;
  }
  $52 = ($28|0)==(0);
  if ($52) {
   $74 = HEAP32[$8>>2]|0;
   $75 = 1 << $74;
   $76 = (((($1)) + 352|0) + ($$0135213<<2)|0);
   HEAP32[$76>>2] = $75;
   $$sink = 0;
  } else {
   $53 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
   $54 = ($53|0)==(0);
   if (!($54)) {
    label = 14;
    break;
   }
   $55 = HEAP32[$2>>2]|0;
   $56 = $55 & 1;
   $57 = ($56|0)==(0);
   $58 = $55 >>> 1;
   $59 = (0 - ($58))|0;
   $60 = (($55) + 1)|0;
   $61 = $60 >>> 1;
   $storemerge$i147 = $57 ? $59 : $61;
   $$off137 = (($storemerge$i147) + 128)|0;
   $62 = ($$off137>>>0)>(255);
   if ($62) {
    label = 39;
    break;
   }
   $63 = (((($1)) + 352|0) + ($$0135213<<2)|0);
   HEAP32[$63>>2] = $storemerge$i147;
   $64 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
   $65 = ($64|0)==(0);
   if (!($65)) {
    label = 17;
    break;
   }
   $66 = HEAP32[$2>>2]|0;
   $67 = $66 & 1;
   $68 = ($67|0)==(0);
   $69 = $66 >>> 1;
   $70 = (0 - ($69))|0;
   $71 = (($66) + 1)|0;
   $72 = $71 >>> 1;
   $storemerge$i150 = $68 ? $70 : $72;
   $$off138 = (($storemerge$i150) + 128)|0;
   $73 = ($$off138>>>0)>(255);
   if ($73) {
    label = 38;
    break;
   } else {
    $$sink = $storemerge$i150;
   }
  }
  $$sink17 = (((($1)) + 416|0) + ($$0135213<<2)|0);
  HEAP32[$$sink17>>2] = $$sink;
  $77 = HEAP32[$9>>2]|0;
  $78 = ((($77)) + 319|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = ($79<<24>>24)==(0);
  if ($80) {
   $141 = $28;
  } else {
   $81 = HEAP32[$22>>2]|0;
   $82 = $81 >>> 31;
   $83 = HEAP32[$23>>2]|0;
   $84 = HEAP32[$0>>2]|0;
   $85 = HEAP32[$24>>2]|0;
   $86 = $81 << 1;
   HEAP32[$22>>2] = $86;
   $87 = HEAP32[$25>>2]|0;
   $88 = (($87) + 1)|0;
   HEAP32[$25>>2] = $88;
   $89 = ($87|0)>(-1);
   if ($89) {
    $90 = $85;
    $91 = (($90) - ($84))|0;
    $92 = (($83) + 1)|0;
    $93 = (($92) - ($84))|0;
    $94 = ($91|0)>($93|0);
    if ($94) {
     label = 36;
     break;
    }
    $95 = HEAP8[$85>>0]|0;
    $96 = $95&255;
    $97 = $96 << 8;
    $98 = ((($85)) + 1|0);
    $99 = HEAP8[$98>>0]|0;
    $100 = $99&255;
    $101 = $97 | $100;
    $102 = $101 << $88;
    $103 = $102 | $86;
    HEAP32[$22>>2] = $103;
    $104 = (($87) + -15)|0;
    HEAP32[$25>>2] = $104;
    $105 = ((($85)) + 2|0);
    HEAP32[$24>>2] = $105;
   }
   $106 = ($82|0)==(0);
   if ($106) {
    $109 = HEAP32[$26>>2]|0;
    $110 = 1 << $109;
    $111 = (((($1)) + 480|0) + ($$0135213<<3)|0);
    HEAP32[$111>>2] = $110;
    $112 = (((($1)) + 608|0) + ($$0135213<<3)|0);
    HEAP32[$112>>2] = 0;
    $113 = (((((($1)) + 480|0) + ($$0135213<<3)|0)) + 4|0);
    HEAP32[$113>>2] = $110;
    $$ph = 0;$storemerge$i$1$sink = 0;
   } else {
    $107 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
    $108 = ($107|0)==(0);
    if (!($108)) {
     $$lcssa235 = $107;
     label = 27;
     break;
    }
    $114 = HEAP32[$2>>2]|0;
    $115 = $114 & 1;
    $116 = ($115|0)==(0);
    $117 = $114 >>> 1;
    $118 = (0 - ($117))|0;
    $119 = (($114) + 1)|0;
    $120 = $119 >>> 1;
    $storemerge$i155 = $116 ? $118 : $120;
    $$off = (($storemerge$i155) + 128)|0;
    $121 = ($$off>>>0)>(255);
    if ($121) {
     $$15$ph = 328736;
     label = 35;
     break;
    }
    $122 = (((($1)) + 480|0) + ($$0135213<<3)|0);
    HEAP32[$122>>2] = $storemerge$i155;
    $123 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
    $124 = ($123|0)==(0);
    if (!($124)) {
     $$lcssa = $123;
     label = 30;
     break;
    }
    $125 = HEAP32[$2>>2]|0;
    $126 = $125 & 1;
    $127 = ($126|0)==(0);
    $128 = $125 >>> 1;
    $129 = (0 - ($128))|0;
    $130 = (($125) + 1)|0;
    $131 = $130 >>> 1;
    $storemerge$i = $127 ? $129 : $131;
    $$off136 = (($storemerge$i) + 128)|0;
    $132 = ($$off136>>>0)>(255);
    if ($132) {
     $$15$ph = 328738;
     label = 35;
     break;
    }
    $133 = (((($1)) + 608|0) + ($$0135213<<3)|0);
    HEAP32[$133>>2] = $storemerge$i;
    $134 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
    $135 = ($134|0)==(0);
    if (!($135)) {
     $$lcssa235 = $134;
     label = 27;
     break;
    }
    $142 = HEAP32[$2>>2]|0;
    $143 = $142 & 1;
    $144 = ($143|0)==(0);
    $145 = $142 >>> 1;
    $146 = (0 - ($145))|0;
    $147 = (($142) + 1)|0;
    $148 = $147 >>> 1;
    $storemerge$i155$1 = $144 ? $146 : $148;
    $$off$1 = (($storemerge$i155$1) + 128)|0;
    $149 = ($$off$1>>>0)>(255);
    if ($149) {
     $$15$ph = 328736;
     label = 35;
     break;
    }
    $150 = (((((($1)) + 480|0) + ($$0135213<<3)|0)) + 4|0);
    HEAP32[$150>>2] = $storemerge$i155$1;
    $151 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($0,$2)|0);
    $152 = ($151|0)==(0);
    if (!($152)) {
     $$lcssa = $151;
     label = 30;
     break;
    }
    $153 = HEAP32[$2>>2]|0;
    $154 = $153 & 1;
    $155 = ($154|0)==(0);
    $156 = $153 >>> 1;
    $157 = (0 - ($156))|0;
    $158 = (($153) + 1)|0;
    $159 = $158 >>> 1;
    $storemerge$i$1 = $155 ? $157 : $159;
    $$off136$1 = (($storemerge$i$1) + 128)|0;
    $160 = ($$off136$1>>>0)>(255);
    if ($160) {
     $$15$ph = 328738;
     label = 35;
     break;
    } else {
     $$ph = 1;$storemerge$i$1$sink = $storemerge$i$1;
    }
   }
   $136 = (((((($1)) + 608|0) + ($$0135213<<3)|0)) + 4|0);
   HEAP32[$136>>2] = $storemerge$i$1$sink;
   $141 = $$ph;
  }
  $137 = (($$0135213) + 1)|0;
  $138 = HEAP32[$19>>2]|0;
  $139 = ($137|0)<($138|0);
  if ($139) {
   $$0135213 = $137;$140 = $141;
  } else {
   label = 40;
   break;
  }
 }
 switch (label|0) {
  case 14: {
   HEAP32[$3>>2] = $28;
   $$15 = $53;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 17: {
   HEAP32[$3>>2] = $28;
   $$15 = $64;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 27: {
   HEAP32[$3>>2] = $82;
   $$15 = $$lcssa235;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 30: {
   HEAP32[$3>>2] = $82;
   $$15 = $$lcssa;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 35: {
   HEAP32[$3>>2] = $82;
   $$15 = $$15$ph;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 36: {
   HEAP32[$3>>2] = $28;
   $$15 = 11;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 37: {
   HEAP32[$3>>2] = $140;
   $$15 = 11;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 38: {
   HEAP32[$3>>2] = $28;
   $$15 = 328737;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 39: {
   HEAP32[$3>>2] = $28;
   $$15 = 328735;
   STACKTOP = sp;return ($$15|0);
   break;
  }
  case 40: {
   HEAP32[$3>>2] = $141;
   $$15 = 0;
   STACKTOP = sp;return ($$15|0);
   break;
  }
 }
 return (0)|0;
}
function __ZN7WelsDec21ParseDecRefPicMarkingEPNS_21TagWelsDecoderContextEPN10WelsCommon15TagBitStringAuxEPNS_15TagSliceHeadersEPNS_6TagSpsEb($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$0108 = 0, $$13 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp;
 $6 = ((($1)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 >>> 31;
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$1>>2]|0;
 $12 = ((($1)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $7 << 1;
 HEAP32[$6>>2] = $14;
 $15 = ((($1)) + 24|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($16) + 1)|0;
 HEAP32[$15>>2] = $17;
 $18 = ($16|0)>(-1);
 if ($18) {
  $19 = $13;
  $20 = (($19) - ($11))|0;
  $21 = (($10) + 1)|0;
  $22 = (($21) - ($11))|0;
  $23 = ($20|0)>($22|0);
  if ($23) {
   $$0$i$i = 11;
  } else {
   $24 = HEAP8[$13>>0]|0;
   $25 = $24&255;
   $26 = $25 << 8;
   $27 = ((($13)) + 1|0);
   $28 = HEAP8[$27>>0]|0;
   $29 = $28&255;
   $30 = $26 | $29;
   $31 = $30 << $17;
   $32 = $31 | $14;
   HEAP32[$6>>2] = $32;
   $33 = (($16) + -15)|0;
   HEAP32[$15>>2] = $33;
   $34 = ((($13)) + 2|0);
   HEAP32[$12>>2] = $34;
   label = 4;
  }
 } else {
  label = 4;
 }
 if ((label|0) == 4) {
  HEAP32[$5>>2] = $8;
  $$0$i$i = 0;
 }
 $35 = ($$0$i$i|0)==(0);
 if ($4) {
  if (!($35)) {
   $$13 = $$0$i$i;
   STACKTOP = sp;return ($$13|0);
  }
  $36 = ((($2)) + 2724|0);
  $37 = $8&255;
  HEAP8[$36>>0] = $37;
  $38 = HEAP32[$6>>2]|0;
  $39 = $38 >>> 31;
  $40 = HEAP32[$9>>2]|0;
  $41 = HEAP32[$1>>2]|0;
  $42 = HEAP32[$12>>2]|0;
  $43 = $38 << 1;
  HEAP32[$6>>2] = $43;
  $44 = HEAP32[$15>>2]|0;
  $45 = (($44) + 1)|0;
  HEAP32[$15>>2] = $45;
  $46 = ($44|0)>(-1);
  do {
   if ($46) {
    $47 = $42;
    $48 = (($47) - ($41))|0;
    $49 = (($40) + 1)|0;
    $50 = (($49) - ($41))|0;
    $51 = ($48|0)>($50|0);
    if ($51) {
     $$13 = 11;
     STACKTOP = sp;return ($$13|0);
    } else {
     $52 = HEAP8[$42>>0]|0;
     $53 = $52&255;
     $54 = $53 << 8;
     $55 = ((($42)) + 1|0);
     $56 = HEAP8[$55>>0]|0;
     $57 = $56&255;
     $58 = $54 | $57;
     $59 = $58 << $45;
     $60 = $59 | $43;
     HEAP32[$6>>2] = $60;
     $61 = (($44) + -15)|0;
     HEAP32[$15>>2] = $61;
     $62 = ((($42)) + 2|0);
     HEAP32[$12>>2] = $62;
     break;
    }
   }
  } while(0);
  HEAP32[$5>>2] = $39;
  $63 = ((($2)) + 2725|0);
  $64 = $39&255;
  HEAP8[$63>>0] = $64;
  $$13 = 0;
  STACKTOP = sp;return ($$13|0);
 }
 if (!($35)) {
  $$13 = $$0$i$i;
  STACKTOP = sp;return ($$13|0);
 }
 $65 = ($8|0)==(0);
 $66 = ((($2)) + 2726|0);
 $67 = $8&255;
 HEAP8[$66>>0] = $67;
 if ($65) {
  $$13 = 0;
  STACKTOP = sp;return ($$13|0);
 }
 $68 = ((($2)) + 4|0);
 $69 = ((($3)) + 16|0);
 $$0108 = 0;
 L26: while(1) {
  $70 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$5)|0);
  $71 = ($70|0)==(0);
  if (!($71)) {
   $$13 = $70;
   label = 27;
   break;
  }
  $72 = HEAP32[$5>>2]|0;
  $73 = (((($2)) + 1140|0) + (($$0108*24)|0)|0);
  HEAP32[$73>>2] = $72;
  $74 = ($72|0)==(0);
  if ($74) {
   $$13 = 0;
   label = 27;
   break;
  }
  $75 = $72 | 2;
  $76 = ($75|0)==(3);
  L30: do {
   if ($76) {
    $77 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$5)|0);
    $78 = ($77|0)==(0);
    if (!($78)) {
     $$13 = $77;
     label = 27;
     break L26;
    }
    $79 = HEAP32[$5>>2]|0;
    $80 = (($79) + 1)|0;
    $81 = (((((($2)) + 1140|0) + (($$0108*24)|0)|0)) + 8|0);
    HEAP32[$81>>2] = $80;
    $82 = HEAP32[$68>>2]|0;
    $83 = (($82) - ($80))|0;
    $84 = HEAP32[$69>>2]|0;
    $85 = 1 << $84;
    $86 = (($85) + -1)|0;
    $87 = $86 & $83;
    $88 = (((((($2)) + 1140|0) + (($$0108*24)|0)|0)) + 4|0);
    HEAP32[$88>>2] = $87;
    switch ($72|0) {
    case 3: case 6:  {
     label = 22;
     break;
    }
    case 4:  {
     label = 24;
     break;
    }
    default: {
    }
    }
   } else {
    switch ($72|0) {
    case 3: case 6:  {
     label = 22;
     break L30;
     break;
    }
    case 4:  {
     label = 24;
     break L30;
     break;
    }
    case 2:  {
     break;
    }
    default: {
     break L30;
    }
    }
    $89 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$5)|0);
    $90 = ($89|0)==(0);
    if (!($90)) {
     $$13 = $89;
     label = 27;
     break L26;
    }
    $91 = HEAP32[$5>>2]|0;
    $92 = (((((($2)) + 1140|0) + (($$0108*24)|0)|0)) + 12|0);
    HEAP32[$92>>2] = $91;
   }
  } while(0);
  if ((label|0) == 22) {
   label = 0;
   $93 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$5)|0);
   $94 = ($93|0)==(0);
   if (!($94)) {
    $$13 = $93;
    label = 27;
    break;
   }
   $95 = HEAP32[$5>>2]|0;
   $96 = (((((($2)) + 1140|0) + (($$0108*24)|0)|0)) + 16|0);
   HEAP32[$96>>2] = $95;
  }
  else if ((label|0) == 24) {
   label = 0;
   $97 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj_588($1,$5)|0);
   $98 = ($97|0)==(0);
   if (!($98)) {
    $$13 = $97;
    label = 27;
    break;
   }
   $99 = HEAP32[$5>>2]|0;
   $100 = (($99) + -1)|0;
   $101 = (((((($2)) + 1140|0) + (($$0108*24)|0)|0)) + 20|0);
   HEAP32[$101>>2] = $100;
  }
  $102 = (($$0108) + 1)|0;
  $103 = ($102|0)<(66);
  if ($103) {
   $$0108 = $102;
  } else {
   $$13 = 0;
   label = 27;
   break;
  }
 }
 if ((label|0) == 27) {
  STACKTOP = sp;return ($$13|0);
 }
 return (0)|0;
}
function __ZN7WelsDec17ExpandNalUnitListEPPNS_14TagAccessUnitsEiiPN10WelsCommon12CMemoryAlignE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$046$i30 = 0, $$1 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($2|0)>($1|0);
 if (!($4)) {
  $$1 = 1;
  return ($$1|0);
 }
 $5 = $2 << 2;
 $6 = ($2|0)==(0);
 if ($6) {
  $$1 = 1;
  return ($$1|0);
 }
 $7 = (($5) + 28)|0;
 $8 = ($2*3920)|0;
 $9 = (($7) + ($8))|0;
 $10 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($3,$9,22218)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$1 = 1;
  return ($$1|0);
 }
 $12 = ((($10)) + 28|0);
 HEAP32[$10>>2] = $12;
 $13 = (($12) + ($5)|0);
 HEAP32[$12>>2] = $13;
 $exitcond29 = ($2|0)==(1);
 if (!($exitcond29)) {
  $$046$i30 = $13;$16 = 1;
  while(1) {
   $14 = ((($$046$i30)) + 3920|0);
   $$pre = HEAP32[$10>>2]|0;
   $15 = (($$pre) + ($16<<2)|0);
   HEAP32[$15>>2] = $14;
   $17 = (($16) + 1)|0;
   $exitcond = ($17|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$046$i30 = $14;$16 = $17;
   }
  }
 }
 $18 = $10;
 $19 = ((($10)) + 12|0);
 HEAP32[$19>>2] = $2;
 $20 = ((($10)) + 4|0);
 HEAP32[$20>>2] = 0;
 $21 = ((($10)) + 8|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($10)) + 16|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($10)) + 20|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($10)) + 24|0);
 HEAP8[$24>>0] = 0;
 $$0 = 0;
 while(1) {
  $25 = HEAP32[$10>>2]|0;
  $26 = (($25) + ($$0<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = HEAP32[$0>>2]|0;
  $29 = HEAP32[$28>>2]|0;
  $30 = (($29) + ($$0<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  _memcpy(($27|0),($31|0),3920)|0;
  $32 = (($$0) + 1)|0;
  $33 = ($32|0)<($1|0);
  if ($33) {
   $$0 = $32;
  } else {
   break;
  }
 }
 HEAP32[$19>>2] = $2;
 $34 = HEAP32[$0>>2]|0;
 $35 = ((($34)) + 4|0);
 $36 = HEAP32[$35>>2]|0;
 HEAP32[$20>>2] = $36;
 $37 = HEAP32[$0>>2]|0;
 $38 = ((($37)) + 8|0);
 $39 = HEAP32[$38>>2]|0;
 HEAP32[$21>>2] = $39;
 $40 = HEAP32[$0>>2]|0;
 $41 = ((($40)) + 20|0);
 $42 = HEAP32[$41>>2]|0;
 HEAP32[$23>>2] = $42;
 $43 = HEAP32[$0>>2]|0;
 $44 = ((($43)) + 24|0);
 $45 = HEAP8[$44>>0]|0;
 HEAP8[$24>>0] = $45;
 $46 = HEAP32[$0>>2]|0;
 $47 = ($46|0)==(0|0);
 if (!($47)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($3,$46,22218);
  HEAP32[$0>>2] = 0;
 }
 HEAP32[$0>>2] = $18;
 $$1 = 0;
 return ($$1|0);
}
function __ZN7WelsDec22ParseRefBasePicMarkingEPN10WelsCommon15TagBitStringAuxEPNS_23TagRefBasePicMarkingSynE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$056 = 0, $$9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 >>> 31;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$0>>2]|0;
 $9 = ((($0)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $4 << 1;
 HEAP32[$3>>2] = $11;
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + 1)|0;
 HEAP32[$12>>2] = $14;
 $15 = ($13|0)>(-1);
 do {
  if ($15) {
   $16 = $10;
   $17 = (($16) - ($8))|0;
   $18 = (($7) + 1)|0;
   $19 = (($18) - ($8))|0;
   $20 = ($17|0)>($19|0);
   if ($20) {
    $$9 = 11;
    STACKTOP = sp;return ($$9|0);
   } else {
    $21 = HEAP8[$10>>0]|0;
    $22 = $21&255;
    $23 = $22 << 8;
    $24 = ((($10)) + 1|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = $25&255;
    $27 = $23 | $26;
    $28 = $27 << $14;
    $29 = $28 | $11;
    HEAP32[$3>>2] = $29;
    $30 = (($13) + -15)|0;
    HEAP32[$12>>2] = $30;
    $31 = ((($10)) + 2|0);
    HEAP32[$9>>2] = $31;
    break;
   }
  }
 } while(0);
 HEAP32[$2>>2] = $5;
 $32 = ($5|0)==(0);
 $33 = $5&255;
 $34 = ((($1)) + 1056|0);
 HEAP8[$34>>0] = $33;
 if ($32) {
  $$9 = 0;
  STACKTOP = sp;return ($$9|0);
 } else {
  $$056 = 0;
 }
 L9: while(1) {
  $35 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($0,$2)|0);
  $36 = ($35|0)==(0);
  if (!($36)) {
   $$9 = $35;
   label = 12;
   break;
  }
  $37 = HEAP32[$2>>2]|0;
  $38 = (($1) + ($$056<<4)|0);
  HEAP32[$38>>2] = $37;
  switch ($37|0) {
  case 0:  {
   $$9 = 0;
   label = 12;
   break L9;
   break;
  }
  case 1:  {
   $39 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($0,$2)|0);
   $40 = ($39|0)==(0);
   if (!($40)) {
    $$9 = $39;
    label = 12;
    break L9;
   }
   $41 = HEAP32[$2>>2]|0;
   $42 = (($41) + 1)|0;
   $43 = (((($1) + ($$056<<4)|0)) + 8|0);
   HEAP32[$43>>2] = $42;
   $44 = (((($1) + ($$056<<4)|0)) + 4|0);
   HEAP32[$44>>2] = 0;
   break;
  }
  case 2:  {
   $45 = (__ZN7WelsDecL7BsGetUeEPN10WelsCommon15TagBitStringAuxEPj($0,$2)|0);
   $46 = ($45|0)==(0);
   if (!($46)) {
    $$9 = $45;
    label = 12;
    break L9;
   }
   $47 = HEAP32[$2>>2]|0;
   $48 = (((($1) + ($$056<<4)|0)) + 12|0);
   HEAP32[$48>>2] = $47;
   break;
  }
  default: {
  }
  }
  $49 = (($$056) + 1)|0;
  $50 = ($49|0)<(66);
  if ($50) {
   $$056 = $49;
  } else {
   $$9 = 0;
   label = 12;
   break;
  }
 }
 if ((label|0) == 12) {
  STACKTOP = sp;return ($$9|0);
 }
 return (0)|0;
}
function __ZN7WelsDec14ExpandBsBufferEPNS_21TagWelsDecoderContextEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$05960 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$1 = 3;
  return ($$1|0);
 }
 $3 = ($1*3)|0;
 $4 = ((($0)) + 6172|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 << 1;
 $7 = ($3|0)>($6|0);
 $$ = $7 ? $3 : $6;
 $8 = ((($0)) + 562528|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($9,$$,30589)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$1 = 1;
  return ($$1|0);
 }
 $12 = ((($0)) + 241888|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 16|0);
 $$05960 = 0;$31 = $13;
 while(1) {
  $30 = HEAP32[$31>>2]|0;
  $32 = (($30) + ($$05960<<2)|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($33)) + 3868|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = HEAP32[$14>>2]|0;
  $37 = (($35) - ($36))|0;
  $38 = (($10) + ($37)|0);
  HEAP32[$34>>2] = $38;
  $39 = ((($33)) + 3872|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = HEAP32[$14>>2]|0;
  $42 = (($40) - ($41))|0;
  $43 = (($10) + ($42)|0);
  HEAP32[$39>>2] = $43;
  $44 = ((($33)) + 3884|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$14>>2]|0;
  $47 = (($45) - ($46))|0;
  $48 = (($10) + ($47)|0);
  HEAP32[$44>>2] = $48;
  $49 = (($$05960) + 1)|0;
  $50 = HEAP32[$12>>2]|0;
  $51 = ((($50)) + 8|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ($49>>>0)>($52>>>0);
  if ($53) {
   break;
  } else {
   $$05960 = $49;$31 = $50;
  }
 }
 $15 = ((($0)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = HEAP32[$4>>2]|0;
 _memcpy(($10|0),($16|0),($17|0))|0;
 HEAP32[$4>>2] = $$;
 $18 = ((($0)) + 24|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = HEAP32[$15>>2]|0;
 $21 = (($19) - ($20))|0;
 $22 = (($10) + ($21)|0);
 HEAP32[$18>>2] = $22;
 $23 = ((($0)) + 28|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($24) - ($20))|0;
 $26 = (($10) + ($25)|0);
 HEAP32[$23>>2] = $26;
 $27 = (($10) + ($$)|0);
 $28 = ((($0)) + 20|0);
 HEAP32[$28>>2] = $27;
 $29 = $20;
 __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($9,$29,30589);
 HEAP32[$15>>2] = $10;
 $$1 = 0;
 return ($$1|0);
}
function __ZN7WelsDec32ForceResetParaSetStatusAndAUListEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 241954|0);
 HEAP8[$1>>0] = 0;
 $2 = ((($0)) + 241955|0);
 HEAP8[$2>>0] = 0;
 $3 = ((($0)) + 241956|0);
 HEAP8[$3>>0] = 0;
 $4 = ((($0)) + 241888|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = HEAP32[$4>>2]|0;
 $8 = ((($7)) + 8|0);
 HEAP32[$8>>2] = 0;
 $9 = HEAP32[$4>>2]|0;
 $10 = ((($9)) + 16|0);
 HEAP32[$10>>2] = 0;
 $11 = HEAP32[$4>>2]|0;
 $12 = ((($11)) + 20|0);
 HEAP32[$12>>2] = 0;
 $13 = HEAP32[$4>>2]|0;
 $14 = ((($13)) + 24|0);
 HEAP8[$14>>0] = 0;
 return;
}
function _ResetDecStatNums($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 56|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 8|0);
 dest=$6; stop=dest+76|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP32[$0>>2] = $1;
 HEAP32[$2>>2] = $3;
 HEAP32[$4>>2] = $5;
 return;
}
function __ZN7WelsDec12CWelsDecoder11InitDecoderEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 12|0);
 HEAP32[$vararg_buffer>>2] = 21414;
 __Z7WelsLogP13TagLogContextiPKcz($4,4,30773,$vararg_buffer);
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  __ZN7WelsDec12CWelsDecoder13UninitDecoderEv($0);
 }
 $8 = (__ZN10WelsCommon11WelsMalloczEjPKc(562536,21497)|0);
 HEAP32[$5>>2] = $8;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$1 = 3;
  STACKTOP = sp;return ($$1|0);
 }
 $10 = (__Znwj(12)|0);
 __ZN10WelsCommon12CMemoryAlignC2Ej($10,16);
 $11 = HEAP32[$5>>2]|0;
 $12 = ((($11)) + 562528|0);
 HEAP32[$12>>2] = $10;
 $13 = HEAP32[$5>>2]|0;
 $14 = ((($13)) + 562528|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZN7WelsDec12CWelsDecoder13UninitDecoderEv($0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 } else {
  $17 = HEAP32[$2>>2]|0;
  $18 = ((($17)) + 12|0);
  $19 = (_WelsInitDecoder($13,$1,$18)|0);
  $$1 = $19;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _DecoderConfigParam($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $$35 = 0, $$37 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 $3 = ($1|0)==(0|0);
 $or$cond = $2 | $3;
 if ($or$cond) {
  $$2 = 1;
  STACKTOP = sp;return ($$2|0);
 }
 $4 = ((($0)) + 562528|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($5,32,30743)|0);
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = $6;
 $8 = ($6|0)==(0|0);
 if ($8) {
  $$2 = 1;
  STACKTOP = sp;return ($$2|0);
 }
 ;HEAP32[$6>>2]=HEAP32[$1>>2]|0;HEAP32[$6+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[$1+20>>2]|0;HEAP32[$6+24>>2]=HEAP32[$1+24>>2]|0;HEAP32[$6+28>>2]=HEAP32[$1+28>>2]|0;
 $9 = HEAP32[$7>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 56|0);
 HEAP32[$12>>2] = $11;
 $13 = ((($0)) + 242344|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)==(0);
 L7: do {
  if ($15) {
   $16 = HEAP32[$10>>2]|0;
   HEAP32[$12>>2] = $16;
   $17 = ($9|0)==(0|0);
   if (!($17)) {
    HEAP32[$10>>2] = $16;
   }
   switch ($16|0) {
   case 23:  {
    break L7;
    break;
   }
   case 25:  {
    HEAP32[$12>>2] = 23;
    $18 = HEAP32[$7>>2]|0;
    $19 = ((($18)) + 4|0);
    HEAP32[$19>>2] = 23;
    break L7;
    break;
   }
   default: {
   }
   }
   __Z7WelsLogP13TagLogContextiPKcz($0,2,22644,$vararg_buffer);
   HEAP32[$12>>2] = 23;
   $20 = HEAP32[$7>>2]|0;
   $21 = ((($20)) + 4|0);
   HEAP32[$21>>2] = 23;
   $$2 = 5;
   STACKTOP = sp;return ($$2|0);
  }
 } while(0);
 $22 = HEAP32[$7>>2]|0;
 $23 = ((($22)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($0)) + 242340|0);
 $26 = HEAP8[$13>>0]|0;
 $27 = ($26<<24>>24)==(0);
 $$35 = $27 ? $24 : 0;
 HEAP32[$25>>2] = $$35;
 __ZN7WelsDec12InitErrorConEPNS_21TagWelsDecoderContextE($0);
 $28 = HEAP32[$7>>2]|0;
 $29 = ((($28)) + 28|0);
 $30 = HEAP32[$29>>2]|0;
 $not$ = ($30|0)!=(0);
 $$37 = $not$&1;
 $31 = ((($0)) + 60|0);
 HEAP32[$31>>2] = $$37;
 HEAP32[$vararg_buffer1>>2] = $$37;
 __Z7WelsLogP13TagLogContextiPKcz($0,4,30758,$vararg_buffer1);
 $$2 = 0;
 STACKTOP = sp;return ($$2|0);
}
function __ZN10WelsCommon11WelsMalloczEjPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + 23)|0;
 $3 = (_malloc($2)|0);
 $4 = ($3|0)==(0|0);
 $5 = ((($3)) + 23|0);
 $6 = $5;
 $7 = $6 & 15;
 $8 = (0 - ($7))|0;
 $9 = (($5) + ($8)|0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = ((($9)) + -8|0);
 $11 = ((($9)) + -4|0);
 HEAP32[$11>>2] = $3;
 HEAP32[$10>>2] = $0;
 _memset(($9|0),0,($0|0))|0;
 $$0 = $9;
 return ($$0|0);
}
function _WelsInitDecoder($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$0 = 3;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = $1&1;
 $6 = ((($0)) + 562528|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$3>>2] = 1;
 $8 = ((($0)) + 12|0);
 _memset(($8|0),0,562524)|0;
 ;HEAP32[$0>>2]=HEAP32[$2>>2]|0;HEAP32[$0+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$2+8>>2]|0;
 HEAP32[$6>>2] = $7;
 HEAP32[$8>>2] = 0;
 $9 = ((($0)) + 56|0);
 HEAP32[$9>>2] = 23;
 $10 = ((($0)) + 64|0);
 HEAP8[$10>>0] = 0;
 $11 = ((($0)) + 52|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($0)) + 317168|0);
 HEAP8[$12>>0] = 0;
 $13 = ((($0)) + 511308|0);
 HEAP8[$13>>0] = 0;
 $14 = (_WelsCPUFeatureDetect($3)|0);
 HEAP32[$11>>2] = $14;
 $15 = ((($0)) + 68|0);
 $16 = ((($0)) + 84|0);
 ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;
 HEAP8[$16>>0] = 1;
 $17 = ((($0)) + 104|0);
 HEAP32[$17>>2] = -1;
 $18 = ((($0)) + 108|0);
 HEAP32[$18>>2] = -1;
 $19 = ((($0)) + 116|0);
 HEAP32[$19>>2] = 0;
 $20 = ((($0)) + 5464|0);
 HEAP32[$20>>2] = 0;
 __ZN7WelsDec15WelsResetRefPicEPNS_21TagWelsDecoderContextE($0);
 $21 = ((($0)) + 5244|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($0)) + 209440|0);
 HEAP32[$22>>2] = 0;
 $23 = ((($0)) + 209444|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($0)) + 241949|0);
 HEAP8[$24>>0] = 1;
 $25 = ((($0)) + 242340|0);
 HEAP32[$25>>2] = 7;
 $26 = ((($0)) + 316852|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($0)) + 512304|0);
 HEAP32[$27>>2] = -1;
 $28 = ((($0)) + 562525|0);
 HEAP8[$28>>0] = 0;
 $29 = ((($0)) + 562526|0);
 HEAP8[$29>>0] = 0;
 $30 = ((($0)) + 241960|0);
 HEAP32[$30>>2] = 0;
 $31 = ((($0)) + 241964|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($0)) + 241968|0);
 HEAP32[$32>>2] = 0;
 $33 = ((($0)) + 242296|0);
 HEAP32[$33>>2] = 0;
 $34 = ((($0)) + 242292|0);
 HEAP32[$34>>2] = -1;
 $35 = ((($0)) + 242304|0);
 HEAP32[$35>>2] = 0;
 $36 = ((($0)) + 242300|0);
 HEAP32[$36>>2] = -1;
 $37 = ((($0)) + 242312|0);
 HEAP32[$37>>2] = 0;
 $38 = ((($0)) + 242308|0);
 HEAP32[$38>>2] = -1;
 $39 = ((($0)) + 242344|0);
 HEAP8[$39>>0] = $5;
 $40 = (__ZN7WelsDec15WelsOpenDecoderEPNS_21TagWelsDecoderContextE($0)|0);
 $$0 = $40;
 STACKTOP = sp;return ($$0|0);
}
function __ZN7WelsDec15WelsOpenDecoderEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 316972|0);
 $2 = ((($0)) + 52|0);
 $3 = HEAP32[$2>>2]|0;
 __ZN10WelsCommon10InitMcFuncEP9TagMcFuncj($1,$3);
 $4 = ((($0)) + 317112|0);
 $5 = HEAP32[$2>>2]|0;
 _InitExpandPictureFunc($4,$5);
 $6 = ((($0)) + 316856|0);
 HEAP32[$6>>2] = 5;
 $7 = ((($0)) + 316860|0);
 HEAP32[$7>>2] = 6;
 $8 = ((($0)) + 316864|0);
 HEAP32[$8>>2] = 7;
 $9 = ((($0)) + 316868|0);
 HEAP32[$9>>2] = 8;
 $10 = ((($0)) + 316872|0);
 HEAP32[$10>>2] = 9;
 $11 = ((($0)) + 316876|0);
 HEAP32[$11>>2] = 10;
 $12 = ((($0)) + 316880|0);
 HEAP32[$12>>2] = 11;
 $13 = ((($0)) + 316884|0);
 HEAP32[$13>>2] = 12;
 $14 = ((($0)) + 316888|0);
 HEAP32[$14>>2] = 13;
 $15 = ((($0)) + 316892|0);
 HEAP32[$15>>2] = 14;
 $16 = ((($0)) + 316920|0);
 HEAP32[$16>>2] = 15;
 $17 = ((($0)) + 316924|0);
 HEAP32[$17>>2] = 16;
 $18 = ((($0)) + 316928|0);
 HEAP32[$18>>2] = 17;
 $19 = ((($0)) + 316896|0);
 HEAP32[$19>>2] = 18;
 $20 = ((($0)) + 316932|0);
 HEAP32[$20>>2] = 19;
 $21 = ((($0)) + 316900|0);
 HEAP32[$21>>2] = 20;
 $22 = ((($0)) + 316912|0);
 HEAP32[$22>>2] = 21;
 $23 = ((($0)) + 316936|0);
 HEAP32[$23>>2] = 22;
 $24 = ((($0)) + 316904|0);
 HEAP32[$24>>2] = 23;
 $25 = ((($0)) + 316916|0);
 HEAP32[$25>>2] = 24;
 $26 = ((($0)) + 316908|0);
 HEAP32[$26>>2] = 25;
 $27 = ((($0)) + 316996|0);
 HEAP32[$27>>2] = 9;
 $28 = ((($0)) + 317000|0);
 HEAP32[$28>>2] = 10;
 $29 = ((($0)) + 317004|0);
 HEAP32[$29>>2] = 11;
 $30 = ((($0)) + 317032|0);
 HEAP32[$30>>2] = 12;
 $31 = ((($0)) + 317036|0);
 HEAP32[$31>>2] = 13;
 $32 = ((($0)) + 317040|0);
 HEAP32[$32>>2] = 14;
 $33 = ((($0)) + 317008|0);
 HEAP32[$33>>2] = 15;
 $34 = ((($0)) + 317044|0);
 HEAP32[$34>>2] = 16;
 $35 = ((($0)) + 317012|0);
 HEAP32[$35>>2] = 17;
 $36 = ((($0)) + 317024|0);
 HEAP32[$36>>2] = 18;
 $37 = ((($0)) + 317048|0);
 HEAP32[$37>>2] = 19;
 $38 = ((($0)) + 317016|0);
 HEAP32[$38>>2] = 20;
 $39 = ((($0)) + 317028|0);
 HEAP32[$39>>2] = 21;
 $40 = ((($0)) + 317020|0);
 HEAP32[$40>>2] = 22;
 $41 = ((($0)) + 316940|0);
 HEAP32[$41>>2] = 26;
 $42 = ((($0)) + 316944|0);
 HEAP32[$42>>2] = 27;
 $43 = ((($0)) + 316948|0);
 HEAP32[$43>>2] = 28;
 $44 = ((($0)) + 316952|0);
 HEAP32[$44>>2] = 29;
 $45 = ((($0)) + 316956|0);
 HEAP32[$45>>2] = 30;
 $46 = ((($0)) + 316960|0);
 HEAP32[$46>>2] = 31;
 $47 = ((($0)) + 316964|0);
 HEAP32[$47>>2] = 32;
 $48 = ((($0)) + 316968|0);
 HEAP32[$48>>2] = 3;
 $49 = ((($0)) + 317052|0);
 HEAP32[$49>>2] = 4;
 $50 = ((($0)) + 317064|0);
 $51 = HEAP32[$2>>2]|0;
 __ZN7WelsDec14DeblockingInitEPNS_17TagDeblockingFuncEi($50,$51);
 $52 = ((($0)) + 317124|0);
 $53 = HEAP32[$2>>2]|0;
 __ZN7WelsDec17WelsBlockFuncInitEPNS_12TagBlockFuncEi($52,$53);
 $54 = ((($0)) + 5992|0);
 HEAP32[$54>>2] = 16038;
 $55 = ((($0)) + 5864|0);
 HEAP32[$55>>2] = 16550;
 $56 = ((($0)) + 5868|0);
 HEAP32[$56>>2] = 17590;
 $57 = ((($0)) + 5872|0);
 HEAP32[$57>>2] = 18254;
 $58 = ((($0)) + 5876|0);
 HEAP32[$58>>2] = 18814;
 $59 = ((($0)) + 5896|0);
 HEAP32[$59>>2] = 17062;
 $60 = ((($0)) + 5900|0);
 HEAP32[$60>>2] = 17574;
 $61 = ((($0)) + 5904|0);
 HEAP32[$61>>2] = 17582;
 $62 = ((($0)) + 5908|0);
 HEAP32[$62>>2] = 17586;
 $63 = ((($0)) + 5928|0);
 HEAP32[$63>>2] = 18102;
 $64 = ((($0)) + 5932|0);
 HEAP32[$64>>2] = 18230;
 $65 = ((($0)) + 5936|0);
 HEAP32[$65>>2] = 18246;
 $66 = ((($0)) + 5940|0);
 HEAP32[$66>>2] = 18250;
 $67 = ((($0)) + 5960|0);
 HEAP32[$67>>2] = 18766;
 $68 = ((($0)) + 5964|0);
 HEAP32[$68>>2] = 18774;
 $69 = ((($0)) + 5968|0);
 HEAP32[$69>>2] = 18782;
 $70 = ((($0)) + 5972|0);
 HEAP32[$70>>2] = 18790;
 $71 = ((($0)) + 5976|0);
 HEAP32[$71>>2] = 18798;
 $72 = ((($0)) + 5980|0);
 HEAP32[$72>>2] = 18802;
 $73 = ((($0)) + 5984|0);
 HEAP32[$73>>2] = 18806;
 $74 = ((($0)) + 5988|0);
 HEAP32[$74>>2] = 18810;
 $75 = ((($0)) + 5996|0);
 HEAP32[$75>>2] = 21224;
 $76 = ((($0)) + 6000|0);
 HEAP32[$76>>2] = 21228;
 $77 = ((($0)) + 6004|0);
 HEAP32[$77>>2] = 21236;
 $78 = ((($0)) + 6008|0);
 HEAP32[$78>>2] = 21244;
 $79 = ((($0)) + 6012|0);
 HEAP32[$79>>2] = 21260;
 $80 = ((($0)) + 6016|0);
 HEAP32[$80>>2] = 21276;
 $81 = ((($0)) + 6020|0);
 HEAP32[$81>>2] = 21292;
 $82 = ((($0)) + 6024|0);
 HEAP32[$82>>2] = 19102;
 $83 = ((($0)) + 6028|0);
 HEAP32[$83>>2] = 20126;
 $84 = ((($0)) + 6032|0);
 HEAP32[$84>>2] = 20254;
 $85 = ((($0)) + 6036|0);
 HEAP32[$85>>2] = 20382;
 $86 = ((($0)) + 6040|0);
 HEAP32[$86>>2] = 20446;
 $87 = ((($0)) + 6044|0);
 HEAP32[$87>>2] = 20510;
 $88 = ((($0)) + 6048|0);
 HEAP32[$88>>2] = 20638;
 $89 = ((($0)) + 6052|0);
 HEAP32[$89>>2] = 20766;
 $90 = ((($0)) + 6056|0);
 HEAP32[$90>>2] = 20894;
 $91 = ((($0)) + 6060|0);
 HEAP32[$91>>2] = 21022;
 $92 = ((($0)) + 6064|0);
 HEAP32[$92>>2] = 21086;
 $93 = ((($0)) + 6068|0);
 HEAP32[$93>>2] = 21118;
 $94 = ((($0)) + 6072|0);
 HEAP32[$94>>2] = 21150;
 $95 = ((($0)) + 6076|0);
 HEAP32[$95>>2] = 21166;
 $96 = ((($0)) + 6080|0);
 HEAP32[$96>>2] = 21174;
 $97 = ((($0)) + 6084|0);
 HEAP32[$97>>2] = 21193;
 $98 = ((($0)) + 6088|0);
 HEAP32[$98>>2] = 21209;
 $99 = ((($0)) + 6092|0);
 HEAP32[$99>>2] = 21217;
 $100 = (__ZN7WelsDec14WelsInitMemoryEPNS_21TagWelsDecoderContextE($0)|0);
 $101 = ($100|0)==(0);
 if (!($101)) {
  return ($100|0);
 }
 $102 = ((($0)) + 242324|0);
 HEAP8[$102>>0] = 1;
 $103 = ((($0)) + 242334|0);
 HEAP8[$103>>0] = 1;
 $104 = ((($0)) + 317169|0);
 HEAP8[$104>>0] = 1;
 $105 = ((($0)) + 317172|0);
 HEAP32[$105>>2] = 0;
 $106 = ((($0)) + 242346|0);
 HEAP8[$106>>0] = 1;
 return ($100|0);
}
function __ZN7WelsDec21WelsI16x16LumaPredV_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*15)|0;
 $3 = (0 - ($1))|0;
 $4 = (($0) + ($3)|0);
 $5 = $4;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($4)) + 8|0);
 $12 = $11;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = (($12) + 4)|0;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($0) + ($2)|0);
 $19 = $18;
 $20 = $19;
 HEAP32[$20>>2] = $7;
 $21 = (($19) + 4)|0;
 $22 = $21;
 HEAP32[$22>>2] = $10;
 $23 = ((($18)) + 8|0);
 $24 = $23;
 $25 = $24;
 HEAP32[$25>>2] = $14;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $17;
 $28 = ($1*14)|0;
 $29 = (($0) + ($28)|0);
 $30 = $29;
 $31 = $30;
 HEAP32[$31>>2] = $7;
 $32 = (($30) + 4)|0;
 $33 = $32;
 HEAP32[$33>>2] = $10;
 $34 = ((($29)) + 8|0);
 $35 = $34;
 $36 = $35;
 HEAP32[$36>>2] = $14;
 $37 = (($35) + 4)|0;
 $38 = $37;
 HEAP32[$38>>2] = $17;
 $39 = ($1*13)|0;
 $40 = (($0) + ($39)|0);
 $41 = $40;
 $42 = $41;
 HEAP32[$42>>2] = $7;
 $43 = (($41) + 4)|0;
 $44 = $43;
 HEAP32[$44>>2] = $10;
 $45 = ((($40)) + 8|0);
 $46 = $45;
 $47 = $46;
 HEAP32[$47>>2] = $14;
 $48 = (($46) + 4)|0;
 $49 = $48;
 HEAP32[$49>>2] = $17;
 $50 = ($1*12)|0;
 $51 = (($0) + ($50)|0);
 $52 = $51;
 $53 = $52;
 HEAP32[$53>>2] = $7;
 $54 = (($52) + 4)|0;
 $55 = $54;
 HEAP32[$55>>2] = $10;
 $56 = ((($51)) + 8|0);
 $57 = $56;
 $58 = $57;
 HEAP32[$58>>2] = $14;
 $59 = (($57) + 4)|0;
 $60 = $59;
 HEAP32[$60>>2] = $17;
 $61 = ($1*11)|0;
 $62 = (($0) + ($61)|0);
 $63 = $62;
 $64 = $63;
 HEAP32[$64>>2] = $7;
 $65 = (($63) + 4)|0;
 $66 = $65;
 HEAP32[$66>>2] = $10;
 $67 = ((($62)) + 8|0);
 $68 = $67;
 $69 = $68;
 HEAP32[$69>>2] = $14;
 $70 = (($68) + 4)|0;
 $71 = $70;
 HEAP32[$71>>2] = $17;
 $72 = ($1*10)|0;
 $73 = (($0) + ($72)|0);
 $74 = $73;
 $75 = $74;
 HEAP32[$75>>2] = $7;
 $76 = (($74) + 4)|0;
 $77 = $76;
 HEAP32[$77>>2] = $10;
 $78 = ((($73)) + 8|0);
 $79 = $78;
 $80 = $79;
 HEAP32[$80>>2] = $14;
 $81 = (($79) + 4)|0;
 $82 = $81;
 HEAP32[$82>>2] = $17;
 $83 = ($1*9)|0;
 $84 = (($0) + ($83)|0);
 $85 = $84;
 $86 = $85;
 HEAP32[$86>>2] = $7;
 $87 = (($85) + 4)|0;
 $88 = $87;
 HEAP32[$88>>2] = $10;
 $89 = ((($84)) + 8|0);
 $90 = $89;
 $91 = $90;
 HEAP32[$91>>2] = $14;
 $92 = (($90) + 4)|0;
 $93 = $92;
 HEAP32[$93>>2] = $17;
 $94 = $1 << 3;
 $95 = (($0) + ($94)|0);
 $96 = $95;
 $97 = $96;
 HEAP32[$97>>2] = $7;
 $98 = (($96) + 4)|0;
 $99 = $98;
 HEAP32[$99>>2] = $10;
 $100 = ((($95)) + 8|0);
 $101 = $100;
 $102 = $101;
 HEAP32[$102>>2] = $14;
 $103 = (($101) + 4)|0;
 $104 = $103;
 HEAP32[$104>>2] = $17;
 $105 = ($1*7)|0;
 $106 = (($0) + ($105)|0);
 $107 = $106;
 $108 = $107;
 HEAP32[$108>>2] = $7;
 $109 = (($107) + 4)|0;
 $110 = $109;
 HEAP32[$110>>2] = $10;
 $111 = ((($106)) + 8|0);
 $112 = $111;
 $113 = $112;
 HEAP32[$113>>2] = $14;
 $114 = (($112) + 4)|0;
 $115 = $114;
 HEAP32[$115>>2] = $17;
 $116 = ($1*6)|0;
 $117 = (($0) + ($116)|0);
 $118 = $117;
 $119 = $118;
 HEAP32[$119>>2] = $7;
 $120 = (($118) + 4)|0;
 $121 = $120;
 HEAP32[$121>>2] = $10;
 $122 = ((($117)) + 8|0);
 $123 = $122;
 $124 = $123;
 HEAP32[$124>>2] = $14;
 $125 = (($123) + 4)|0;
 $126 = $125;
 HEAP32[$126>>2] = $17;
 $127 = ($1*5)|0;
 $128 = (($0) + ($127)|0);
 $129 = $128;
 $130 = $129;
 HEAP32[$130>>2] = $7;
 $131 = (($129) + 4)|0;
 $132 = $131;
 HEAP32[$132>>2] = $10;
 $133 = ((($128)) + 8|0);
 $134 = $133;
 $135 = $134;
 HEAP32[$135>>2] = $14;
 $136 = (($134) + 4)|0;
 $137 = $136;
 HEAP32[$137>>2] = $17;
 $138 = $1 << 2;
 $139 = (($0) + ($138)|0);
 $140 = $139;
 $141 = $140;
 HEAP32[$141>>2] = $7;
 $142 = (($140) + 4)|0;
 $143 = $142;
 HEAP32[$143>>2] = $10;
 $144 = ((($139)) + 8|0);
 $145 = $144;
 $146 = $145;
 HEAP32[$146>>2] = $14;
 $147 = (($145) + 4)|0;
 $148 = $147;
 HEAP32[$148>>2] = $17;
 $149 = ($1*3)|0;
 $150 = (($0) + ($149)|0);
 $151 = $150;
 $152 = $151;
 HEAP32[$152>>2] = $7;
 $153 = (($151) + 4)|0;
 $154 = $153;
 HEAP32[$154>>2] = $10;
 $155 = ((($150)) + 8|0);
 $156 = $155;
 $157 = $156;
 HEAP32[$157>>2] = $14;
 $158 = (($156) + 4)|0;
 $159 = $158;
 HEAP32[$159>>2] = $17;
 $160 = $1 << 1;
 $161 = (($0) + ($160)|0);
 $162 = $161;
 $163 = $162;
 HEAP32[$163>>2] = $7;
 $164 = (($162) + 4)|0;
 $165 = $164;
 HEAP32[$165>>2] = $10;
 $166 = ((($161)) + 8|0);
 $167 = $166;
 $168 = $167;
 HEAP32[$168>>2] = $14;
 $169 = (($167) + 4)|0;
 $170 = $169;
 HEAP32[$170>>2] = $17;
 $171 = (($0) + ($1)|0);
 $172 = $171;
 $173 = $172;
 HEAP32[$173>>2] = $7;
 $174 = (($172) + 4)|0;
 $175 = $174;
 HEAP32[$175>>2] = $10;
 $176 = ((($171)) + 8|0);
 $177 = $176;
 $178 = $177;
 HEAP32[$178>>2] = $14;
 $179 = (($177) + 4)|0;
 $180 = $179;
 HEAP32[$180>>2] = $17;
 $181 = $0;
 $182 = $181;
 HEAP32[$182>>2] = $7;
 $183 = (($181) + 4)|0;
 $184 = $183;
 HEAP32[$184>>2] = $10;
 $185 = ((($0)) + 8|0);
 $186 = $185;
 $187 = $186;
 HEAP32[$187>>2] = $14;
 $188 = (($186) + 4)|0;
 $189 = $188;
 HEAP32[$189>>2] = $17;
 return;
}
function __ZN7WelsDec21WelsI16x16LumaPredH_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*15)|0;
 $3 = (($2) + -1)|0;
 $4 = (($0) + ($3)|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (___muldi3(($6|0),0,16843009,16843009)|0);
 $8 = tempRet0;
 $9 = (($0) + ($2)|0);
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = $7;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = ((($9)) + 8|0);
 $15 = $14;
 $16 = $15;
 HEAP32[$16>>2] = $7;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $8;
 $19 = ($1*14)|0;
 $20 = (($19) + -1)|0;
 $21 = (($0) + ($20)|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $22&255;
 $24 = (___muldi3(($23|0),0,16843009,16843009)|0);
 $25 = tempRet0;
 $26 = (($0) + ($19)|0);
 $27 = $26;
 $28 = $27;
 HEAP32[$28>>2] = $24;
 $29 = (($27) + 4)|0;
 $30 = $29;
 HEAP32[$30>>2] = $25;
 $31 = ((($26)) + 8|0);
 $32 = $31;
 $33 = $32;
 HEAP32[$33>>2] = $24;
 $34 = (($32) + 4)|0;
 $35 = $34;
 HEAP32[$35>>2] = $25;
 $36 = ($1*13)|0;
 $37 = (($36) + -1)|0;
 $38 = (($0) + ($37)|0);
 $39 = HEAP8[$38>>0]|0;
 $40 = $39&255;
 $41 = (___muldi3(($40|0),0,16843009,16843009)|0);
 $42 = tempRet0;
 $43 = (($0) + ($36)|0);
 $44 = $43;
 $45 = $44;
 HEAP32[$45>>2] = $41;
 $46 = (($44) + 4)|0;
 $47 = $46;
 HEAP32[$47>>2] = $42;
 $48 = ((($43)) + 8|0);
 $49 = $48;
 $50 = $49;
 HEAP32[$50>>2] = $41;
 $51 = (($49) + 4)|0;
 $52 = $51;
 HEAP32[$52>>2] = $42;
 $53 = ($1*12)|0;
 $54 = (($53) + -1)|0;
 $55 = (($0) + ($54)|0);
 $56 = HEAP8[$55>>0]|0;
 $57 = $56&255;
 $58 = (___muldi3(($57|0),0,16843009,16843009)|0);
 $59 = tempRet0;
 $60 = (($0) + ($53)|0);
 $61 = $60;
 $62 = $61;
 HEAP32[$62>>2] = $58;
 $63 = (($61) + 4)|0;
 $64 = $63;
 HEAP32[$64>>2] = $59;
 $65 = ((($60)) + 8|0);
 $66 = $65;
 $67 = $66;
 HEAP32[$67>>2] = $58;
 $68 = (($66) + 4)|0;
 $69 = $68;
 HEAP32[$69>>2] = $59;
 $70 = ($1*11)|0;
 $71 = (($70) + -1)|0;
 $72 = (($0) + ($71)|0);
 $73 = HEAP8[$72>>0]|0;
 $74 = $73&255;
 $75 = (___muldi3(($74|0),0,16843009,16843009)|0);
 $76 = tempRet0;
 $77 = (($0) + ($70)|0);
 $78 = $77;
 $79 = $78;
 HEAP32[$79>>2] = $75;
 $80 = (($78) + 4)|0;
 $81 = $80;
 HEAP32[$81>>2] = $76;
 $82 = ((($77)) + 8|0);
 $83 = $82;
 $84 = $83;
 HEAP32[$84>>2] = $75;
 $85 = (($83) + 4)|0;
 $86 = $85;
 HEAP32[$86>>2] = $76;
 $87 = ($1*10)|0;
 $88 = (($87) + -1)|0;
 $89 = (($0) + ($88)|0);
 $90 = HEAP8[$89>>0]|0;
 $91 = $90&255;
 $92 = (___muldi3(($91|0),0,16843009,16843009)|0);
 $93 = tempRet0;
 $94 = (($0) + ($87)|0);
 $95 = $94;
 $96 = $95;
 HEAP32[$96>>2] = $92;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = $93;
 $99 = ((($94)) + 8|0);
 $100 = $99;
 $101 = $100;
 HEAP32[$101>>2] = $92;
 $102 = (($100) + 4)|0;
 $103 = $102;
 HEAP32[$103>>2] = $93;
 $104 = ($1*9)|0;
 $105 = (($104) + -1)|0;
 $106 = (($0) + ($105)|0);
 $107 = HEAP8[$106>>0]|0;
 $108 = $107&255;
 $109 = (___muldi3(($108|0),0,16843009,16843009)|0);
 $110 = tempRet0;
 $111 = (($0) + ($104)|0);
 $112 = $111;
 $113 = $112;
 HEAP32[$113>>2] = $109;
 $114 = (($112) + 4)|0;
 $115 = $114;
 HEAP32[$115>>2] = $110;
 $116 = ((($111)) + 8|0);
 $117 = $116;
 $118 = $117;
 HEAP32[$118>>2] = $109;
 $119 = (($117) + 4)|0;
 $120 = $119;
 HEAP32[$120>>2] = $110;
 $121 = $1 << 3;
 $122 = (($121) + -1)|0;
 $123 = (($0) + ($122)|0);
 $124 = HEAP8[$123>>0]|0;
 $125 = $124&255;
 $126 = (___muldi3(($125|0),0,16843009,16843009)|0);
 $127 = tempRet0;
 $128 = (($0) + ($121)|0);
 $129 = $128;
 $130 = $129;
 HEAP32[$130>>2] = $126;
 $131 = (($129) + 4)|0;
 $132 = $131;
 HEAP32[$132>>2] = $127;
 $133 = ((($128)) + 8|0);
 $134 = $133;
 $135 = $134;
 HEAP32[$135>>2] = $126;
 $136 = (($134) + 4)|0;
 $137 = $136;
 HEAP32[$137>>2] = $127;
 $138 = ($1*7)|0;
 $139 = (($138) + -1)|0;
 $140 = (($0) + ($139)|0);
 $141 = HEAP8[$140>>0]|0;
 $142 = $141&255;
 $143 = (___muldi3(($142|0),0,16843009,16843009)|0);
 $144 = tempRet0;
 $145 = (($0) + ($138)|0);
 $146 = $145;
 $147 = $146;
 HEAP32[$147>>2] = $143;
 $148 = (($146) + 4)|0;
 $149 = $148;
 HEAP32[$149>>2] = $144;
 $150 = ((($145)) + 8|0);
 $151 = $150;
 $152 = $151;
 HEAP32[$152>>2] = $143;
 $153 = (($151) + 4)|0;
 $154 = $153;
 HEAP32[$154>>2] = $144;
 $155 = ($1*6)|0;
 $156 = (($155) + -1)|0;
 $157 = (($0) + ($156)|0);
 $158 = HEAP8[$157>>0]|0;
 $159 = $158&255;
 $160 = (___muldi3(($159|0),0,16843009,16843009)|0);
 $161 = tempRet0;
 $162 = (($0) + ($155)|0);
 $163 = $162;
 $164 = $163;
 HEAP32[$164>>2] = $160;
 $165 = (($163) + 4)|0;
 $166 = $165;
 HEAP32[$166>>2] = $161;
 $167 = ((($162)) + 8|0);
 $168 = $167;
 $169 = $168;
 HEAP32[$169>>2] = $160;
 $170 = (($168) + 4)|0;
 $171 = $170;
 HEAP32[$171>>2] = $161;
 $172 = ($1*5)|0;
 $173 = (($172) + -1)|0;
 $174 = (($0) + ($173)|0);
 $175 = HEAP8[$174>>0]|0;
 $176 = $175&255;
 $177 = (___muldi3(($176|0),0,16843009,16843009)|0);
 $178 = tempRet0;
 $179 = (($0) + ($172)|0);
 $180 = $179;
 $181 = $180;
 HEAP32[$181>>2] = $177;
 $182 = (($180) + 4)|0;
 $183 = $182;
 HEAP32[$183>>2] = $178;
 $184 = ((($179)) + 8|0);
 $185 = $184;
 $186 = $185;
 HEAP32[$186>>2] = $177;
 $187 = (($185) + 4)|0;
 $188 = $187;
 HEAP32[$188>>2] = $178;
 $189 = $1 << 2;
 $190 = (($189) + -1)|0;
 $191 = (($0) + ($190)|0);
 $192 = HEAP8[$191>>0]|0;
 $193 = $192&255;
 $194 = (___muldi3(($193|0),0,16843009,16843009)|0);
 $195 = tempRet0;
 $196 = (($0) + ($189)|0);
 $197 = $196;
 $198 = $197;
 HEAP32[$198>>2] = $194;
 $199 = (($197) + 4)|0;
 $200 = $199;
 HEAP32[$200>>2] = $195;
 $201 = ((($196)) + 8|0);
 $202 = $201;
 $203 = $202;
 HEAP32[$203>>2] = $194;
 $204 = (($202) + 4)|0;
 $205 = $204;
 HEAP32[$205>>2] = $195;
 $206 = ($1*3)|0;
 $207 = (($206) + -1)|0;
 $208 = (($0) + ($207)|0);
 $209 = HEAP8[$208>>0]|0;
 $210 = $209&255;
 $211 = (___muldi3(($210|0),0,16843009,16843009)|0);
 $212 = tempRet0;
 $213 = (($0) + ($206)|0);
 $214 = $213;
 $215 = $214;
 HEAP32[$215>>2] = $211;
 $216 = (($214) + 4)|0;
 $217 = $216;
 HEAP32[$217>>2] = $212;
 $218 = ((($213)) + 8|0);
 $219 = $218;
 $220 = $219;
 HEAP32[$220>>2] = $211;
 $221 = (($219) + 4)|0;
 $222 = $221;
 HEAP32[$222>>2] = $212;
 $223 = $1 << 1;
 $224 = (($223) + -1)|0;
 $225 = (($0) + ($224)|0);
 $226 = HEAP8[$225>>0]|0;
 $227 = $226&255;
 $228 = (___muldi3(($227|0),0,16843009,16843009)|0);
 $229 = tempRet0;
 $230 = (($0) + ($223)|0);
 $231 = $230;
 $232 = $231;
 HEAP32[$232>>2] = $228;
 $233 = (($231) + 4)|0;
 $234 = $233;
 HEAP32[$234>>2] = $229;
 $235 = ((($230)) + 8|0);
 $236 = $235;
 $237 = $236;
 HEAP32[$237>>2] = $228;
 $238 = (($236) + 4)|0;
 $239 = $238;
 HEAP32[$239>>2] = $229;
 $240 = (($1) + -1)|0;
 $241 = (($0) + ($240)|0);
 $242 = HEAP8[$241>>0]|0;
 $243 = $242&255;
 $244 = (___muldi3(($243|0),0,16843009,16843009)|0);
 $245 = tempRet0;
 $246 = (($0) + ($1)|0);
 $247 = $246;
 $248 = $247;
 HEAP32[$248>>2] = $244;
 $249 = (($247) + 4)|0;
 $250 = $249;
 HEAP32[$250>>2] = $245;
 $251 = ((($246)) + 8|0);
 $252 = $251;
 $253 = $252;
 HEAP32[$253>>2] = $244;
 $254 = (($252) + 4)|0;
 $255 = $254;
 HEAP32[$255>>2] = $245;
 $256 = ((($0)) + -1|0);
 $257 = HEAP8[$256>>0]|0;
 $258 = $257&255;
 $259 = (___muldi3(($258|0),0,16843009,16843009)|0);
 $260 = tempRet0;
 $261 = $0;
 $262 = $261;
 HEAP32[$262>>2] = $259;
 $263 = (($261) + 4)|0;
 $264 = $263;
 HEAP32[$264>>2] = $260;
 $265 = ((($0)) + 8|0);
 $266 = $265;
 $267 = $266;
 HEAP32[$267>>2] = $259;
 $268 = (($266) + 4)|0;
 $269 = $268;
 HEAP32[$269>>2] = $260;
 return;
}
function __ZN7WelsDec22WelsI16x16LumaPredDc_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$022 = 0, $$023 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*15)|0;
 $$022 = 0;$$023 = $2;$indvars$iv = 15;
 while(1) {
  $3 = (($$023) + -1)|0;
  $4 = (($0) + ($3)|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = $5&255;
  $7 = (($indvars$iv) - ($1))|0;
  $8 = (($0) + ($7)|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = $9&255;
  $11 = (($6) + ($$022))|0;
  $12 = (($11) + ($10))|0;
  $13 = (($$023) - ($1))|0;
  $indvars$iv$next = (($indvars$iv) + -1)|0;
  $14 = ($indvars$iv|0)==(0);
  if ($14) {
   break;
  } else {
   $$022 = $12;$$023 = $13;$indvars$iv = $indvars$iv$next;
  }
 }
 $15 = (($12) + 16)|0;
 $16 = $15 >>> 5;
 $17 = $16&255;
 $18 = (($0) + ($2)|0);
 _memset(($18|0),($17|0),16)|0;
 $19 = ($1*14)|0;
 $20 = (($0) + ($19)|0);
 _memset(($20|0),($17|0),16)|0;
 $21 = ($1*13)|0;
 $22 = (($0) + ($21)|0);
 _memset(($22|0),($17|0),16)|0;
 $23 = ($1*12)|0;
 $24 = (($0) + ($23)|0);
 _memset(($24|0),($17|0),16)|0;
 $25 = ($1*11)|0;
 $26 = (($0) + ($25)|0);
 _memset(($26|0),($17|0),16)|0;
 $27 = ($1*10)|0;
 $28 = (($0) + ($27)|0);
 _memset(($28|0),($17|0),16)|0;
 $29 = ($1*9)|0;
 $30 = (($0) + ($29)|0);
 _memset(($30|0),($17|0),16)|0;
 $31 = $1 << 3;
 $32 = (($0) + ($31)|0);
 _memset(($32|0),($17|0),16)|0;
 $33 = ($1*7)|0;
 $34 = (($0) + ($33)|0);
 _memset(($34|0),($17|0),16)|0;
 $35 = ($1*6)|0;
 $36 = (($0) + ($35)|0);
 _memset(($36|0),($17|0),16)|0;
 $37 = ($1*5)|0;
 $38 = (($0) + ($37)|0);
 _memset(($38|0),($17|0),16)|0;
 $39 = $1 << 2;
 $40 = (($0) + ($39)|0);
 _memset(($40|0),($17|0),16)|0;
 $41 = ($1*3)|0;
 $42 = (($0) + ($41)|0);
 _memset(($42|0),($17|0),16)|0;
 $43 = $1 << 1;
 $44 = (($0) + ($43)|0);
 _memset(($44|0),($17|0),16)|0;
 $45 = (($0) + ($1)|0);
 _memset(($45|0),($17|0),16)|0;
 _memset(($0|0),($17|0),16)|0;
 return;
}
function __ZN7WelsDec25WelsI16x16LumaPredPlane_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$05761 = 0, $$063 = 0, $$162 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond68 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (0 - ($1))|0;
 $3 = (($0) + ($2)|0);
 $4 = ((($0)) + -1|0);
 $5 = ((($3)) + 8|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = ((($3)) + 6|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = (($7) - ($10))|0;
 $12 = $1 << 3;
 $13 = (($4) + ($12)|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = ($1*6)|0;
 $17 = (($4) + ($16)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = (($15) - ($19))|0;
 $21 = ((($3)) + 9|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $22&255;
 $24 = ((($3)) + 5|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = (($23) - ($26))|0;
 $28 = $27 << 1;
 $29 = (($28) + ($11))|0;
 $30 = ($1*9)|0;
 $31 = (($4) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = ($1*5)|0;
 $35 = (($4) + ($34)|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = $36&255;
 $38 = (($33) - ($37))|0;
 $39 = $38 << 1;
 $40 = (($39) + ($20))|0;
 $41 = ((($3)) + 10|0);
 $42 = HEAP8[$41>>0]|0;
 $43 = $42&255;
 $44 = ((($3)) + 4|0);
 $45 = HEAP8[$44>>0]|0;
 $46 = $45&255;
 $47 = (($43) - ($46))|0;
 $48 = ($47*3)|0;
 $49 = (($48) + ($29))|0;
 $50 = ($1*10)|0;
 $51 = (($4) + ($50)|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = $52&255;
 $54 = $1 << 2;
 $55 = (($4) + ($54)|0);
 $56 = HEAP8[$55>>0]|0;
 $57 = $56&255;
 $58 = (($53) - ($57))|0;
 $59 = ($58*3)|0;
 $60 = (($59) + ($40))|0;
 $61 = ((($3)) + 11|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = $62&255;
 $64 = ((($3)) + 3|0);
 $65 = HEAP8[$64>>0]|0;
 $66 = $65&255;
 $67 = (($63) - ($66))|0;
 $68 = $67 << 2;
 $69 = (($68) + ($49))|0;
 $70 = ($1*11)|0;
 $71 = (($4) + ($70)|0);
 $72 = HEAP8[$71>>0]|0;
 $73 = $72&255;
 $74 = ($1*3)|0;
 $75 = (($4) + ($74)|0);
 $76 = HEAP8[$75>>0]|0;
 $77 = $76&255;
 $78 = (($73) - ($77))|0;
 $79 = $78 << 2;
 $80 = (($79) + ($60))|0;
 $81 = ((($3)) + 12|0);
 $82 = HEAP8[$81>>0]|0;
 $83 = $82&255;
 $84 = ((($3)) + 2|0);
 $85 = HEAP8[$84>>0]|0;
 $86 = $85&255;
 $87 = (($83) - ($86))|0;
 $88 = ($87*5)|0;
 $89 = (($88) + ($69))|0;
 $90 = ($1*12)|0;
 $91 = (($4) + ($90)|0);
 $92 = HEAP8[$91>>0]|0;
 $93 = $92&255;
 $94 = $1 << 1;
 $95 = (($4) + ($94)|0);
 $96 = HEAP8[$95>>0]|0;
 $97 = $96&255;
 $98 = (($93) - ($97))|0;
 $99 = ($98*5)|0;
 $100 = (($99) + ($80))|0;
 $101 = ((($3)) + 13|0);
 $102 = HEAP8[$101>>0]|0;
 $103 = $102&255;
 $104 = ((($3)) + 1|0);
 $105 = HEAP8[$104>>0]|0;
 $106 = $105&255;
 $107 = (($103) - ($106))|0;
 $108 = ($107*6)|0;
 $109 = (($108) + ($89))|0;
 $110 = ($1*13)|0;
 $111 = (($4) + ($110)|0);
 $112 = HEAP8[$111>>0]|0;
 $113 = $112&255;
 $114 = (($4) + ($1)|0);
 $115 = HEAP8[$114>>0]|0;
 $116 = $115&255;
 $117 = (($113) - ($116))|0;
 $118 = ($117*6)|0;
 $119 = (($118) + ($100))|0;
 $120 = ((($3)) + 14|0);
 $121 = HEAP8[$120>>0]|0;
 $122 = $121&255;
 $123 = HEAP8[$3>>0]|0;
 $124 = $123&255;
 $125 = (($122) - ($124))|0;
 $126 = ($125*7)|0;
 $127 = (($126) + ($109))|0;
 $128 = ($1*14)|0;
 $129 = (($4) + ($128)|0);
 $130 = HEAP8[$129>>0]|0;
 $131 = $130&255;
 $132 = HEAP8[$4>>0]|0;
 $133 = $132&255;
 $134 = (($131) - ($133))|0;
 $135 = ($134*7)|0;
 $136 = (($135) + ($119))|0;
 $137 = ((($3)) + 15|0);
 $138 = HEAP8[$137>>0]|0;
 $139 = $138&255;
 $140 = ((($3)) + -1|0);
 $141 = HEAP8[$140>>0]|0;
 $142 = $141&255;
 $143 = (($139) - ($142))|0;
 $144 = $143 << 3;
 $145 = (($144) + ($127))|0;
 $146 = ($1*15)|0;
 $147 = (($4) + ($146)|0);
 $148 = HEAP8[$147>>0]|0;
 $149 = $148&255;
 $150 = (0 - ($1))|0;
 $151 = (($4) + ($150)|0);
 $152 = HEAP8[$151>>0]|0;
 $153 = $152&255;
 $154 = (($149) - ($153))|0;
 $155 = $154 << 3;
 $156 = (($155) + ($136))|0;
 $157 = (($139) + ($149))|0;
 $158 = $157 << 4;
 $159 = ($145*5)|0;
 $160 = (($159) + 32)|0;
 $161 = $160 >> 6;
 $162 = ($156*5)|0;
 $163 = (($162) + 32)|0;
 $164 = $163 >> 6;
 $165 = (($158) + 16)|0;
 $$063 = $0;$$162 = 0;
 while(1) {
  $166 = (($$162) + -7)|0;
  $167 = Math_imul($166, $164)|0;
  $168 = (($165) + ($167))|0;
  $$05761 = 0;
  while(1) {
   $169 = (($$05761) + -7)|0;
   $170 = Math_imul($169, $161)|0;
   $171 = (($168) + ($170))|0;
   $172 = $171 >> 5;
   $173 = ($172>>>0)>(255);
   $174 = (0 - ($172))|0;
   $175 = $174 >> 31;
   $176 = $173 ? $175 : $172;
   $177 = $176&255;
   $178 = (($$063) + ($$05761)|0);
   HEAP8[$178>>0] = $177;
   $179 = (($$05761) + 1)|0;
   $exitcond = ($179|0)==(16);
   if ($exitcond) {
    break;
   } else {
    $$05761 = $179;
   }
  }
  $180 = (($$063) + ($1)|0);
  $181 = (($$162) + 1)|0;
  $exitcond68 = ($181|0)==(16);
  if ($exitcond68) {
   break;
  } else {
   $$063 = $180;$$162 = $181;
  }
 }
 return;
}
function __ZN7WelsDec26WelsI16x16LumaPredDcLeft_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$mask = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*15)|0;
 $3 = (($2) + -1)|0;
 $4 = (($0) + ($3)|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = ($1*14)|0;
 $8 = (($7) + -1)|0;
 $9 = (($0) + ($8)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&255;
 $12 = (($11) + ($6))|0;
 $13 = ($1*13)|0;
 $14 = (($13) + -1)|0;
 $15 = (($0) + ($14)|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = (($17) + ($12))|0;
 $19 = ($1*12)|0;
 $20 = (($19) + -1)|0;
 $21 = (($0) + ($20)|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $22&255;
 $24 = (($23) + ($18))|0;
 $25 = ($1*11)|0;
 $26 = (($25) + -1)|0;
 $27 = (($0) + ($26)|0);
 $28 = HEAP8[$27>>0]|0;
 $29 = $28&255;
 $30 = (($29) + ($24))|0;
 $31 = ($1*10)|0;
 $32 = (($31) + -1)|0;
 $33 = (($0) + ($32)|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = $34&255;
 $36 = (($35) + ($30))|0;
 $37 = ($1*9)|0;
 $38 = (($37) + -1)|0;
 $39 = (($0) + ($38)|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&255;
 $42 = (($41) + ($36))|0;
 $43 = $1 << 3;
 $44 = (($43) + -1)|0;
 $45 = (($0) + ($44)|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46&255;
 $48 = (($47) + ($42))|0;
 $49 = ($1*7)|0;
 $50 = (($49) + -1)|0;
 $51 = (($0) + ($50)|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = $52&255;
 $54 = (($53) + ($48))|0;
 $55 = ($1*6)|0;
 $56 = (($55) + -1)|0;
 $57 = (($0) + ($56)|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = $58&255;
 $60 = (($59) + ($54))|0;
 $61 = ($1*5)|0;
 $62 = (($61) + -1)|0;
 $63 = (($0) + ($62)|0);
 $64 = HEAP8[$63>>0]|0;
 $65 = $64&255;
 $66 = (($65) + ($60))|0;
 $67 = $1 << 2;
 $68 = (($67) + -1)|0;
 $69 = (($0) + ($68)|0);
 $70 = HEAP8[$69>>0]|0;
 $71 = $70&255;
 $72 = (($71) + ($66))|0;
 $73 = ($1*3)|0;
 $74 = (($73) + -1)|0;
 $75 = (($0) + ($74)|0);
 $76 = HEAP8[$75>>0]|0;
 $77 = $76&255;
 $78 = (($77) + ($72))|0;
 $79 = $1 << 1;
 $80 = (($79) + -1)|0;
 $81 = (($0) + ($80)|0);
 $82 = HEAP8[$81>>0]|0;
 $83 = $82&255;
 $84 = (($83) + ($78))|0;
 $85 = (($1) + -1)|0;
 $86 = (($0) + ($85)|0);
 $87 = HEAP8[$86>>0]|0;
 $88 = $87&255;
 $89 = (($88) + ($84))|0;
 $90 = ((($0)) + -1|0);
 $91 = HEAP8[$90>>0]|0;
 $92 = $91&255;
 $93 = (($92) + ($89))|0;
 $94 = (($93) + 8)|0;
 $95 = $94 >>> 4;
 $$mask = $95 & 255;
 $96 = (___muldi3(($$mask|0),0,16843009,16843009)|0);
 $97 = tempRet0;
 $98 = (($0) + ($2)|0);
 $99 = $98;
 $100 = $99;
 HEAP32[$100>>2] = $96;
 $101 = (($99) + 4)|0;
 $102 = $101;
 HEAP32[$102>>2] = $97;
 $103 = ((($98)) + 8|0);
 $104 = $103;
 $105 = $104;
 HEAP32[$105>>2] = $96;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $97;
 $108 = (($0) + ($7)|0);
 $109 = $108;
 $110 = $109;
 HEAP32[$110>>2] = $96;
 $111 = (($109) + 4)|0;
 $112 = $111;
 HEAP32[$112>>2] = $97;
 $113 = ((($108)) + 8|0);
 $114 = $113;
 $115 = $114;
 HEAP32[$115>>2] = $96;
 $116 = (($114) + 4)|0;
 $117 = $116;
 HEAP32[$117>>2] = $97;
 $118 = (($0) + ($13)|0);
 $119 = $118;
 $120 = $119;
 HEAP32[$120>>2] = $96;
 $121 = (($119) + 4)|0;
 $122 = $121;
 HEAP32[$122>>2] = $97;
 $123 = ((($118)) + 8|0);
 $124 = $123;
 $125 = $124;
 HEAP32[$125>>2] = $96;
 $126 = (($124) + 4)|0;
 $127 = $126;
 HEAP32[$127>>2] = $97;
 $128 = (($0) + ($19)|0);
 $129 = $128;
 $130 = $129;
 HEAP32[$130>>2] = $96;
 $131 = (($129) + 4)|0;
 $132 = $131;
 HEAP32[$132>>2] = $97;
 $133 = ((($128)) + 8|0);
 $134 = $133;
 $135 = $134;
 HEAP32[$135>>2] = $96;
 $136 = (($134) + 4)|0;
 $137 = $136;
 HEAP32[$137>>2] = $97;
 $138 = (($0) + ($25)|0);
 $139 = $138;
 $140 = $139;
 HEAP32[$140>>2] = $96;
 $141 = (($139) + 4)|0;
 $142 = $141;
 HEAP32[$142>>2] = $97;
 $143 = ((($138)) + 8|0);
 $144 = $143;
 $145 = $144;
 HEAP32[$145>>2] = $96;
 $146 = (($144) + 4)|0;
 $147 = $146;
 HEAP32[$147>>2] = $97;
 $148 = (($0) + ($31)|0);
 $149 = $148;
 $150 = $149;
 HEAP32[$150>>2] = $96;
 $151 = (($149) + 4)|0;
 $152 = $151;
 HEAP32[$152>>2] = $97;
 $153 = ((($148)) + 8|0);
 $154 = $153;
 $155 = $154;
 HEAP32[$155>>2] = $96;
 $156 = (($154) + 4)|0;
 $157 = $156;
 HEAP32[$157>>2] = $97;
 $158 = (($0) + ($37)|0);
 $159 = $158;
 $160 = $159;
 HEAP32[$160>>2] = $96;
 $161 = (($159) + 4)|0;
 $162 = $161;
 HEAP32[$162>>2] = $97;
 $163 = ((($158)) + 8|0);
 $164 = $163;
 $165 = $164;
 HEAP32[$165>>2] = $96;
 $166 = (($164) + 4)|0;
 $167 = $166;
 HEAP32[$167>>2] = $97;
 $168 = (($0) + ($43)|0);
 $169 = $168;
 $170 = $169;
 HEAP32[$170>>2] = $96;
 $171 = (($169) + 4)|0;
 $172 = $171;
 HEAP32[$172>>2] = $97;
 $173 = ((($168)) + 8|0);
 $174 = $173;
 $175 = $174;
 HEAP32[$175>>2] = $96;
 $176 = (($174) + 4)|0;
 $177 = $176;
 HEAP32[$177>>2] = $97;
 $178 = (($0) + ($49)|0);
 $179 = $178;
 $180 = $179;
 HEAP32[$180>>2] = $96;
 $181 = (($179) + 4)|0;
 $182 = $181;
 HEAP32[$182>>2] = $97;
 $183 = ((($178)) + 8|0);
 $184 = $183;
 $185 = $184;
 HEAP32[$185>>2] = $96;
 $186 = (($184) + 4)|0;
 $187 = $186;
 HEAP32[$187>>2] = $97;
 $188 = (($0) + ($55)|0);
 $189 = $188;
 $190 = $189;
 HEAP32[$190>>2] = $96;
 $191 = (($189) + 4)|0;
 $192 = $191;
 HEAP32[$192>>2] = $97;
 $193 = ((($188)) + 8|0);
 $194 = $193;
 $195 = $194;
 HEAP32[$195>>2] = $96;
 $196 = (($194) + 4)|0;
 $197 = $196;
 HEAP32[$197>>2] = $97;
 $198 = (($0) + ($61)|0);
 $199 = $198;
 $200 = $199;
 HEAP32[$200>>2] = $96;
 $201 = (($199) + 4)|0;
 $202 = $201;
 HEAP32[$202>>2] = $97;
 $203 = ((($198)) + 8|0);
 $204 = $203;
 $205 = $204;
 HEAP32[$205>>2] = $96;
 $206 = (($204) + 4)|0;
 $207 = $206;
 HEAP32[$207>>2] = $97;
 $208 = (($0) + ($67)|0);
 $209 = $208;
 $210 = $209;
 HEAP32[$210>>2] = $96;
 $211 = (($209) + 4)|0;
 $212 = $211;
 HEAP32[$212>>2] = $97;
 $213 = ((($208)) + 8|0);
 $214 = $213;
 $215 = $214;
 HEAP32[$215>>2] = $96;
 $216 = (($214) + 4)|0;
 $217 = $216;
 HEAP32[$217>>2] = $97;
 $218 = (($0) + ($73)|0);
 $219 = $218;
 $220 = $219;
 HEAP32[$220>>2] = $96;
 $221 = (($219) + 4)|0;
 $222 = $221;
 HEAP32[$222>>2] = $97;
 $223 = ((($218)) + 8|0);
 $224 = $223;
 $225 = $224;
 HEAP32[$225>>2] = $96;
 $226 = (($224) + 4)|0;
 $227 = $226;
 HEAP32[$227>>2] = $97;
 $228 = (($0) + ($79)|0);
 $229 = $228;
 $230 = $229;
 HEAP32[$230>>2] = $96;
 $231 = (($229) + 4)|0;
 $232 = $231;
 HEAP32[$232>>2] = $97;
 $233 = ((($228)) + 8|0);
 $234 = $233;
 $235 = $234;
 HEAP32[$235>>2] = $96;
 $236 = (($234) + 4)|0;
 $237 = $236;
 HEAP32[$237>>2] = $97;
 $238 = (($0) + ($1)|0);
 $239 = $238;
 $240 = $239;
 HEAP32[$240>>2] = $96;
 $241 = (($239) + 4)|0;
 $242 = $241;
 HEAP32[$242>>2] = $97;
 $243 = ((($238)) + 8|0);
 $244 = $243;
 $245 = $244;
 HEAP32[$245>>2] = $96;
 $246 = (($244) + 4)|0;
 $247 = $246;
 HEAP32[$247>>2] = $97;
 $248 = $0;
 $249 = $248;
 HEAP32[$249>>2] = $96;
 $250 = (($248) + 4)|0;
 $251 = $250;
 HEAP32[$251>>2] = $97;
 $252 = ((($0)) + 8|0);
 $253 = $252;
 $254 = $253;
 HEAP32[$254>>2] = $96;
 $255 = (($253) + 4)|0;
 $256 = $255;
 HEAP32[$256>>2] = $97;
 return;
}
function __ZN7WelsDec25WelsI16x16LumaPredDcTop_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (15 - ($1))|0;
 $3 = (($0) + ($2)|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = (14 - ($1))|0;
 $7 = (($0) + ($6)|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 $10 = (($9) + ($5))|0;
 $11 = (13 - ($1))|0;
 $12 = (($0) + ($11)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = (($14) + ($10))|0;
 $16 = (12 - ($1))|0;
 $17 = (($0) + ($16)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = (($19) + ($15))|0;
 $21 = (11 - ($1))|0;
 $22 = (($0) + ($21)|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = (($24) + ($20))|0;
 $26 = (10 - ($1))|0;
 $27 = (($0) + ($26)|0);
 $28 = HEAP8[$27>>0]|0;
 $29 = $28&255;
 $30 = (($29) + ($25))|0;
 $31 = (9 - ($1))|0;
 $32 = (($0) + ($31)|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = $33&255;
 $35 = (($34) + ($30))|0;
 $36 = (8 - ($1))|0;
 $37 = (($0) + ($36)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = (($39) + ($35))|0;
 $41 = (7 - ($1))|0;
 $42 = (($0) + ($41)|0);
 $43 = HEAP8[$42>>0]|0;
 $44 = $43&255;
 $45 = (($44) + ($40))|0;
 $46 = (6 - ($1))|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (($49) + ($45))|0;
 $51 = (5 - ($1))|0;
 $52 = (($0) + ($51)|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = (($54) + ($50))|0;
 $56 = (4 - ($1))|0;
 $57 = (($0) + ($56)|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = $58&255;
 $60 = (($59) + ($55))|0;
 $61 = (3 - ($1))|0;
 $62 = (($0) + ($61)|0);
 $63 = HEAP8[$62>>0]|0;
 $64 = $63&255;
 $65 = (($64) + ($60))|0;
 $66 = (2 - ($1))|0;
 $67 = (($0) + ($66)|0);
 $68 = HEAP8[$67>>0]|0;
 $69 = $68&255;
 $70 = (($69) + ($65))|0;
 $71 = (1 - ($1))|0;
 $72 = (($0) + ($71)|0);
 $73 = HEAP8[$72>>0]|0;
 $74 = $73&255;
 $75 = (($74) + ($70))|0;
 $76 = (0 - ($1))|0;
 $77 = (($0) + ($76)|0);
 $78 = HEAP8[$77>>0]|0;
 $79 = $78&255;
 $80 = (($79) + ($75))|0;
 $81 = ($1*15)|0;
 $82 = (($80) + 8)|0;
 $83 = $82 >>> 4;
 $84 = $83&255;
 $85 = (($0) + ($81)|0);
 _memset(($85|0),($84|0),16)|0;
 $86 = ($1*14)|0;
 $87 = (($0) + ($86)|0);
 _memset(($87|0),($84|0),16)|0;
 $88 = ($1*13)|0;
 $89 = (($0) + ($88)|0);
 _memset(($89|0),($84|0),16)|0;
 $90 = ($1*12)|0;
 $91 = (($0) + ($90)|0);
 _memset(($91|0),($84|0),16)|0;
 $92 = ($1*11)|0;
 $93 = (($0) + ($92)|0);
 _memset(($93|0),($84|0),16)|0;
 $94 = ($1*10)|0;
 $95 = (($0) + ($94)|0);
 _memset(($95|0),($84|0),16)|0;
 $96 = ($1*9)|0;
 $97 = (($0) + ($96)|0);
 _memset(($97|0),($84|0),16)|0;
 $98 = $1 << 3;
 $99 = (($0) + ($98)|0);
 _memset(($99|0),($84|0),16)|0;
 $100 = ($1*7)|0;
 $101 = (($0) + ($100)|0);
 _memset(($101|0),($84|0),16)|0;
 $102 = ($1*6)|0;
 $103 = (($0) + ($102)|0);
 _memset(($103|0),($84|0),16)|0;
 $104 = ($1*5)|0;
 $105 = (($0) + ($104)|0);
 _memset(($105|0),($84|0),16)|0;
 $106 = $1 << 2;
 $107 = (($0) + ($106)|0);
 _memset(($107|0),($84|0),16)|0;
 $108 = ($1*3)|0;
 $109 = (($0) + ($108)|0);
 _memset(($109|0),($84|0),16)|0;
 $110 = $1 << 1;
 $111 = (($0) + ($110)|0);
 _memset(($111|0),($84|0),16)|0;
 $112 = (($0) + ($1)|0);
 _memset(($112|0),($84|0),16)|0;
 _memset(($0|0),($84|0),16)|0;
 return;
}
function __ZN7WelsDec24WelsI16x16LumaPredDcNA_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*15)|0;
 $3 = (($0) + ($2)|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = -2139062144;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = -2139062144;
 $8 = ((($3)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -2139062144;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -2139062144;
 $13 = ($1*14)|0;
 $14 = (($0) + ($13)|0);
 $15 = $14;
 $16 = $15;
 HEAP32[$16>>2] = -2139062144;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = -2139062144;
 $19 = ((($14)) + 8|0);
 $20 = $19;
 $21 = $20;
 HEAP32[$21>>2] = -2139062144;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = -2139062144;
 $24 = ($1*13)|0;
 $25 = (($0) + ($24)|0);
 $26 = $25;
 $27 = $26;
 HEAP32[$27>>2] = -2139062144;
 $28 = (($26) + 4)|0;
 $29 = $28;
 HEAP32[$29>>2] = -2139062144;
 $30 = ((($25)) + 8|0);
 $31 = $30;
 $32 = $31;
 HEAP32[$32>>2] = -2139062144;
 $33 = (($31) + 4)|0;
 $34 = $33;
 HEAP32[$34>>2] = -2139062144;
 $35 = ($1*12)|0;
 $36 = (($0) + ($35)|0);
 $37 = $36;
 $38 = $37;
 HEAP32[$38>>2] = -2139062144;
 $39 = (($37) + 4)|0;
 $40 = $39;
 HEAP32[$40>>2] = -2139062144;
 $41 = ((($36)) + 8|0);
 $42 = $41;
 $43 = $42;
 HEAP32[$43>>2] = -2139062144;
 $44 = (($42) + 4)|0;
 $45 = $44;
 HEAP32[$45>>2] = -2139062144;
 $46 = ($1*11)|0;
 $47 = (($0) + ($46)|0);
 $48 = $47;
 $49 = $48;
 HEAP32[$49>>2] = -2139062144;
 $50 = (($48) + 4)|0;
 $51 = $50;
 HEAP32[$51>>2] = -2139062144;
 $52 = ((($47)) + 8|0);
 $53 = $52;
 $54 = $53;
 HEAP32[$54>>2] = -2139062144;
 $55 = (($53) + 4)|0;
 $56 = $55;
 HEAP32[$56>>2] = -2139062144;
 $57 = ($1*10)|0;
 $58 = (($0) + ($57)|0);
 $59 = $58;
 $60 = $59;
 HEAP32[$60>>2] = -2139062144;
 $61 = (($59) + 4)|0;
 $62 = $61;
 HEAP32[$62>>2] = -2139062144;
 $63 = ((($58)) + 8|0);
 $64 = $63;
 $65 = $64;
 HEAP32[$65>>2] = -2139062144;
 $66 = (($64) + 4)|0;
 $67 = $66;
 HEAP32[$67>>2] = -2139062144;
 $68 = ($1*9)|0;
 $69 = (($0) + ($68)|0);
 $70 = $69;
 $71 = $70;
 HEAP32[$71>>2] = -2139062144;
 $72 = (($70) + 4)|0;
 $73 = $72;
 HEAP32[$73>>2] = -2139062144;
 $74 = ((($69)) + 8|0);
 $75 = $74;
 $76 = $75;
 HEAP32[$76>>2] = -2139062144;
 $77 = (($75) + 4)|0;
 $78 = $77;
 HEAP32[$78>>2] = -2139062144;
 $79 = $1 << 3;
 $80 = (($0) + ($79)|0);
 $81 = $80;
 $82 = $81;
 HEAP32[$82>>2] = -2139062144;
 $83 = (($81) + 4)|0;
 $84 = $83;
 HEAP32[$84>>2] = -2139062144;
 $85 = ((($80)) + 8|0);
 $86 = $85;
 $87 = $86;
 HEAP32[$87>>2] = -2139062144;
 $88 = (($86) + 4)|0;
 $89 = $88;
 HEAP32[$89>>2] = -2139062144;
 $90 = ($1*7)|0;
 $91 = (($0) + ($90)|0);
 $92 = $91;
 $93 = $92;
 HEAP32[$93>>2] = -2139062144;
 $94 = (($92) + 4)|0;
 $95 = $94;
 HEAP32[$95>>2] = -2139062144;
 $96 = ((($91)) + 8|0);
 $97 = $96;
 $98 = $97;
 HEAP32[$98>>2] = -2139062144;
 $99 = (($97) + 4)|0;
 $100 = $99;
 HEAP32[$100>>2] = -2139062144;
 $101 = ($1*6)|0;
 $102 = (($0) + ($101)|0);
 $103 = $102;
 $104 = $103;
 HEAP32[$104>>2] = -2139062144;
 $105 = (($103) + 4)|0;
 $106 = $105;
 HEAP32[$106>>2] = -2139062144;
 $107 = ((($102)) + 8|0);
 $108 = $107;
 $109 = $108;
 HEAP32[$109>>2] = -2139062144;
 $110 = (($108) + 4)|0;
 $111 = $110;
 HEAP32[$111>>2] = -2139062144;
 $112 = ($1*5)|0;
 $113 = (($0) + ($112)|0);
 $114 = $113;
 $115 = $114;
 HEAP32[$115>>2] = -2139062144;
 $116 = (($114) + 4)|0;
 $117 = $116;
 HEAP32[$117>>2] = -2139062144;
 $118 = ((($113)) + 8|0);
 $119 = $118;
 $120 = $119;
 HEAP32[$120>>2] = -2139062144;
 $121 = (($119) + 4)|0;
 $122 = $121;
 HEAP32[$122>>2] = -2139062144;
 $123 = $1 << 2;
 $124 = (($0) + ($123)|0);
 $125 = $124;
 $126 = $125;
 HEAP32[$126>>2] = -2139062144;
 $127 = (($125) + 4)|0;
 $128 = $127;
 HEAP32[$128>>2] = -2139062144;
 $129 = ((($124)) + 8|0);
 $130 = $129;
 $131 = $130;
 HEAP32[$131>>2] = -2139062144;
 $132 = (($130) + 4)|0;
 $133 = $132;
 HEAP32[$133>>2] = -2139062144;
 $134 = ($1*3)|0;
 $135 = (($0) + ($134)|0);
 $136 = $135;
 $137 = $136;
 HEAP32[$137>>2] = -2139062144;
 $138 = (($136) + 4)|0;
 $139 = $138;
 HEAP32[$139>>2] = -2139062144;
 $140 = ((($135)) + 8|0);
 $141 = $140;
 $142 = $141;
 HEAP32[$142>>2] = -2139062144;
 $143 = (($141) + 4)|0;
 $144 = $143;
 HEAP32[$144>>2] = -2139062144;
 $145 = $1 << 1;
 $146 = (($0) + ($145)|0);
 $147 = $146;
 $148 = $147;
 HEAP32[$148>>2] = -2139062144;
 $149 = (($147) + 4)|0;
 $150 = $149;
 HEAP32[$150>>2] = -2139062144;
 $151 = ((($146)) + 8|0);
 $152 = $151;
 $153 = $152;
 HEAP32[$153>>2] = -2139062144;
 $154 = (($152) + 4)|0;
 $155 = $154;
 HEAP32[$155>>2] = -2139062144;
 $156 = (($0) + ($1)|0);
 $157 = $156;
 $158 = $157;
 HEAP32[$158>>2] = -2139062144;
 $159 = (($157) + 4)|0;
 $160 = $159;
 HEAP32[$160>>2] = -2139062144;
 $161 = ((($156)) + 8|0);
 $162 = $161;
 $163 = $162;
 HEAP32[$163>>2] = -2139062144;
 $164 = (($162) + 4)|0;
 $165 = $164;
 HEAP32[$165>>2] = -2139062144;
 $166 = $0;
 $167 = $166;
 HEAP32[$167>>2] = -2139062144;
 $168 = (($166) + 4)|0;
 $169 = $168;
 HEAP32[$169>>2] = -2139062144;
 $170 = ((($0)) + 8|0);
 $171 = $170;
 $172 = $171;
 HEAP32[$172>>2] = -2139062144;
 $173 = (($171) + 4)|0;
 $174 = $173;
 HEAP32[$174>>2] = -2139062144;
 return;
}
function __ZN7WelsDec19WelsI4x4LumaPredV_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (0 - ($1))|0;
 $3 = (($0) + ($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$0>>2] = $4;
 $5 = (($0) + ($1)|0);
 HEAP32[$5>>2] = $4;
 $6 = $1 << 1;
 $7 = (($0) + ($6)|0);
 HEAP32[$7>>2] = $4;
 $8 = (($7) + ($1)|0);
 HEAP32[$8>>2] = $4;
 return;
}
function __ZN7WelsDec19WelsI4x4LumaPredH_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = ((($0)) + -1|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = Math_imul($6, 16843009)|0;
 $8 = (($1) + -1)|0;
 $9 = (($0) + ($8)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&255;
 $12 = Math_imul($11, 16843009)|0;
 $13 = (($2) + -1)|0;
 $14 = (($0) + ($13)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15&255;
 $17 = Math_imul($16, 16843009)|0;
 $18 = (($3) + -1)|0;
 $19 = (($0) + ($18)|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $20&255;
 $22 = Math_imul($21, 16843009)|0;
 HEAP32[$0>>2] = $7;
 $23 = (($0) + ($1)|0);
 HEAP32[$23>>2] = $12;
 $24 = (($0) + ($2)|0);
 HEAP32[$24>>2] = $17;
 $25 = (($0) + ($3)|0);
 HEAP32[$25>>2] = $22;
 return;
}
function __ZN7WelsDec20WelsI4x4LumaPredDc_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = ((($0)) + -1|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (($1) + -1)|0;
 $8 = (($0) + ($7)|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = (($2) + -1)|0;
 $12 = (($0) + ($11)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = (($3) + -1)|0;
 $16 = (($0) + ($15)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = (0 - ($1))|0;
 $20 = (($0) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 $23 = (1 - ($1))|0;
 $24 = (($0) + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = (2 - ($1))|0;
 $28 = (($0) + ($27)|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = $29&255;
 $31 = (3 - ($1))|0;
 $32 = (($0) + ($31)|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = $33&255;
 $35 = (($6) + 4)|0;
 $36 = (($35) + ($10))|0;
 $37 = (($36) + ($14))|0;
 $38 = (($37) + ($18))|0;
 $39 = (($38) + ($22))|0;
 $40 = (($39) + ($26))|0;
 $41 = (($40) + ($30))|0;
 $42 = (($41) + ($34))|0;
 $43 = $42 >>> 3;
 $44 = $43 & 255;
 $45 = Math_imul($44, 16843009)|0;
 HEAP32[$0>>2] = $45;
 $46 = (($0) + ($1)|0);
 HEAP32[$46>>2] = $45;
 $47 = (($0) + ($2)|0);
 HEAP32[$47>>2] = $45;
 $48 = (($0) + ($3)|0);
 HEAP32[$48>>2] = $45;
 return;
}
function __ZN7WelsDec24WelsI4x4LumaPredDcLeft_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = ((($0)) + -1|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (($1) + -1)|0;
 $8 = (($0) + ($7)|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = (($2) + -1)|0;
 $12 = (($0) + ($11)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = (($3) + -1)|0;
 $16 = (($0) + ($15)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = (($6) + 2)|0;
 $20 = (($19) + ($10))|0;
 $21 = (($20) + ($14))|0;
 $22 = (($21) + ($18))|0;
 $23 = $22 >>> 2;
 $24 = $23 & 255;
 $25 = Math_imul($24, 16843009)|0;
 HEAP32[$0>>2] = $25;
 $26 = (($0) + ($1)|0);
 HEAP32[$26>>2] = $25;
 $27 = (($0) + ($2)|0);
 HEAP32[$27>>2] = $25;
 $28 = (($0) + ($3)|0);
 HEAP32[$28>>2] = $25;
 return;
}
function __ZN7WelsDec23WelsI4x4LumaPredDcTop_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = (0 - ($1))|0;
 $5 = (($0) + ($4)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = (1 - ($1))|0;
 $9 = (($0) + ($8)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&255;
 $12 = (2 - ($1))|0;
 $13 = (($0) + ($12)|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = (3 - ($1))|0;
 $17 = (($0) + ($16)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = (($7) + 2)|0;
 $21 = (($20) + ($11))|0;
 $22 = (($21) + ($15))|0;
 $23 = (($22) + ($19))|0;
 $24 = $23 >>> 2;
 $25 = $24 & 255;
 $26 = Math_imul($25, 16843009)|0;
 HEAP32[$0>>2] = $26;
 $27 = (($0) + ($1)|0);
 HEAP32[$27>>2] = $26;
 $28 = (($0) + ($2)|0);
 HEAP32[$28>>2] = $26;
 $29 = (($0) + ($3)|0);
 HEAP32[$29>>2] = $26;
 return;
}
function __ZN7WelsDec22WelsI4x4LumaPredDcNA_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = -2139062144;
 $2 = (($0) + ($1)|0);
 HEAP32[$2>>2] = -2139062144;
 $3 = $1 << 1;
 $4 = (($0) + ($3)|0);
 HEAP32[$4>>2] = -2139062144;
 $5 = (($4) + ($1)|0);
 HEAP32[$5>>2] = -2139062144;
 return;
}
function __ZN7WelsDec21WelsI4x4LumaPredDDL_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$0 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = 0, $$sroa$0$1$sroa_idx75 = 0, $$sroa$0$2$$sroa$0$2$$sroa$0$2$ = 0, $$sroa$0$2$sroa_idx76 = 0, $$sroa$0$3$$sroa$0$3$$sroa$0$3$ = 0, $$sroa$0$3$sroa_idx77 = 0, $$sroa$0$4$sroa_idx = 0, $$sroa$0$5$sroa_idx = 0, $$sroa$0$6$sroa_idx = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0 = sp;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = (0 - ($1))|0;
 $5 = (($0) + ($4)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ((($5)) + 1|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = ((($5)) + 2|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ((($5)) + 3|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ((($5)) + 4|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ((($5)) + 5|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ((($5)) + 6|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = ((($5)) + 7|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $6&255;
 $22 = (($21) + 2)|0;
 $23 = $10&255;
 $24 = (($22) + ($23))|0;
 $25 = $8&255;
 $26 = $25 << 1;
 $27 = (($24) + ($26))|0;
 $28 = $27 >>> 2;
 $29 = $28&255;
 $30 = (($25) + 2)|0;
 $31 = $12&255;
 $32 = (($30) + ($31))|0;
 $33 = $23 << 1;
 $34 = (($32) + ($33))|0;
 $35 = $34 >>> 2;
 $36 = $35&255;
 $37 = (($23) + 2)|0;
 $38 = $14&255;
 $39 = (($37) + ($38))|0;
 $40 = $31 << 1;
 $41 = (($39) + ($40))|0;
 $42 = $41 >>> 2;
 $43 = $42&255;
 $44 = (($31) + 2)|0;
 $45 = $16&255;
 $46 = (($44) + ($45))|0;
 $47 = $38 << 1;
 $48 = (($46) + ($47))|0;
 $49 = $48 >>> 2;
 $50 = $49&255;
 $51 = (($38) + 2)|0;
 $52 = $18&255;
 $53 = (($51) + ($52))|0;
 $54 = $45 << 1;
 $55 = (($53) + ($54))|0;
 $56 = $55 >>> 2;
 $57 = $56&255;
 $58 = (($45) + 2)|0;
 $59 = $20&255;
 $60 = (($58) + ($59))|0;
 $61 = $52 << 1;
 $62 = (($60) + ($61))|0;
 $63 = $62 >>> 2;
 $64 = $63&255;
 $65 = (($52) + 2)|0;
 $66 = (($65) + ($59))|0;
 $67 = $59 << 1;
 $68 = (($66) + ($67))|0;
 $69 = $68 >>> 2;
 $70 = $69&255;
 HEAP8[$$sroa$0>>0] = $29;
 $$sroa$0$1$sroa_idx75 = ((($$sroa$0)) + 1|0);
 HEAP8[$$sroa$0$1$sroa_idx75>>0] = $36;
 $$sroa$0$2$sroa_idx76 = ((($$sroa$0)) + 2|0);
 HEAP8[$$sroa$0$2$sroa_idx76>>0] = $43;
 $$sroa$0$3$sroa_idx77 = ((($$sroa$0)) + 3|0);
 HEAP8[$$sroa$0$3$sroa_idx77>>0] = $50;
 $$sroa$0$4$sroa_idx = ((($$sroa$0)) + 4|0);
 HEAP8[$$sroa$0$4$sroa_idx>>0] = $57;
 $$sroa$0$5$sroa_idx = ((($$sroa$0)) + 5|0);
 HEAP8[$$sroa$0$5$sroa_idx>>0] = $64;
 $$sroa$0$6$sroa_idx = ((($$sroa$0)) + 6|0);
 HEAP8[$$sroa$0$6$sroa_idx>>0] = $70;
 $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0>>2]|0;
 HEAP32[$0>>2] = $$sroa$0$0$$sroa$0$0$$sroa$0$0$;
 $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = HEAPU8[$$sroa$0$1$sroa_idx75>>0]|(HEAPU8[$$sroa$0$1$sroa_idx75+1>>0]<<8)|(HEAPU8[$$sroa$0$1$sroa_idx75+2>>0]<<16)|(HEAPU8[$$sroa$0$1$sroa_idx75+3>>0]<<24);
 $71 = (($0) + ($1)|0);
 HEAP32[$71>>2] = $$sroa$0$1$$sroa$0$1$$sroa$0$1$;
 $$sroa$0$2$$sroa$0$2$$sroa$0$2$ = HEAPU16[$$sroa$0$2$sroa_idx76>>1]|(HEAPU16[$$sroa$0$2$sroa_idx76+2>>1]<<16);
 $72 = (($0) + ($2)|0);
 HEAP32[$72>>2] = $$sroa$0$2$$sroa$0$2$$sroa$0$2$;
 $$sroa$0$3$$sroa$0$3$$sroa$0$3$ = HEAPU8[$$sroa$0$3$sroa_idx77>>0]|(HEAPU8[$$sroa$0$3$sroa_idx77+1>>0]<<8)|(HEAPU8[$$sroa$0$3$sroa_idx77+2>>0]<<16)|(HEAPU8[$$sroa$0$3$sroa_idx77+3>>0]<<24);
 $73 = (($0) + ($3)|0);
 HEAP32[$73>>2] = $$sroa$0$3$$sroa$0$3$$sroa$0$3$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec24WelsI4x4LumaPredDDLTop_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$0 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = 0, $$sroa$0$1$sroa_idx73 = 0, $$sroa$0$2$$sroa$0$2$$sroa$0$2$ = 0, $$sroa$0$2$sroa_idx74 = 0, $$sroa$0$3$$sroa$0$3$$sroa$0$3$ = 0, $$sroa$0$3$sroa_idx75 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0 = sp;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = (0 - ($1))|0;
 $5 = (($0) + ($4)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ((($5)) + 1|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = ((($5)) + 2|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ((($5)) + 3|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $6&255;
 $14 = (($13) + 1)|0;
 $15 = $8&255;
 $16 = (($14) + ($15))|0;
 $17 = (($15) + 1)|0;
 $18 = $10&255;
 $19 = (($17) + ($18))|0;
 $20 = (($18) + 1)|0;
 $21 = $12&255;
 $22 = (($20) + ($21))|0;
 $23 = $21 << 1;
 $24 = $23 | 1;
 $25 = (($16) + ($19))|0;
 $26 = $25 >>> 2;
 $27 = $26&255;
 $28 = (($22) + ($19))|0;
 $29 = $28 >>> 2;
 $30 = $29&255;
 $31 = (($24) + ($22))|0;
 $32 = $31 >>> 2;
 $33 = $32&255;
 HEAP8[$$sroa$0>>0] = $27;
 $$sroa$0$1$sroa_idx73 = ((($$sroa$0)) + 1|0);
 HEAP8[$$sroa$0$1$sroa_idx73>>0] = $30;
 $$sroa$0$2$sroa_idx74 = ((($$sroa$0)) + 2|0);
 HEAP8[$$sroa$0$2$sroa_idx74>>0] = $33;
 $$sroa$0$3$sroa_idx75 = ((($$sroa$0)) + 3|0);
 _memset(($$sroa$0$3$sroa_idx75|0),($12|0),4)|0;
 $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0>>2]|0;
 HEAP32[$0>>2] = $$sroa$0$0$$sroa$0$0$$sroa$0$0$;
 $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = HEAPU8[$$sroa$0$1$sroa_idx73>>0]|(HEAPU8[$$sroa$0$1$sroa_idx73+1>>0]<<8)|(HEAPU8[$$sroa$0$1$sroa_idx73+2>>0]<<16)|(HEAPU8[$$sroa$0$1$sroa_idx73+3>>0]<<24);
 $34 = (($0) + ($1)|0);
 HEAP32[$34>>2] = $$sroa$0$1$$sroa$0$1$$sroa$0$1$;
 $$sroa$0$2$$sroa$0$2$$sroa$0$2$ = HEAPU16[$$sroa$0$2$sroa_idx74>>1]|(HEAPU16[$$sroa$0$2$sroa_idx74+2>>1]<<16);
 $35 = (($0) + ($2)|0);
 HEAP32[$35>>2] = $$sroa$0$2$$sroa$0$2$$sroa$0$2$;
 $$sroa$0$3$$sroa$0$3$$sroa$0$3$ = HEAPU8[$$sroa$0$3$sroa_idx75>>0]|(HEAPU8[$$sroa$0$3$sroa_idx75+1>>0]<<8)|(HEAPU8[$$sroa$0$3$sroa_idx75+2>>0]<<16)|(HEAPU8[$$sroa$0$3$sroa_idx75+3>>0]<<24);
 $36 = (($0) + ($3)|0);
 HEAP32[$36>>2] = $$sroa$0$3$$sroa$0$3$$sroa$0$3$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec21WelsI4x4LumaPredDDR_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$0 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = 0, $$sroa$0$1$sroa_idx107 = 0, $$sroa$0$2$$sroa$0$2$$sroa$0$2$ = 0, $$sroa$0$2$sroa_idx108 = 0, $$sroa$0$3$$sroa$0$3$$sroa$0$3$ = 0, $$sroa$0$3$sroa_idx109 = 0, $$sroa$0$4$sroa_idx = 0, $$sroa$0$5$sroa_idx = 0, $$sroa$0$6$sroa_idx = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0 = sp;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = $1 ^ -1;
 $5 = (($0) + ($4)|0);
 $6 = ((($0)) + -1|0);
 $7 = HEAP8[$5>>0]|0;
 $8 = HEAP8[$6>>0]|0;
 $9 = (($6) + ($1)|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = (($6) + ($2)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = (($6) + ($3)|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ((($5)) + 1|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ((($5)) + 2|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = ((($5)) + 3|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ((($5)) + 4|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $7&255;
 $24 = (($23) + 1)|0;
 $25 = $8&255;
 $26 = (($24) + ($25))|0;
 $27 = $16&255;
 $28 = (($27) + ($24))|0;
 $29 = (($27) + 1)|0;
 $30 = $18&255;
 $31 = (($29) + ($30))|0;
 $32 = (($30) + 1)|0;
 $33 = $20&255;
 $34 = (($32) + ($33))|0;
 $35 = (($33) + 1)|0;
 $36 = $22&255;
 $37 = (($35) + ($36))|0;
 $38 = (($25) + 1)|0;
 $39 = $10&255;
 $40 = (($38) + ($39))|0;
 $41 = (($39) + 1)|0;
 $42 = $12&255;
 $43 = (($41) + ($42))|0;
 $44 = (($42) + 1)|0;
 $45 = $14&255;
 $46 = (($44) + ($45))|0;
 $47 = (($28) + ($26))|0;
 $48 = $47 >>> 2;
 $49 = $48&255;
 $50 = (($31) + ($28))|0;
 $51 = $50 >>> 2;
 $52 = $51&255;
 $53 = (($34) + ($31))|0;
 $54 = $53 >>> 2;
 $55 = $54&255;
 $56 = (($37) + ($34))|0;
 $57 = $56 >>> 2;
 $58 = $57&255;
 $59 = (($40) + ($26))|0;
 $60 = $59 >>> 2;
 $61 = $60&255;
 $62 = (($43) + ($40))|0;
 $63 = $62 >>> 2;
 $64 = $63&255;
 $65 = (($46) + ($43))|0;
 $66 = $65 >>> 2;
 $67 = $66&255;
 HEAP8[$$sroa$0>>0] = $67;
 $$sroa$0$1$sroa_idx107 = ((($$sroa$0)) + 1|0);
 HEAP8[$$sroa$0$1$sroa_idx107>>0] = $64;
 $$sroa$0$2$sroa_idx108 = ((($$sroa$0)) + 2|0);
 HEAP8[$$sroa$0$2$sroa_idx108>>0] = $61;
 $$sroa$0$3$sroa_idx109 = ((($$sroa$0)) + 3|0);
 HEAP8[$$sroa$0$3$sroa_idx109>>0] = $49;
 $$sroa$0$4$sroa_idx = ((($$sroa$0)) + 4|0);
 HEAP8[$$sroa$0$4$sroa_idx>>0] = $52;
 $$sroa$0$5$sroa_idx = ((($$sroa$0)) + 5|0);
 HEAP8[$$sroa$0$5$sroa_idx>>0] = $55;
 $$sroa$0$6$sroa_idx = ((($$sroa$0)) + 6|0);
 HEAP8[$$sroa$0$6$sroa_idx>>0] = $58;
 $$sroa$0$3$$sroa$0$3$$sroa$0$3$ = HEAPU8[$$sroa$0$3$sroa_idx109>>0]|(HEAPU8[$$sroa$0$3$sroa_idx109+1>>0]<<8)|(HEAPU8[$$sroa$0$3$sroa_idx109+2>>0]<<16)|(HEAPU8[$$sroa$0$3$sroa_idx109+3>>0]<<24);
 HEAP32[$0>>2] = $$sroa$0$3$$sroa$0$3$$sroa$0$3$;
 $$sroa$0$2$$sroa$0$2$$sroa$0$2$ = HEAPU16[$$sroa$0$2$sroa_idx108>>1]|(HEAPU16[$$sroa$0$2$sroa_idx108+2>>1]<<16);
 $68 = (($0) + ($1)|0);
 HEAP32[$68>>2] = $$sroa$0$2$$sroa$0$2$$sroa$0$2$;
 $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = HEAPU8[$$sroa$0$1$sroa_idx107>>0]|(HEAPU8[$$sroa$0$1$sroa_idx107+1>>0]<<8)|(HEAPU8[$$sroa$0$1$sroa_idx107+2>>0]<<16)|(HEAPU8[$$sroa$0$1$sroa_idx107+3>>0]<<24);
 $69 = (($0) + ($2)|0);
 HEAP32[$69>>2] = $$sroa$0$1$$sroa$0$1$$sroa$0$1$;
 $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0>>2]|0;
 $70 = (($0) + ($3)|0);
 HEAP32[$70>>2] = $$sroa$0$0$$sroa$0$0$$sroa$0$0$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI4x4LumaPredVL_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$0 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = 0, $$sroa$0$1$sroa_idx101 = 0, $$sroa$0$2$sroa_idx = 0, $$sroa$0$3$sroa_idx = 0, $$sroa$0$4$sroa_idx = 0, $$sroa$9 = 0, $$sroa$9$0$$sroa$9$0$$sroa$9$5$ = 0, $$sroa$9$1$$sroa$9$1$$sroa$9$6$ = 0, $$sroa$9$1$sroa_idx95 = 0, $$sroa$9$2$sroa_idx96 = 0, $$sroa$9$3$sroa_idx97 = 0, $$sroa$9$4$sroa_idx98 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0 = sp + 8|0;
 $$sroa$9 = sp;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = $1 ^ -1;
 $5 = (($0) + ($4)|0);
 $6 = ((($5)) + 1|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ((($5)) + 2|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ((($5)) + 3|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ((($5)) + 4|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ((($5)) + 5|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = ((($5)) + 6|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ((($5)) + 7|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $7&255;
 $21 = (($20) + 1)|0;
 $22 = $9&255;
 $23 = (($21) + ($22))|0;
 $24 = (($22) + 1)|0;
 $25 = $11&255;
 $26 = (($24) + ($25))|0;
 $27 = (($25) + 1)|0;
 $28 = $13&255;
 $29 = (($27) + ($28))|0;
 $30 = (($28) + 1)|0;
 $31 = $15&255;
 $32 = (($30) + ($31))|0;
 $33 = (($31) + 1)|0;
 $34 = $17&255;
 $35 = (($33) + ($34))|0;
 $36 = (($34) + 1)|0;
 $37 = $19&255;
 $38 = (($36) + ($37))|0;
 $39 = $23 >>> 1;
 $40 = $39&255;
 $41 = $26 >>> 1;
 $42 = $41&255;
 $43 = $29 >>> 1;
 $44 = $43&255;
 $45 = $32 >>> 1;
 $46 = $45&255;
 $47 = $35 >>> 1;
 $48 = $47&255;
 $49 = (($26) + ($23))|0;
 $50 = $49 >>> 2;
 $51 = $50&255;
 $52 = (($29) + ($26))|0;
 $53 = $52 >>> 2;
 $54 = $53&255;
 $55 = (($32) + ($29))|0;
 $56 = $55 >>> 2;
 $57 = $56&255;
 $58 = (($35) + ($32))|0;
 $59 = $58 >>> 2;
 $60 = $59&255;
 $61 = (($38) + ($35))|0;
 $62 = $61 >>> 2;
 $63 = $62&255;
 HEAP8[$$sroa$0>>0] = $40;
 $$sroa$0$1$sroa_idx101 = ((($$sroa$0)) + 1|0);
 HEAP8[$$sroa$0$1$sroa_idx101>>0] = $42;
 $$sroa$0$2$sroa_idx = ((($$sroa$0)) + 2|0);
 HEAP8[$$sroa$0$2$sroa_idx>>0] = $44;
 $$sroa$0$3$sroa_idx = ((($$sroa$0)) + 3|0);
 HEAP8[$$sroa$0$3$sroa_idx>>0] = $46;
 $$sroa$0$4$sroa_idx = ((($$sroa$0)) + 4|0);
 HEAP8[$$sroa$0$4$sroa_idx>>0] = $48;
 HEAP8[$$sroa$9>>0] = $51;
 $$sroa$9$1$sroa_idx95 = ((($$sroa$9)) + 1|0);
 HEAP8[$$sroa$9$1$sroa_idx95>>0] = $54;
 $$sroa$9$2$sroa_idx96 = ((($$sroa$9)) + 2|0);
 HEAP8[$$sroa$9$2$sroa_idx96>>0] = $57;
 $$sroa$9$3$sroa_idx97 = ((($$sroa$9)) + 3|0);
 HEAP8[$$sroa$9$3$sroa_idx97>>0] = $60;
 $$sroa$9$4$sroa_idx98 = ((($$sroa$9)) + 4|0);
 HEAP8[$$sroa$9$4$sroa_idx98>>0] = $63;
 $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0>>2]|0;
 HEAP32[$0>>2] = $$sroa$0$0$$sroa$0$0$$sroa$0$0$;
 $$sroa$9$0$$sroa$9$0$$sroa$9$5$ = HEAP32[$$sroa$9>>2]|0;
 $64 = (($0) + ($1)|0);
 HEAP32[$64>>2] = $$sroa$9$0$$sroa$9$0$$sroa$9$5$;
 $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = HEAPU8[$$sroa$0$1$sroa_idx101>>0]|(HEAPU8[$$sroa$0$1$sroa_idx101+1>>0]<<8)|(HEAPU8[$$sroa$0$1$sroa_idx101+2>>0]<<16)|(HEAPU8[$$sroa$0$1$sroa_idx101+3>>0]<<24);
 $65 = (($0) + ($2)|0);
 HEAP32[$65>>2] = $$sroa$0$1$$sroa$0$1$$sroa$0$1$;
 $$sroa$9$1$$sroa$9$1$$sroa$9$6$ = HEAPU8[$$sroa$9$1$sroa_idx95>>0]|(HEAPU8[$$sroa$9$1$sroa_idx95+1>>0]<<8)|(HEAPU8[$$sroa$9$1$sroa_idx95+2>>0]<<16)|(HEAPU8[$$sroa$9$1$sroa_idx95+3>>0]<<24);
 $66 = (($0) + ($3)|0);
 HEAP32[$66>>2] = $$sroa$9$1$$sroa$9$1$$sroa$9$6$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec23WelsI4x4LumaPredVLTop_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$0 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = 0, $$sroa$0$1$sroa_idx85 = 0, $$sroa$0$2$sroa_idx = 0, $$sroa$0$3$sroa_idx = 0, $$sroa$0$4$sroa_idx = 0, $$sroa$9 = 0, $$sroa$9$0$$sroa$9$0$$sroa$9$5$ = 0, $$sroa$9$1$$sroa$9$1$$sroa$9$6$ = 0, $$sroa$9$1$sroa_idx79 = 0, $$sroa$9$2$sroa_idx80 = 0, $$sroa$9$3$sroa_idx81 = 0, $$sroa$9$4$sroa_idx82 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0 = sp + 8|0;
 $$sroa$9 = sp;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = $1 ^ -1;
 $5 = (($0) + ($4)|0);
 $6 = ((($5)) + 1|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ((($5)) + 2|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ((($5)) + 3|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ((($5)) + 4|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $7&255;
 $15 = (($14) + 1)|0;
 $16 = $9&255;
 $17 = (($15) + ($16))|0;
 $18 = (($16) + 1)|0;
 $19 = $11&255;
 $20 = (($18) + ($19))|0;
 $21 = (($19) + 1)|0;
 $22 = $13&255;
 $23 = (($21) + ($22))|0;
 $24 = $22 << 1;
 $25 = $24 | 1;
 $26 = $17 >>> 1;
 $27 = $26&255;
 $28 = $20 >>> 1;
 $29 = $28&255;
 $30 = $23 >>> 1;
 $31 = $30&255;
 $32 = (($20) + ($17))|0;
 $33 = $32 >>> 2;
 $34 = $33&255;
 $35 = (($23) + ($20))|0;
 $36 = $35 >>> 2;
 $37 = $36&255;
 $38 = (($25) + ($23))|0;
 $39 = $38 >>> 2;
 $40 = $39&255;
 HEAP8[$$sroa$0>>0] = $27;
 $$sroa$0$1$sroa_idx85 = ((($$sroa$0)) + 1|0);
 HEAP8[$$sroa$0$1$sroa_idx85>>0] = $29;
 $$sroa$0$2$sroa_idx = ((($$sroa$0)) + 2|0);
 HEAP8[$$sroa$0$2$sroa_idx>>0] = $31;
 $$sroa$0$3$sroa_idx = ((($$sroa$0)) + 3|0);
 HEAP8[$$sroa$0$3$sroa_idx>>0] = $13;
 $$sroa$0$4$sroa_idx = ((($$sroa$0)) + 4|0);
 HEAP8[$$sroa$0$4$sroa_idx>>0] = $13;
 HEAP8[$$sroa$9>>0] = $34;
 $$sroa$9$1$sroa_idx79 = ((($$sroa$9)) + 1|0);
 HEAP8[$$sroa$9$1$sroa_idx79>>0] = $37;
 $$sroa$9$2$sroa_idx80 = ((($$sroa$9)) + 2|0);
 HEAP8[$$sroa$9$2$sroa_idx80>>0] = $40;
 $$sroa$9$3$sroa_idx81 = ((($$sroa$9)) + 3|0);
 HEAP8[$$sroa$9$3$sroa_idx81>>0] = $13;
 $$sroa$9$4$sroa_idx82 = ((($$sroa$9)) + 4|0);
 HEAP8[$$sroa$9$4$sroa_idx82>>0] = $13;
 $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0>>2]|0;
 HEAP32[$0>>2] = $$sroa$0$0$$sroa$0$0$$sroa$0$0$;
 $$sroa$9$0$$sroa$9$0$$sroa$9$5$ = HEAP32[$$sroa$9>>2]|0;
 $41 = (($0) + ($1)|0);
 HEAP32[$41>>2] = $$sroa$9$0$$sroa$9$0$$sroa$9$5$;
 $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = HEAPU8[$$sroa$0$1$sroa_idx85>>0]|(HEAPU8[$$sroa$0$1$sroa_idx85+1>>0]<<8)|(HEAPU8[$$sroa$0$1$sroa_idx85+2>>0]<<16)|(HEAPU8[$$sroa$0$1$sroa_idx85+3>>0]<<24);
 $42 = (($0) + ($2)|0);
 HEAP32[$42>>2] = $$sroa$0$1$$sroa$0$1$$sroa$0$1$;
 $$sroa$9$1$$sroa$9$1$$sroa$9$6$ = HEAPU8[$$sroa$9$1$sroa_idx79>>0]|(HEAPU8[$$sroa$9$1$sroa_idx79+1>>0]<<8)|(HEAPU8[$$sroa$9$1$sroa_idx79+2>>0]<<16)|(HEAPU8[$$sroa$9$1$sroa_idx79+3>>0]<<24);
 $43 = (($0) + ($3)|0);
 HEAP32[$43>>2] = $$sroa$9$1$$sroa$9$1$$sroa$9$6$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI4x4LumaPredVR_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$0 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = 0, $$sroa$0$1$sroa_idx92 = 0, $$sroa$0$2$sroa_idx = 0, $$sroa$0$3$sroa_idx = 0, $$sroa$0$4$sroa_idx = 0, $$sroa$9 = 0, $$sroa$9$0$$sroa$9$0$$sroa$9$5$ = 0, $$sroa$9$1$$sroa$9$1$$sroa$9$6$ = 0, $$sroa$9$1$sroa_idx86 = 0, $$sroa$9$2$sroa_idx87 = 0, $$sroa$9$3$sroa_idx88 = 0, $$sroa$9$4$sroa_idx89 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0 = sp + 8|0;
 $$sroa$9 = sp;
 $2 = $1 << 1;
 $3 = ($1*3)|0;
 $4 = (0 - ($1))|0;
 $5 = $1 ^ -1;
 $6 = (($0) + ($5)|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ((($0)) + -1|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = (($1) + -1)|0;
 $11 = (($0) + ($10)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = (($2) + -1)|0;
 $14 = (($0) + ($13)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = (($0) + ($4)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = (1 - ($1))|0;
 $19 = (($0) + ($18)|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = (2 - ($1))|0;
 $22 = (($0) + ($21)|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = (3 - ($1))|0;
 $25 = (($0) + ($24)|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $7&255;
 $28 = (($27) + 1)|0;
 $29 = $17&255;
 $30 = (($28) + ($29))|0;
 $31 = $30 >>> 1;
 $32 = $31&255;
 $33 = (($29) + 1)|0;
 $34 = $20&255;
 $35 = (($33) + ($34))|0;
 $36 = $35 >>> 1;
 $37 = $36&255;
 $38 = (($34) + 1)|0;
 $39 = $23&255;
 $40 = (($38) + ($39))|0;
 $41 = $40 >>> 1;
 $42 = $41&255;
 $43 = (($39) + 1)|0;
 $44 = $26&255;
 $45 = (($43) + ($44))|0;
 $46 = $45 >>> 1;
 $47 = $46&255;
 $48 = $9&255;
 $49 = (($48) + 2)|0;
 $50 = $27 << 1;
 $51 = (($49) + ($50))|0;
 $52 = (($51) + ($29))|0;
 $53 = $52 >>> 2;
 $54 = $53&255;
 $55 = (($27) + 2)|0;
 $56 = $29 << 1;
 $57 = (($56) + ($55))|0;
 $58 = (($57) + ($34))|0;
 $59 = $58 >>> 2;
 $60 = $59&255;
 $61 = (($29) + 2)|0;
 $62 = $34 << 1;
 $63 = (($61) + ($62))|0;
 $64 = (($63) + ($39))|0;
 $65 = $64 >>> 2;
 $66 = $65&255;
 $67 = (($34) + 2)|0;
 $68 = $39 << 1;
 $69 = (($67) + ($68))|0;
 $70 = (($69) + ($44))|0;
 $71 = $70 >>> 2;
 $72 = $71&255;
 $73 = $48 << 1;
 $74 = (($73) + ($55))|0;
 $75 = $12&255;
 $76 = (($74) + ($75))|0;
 $77 = $76 >>> 2;
 $78 = $77&255;
 $79 = $75 << 1;
 $80 = (($79) + ($49))|0;
 $81 = $15&255;
 $82 = (($80) + ($81))|0;
 $83 = $82 >>> 2;
 $84 = $83&255;
 HEAP8[$$sroa$0>>0] = $78;
 $$sroa$0$1$sroa_idx92 = ((($$sroa$0)) + 1|0);
 HEAP8[$$sroa$0$1$sroa_idx92>>0] = $32;
 $$sroa$0$2$sroa_idx = ((($$sroa$0)) + 2|0);
 HEAP8[$$sroa$0$2$sroa_idx>>0] = $37;
 $$sroa$0$3$sroa_idx = ((($$sroa$0)) + 3|0);
 HEAP8[$$sroa$0$3$sroa_idx>>0] = $42;
 $$sroa$0$4$sroa_idx = ((($$sroa$0)) + 4|0);
 HEAP8[$$sroa$0$4$sroa_idx>>0] = $47;
 HEAP8[$$sroa$9>>0] = $84;
 $$sroa$9$1$sroa_idx86 = ((($$sroa$9)) + 1|0);
 HEAP8[$$sroa$9$1$sroa_idx86>>0] = $54;
 $$sroa$9$2$sroa_idx87 = ((($$sroa$9)) + 2|0);
 HEAP8[$$sroa$9$2$sroa_idx87>>0] = $60;
 $$sroa$9$3$sroa_idx88 = ((($$sroa$9)) + 3|0);
 HEAP8[$$sroa$9$3$sroa_idx88>>0] = $66;
 $$sroa$9$4$sroa_idx89 = ((($$sroa$9)) + 4|0);
 HEAP8[$$sroa$9$4$sroa_idx89>>0] = $72;
 $$sroa$0$1$$sroa$0$1$$sroa$0$1$ = HEAPU8[$$sroa$0$1$sroa_idx92>>0]|(HEAPU8[$$sroa$0$1$sroa_idx92+1>>0]<<8)|(HEAPU8[$$sroa$0$1$sroa_idx92+2>>0]<<16)|(HEAPU8[$$sroa$0$1$sroa_idx92+3>>0]<<24);
 HEAP32[$0>>2] = $$sroa$0$1$$sroa$0$1$$sroa$0$1$;
 $$sroa$9$1$$sroa$9$1$$sroa$9$6$ = HEAPU8[$$sroa$9$1$sroa_idx86>>0]|(HEAPU8[$$sroa$9$1$sroa_idx86+1>>0]<<8)|(HEAPU8[$$sroa$9$1$sroa_idx86+2>>0]<<16)|(HEAPU8[$$sroa$9$1$sroa_idx86+3>>0]<<24);
 $85 = (($0) + ($1)|0);
 HEAP32[$85>>2] = $$sroa$9$1$$sroa$9$1$$sroa$9$6$;
 $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0>>2]|0;
 $86 = (($0) + ($2)|0);
 HEAP32[$86>>2] = $$sroa$0$0$$sroa$0$0$$sroa$0$0$;
 $$sroa$9$0$$sroa$9$0$$sroa$9$5$ = HEAP32[$$sroa$9>>2]|0;
 $87 = (($0) + ($3)|0);
 HEAP32[$87>>2] = $$sroa$9$0$$sroa$9$0$$sroa$9$5$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI4x4LumaPredHU_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$$0$ = 0, $$1$sroa_idx60 = 0, $$2$$2$ = 0, $$2$sroa_idx62 = 0, $$3$sroa_idx63 = 0, $$4$$4$ = 0, $$4$sroa_idx65 = 0, $$5$sroa_idx66 = 0, $$6$$6$ = 0, $$6$sroa_idx68 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = $1 << 1;
 $4 = ($1*3)|0;
 $5 = ((($0)) + -1|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = (($1) + -1)|0;
 $8 = (($0) + ($7)|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = (($3) + -1)|0;
 $11 = (($0) + ($10)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = (($4) + -1)|0;
 $14 = (($0) + ($13)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $6&255;
 $17 = (($16) + 1)|0;
 $18 = $9&255;
 $19 = (($17) + ($18))|0;
 $20 = (($18) + 1)|0;
 $21 = $12&255;
 $22 = (($20) + ($21))|0;
 $23 = (($21) + 1)|0;
 $24 = $15&255;
 $25 = (($23) + ($24))|0;
 $26 = $19 >>> 1;
 $27 = $26&255;
 $28 = (($22) + ($19))|0;
 $29 = $28 >>> 2;
 $30 = $29&255;
 $31 = $22 >>> 1;
 $32 = $31&255;
 $33 = (($25) + ($22))|0;
 $34 = $33 >>> 2;
 $35 = $34&255;
 $36 = $25 >>> 1;
 $37 = $36&255;
 $38 = (($25) + 1)|0;
 $39 = $24 << 1;
 $40 = (($38) + ($39))|0;
 $41 = $40 >>> 2;
 $42 = $41&255;
 HEAP8[$2>>0] = $27;
 $$1$sroa_idx60 = ((($2)) + 1|0);
 HEAP8[$$1$sroa_idx60>>0] = $30;
 $$2$sroa_idx62 = ((($2)) + 2|0);
 HEAP8[$$2$sroa_idx62>>0] = $32;
 $$3$sroa_idx63 = ((($2)) + 3|0);
 HEAP8[$$3$sroa_idx63>>0] = $35;
 $$4$sroa_idx65 = ((($2)) + 4|0);
 HEAP8[$$4$sroa_idx65>>0] = $37;
 $$5$sroa_idx66 = ((($2)) + 5|0);
 HEAP8[$$5$sroa_idx66>>0] = $42;
 $$6$sroa_idx68 = ((($2)) + 6|0);
 _memset(($$6$sroa_idx68|0),($15|0),4)|0;
 $$0$$0$ = HEAP32[$2>>2]|0;
 HEAP32[$0>>2] = $$0$$0$;
 $$2$$2$ = HEAPU16[$$2$sroa_idx62>>1]|(HEAPU16[$$2$sroa_idx62+2>>1]<<16);
 $43 = (($0) + ($1)|0);
 HEAP32[$43>>2] = $$2$$2$;
 $$4$$4$ = HEAP32[$$4$sroa_idx65>>2]|0;
 $44 = (($0) + ($3)|0);
 HEAP32[$44>>2] = $$4$$4$;
 $$6$$6$ = HEAPU16[$$6$sroa_idx68>>1]|(HEAPU16[$$6$sroa_idx68+2>>1]<<16);
 $45 = (($0) + ($4)|0);
 HEAP32[$45>>2] = $$6$$6$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI4x4LumaPredHD_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$$0$ = 0, $$1$sroa_idx91 = 0, $$2$$2$ = 0, $$2$sroa_idx93 = 0, $$3$sroa_idx94 = 0, $$4$$4$ = 0, $$4$sroa_idx96 = 0, $$5$sroa_idx97 = 0, $$6$$6$ = 0, $$6$sroa_idx99 = 0, $$7$sroa_idx100 = 0, $$8$sroa_idx101 = 0, $$9$sroa_idx102 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = $1 << 1;
 $4 = ($1*3)|0;
 $5 = $1 ^ -1;
 $6 = (($0) + ($5)|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ((($0)) + -1|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = (($1) + -1)|0;
 $11 = (($0) + ($10)|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = (($3) + -1)|0;
 $14 = (($0) + ($13)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = (($4) + -1)|0;
 $17 = (($0) + ($16)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = (0 - ($1))|0;
 $20 = (($0) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = (1 - ($1))|0;
 $23 = (($0) + ($22)|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = (2 - ($1))|0;
 $26 = (($0) + ($25)|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = $7&255;
 $29 = (($28) + 1)|0;
 $30 = $9&255;
 $31 = (($29) + ($30))|0;
 $32 = $21&255;
 $33 = (($32) + ($29))|0;
 $34 = (($32) + 1)|0;
 $35 = $24&255;
 $36 = (($34) + ($35))|0;
 $37 = (($35) + 1)|0;
 $38 = $27&255;
 $39 = (($37) + ($38))|0;
 $40 = (($30) + 1)|0;
 $41 = $12&255;
 $42 = (($40) + ($41))|0;
 $43 = (($41) + 1)|0;
 $44 = $15&255;
 $45 = (($43) + ($44))|0;
 $46 = (($44) + 1)|0;
 $47 = $18&255;
 $48 = (($46) + ($47))|0;
 $49 = $31 >>> 1;
 $50 = $49&255;
 $51 = (($33) + ($31))|0;
 $52 = $51 >>> 2;
 $53 = $52&255;
 $54 = (($36) + ($33))|0;
 $55 = $54 >>> 2;
 $56 = $55&255;
 $57 = (($39) + ($36))|0;
 $58 = $57 >>> 2;
 $59 = $58&255;
 $60 = $42 >>> 1;
 $61 = $60&255;
 $62 = (($42) + ($31))|0;
 $63 = $62 >>> 2;
 $64 = $63&255;
 $65 = $45 >>> 1;
 $66 = $65&255;
 $67 = (($45) + ($42))|0;
 $68 = $67 >>> 2;
 $69 = $68&255;
 $70 = $48 >>> 1;
 $71 = $70&255;
 $72 = (($48) + ($45))|0;
 $73 = $72 >>> 2;
 $74 = $73&255;
 HEAP8[$2>>0] = $71;
 $$1$sroa_idx91 = ((($2)) + 1|0);
 HEAP8[$$1$sroa_idx91>>0] = $74;
 $$2$sroa_idx93 = ((($2)) + 2|0);
 HEAP8[$$2$sroa_idx93>>0] = $66;
 $$3$sroa_idx94 = ((($2)) + 3|0);
 HEAP8[$$3$sroa_idx94>>0] = $69;
 $$4$sroa_idx96 = ((($2)) + 4|0);
 HEAP8[$$4$sroa_idx96>>0] = $61;
 $$5$sroa_idx97 = ((($2)) + 5|0);
 HEAP8[$$5$sroa_idx97>>0] = $64;
 $$6$sroa_idx99 = ((($2)) + 6|0);
 HEAP8[$$6$sroa_idx99>>0] = $50;
 $$7$sroa_idx100 = ((($2)) + 7|0);
 HEAP8[$$7$sroa_idx100>>0] = $53;
 $$8$sroa_idx101 = ((($2)) + 8|0);
 HEAP8[$$8$sroa_idx101>>0] = $56;
 $$9$sroa_idx102 = ((($2)) + 9|0);
 HEAP8[$$9$sroa_idx102>>0] = $59;
 $$6$$6$ = HEAPU16[$$6$sroa_idx99>>1]|(HEAPU16[$$6$sroa_idx99+2>>1]<<16);
 HEAP32[$0>>2] = $$6$$6$;
 $$4$$4$ = HEAP32[$$4$sroa_idx96>>2]|0;
 $75 = (($0) + ($1)|0);
 HEAP32[$75>>2] = $$4$$4$;
 $$2$$2$ = HEAPU16[$$2$sroa_idx93>>1]|(HEAPU16[$$2$sroa_idx93+2>>1]<<16);
 $76 = (($0) + ($3)|0);
 HEAP32[$76>>2] = $$2$$2$;
 $$0$$0$ = HEAP32[$2>>2]|0;
 $77 = (($0) + ($4)|0);
 HEAP32[$77>>2] = $$0$$0$;
 STACKTOP = sp;return;
}
function __ZN7WelsDec19WelsI8x8LumaPredV_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$mask73 = 0, $$mask74 = 0, $$mask75 = 0, $$mask76 = 0, $$mask77 = 0, $$mask78 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink60$ph = 0, $$sink9 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (0 - ($1))|0;
 $5 = (($0) + ($4)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 if ($2) {
  $8 = $1 ^ -1;
  $9 = (($0) + ($8)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10&255;
  $12 = $7 << 1;
  $13 = (($11) + ($12))|0;
  $$pre$phiZ2D = $8;$$sink60$ph = $13;
 } else {
  $14 = ($7*3)|0;
  $$pre = $1 ^ -1;
  $$pre$phiZ2D = $$pre;$$sink60$ph = $14;
 }
 $15 = (1 - ($1))|0;
 $16 = (($0) + ($15)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = (($$sink60$ph) + 2)|0;
 $20 = (($19) + ($18))|0;
 $21 = $20 >>> 2;
 $22 = (($$pre$phiZ2D) + 1)|0;
 $23 = (($0) + ($22)|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = $24&255;
 $26 = $18 << 1;
 $27 = (($26) + ($25))|0;
 $28 = (2 - ($1))|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($27) + 2)|0;
 $33 = (($32) + ($31))|0;
 $34 = $33 >>> 2;
 $35 = (($$pre$phiZ2D) + 2)|0;
 $36 = (($0) + ($35)|0);
 $37 = HEAP8[$36>>0]|0;
 $38 = $37&255;
 $39 = $31 << 1;
 $40 = (($39) + ($38))|0;
 $41 = (3 - ($1))|0;
 $42 = (($0) + ($41)|0);
 $43 = HEAP8[$42>>0]|0;
 $44 = $43&255;
 $45 = (($40) + 2)|0;
 $46 = (($45) + ($44))|0;
 $47 = $46 >>> 2;
 $48 = (($$pre$phiZ2D) + 3)|0;
 $49 = (($0) + ($48)|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = $50&255;
 $52 = $44 << 1;
 $53 = (($52) + ($51))|0;
 $54 = (4 - ($1))|0;
 $55 = (($0) + ($54)|0);
 $56 = HEAP8[$55>>0]|0;
 $57 = $56&255;
 $58 = (($53) + 2)|0;
 $59 = (($58) + ($57))|0;
 $60 = $59 >>> 2;
 $61 = (($$pre$phiZ2D) + 4)|0;
 $62 = (($0) + ($61)|0);
 $63 = HEAP8[$62>>0]|0;
 $64 = $63&255;
 $65 = $57 << 1;
 $66 = (($65) + ($64))|0;
 $67 = (5 - ($1))|0;
 $68 = (($0) + ($67)|0);
 $69 = HEAP8[$68>>0]|0;
 $70 = $69&255;
 $71 = (($66) + 2)|0;
 $72 = (($71) + ($70))|0;
 $73 = $72 >>> 2;
 $74 = (($$pre$phiZ2D) + 5)|0;
 $75 = (($0) + ($74)|0);
 $76 = HEAP8[$75>>0]|0;
 $77 = $76&255;
 $78 = $70 << 1;
 $79 = (($78) + ($77))|0;
 $80 = (6 - ($1))|0;
 $81 = (($0) + ($80)|0);
 $82 = HEAP8[$81>>0]|0;
 $83 = $82&255;
 $84 = (($79) + 2)|0;
 $85 = (($84) + ($83))|0;
 $86 = $85 >>> 2;
 $87 = (($$pre$phiZ2D) + 6)|0;
 $88 = (($0) + ($87)|0);
 $89 = HEAP8[$88>>0]|0;
 $90 = $89&255;
 $91 = $83 << 1;
 $92 = (($91) + ($90))|0;
 $93 = (7 - ($1))|0;
 $94 = (($0) + ($93)|0);
 $95 = HEAP8[$94>>0]|0;
 $96 = $95&255;
 $97 = (($92) + 2)|0;
 $98 = (($97) + ($96))|0;
 $99 = $98 >>> 2;
 if ($3) {
  $100 = $96 << 1;
  $101 = (($100) + ($83))|0;
  $102 = (8 - ($1))|0;
  $103 = (($0) + ($102)|0);
  $104 = HEAP8[$103>>0]|0;
  $105 = $104&255;
  $106 = (($101) + ($105))|0;
  $$sink9 = $106;
 } else {
  $107 = ($96*3)|0;
  $108 = (($107) + ($83))|0;
  $$sink9 = $108;
 }
 $109 = $$sink9 << 6;
 $110 = (($109) + 128)|0;
 $111 = $110 & 65280;
 $$mask = $99 & 255;
 $112 = $$mask | $111;
 $113 = $112 << 8;
 $$mask73 = $86 & 255;
 $114 = $$mask73 | $113;
 $115 = $114 << 8;
 $$mask74 = $73 & 255;
 $116 = $$mask74 | $115;
 $117 = (_bitshift64Shl(($116|0),0,8)|0);
 $118 = tempRet0;
 $$mask75 = $60 & 255;
 $119 = $$mask75 | $117;
 $120 = (_bitshift64Shl(($119|0),($118|0),8)|0);
 $121 = tempRet0;
 $$mask76 = $47 & 255;
 $122 = $$mask76 | $120;
 $123 = (_bitshift64Shl(($122|0),($121|0),8)|0);
 $124 = tempRet0;
 $$mask77 = $34 & 255;
 $125 = $$mask77 | $123;
 $126 = (_bitshift64Shl(($125|0),($124|0),8)|0);
 $127 = tempRet0;
 $$mask78 = $21 & 255;
 $128 = $$mask78 | $126;
 $129 = $0;
 $130 = $129;
 HEAP32[$130>>2] = $128;
 $131 = (($129) + 4)|0;
 $132 = $131;
 HEAP32[$132>>2] = $127;
 $133 = (($0) + ($1)|0);
 $134 = $133;
 $135 = $134;
 HEAP32[$135>>2] = $128;
 $136 = (($134) + 4)|0;
 $137 = $136;
 HEAP32[$137>>2] = $127;
 $138 = $1 << 1;
 $139 = (($0) + ($138)|0);
 $140 = $139;
 $141 = $140;
 HEAP32[$141>>2] = $128;
 $142 = (($140) + 4)|0;
 $143 = $142;
 HEAP32[$143>>2] = $127;
 $144 = ($1*3)|0;
 $145 = (($0) + ($144)|0);
 $146 = $145;
 $147 = $146;
 HEAP32[$147>>2] = $128;
 $148 = (($146) + 4)|0;
 $149 = $148;
 HEAP32[$149>>2] = $127;
 $150 = $1 << 2;
 $151 = (($0) + ($150)|0);
 $152 = $151;
 $153 = $152;
 HEAP32[$153>>2] = $128;
 $154 = (($152) + 4)|0;
 $155 = $154;
 HEAP32[$155>>2] = $127;
 $156 = ($1*5)|0;
 $157 = (($0) + ($156)|0);
 $158 = $157;
 $159 = $158;
 HEAP32[$159>>2] = $128;
 $160 = (($158) + 4)|0;
 $161 = $160;
 HEAP32[$161>>2] = $127;
 $162 = ($1*6)|0;
 $163 = (($0) + ($162)|0);
 $164 = $163;
 $165 = $164;
 HEAP32[$165>>2] = $128;
 $166 = (($164) + 4)|0;
 $167 = $166;
 HEAP32[$167>>2] = $127;
 $168 = ($1*7)|0;
 $169 = (($0) + ($168)|0);
 $170 = $169;
 $171 = $170;
 HEAP32[$171>>2] = $128;
 $172 = (($170) + 4)|0;
 $173 = $172;
 HEAP32[$173>>2] = $127;
 return;
}
function __ZN7WelsDec19WelsI8x8LumaPredH_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$mask53 = 0, $$mask54 = 0, $$mask55 = 0, $$mask56 = 0, $$mask57 = 0, $$mask58 = 0, $$mask59 = 0, $$sink42$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = $1;
 $6 = $1 << 1;
 $7 = ((($4)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ($1*3)|0;
 $9 = ((($4)) + 12|0);
 HEAP32[$9>>2] = $8;
 $10 = $1 << 2;
 $11 = ((($4)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ($1*5)|0;
 $13 = ((($4)) + 20|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*6)|0;
 $15 = ((($4)) + 24|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*7)|0;
 $17 = ((($4)) + 28|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($0)) + -1|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19&255;
 if ($2) {
  $21 = $1 ^ -1;
  $22 = (($0) + ($21)|0);
  $23 = HEAP8[$22>>0]|0;
  $24 = $23&255;
  $25 = $20 << 1;
  $26 = (($24) + ($25))|0;
  $$sink42$ph = $26;
 } else {
  $27 = ($20*3)|0;
  $$sink42$ph = $27;
 }
 $28 = (($1) + -1)|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($$sink42$ph) + 2)|0;
 $33 = (($32) + ($31))|0;
 $34 = $33 >>> 2;
 $35 = $31 << 1;
 $36 = (($35) + ($20))|0;
 $37 = (($6) + -1)|0;
 $38 = (($0) + ($37)|0);
 $39 = HEAP8[$38>>0]|0;
 $40 = $39&255;
 $41 = (($36) + 2)|0;
 $42 = (($41) + ($40))|0;
 $43 = $42 >>> 2;
 $44 = $40 << 1;
 $45 = (($44) + ($31))|0;
 $46 = (($8) + -1)|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (($45) + 2)|0;
 $51 = (($50) + ($49))|0;
 $52 = $51 >>> 2;
 $53 = $49 << 1;
 $54 = (($53) + ($40))|0;
 $55 = (($10) + -1)|0;
 $56 = (($0) + ($55)|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = $57&255;
 $59 = (($54) + 2)|0;
 $60 = (($59) + ($58))|0;
 $61 = $60 >>> 2;
 $62 = $58 << 1;
 $63 = (($62) + ($49))|0;
 $64 = (($12) + -1)|0;
 $65 = (($0) + ($64)|0);
 $66 = HEAP8[$65>>0]|0;
 $67 = $66&255;
 $68 = (($63) + 2)|0;
 $69 = (($68) + ($67))|0;
 $70 = $69 >>> 2;
 $71 = $67 << 1;
 $72 = (($71) + ($58))|0;
 $73 = (($14) + -1)|0;
 $74 = (($0) + ($73)|0);
 $75 = HEAP8[$74>>0]|0;
 $76 = $75&255;
 $77 = (($72) + 2)|0;
 $78 = (($77) + ($76))|0;
 $79 = $78 >>> 2;
 $80 = $76 << 1;
 $81 = (($80) + ($67))|0;
 $82 = (($16) + -1)|0;
 $83 = (($0) + ($82)|0);
 $84 = HEAP8[$83>>0]|0;
 $85 = $84&255;
 $86 = (($81) + 2)|0;
 $87 = (($86) + ($85))|0;
 $88 = $87 >>> 2;
 $89 = ($85*3)|0;
 $90 = (($76) + 2)|0;
 $91 = (($90) + ($89))|0;
 $92 = $91 >>> 2;
 $$mask = $34 & 255;
 $93 = (___muldi3(($$mask|0),0,16843009,16843009)|0);
 $94 = tempRet0;
 $95 = $0;
 $96 = $95;
 HEAP32[$96>>2] = $93;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = $94;
 $$mask53 = $43 & 255;
 $99 = (___muldi3(($$mask53|0),0,16843009,16843009)|0);
 $100 = tempRet0;
 $101 = (($0) + ($1)|0);
 $102 = $101;
 $103 = $102;
 HEAP32[$103>>2] = $99;
 $104 = (($102) + 4)|0;
 $105 = $104;
 HEAP32[$105>>2] = $100;
 $$mask54 = $52 & 255;
 $106 = (___muldi3(($$mask54|0),0,16843009,16843009)|0);
 $107 = tempRet0;
 $108 = HEAP32[$7>>2]|0;
 $109 = (($0) + ($108)|0);
 $110 = $109;
 $111 = $110;
 HEAP32[$111>>2] = $106;
 $112 = (($110) + 4)|0;
 $113 = $112;
 HEAP32[$113>>2] = $107;
 $$mask55 = $61 & 255;
 $114 = (___muldi3(($$mask55|0),0,16843009,16843009)|0);
 $115 = tempRet0;
 $116 = HEAP32[$9>>2]|0;
 $117 = (($0) + ($116)|0);
 $118 = $117;
 $119 = $118;
 HEAP32[$119>>2] = $114;
 $120 = (($118) + 4)|0;
 $121 = $120;
 HEAP32[$121>>2] = $115;
 $$mask56 = $70 & 255;
 $122 = (___muldi3(($$mask56|0),0,16843009,16843009)|0);
 $123 = tempRet0;
 $124 = HEAP32[$11>>2]|0;
 $125 = (($0) + ($124)|0);
 $126 = $125;
 $127 = $126;
 HEAP32[$127>>2] = $122;
 $128 = (($126) + 4)|0;
 $129 = $128;
 HEAP32[$129>>2] = $123;
 $$mask57 = $79 & 255;
 $130 = (___muldi3(($$mask57|0),0,16843009,16843009)|0);
 $131 = tempRet0;
 $132 = HEAP32[$13>>2]|0;
 $133 = (($0) + ($132)|0);
 $134 = $133;
 $135 = $134;
 HEAP32[$135>>2] = $130;
 $136 = (($134) + 4)|0;
 $137 = $136;
 HEAP32[$137>>2] = $131;
 $$mask58 = $88 & 255;
 $138 = (___muldi3(($$mask58|0),0,16843009,16843009)|0);
 $139 = tempRet0;
 $140 = HEAP32[$15>>2]|0;
 $141 = (($0) + ($140)|0);
 $142 = $141;
 $143 = $142;
 HEAP32[$143>>2] = $138;
 $144 = (($142) + 4)|0;
 $145 = $144;
 HEAP32[$145>>2] = $139;
 $$mask59 = $92 & 255;
 $146 = (___muldi3(($$mask59|0),0,16843009,16843009)|0);
 $147 = tempRet0;
 $148 = HEAP32[$17>>2]|0;
 $149 = (($0) + ($148)|0);
 $150 = $149;
 $151 = $150;
 HEAP32[$151>>2] = $146;
 $152 = (($150) + 4)|0;
 $153 = $152;
 HEAP32[$153>>2] = $147;
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI8x8LumaPredDc_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$sink = 0, $$sink19 = 0, $$sink89$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 40|0;
 $6 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $7 = ((($4)) + 4|0);
 HEAP32[$7>>2] = $1;
 $8 = $1 << 1;
 $9 = ((($4)) + 8|0);
 HEAP32[$9>>2] = $8;
 $10 = ($1*3)|0;
 $11 = ((($4)) + 12|0);
 HEAP32[$11>>2] = $10;
 $12 = $1 << 2;
 $13 = ((($4)) + 16|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*5)|0;
 $15 = ((($4)) + 20|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*6)|0;
 $17 = ((($4)) + 24|0);
 HEAP32[$17>>2] = $16;
 $18 = ($1*7)|0;
 $19 = ((($4)) + 28|0);
 HEAP32[$19>>2] = $18;
 $20 = ((($0)) + -1|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 if ($2) {
  $23 = $1 ^ -1;
  $24 = (($0) + ($23)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = $22 << 1;
  $28 = (($26) + ($27))|0;
  $$sink = $28;
 } else {
  $29 = ($22*3)|0;
  $$sink = $29;
 }
 $30 = (($1) + -1)|0;
 $31 = (($0) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($$sink) + 2)|0;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 2;
 $37 = $36&255;
 HEAP8[$5>>0] = $37;
 $38 = (0 - ($1))|0;
 $39 = (($0) + ($38)|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&255;
 if ($2) {
  $42 = $1 ^ -1;
  $43 = (($0) + ($42)|0);
  $44 = HEAP8[$43>>0]|0;
  $45 = $44&255;
  $46 = $41 << 1;
  $47 = (($45) + ($46))|0;
  $$sink89$ph = $47;
 } else {
  $48 = ($41*3)|0;
  $$sink89$ph = $48;
 }
 $49 = (1 - ($1))|0;
 $50 = (($0) + ($49)|0);
 $51 = HEAP8[$50>>0]|0;
 $52 = $51&255;
 $53 = (($$sink89$ph) + 2)|0;
 $54 = (($53) + ($52))|0;
 $55 = $54 >>> 2;
 $56 = $55&255;
 HEAP8[$6>>0] = $56;
 $57 = $21&255;
 $58 = $32&255;
 $59 = $58 << 1;
 $60 = ((($4)) + 8|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = (($61) + -1)|0;
 $63 = (($0) + ($62)|0);
 $64 = HEAP8[$63>>0]|0;
 $65 = $64&255;
 $66 = (($57) + 2)|0;
 $67 = (($66) + ($59))|0;
 $68 = (($67) + ($65))|0;
 $69 = $68 >>> 2;
 $70 = $69&255;
 $71 = ((($5)) + 1|0);
 HEAP8[$71>>0] = $70;
 $72 = (0 - ($1))|0;
 $73 = (($0) + ($72)|0);
 $74 = HEAP8[$73>>0]|0;
 $75 = $74&255;
 $76 = $51&255;
 $77 = $76 << 1;
 $78 = (($77) + ($75))|0;
 $79 = (2 - ($1))|0;
 $80 = (($0) + ($79)|0);
 $81 = HEAP8[$80>>0]|0;
 $82 = $81&255;
 $83 = (($78) + 2)|0;
 $84 = (($83) + ($82))|0;
 $85 = $84 >>> 2;
 $86 = $85&255;
 $87 = ((($6)) + 1|0);
 HEAP8[$87>>0] = $86;
 $88 = $32&255;
 $89 = $64&255;
 $90 = $89 << 1;
 $91 = ((($4)) + 12|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = (($92) + -1)|0;
 $94 = (($0) + ($93)|0);
 $95 = HEAP8[$94>>0]|0;
 $96 = $95&255;
 $97 = (($88) + 2)|0;
 $98 = (($97) + ($90))|0;
 $99 = (($98) + ($96))|0;
 $100 = $99 >>> 2;
 $101 = $100&255;
 $102 = ((($5)) + 2|0);
 HEAP8[$102>>0] = $101;
 $103 = (1 - ($1))|0;
 $104 = (($0) + ($103)|0);
 $105 = HEAP8[$104>>0]|0;
 $106 = $105&255;
 $107 = $81&255;
 $108 = $107 << 1;
 $109 = (($108) + ($106))|0;
 $110 = (3 - ($1))|0;
 $111 = (($0) + ($110)|0);
 $112 = HEAP8[$111>>0]|0;
 $113 = $112&255;
 $114 = (($109) + 2)|0;
 $115 = (($114) + ($113))|0;
 $116 = $115 >>> 2;
 $117 = $116&255;
 $118 = ((($6)) + 2|0);
 HEAP8[$118>>0] = $117;
 $119 = $64&255;
 $120 = $95&255;
 $121 = $120 << 1;
 $122 = ((($4)) + 16|0);
 $123 = HEAP32[$122>>2]|0;
 $124 = (($123) + -1)|0;
 $125 = (($0) + ($124)|0);
 $126 = HEAP8[$125>>0]|0;
 $127 = $126&255;
 $128 = (($119) + 2)|0;
 $129 = (($128) + ($121))|0;
 $130 = (($129) + ($127))|0;
 $131 = $130 >>> 2;
 $132 = $131&255;
 $133 = ((($5)) + 3|0);
 HEAP8[$133>>0] = $132;
 $134 = (2 - ($1))|0;
 $135 = (($0) + ($134)|0);
 $136 = HEAP8[$135>>0]|0;
 $137 = $136&255;
 $138 = $112&255;
 $139 = $138 << 1;
 $140 = (($139) + ($137))|0;
 $141 = (4 - ($1))|0;
 $142 = (($0) + ($141)|0);
 $143 = HEAP8[$142>>0]|0;
 $144 = $143&255;
 $145 = (($140) + 2)|0;
 $146 = (($145) + ($144))|0;
 $147 = $146 >>> 2;
 $148 = $147&255;
 $149 = ((($6)) + 3|0);
 HEAP8[$149>>0] = $148;
 $150 = $95&255;
 $151 = $126&255;
 $152 = $151 << 1;
 $153 = ((($4)) + 20|0);
 $154 = HEAP32[$153>>2]|0;
 $155 = (($154) + -1)|0;
 $156 = (($0) + ($155)|0);
 $157 = HEAP8[$156>>0]|0;
 $158 = $157&255;
 $159 = (($150) + 2)|0;
 $160 = (($159) + ($152))|0;
 $161 = (($160) + ($158))|0;
 $162 = $161 >>> 2;
 $163 = $162&255;
 $164 = ((($5)) + 4|0);
 HEAP8[$164>>0] = $163;
 $165 = (3 - ($1))|0;
 $166 = (($0) + ($165)|0);
 $167 = HEAP8[$166>>0]|0;
 $168 = $167&255;
 $169 = $143&255;
 $170 = $169 << 1;
 $171 = (($170) + ($168))|0;
 $172 = (5 - ($1))|0;
 $173 = (($0) + ($172)|0);
 $174 = HEAP8[$173>>0]|0;
 $175 = $174&255;
 $176 = (($171) + 2)|0;
 $177 = (($176) + ($175))|0;
 $178 = $177 >>> 2;
 $179 = $178&255;
 $180 = ((($6)) + 4|0);
 HEAP8[$180>>0] = $179;
 $181 = $126&255;
 $182 = $157&255;
 $183 = $182 << 1;
 $184 = ((($4)) + 24|0);
 $185 = HEAP32[$184>>2]|0;
 $186 = (($185) + -1)|0;
 $187 = (($0) + ($186)|0);
 $188 = HEAP8[$187>>0]|0;
 $189 = $188&255;
 $190 = (($181) + 2)|0;
 $191 = (($190) + ($183))|0;
 $192 = (($191) + ($189))|0;
 $193 = $192 >>> 2;
 $194 = $193&255;
 $195 = ((($5)) + 5|0);
 HEAP8[$195>>0] = $194;
 $196 = (4 - ($1))|0;
 $197 = (($0) + ($196)|0);
 $198 = HEAP8[$197>>0]|0;
 $199 = $198&255;
 $200 = $174&255;
 $201 = $200 << 1;
 $202 = (($201) + ($199))|0;
 $203 = (6 - ($1))|0;
 $204 = (($0) + ($203)|0);
 $205 = HEAP8[$204>>0]|0;
 $206 = $205&255;
 $207 = (($202) + 2)|0;
 $208 = (($207) + ($206))|0;
 $209 = $208 >>> 2;
 $210 = $209&255;
 $211 = ((($6)) + 5|0);
 HEAP8[$211>>0] = $210;
 $212 = $157&255;
 $213 = $188&255;
 $214 = $213 << 1;
 $215 = ((($4)) + 28|0);
 $216 = HEAP32[$215>>2]|0;
 $217 = (($216) + -1)|0;
 $218 = (($0) + ($217)|0);
 $219 = HEAP8[$218>>0]|0;
 $220 = $219&255;
 $221 = (($212) + 2)|0;
 $222 = (($221) + ($214))|0;
 $223 = (($222) + ($220))|0;
 $224 = $223 >>> 2;
 $225 = $224&255;
 $226 = ((($5)) + 6|0);
 HEAP8[$226>>0] = $225;
 $227 = (5 - ($1))|0;
 $228 = (($0) + ($227)|0);
 $229 = HEAP8[$228>>0]|0;
 $230 = $229&255;
 $231 = $205&255;
 $232 = $231 << 1;
 $233 = (($232) + ($230))|0;
 $234 = (7 - ($1))|0;
 $235 = (($0) + ($234)|0);
 $236 = HEAP8[$235>>0]|0;
 $237 = $236&255;
 $238 = (($233) + 2)|0;
 $239 = (($238) + ($237))|0;
 $240 = $239 >>> 2;
 $241 = $240&255;
 $242 = ((($6)) + 6|0);
 HEAP8[$242>>0] = $241;
 $243 = (($16) + -1)|0;
 $244 = (($0) + ($243)|0);
 $245 = HEAP8[$244>>0]|0;
 $246 = $245&255;
 $247 = (($18) + -1)|0;
 $248 = (($0) + ($247)|0);
 $249 = HEAP8[$248>>0]|0;
 $250 = $249&255;
 $251 = ($250*3)|0;
 $252 = (($246) + 2)|0;
 $253 = (($252) + ($251))|0;
 $254 = $253 >>> 2;
 $255 = $254&255;
 $256 = ((($5)) + 7|0);
 HEAP8[$256>>0] = $255;
 $257 = (6 - ($1))|0;
 $258 = (($0) + ($257)|0);
 $259 = HEAP8[$258>>0]|0;
 $260 = $259&255;
 $261 = (7 - ($1))|0;
 $262 = (($0) + ($261)|0);
 $263 = HEAP8[$262>>0]|0;
 $264 = $263&255;
 if ($3) {
  $265 = $264 << 1;
  $266 = (($265) + ($260))|0;
  $267 = (8 - ($1))|0;
  $268 = (($0) + ($267)|0);
  $269 = HEAP8[$268>>0]|0;
  $270 = $269&255;
  $271 = (($266) + ($270))|0;
  $$sink19 = $271;
 } else {
  $272 = ($264*3)|0;
  $273 = (($272) + ($260))|0;
  $$sink19 = $273;
 }
 $274 = (($$sink19) + 2)|0;
 $275 = $274 >>> 2;
 $276 = $275&255;
 $277 = ((($6)) + 7|0);
 HEAP8[$277>>0] = $276;
 $278 = HEAP8[$5>>0]|0;
 $279 = $278&255;
 $280 = HEAP8[$6>>0]|0;
 $281 = $280&255;
 $282 = (($279) + ($281))|0;
 $283 = ((($5)) + 1|0);
 $284 = HEAP8[$283>>0]|0;
 $285 = $284&255;
 $286 = (($285) + ($282))|0;
 $287 = ((($6)) + 1|0);
 $288 = HEAP8[$287>>0]|0;
 $289 = $288&255;
 $290 = (($286) + ($289))|0;
 $291 = ((($5)) + 2|0);
 $292 = HEAP8[$291>>0]|0;
 $293 = $292&255;
 $294 = (($293) + ($290))|0;
 $295 = ((($6)) + 2|0);
 $296 = HEAP8[$295>>0]|0;
 $297 = $296&255;
 $298 = (($294) + ($297))|0;
 $299 = ((($5)) + 3|0);
 $300 = HEAP8[$299>>0]|0;
 $301 = $300&255;
 $302 = (($301) + ($298))|0;
 $303 = ((($6)) + 3|0);
 $304 = HEAP8[$303>>0]|0;
 $305 = $304&255;
 $306 = (($302) + ($305))|0;
 $307 = ((($5)) + 4|0);
 $308 = HEAP8[$307>>0]|0;
 $309 = $308&255;
 $310 = (($309) + ($306))|0;
 $311 = ((($6)) + 4|0);
 $312 = HEAP8[$311>>0]|0;
 $313 = $312&255;
 $314 = (($310) + ($313))|0;
 $315 = ((($5)) + 5|0);
 $316 = HEAP8[$315>>0]|0;
 $317 = $316&255;
 $318 = (($317) + ($314))|0;
 $319 = ((($6)) + 5|0);
 $320 = HEAP8[$319>>0]|0;
 $321 = $320&255;
 $322 = (($318) + ($321))|0;
 $323 = ((($5)) + 6|0);
 $324 = HEAP8[$323>>0]|0;
 $325 = $324&255;
 $326 = (($325) + ($322))|0;
 $327 = ((($6)) + 6|0);
 $328 = HEAP8[$327>>0]|0;
 $329 = $328&255;
 $330 = (($326) + ($329))|0;
 $331 = $254 & 255;
 $332 = (($331) + ($330))|0;
 $333 = $275 & 255;
 $334 = (($332) + ($333))|0;
 $335 = (($334) + 8)|0;
 $336 = $335 >>> 4;
 $$mask = $336 & 255;
 $337 = (___muldi3(($$mask|0),0,16843009,16843009)|0);
 $338 = tempRet0;
 $339 = $0;
 $340 = $339;
 HEAP32[$340>>2] = $337;
 $341 = (($339) + 4)|0;
 $342 = $341;
 HEAP32[$342>>2] = $338;
 $343 = (($0) + ($1)|0);
 $344 = $343;
 $345 = $344;
 HEAP32[$345>>2] = $337;
 $346 = (($344) + 4)|0;
 $347 = $346;
 HEAP32[$347>>2] = $338;
 $348 = (($0) + ($8)|0);
 $349 = $348;
 $350 = $349;
 HEAP32[$350>>2] = $337;
 $351 = (($349) + 4)|0;
 $352 = $351;
 HEAP32[$352>>2] = $338;
 $353 = (($0) + ($10)|0);
 $354 = $353;
 $355 = $354;
 HEAP32[$355>>2] = $337;
 $356 = (($354) + 4)|0;
 $357 = $356;
 HEAP32[$357>>2] = $338;
 $358 = (($0) + ($12)|0);
 $359 = $358;
 $360 = $359;
 HEAP32[$360>>2] = $337;
 $361 = (($359) + 4)|0;
 $362 = $361;
 HEAP32[$362>>2] = $338;
 $363 = (($0) + ($14)|0);
 $364 = $363;
 $365 = $364;
 HEAP32[$365>>2] = $337;
 $366 = (($364) + 4)|0;
 $367 = $366;
 HEAP32[$367>>2] = $338;
 $368 = (($0) + ($16)|0);
 $369 = $368;
 $370 = $369;
 HEAP32[$370>>2] = $337;
 $371 = (($369) + 4)|0;
 $372 = $371;
 HEAP32[$372>>2] = $338;
 $373 = (($0) + ($18)|0);
 $374 = $373;
 $375 = $374;
 HEAP32[$375>>2] = $337;
 $376 = (($374) + 4)|0;
 $377 = $376;
 HEAP32[$377>>2] = $338;
 STACKTOP = sp;return;
}
function __ZN7WelsDec24WelsI8x8LumaPredDcLeft_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$sink50$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = $1;
 $6 = $1 << 1;
 $7 = ((($4)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ($1*3)|0;
 $9 = ((($4)) + 12|0);
 HEAP32[$9>>2] = $8;
 $10 = $1 << 2;
 $11 = ((($4)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ($1*5)|0;
 $13 = ((($4)) + 20|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*6)|0;
 $15 = ((($4)) + 24|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*7)|0;
 $17 = ((($4)) + 28|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($0)) + -1|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19&255;
 if ($2) {
  $21 = $1 ^ -1;
  $22 = (($0) + ($21)|0);
  $23 = HEAP8[$22>>0]|0;
  $24 = $23&255;
  $25 = $20 << 1;
  $26 = (($24) + ($25))|0;
  $$sink50$ph = $26;
 } else {
  $27 = ($20*3)|0;
  $$sink50$ph = $27;
 }
 $28 = (($1) + -1)|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($$sink50$ph) + 2)|0;
 $33 = (($32) + ($31))|0;
 $34 = $33 >>> 2;
 $35 = $31 << 1;
 $36 = (($35) + ($20))|0;
 $37 = (($6) + -1)|0;
 $38 = (($0) + ($37)|0);
 $39 = HEAP8[$38>>0]|0;
 $40 = $39&255;
 $41 = (($36) + 2)|0;
 $42 = (($41) + ($40))|0;
 $43 = $42 >>> 2;
 $44 = $40 << 1;
 $45 = (($44) + ($31))|0;
 $46 = (($8) + -1)|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (($45) + 2)|0;
 $51 = (($50) + ($49))|0;
 $52 = $51 >>> 2;
 $53 = $49 << 1;
 $54 = (($53) + ($40))|0;
 $55 = (($10) + -1)|0;
 $56 = (($0) + ($55)|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = $57&255;
 $59 = (($54) + 2)|0;
 $60 = (($59) + ($58))|0;
 $61 = $60 >>> 2;
 $62 = $58 << 1;
 $63 = (($62) + ($49))|0;
 $64 = (($12) + -1)|0;
 $65 = (($0) + ($64)|0);
 $66 = HEAP8[$65>>0]|0;
 $67 = $66&255;
 $68 = (($63) + 2)|0;
 $69 = (($68) + ($67))|0;
 $70 = $69 >>> 2;
 $71 = $67 << 1;
 $72 = (($71) + ($58))|0;
 $73 = (($14) + -1)|0;
 $74 = (($0) + ($73)|0);
 $75 = HEAP8[$74>>0]|0;
 $76 = $75&255;
 $77 = (($72) + 2)|0;
 $78 = (($77) + ($76))|0;
 $79 = $78 >>> 2;
 $80 = $76 << 1;
 $81 = (($80) + ($67))|0;
 $82 = (($16) + -1)|0;
 $83 = (($0) + ($82)|0);
 $84 = HEAP8[$83>>0]|0;
 $85 = $84&255;
 $86 = (($81) + 2)|0;
 $87 = (($86) + ($85))|0;
 $88 = $87 >>> 2;
 $89 = ($85*3)|0;
 $90 = (($76) + 2)|0;
 $91 = (($90) + ($89))|0;
 $92 = $91 >>> 2;
 $93 = $34 & 255;
 $94 = $43 & 255;
 $95 = (($94) + ($93))|0;
 $96 = $52 & 255;
 $97 = (($96) + ($95))|0;
 $98 = $61 & 255;
 $99 = (($98) + ($97))|0;
 $100 = $70 & 255;
 $101 = (($100) + ($99))|0;
 $102 = $79 & 255;
 $103 = (($102) + ($101))|0;
 $104 = $88 & 255;
 $105 = (($104) + ($103))|0;
 $106 = $92 & 255;
 $107 = (($106) + ($105))|0;
 $108 = (($107) + 4)|0;
 $109 = $108 >>> 3;
 $$mask = $109 & 255;
 $110 = (___muldi3(($$mask|0),0,16843009,16843009)|0);
 $111 = tempRet0;
 $112 = HEAP32[$4>>2]|0;
 $113 = (($0) + ($112)|0);
 $114 = $113;
 $115 = $114;
 HEAP32[$115>>2] = $110;
 $116 = (($114) + 4)|0;
 $117 = $116;
 HEAP32[$117>>2] = $111;
 $118 = HEAP32[$5>>2]|0;
 $119 = (($0) + ($118)|0);
 $120 = $119;
 $121 = $120;
 HEAP32[$121>>2] = $110;
 $122 = (($120) + 4)|0;
 $123 = $122;
 HEAP32[$123>>2] = $111;
 $124 = HEAP32[$7>>2]|0;
 $125 = (($0) + ($124)|0);
 $126 = $125;
 $127 = $126;
 HEAP32[$127>>2] = $110;
 $128 = (($126) + 4)|0;
 $129 = $128;
 HEAP32[$129>>2] = $111;
 $130 = HEAP32[$9>>2]|0;
 $131 = (($0) + ($130)|0);
 $132 = $131;
 $133 = $132;
 HEAP32[$133>>2] = $110;
 $134 = (($132) + 4)|0;
 $135 = $134;
 HEAP32[$135>>2] = $111;
 $136 = HEAP32[$11>>2]|0;
 $137 = (($0) + ($136)|0);
 $138 = $137;
 $139 = $138;
 HEAP32[$139>>2] = $110;
 $140 = (($138) + 4)|0;
 $141 = $140;
 HEAP32[$141>>2] = $111;
 $142 = HEAP32[$13>>2]|0;
 $143 = (($0) + ($142)|0);
 $144 = $143;
 $145 = $144;
 HEAP32[$145>>2] = $110;
 $146 = (($144) + 4)|0;
 $147 = $146;
 HEAP32[$147>>2] = $111;
 $148 = HEAP32[$15>>2]|0;
 $149 = (($0) + ($148)|0);
 $150 = $149;
 $151 = $150;
 HEAP32[$151>>2] = $110;
 $152 = (($150) + 4)|0;
 $153 = $152;
 HEAP32[$153>>2] = $111;
 $154 = HEAP32[$17>>2]|0;
 $155 = (($0) + ($154)|0);
 $156 = $155;
 $157 = $156;
 HEAP32[$157>>2] = $110;
 $158 = (($156) + 4)|0;
 $159 = $158;
 HEAP32[$159>>2] = $111;
 STACKTOP = sp;return;
}
function __ZN7WelsDec23WelsI8x8LumaPredDcTop_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink63$ph = 0, $$sink9 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = $1;
 $6 = $1 << 1;
 $7 = ((($4)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ($1*3)|0;
 $9 = ((($4)) + 12|0);
 HEAP32[$9>>2] = $8;
 $10 = $1 << 2;
 $11 = ((($4)) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = ($1*5)|0;
 $13 = ((($4)) + 20|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*6)|0;
 $15 = ((($4)) + 24|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*7)|0;
 $17 = ((($4)) + 28|0);
 HEAP32[$17>>2] = $16;
 $18 = (0 - ($1))|0;
 $19 = (($0) + ($18)|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $20&255;
 if ($2) {
  $22 = $1 ^ -1;
  $23 = (($0) + ($22)|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = $21 << 1;
  $27 = (($25) + ($26))|0;
  $$pre$phiZ2D = $22;$$sink63$ph = $27;
 } else {
  $28 = ($21*3)|0;
  $$pre = $1 ^ -1;
  $$pre$phiZ2D = $$pre;$$sink63$ph = $28;
 }
 $29 = (1 - ($1))|0;
 $30 = (($0) + ($29)|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = (($$sink63$ph) + 2)|0;
 $34 = (($33) + ($32))|0;
 $35 = $34 >>> 2;
 $36 = (($$pre$phiZ2D) + 1)|0;
 $37 = (($0) + ($36)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = $32 << 1;
 $41 = (($40) + ($39))|0;
 $42 = (2 - ($1))|0;
 $43 = (($0) + ($42)|0);
 $44 = HEAP8[$43>>0]|0;
 $45 = $44&255;
 $46 = (($41) + 2)|0;
 $47 = (($46) + ($45))|0;
 $48 = $47 >>> 2;
 $49 = (($$pre$phiZ2D) + 2)|0;
 $50 = (($0) + ($49)|0);
 $51 = HEAP8[$50>>0]|0;
 $52 = $51&255;
 $53 = $45 << 1;
 $54 = (($53) + ($52))|0;
 $55 = (3 - ($1))|0;
 $56 = (($0) + ($55)|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = $57&255;
 $59 = (($54) + 2)|0;
 $60 = (($59) + ($58))|0;
 $61 = $60 >>> 2;
 $62 = (($$pre$phiZ2D) + 3)|0;
 $63 = (($0) + ($62)|0);
 $64 = HEAP8[$63>>0]|0;
 $65 = $64&255;
 $66 = $58 << 1;
 $67 = (($66) + ($65))|0;
 $68 = (4 - ($1))|0;
 $69 = (($0) + ($68)|0);
 $70 = HEAP8[$69>>0]|0;
 $71 = $70&255;
 $72 = (($67) + 2)|0;
 $73 = (($72) + ($71))|0;
 $74 = $73 >>> 2;
 $75 = (($$pre$phiZ2D) + 4)|0;
 $76 = (($0) + ($75)|0);
 $77 = HEAP8[$76>>0]|0;
 $78 = $77&255;
 $79 = $71 << 1;
 $80 = (($79) + ($78))|0;
 $81 = (5 - ($1))|0;
 $82 = (($0) + ($81)|0);
 $83 = HEAP8[$82>>0]|0;
 $84 = $83&255;
 $85 = (($80) + 2)|0;
 $86 = (($85) + ($84))|0;
 $87 = $86 >>> 2;
 $88 = (($$pre$phiZ2D) + 5)|0;
 $89 = (($0) + ($88)|0);
 $90 = HEAP8[$89>>0]|0;
 $91 = $90&255;
 $92 = $84 << 1;
 $93 = (($92) + ($91))|0;
 $94 = (6 - ($1))|0;
 $95 = (($0) + ($94)|0);
 $96 = HEAP8[$95>>0]|0;
 $97 = $96&255;
 $98 = (($93) + 2)|0;
 $99 = (($98) + ($97))|0;
 $100 = $99 >>> 2;
 $101 = (($$pre$phiZ2D) + 6)|0;
 $102 = (($0) + ($101)|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = $103&255;
 $105 = $97 << 1;
 $106 = (($105) + ($104))|0;
 $107 = (7 - ($1))|0;
 $108 = (($0) + ($107)|0);
 $109 = HEAP8[$108>>0]|0;
 $110 = $109&255;
 $111 = (($106) + 2)|0;
 $112 = (($111) + ($110))|0;
 $113 = $112 >>> 2;
 if ($3) {
  $114 = $110 << 1;
  $115 = (($114) + ($97))|0;
  $116 = (8 - ($1))|0;
  $117 = (($0) + ($116)|0);
  $118 = HEAP8[$117>>0]|0;
  $119 = $118&255;
  $120 = (($115) + ($119))|0;
  $$sink9 = $120;
 } else {
  $121 = ($110*3)|0;
  $122 = (($121) + ($97))|0;
  $$sink9 = $122;
 }
 $123 = (($$sink9) + 2)|0;
 $124 = $123 >>> 2;
 $125 = $35 & 255;
 $126 = $48 & 255;
 $127 = (($126) + ($125))|0;
 $128 = $61 & 255;
 $129 = (($128) + ($127))|0;
 $130 = $74 & 255;
 $131 = (($130) + ($129))|0;
 $132 = $87 & 255;
 $133 = (($132) + ($131))|0;
 $134 = $100 & 255;
 $135 = (($134) + ($133))|0;
 $136 = $113 & 255;
 $137 = (($136) + ($135))|0;
 $138 = $124 & 255;
 $139 = (($138) + ($137))|0;
 $140 = (($139) + 4)|0;
 $141 = $140 >>> 3;
 $$mask = $141 & 255;
 $142 = (___muldi3(($$mask|0),0,16843009,16843009)|0);
 $143 = tempRet0;
 $144 = HEAP32[$4>>2]|0;
 $145 = (($0) + ($144)|0);
 $146 = $145;
 $147 = $146;
 HEAP32[$147>>2] = $142;
 $148 = (($146) + 4)|0;
 $149 = $148;
 HEAP32[$149>>2] = $143;
 $150 = HEAP32[$5>>2]|0;
 $151 = (($0) + ($150)|0);
 $152 = $151;
 $153 = $152;
 HEAP32[$153>>2] = $142;
 $154 = (($152) + 4)|0;
 $155 = $154;
 HEAP32[$155>>2] = $143;
 $156 = HEAP32[$7>>2]|0;
 $157 = (($0) + ($156)|0);
 $158 = $157;
 $159 = $158;
 HEAP32[$159>>2] = $142;
 $160 = (($158) + 4)|0;
 $161 = $160;
 HEAP32[$161>>2] = $143;
 $162 = HEAP32[$9>>2]|0;
 $163 = (($0) + ($162)|0);
 $164 = $163;
 $165 = $164;
 HEAP32[$165>>2] = $142;
 $166 = (($164) + 4)|0;
 $167 = $166;
 HEAP32[$167>>2] = $143;
 $168 = HEAP32[$11>>2]|0;
 $169 = (($0) + ($168)|0);
 $170 = $169;
 $171 = $170;
 HEAP32[$171>>2] = $142;
 $172 = (($170) + 4)|0;
 $173 = $172;
 HEAP32[$173>>2] = $143;
 $174 = HEAP32[$13>>2]|0;
 $175 = (($0) + ($174)|0);
 $176 = $175;
 $177 = $176;
 HEAP32[$177>>2] = $142;
 $178 = (($176) + 4)|0;
 $179 = $178;
 HEAP32[$179>>2] = $143;
 $180 = HEAP32[$15>>2]|0;
 $181 = (($0) + ($180)|0);
 $182 = $181;
 $183 = $182;
 HEAP32[$183>>2] = $142;
 $184 = (($182) + 4)|0;
 $185 = $184;
 HEAP32[$185>>2] = $143;
 $186 = HEAP32[$17>>2]|0;
 $187 = (($0) + ($186)|0);
 $188 = $187;
 $189 = $188;
 HEAP32[$189>>2] = $142;
 $190 = (($188) + 4)|0;
 $191 = $190;
 HEAP32[$191>>2] = $143;
 STACKTOP = sp;return;
}
function __ZN7WelsDec22WelsI8x8LumaPredDcNA_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $0;
 $5 = $4;
 HEAP32[$5>>2] = -2139062144;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = -2139062144;
 $8 = (($0) + ($1)|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -2139062144;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -2139062144;
 $13 = $1 << 1;
 $14 = (($0) + ($13)|0);
 $15 = $14;
 $16 = $15;
 HEAP32[$16>>2] = -2139062144;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = -2139062144;
 $19 = ($1*3)|0;
 $20 = (($0) + ($19)|0);
 $21 = $20;
 $22 = $21;
 HEAP32[$22>>2] = -2139062144;
 $23 = (($21) + 4)|0;
 $24 = $23;
 HEAP32[$24>>2] = -2139062144;
 $25 = $1 << 2;
 $26 = (($0) + ($25)|0);
 $27 = $26;
 $28 = $27;
 HEAP32[$28>>2] = -2139062144;
 $29 = (($27) + 4)|0;
 $30 = $29;
 HEAP32[$30>>2] = -2139062144;
 $31 = ($1*5)|0;
 $32 = (($0) + ($31)|0);
 $33 = $32;
 $34 = $33;
 HEAP32[$34>>2] = -2139062144;
 $35 = (($33) + 4)|0;
 $36 = $35;
 HEAP32[$36>>2] = -2139062144;
 $37 = ($1*6)|0;
 $38 = (($0) + ($37)|0);
 $39 = $38;
 $40 = $39;
 HEAP32[$40>>2] = -2139062144;
 $41 = (($39) + 4)|0;
 $42 = $41;
 HEAP32[$42>>2] = -2139062144;
 $43 = ($1*7)|0;
 $44 = (($0) + ($43)|0);
 $45 = $44;
 $46 = $45;
 HEAP32[$46>>2] = -2139062144;
 $47 = (($45) + 4)|0;
 $48 = $47;
 HEAP32[$48>>2] = -2139062144;
 return;
}
function __ZN7WelsDec21WelsI8x8LumaPredDDL_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$27899 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi95Z2D = 0, $$pre94 = 0, $$sink70$ph = 0, $$sink7580 = 0, $$sink9 = 0, $$sink9$1 = 0, $$sink9$2 = 0, $$sink9$3 = 0, $$sink9$4 = 0, $$sink9$5 = 0, $$sink9$6 = 0, $$sink9$7 = 0, $$sink9$in = 0, $$sink9$in$1 = 0, $$sink9$in$2 = 0, $$sink9$in$3 = 0, $$sink9$in$4 = 0;
 var $$sink9$in$5 = 0, $$sink9$in$6 = 0, $$sink9$in$7 = 0, $$sink9$in$in = 0, $$sink9$in$in$1 = 0, $$sink9$in$in$2 = 0, $$sink9$in$in$3 = 0, $$sink9$in$in$4 = 0, $$sink9$in$in$5 = 0, $$sink9$in$in$6 = 0, $$sink9$in$in$7 = 0, $$sink9$in$in$us = 0, $$sink9$in$in$us$1 = 0, $$sink9$in$in$us$2 = 0, $$sink9$in$in$us$3 = 0, $$sink9$in$in$us$4 = 0, $$sink9$in$in$us$5 = 0, $$sink9$in$in$us$6 = 0, $$sink9$in$in$us$7 = 0, $$sink9$in$us = 0;
 var $$sink9$in$us$1 = 0, $$sink9$in$us$2 = 0, $$sink9$in$us$3 = 0, $$sink9$in$us$4 = 0, $$sink9$in$us$5 = 0, $$sink9$in$us$6 = 0, $$sink9$in$us$7 = 0, $$sink9$us = 0, $$sink9$us$1 = 0, $$sink9$us$2 = 0, $$sink9$us$3 = 0, $$sink9$us$4 = 0, $$sink9$us$5 = 0, $$sink9$us$6 = 0, $$sink9$us$7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = $1 << 1;
 $8 = ((($4)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1*3)|0;
 $10 = ((($4)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = $1 << 2;
 $12 = ((($4)) + 16|0);
 HEAP32[$12>>2] = $11;
 $13 = ($1*5)|0;
 $14 = ((($4)) + 20|0);
 HEAP32[$14>>2] = $13;
 $15 = ($1*6)|0;
 $16 = ((($4)) + 24|0);
 HEAP32[$16>>2] = $15;
 $17 = ($1*7)|0;
 $18 = ((($4)) + 28|0);
 HEAP32[$18>>2] = $17;
 $19 = (0 - ($1))|0;
 $20 = (($0) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 if ($2) {
  $23 = $1 ^ -1;
  $24 = (($0) + ($23)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = $22 << 1;
  $28 = (($26) + ($27))|0;
  $$pre$phi95Z2D = $23;$$sink70$ph = $28;
 } else {
  $29 = ($22*3)|0;
  $$pre94 = $1 ^ -1;
  $$pre$phi95Z2D = $$pre94;$$sink70$ph = $29;
 }
 $30 = (1 - ($1))|0;
 $31 = (($0) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($$sink70$ph) + 2)|0;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 2;
 $37 = $36&255;
 HEAP8[$5>>0] = $37;
 $$sink7580 = 1;$43 = $32;
 while(1) {
  $38 = (($$sink7580) + ($$pre$phi95Z2D))|0;
  $39 = (($0) + ($38)|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40&255;
  $42 = $43&255;
  $44 = $42 << 1;
  $45 = (($44) + ($41))|0;
  $46 = (($$sink7580) + 1)|0;
  $47 = (($46) - ($1))|0;
  $48 = (($0) + ($47)|0);
  $49 = HEAP8[$48>>0]|0;
  $50 = $49&255;
  $51 = (($45) + 2)|0;
  $52 = (($51) + ($50))|0;
  $53 = $52 >>> 2;
  $54 = $53&255;
  $55 = (($5) + ($$sink7580)|0);
  HEAP8[$55>>0] = $54;
  $exitcond91 = ($46|0)==(15);
  if ($exitcond91) {
   break;
  } else {
   $$sink7580 = $46;$43 = $49;
  }
 }
 $56 = (14 - ($1))|0;
 $57 = (($0) + ($56)|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = $58&255;
 $60 = (15 - ($1))|0;
 $61 = (($0) + ($60)|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = $62&255;
 $64 = ($63*3)|0;
 $65 = (($59) + 2)|0;
 $66 = (($65) + ($64))|0;
 $67 = $66 >>> 2;
 $68 = $67&255;
 $69 = ((($5)) + 15|0);
 HEAP8[$69>>0] = $68;
 $70 = ((($5)) + 14|0);
 $71 = HEAP8[$70>>0]|0;
 $72 = $71&255;
 $73 = $67 & 255;
 $74 = ($73*3)|0;
 $75 = (($74) + ($72))|0;
 $$27899 = 0;$91 = 0;
 while(1) {
  $76 = (($5) + ($$27899)|0);
  $77 = HEAP8[$76>>0]|0;
  $78 = $77&255;
  $79 = (($$27899) + 1)|0;
  $80 = (($5) + ($79)|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = $81&255;
  $83 = $82 << 1;
  $84 = (($83) + ($78))|0;
  $85 = (($$27899) + 2)|0;
  $86 = (($5) + ($85)|0);
  $87 = HEAP8[$86>>0]|0;
  $88 = $87&255;
  $89 = (($84) + ($88))|0;
  $$sink9$in$in = (($89) + 2)|0;
  $$sink9$in = $$sink9$in$in >>> 2;
  $$sink9 = $$sink9$in&255;
  $90 = (($0) + ($91)|0);
  HEAP8[$90>>0] = $$sink9;
  $92 = $88 << 1;
  $93 = (($92) + ($82))|0;
  $94 = (($$27899) + 3)|0;
  $95 = (($5) + ($94)|0);
  $96 = HEAP8[$95>>0]|0;
  $97 = $96&255;
  $98 = (($93) + ($97))|0;
  $$sink9$in$in$1 = (($98) + 2)|0;
  $$sink9$in$1 = $$sink9$in$in$1 >>> 2;
  $$sink9$1 = $$sink9$in$1&255;
  $99 = (($91) + 1)|0;
  $100 = (($0) + ($99)|0);
  HEAP8[$100>>0] = $$sink9$1;
  $101 = $97 << 1;
  $102 = (($101) + ($88))|0;
  $103 = (($$27899) + 4)|0;
  $104 = (($5) + ($103)|0);
  $105 = HEAP8[$104>>0]|0;
  $106 = $105&255;
  $107 = (($102) + ($106))|0;
  $$sink9$in$in$2 = (($107) + 2)|0;
  $$sink9$in$2 = $$sink9$in$in$2 >>> 2;
  $$sink9$2 = $$sink9$in$2&255;
  $108 = (($91) + 2)|0;
  $109 = (($0) + ($108)|0);
  HEAP8[$109>>0] = $$sink9$2;
  $110 = (($$27899) + 3)|0;
  $111 = (($5) + ($110)|0);
  $112 = HEAP8[$111>>0]|0;
  $113 = $112&255;
  $114 = (($$27899) + 4)|0;
  $115 = (($5) + ($114)|0);
  $116 = HEAP8[$115>>0]|0;
  $117 = $116&255;
  $118 = $117 << 1;
  $119 = (($118) + ($113))|0;
  $120 = (($$27899) + 5)|0;
  $121 = (($5) + ($120)|0);
  $122 = HEAP8[$121>>0]|0;
  $123 = $122&255;
  $124 = (($119) + ($123))|0;
  $$sink9$in$in$3 = (($124) + 2)|0;
  $$sink9$in$3 = $$sink9$in$in$3 >>> 2;
  $$sink9$3 = $$sink9$in$3&255;
  $125 = (($91) + 3)|0;
  $126 = (($0) + ($125)|0);
  HEAP8[$126>>0] = $$sink9$3;
  $127 = (($$27899) + 4)|0;
  $128 = (($5) + ($127)|0);
  $129 = HEAP8[$128>>0]|0;
  $130 = $129&255;
  $131 = (($$27899) + 5)|0;
  $132 = (($5) + ($131)|0);
  $133 = HEAP8[$132>>0]|0;
  $134 = $133&255;
  $135 = $134 << 1;
  $136 = (($135) + ($130))|0;
  $137 = (($$27899) + 6)|0;
  $138 = (($5) + ($137)|0);
  $139 = HEAP8[$138>>0]|0;
  $140 = $139&255;
  $141 = (($136) + ($140))|0;
  $$sink9$in$in$4 = (($141) + 2)|0;
  $$sink9$in$4 = $$sink9$in$in$4 >>> 2;
  $$sink9$4 = $$sink9$in$4&255;
  $142 = (($91) + 4)|0;
  $143 = (($0) + ($142)|0);
  HEAP8[$143>>0] = $$sink9$4;
  $144 = (($$27899) + 5)|0;
  $145 = (($5) + ($144)|0);
  $146 = HEAP8[$145>>0]|0;
  $147 = $146&255;
  $148 = (($$27899) + 6)|0;
  $149 = (($5) + ($148)|0);
  $150 = HEAP8[$149>>0]|0;
  $151 = $150&255;
  $152 = $151 << 1;
  $153 = (($152) + ($147))|0;
  $154 = (($$27899) + 7)|0;
  $155 = (($5) + ($154)|0);
  $156 = HEAP8[$155>>0]|0;
  $157 = $156&255;
  $158 = (($153) + ($157))|0;
  $$sink9$in$in$5 = (($158) + 2)|0;
  $$sink9$in$5 = $$sink9$in$in$5 >>> 2;
  $$sink9$5 = $$sink9$in$5&255;
  $159 = (($91) + 5)|0;
  $160 = (($0) + ($159)|0);
  HEAP8[$160>>0] = $$sink9$5;
  $161 = (($$27899) + 6)|0;
  $162 = (($5) + ($161)|0);
  $163 = HEAP8[$162>>0]|0;
  $164 = $163&255;
  $165 = (($$27899) + 7)|0;
  $166 = (($5) + ($165)|0);
  $167 = HEAP8[$166>>0]|0;
  $168 = $167&255;
  $169 = $168 << 1;
  $170 = (($169) + ($164))|0;
  $171 = (($$27899) + 8)|0;
  $172 = (($5) + ($171)|0);
  $173 = HEAP8[$172>>0]|0;
  $174 = $173&255;
  $175 = (($170) + ($174))|0;
  $$sink9$in$in$6 = (($175) + 2)|0;
  $$sink9$in$6 = $$sink9$in$in$6 >>> 2;
  $$sink9$6 = $$sink9$in$6&255;
  $176 = (($91) + 6)|0;
  $177 = (($0) + ($176)|0);
  HEAP8[$177>>0] = $$sink9$6;
  $178 = (($$27899) + 7)|0;
  $179 = (($5) + ($178)|0);
  $180 = HEAP8[$179>>0]|0;
  $181 = $180&255;
  $182 = (($$27899) + 8)|0;
  $183 = (($5) + ($182)|0);
  $184 = HEAP8[$183>>0]|0;
  $185 = $184&255;
  $186 = $185 << 1;
  $187 = (($186) + ($181))|0;
  $188 = (($$27899) + 9)|0;
  $189 = (($5) + ($188)|0);
  $190 = HEAP8[$189>>0]|0;
  $191 = $190&255;
  $192 = (($187) + ($191))|0;
  $$sink9$in$in$7 = (($192) + 2)|0;
  $$sink9$in$7 = $$sink9$in$in$7 >>> 2;
  $$sink9$7 = $$sink9$in$7&255;
  $193 = (($91) + 7)|0;
  $194 = (($0) + ($193)|0);
  HEAP8[$194>>0] = $$sink9$7;
  $exitcond = ($79|0)==(8);
  if ($exitcond) {
   label = 9;
   break;
  }
  $$phi$trans$insert = (($4) + ($79<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $195 = ($79|0)==(7);
  if ($195) {
   break;
  } else {
   $$27899 = $79;$91 = $$pre;
  }
 }
 if ((label|0) == 9) {
  STACKTOP = sp;return;
 }
 $196 = ((($5)) + 7|0);
 $197 = HEAP8[$196>>0]|0;
 $198 = $197&255;
 $199 = ((($5)) + 8|0);
 $200 = HEAP8[$199>>0]|0;
 $201 = $200&255;
 $202 = $201 << 1;
 $203 = (($202) + ($198))|0;
 $204 = ((($5)) + 9|0);
 $205 = HEAP8[$204>>0]|0;
 $206 = $205&255;
 $207 = (($203) + ($206))|0;
 $$sink9$in$in$us = (($207) + 2)|0;
 $$sink9$in$us = $$sink9$in$in$us >>> 2;
 $$sink9$us = $$sink9$in$us&255;
 $208 = (($0) + ($$pre)|0);
 HEAP8[$208>>0] = $$sink9$us;
 $209 = ((($5)) + 8|0);
 $210 = HEAP8[$209>>0]|0;
 $211 = $210&255;
 $212 = ((($5)) + 9|0);
 $213 = HEAP8[$212>>0]|0;
 $214 = $213&255;
 $215 = $214 << 1;
 $216 = (($215) + ($211))|0;
 $217 = ((($5)) + 10|0);
 $218 = HEAP8[$217>>0]|0;
 $219 = $218&255;
 $220 = (($216) + ($219))|0;
 $$sink9$in$in$us$1 = (($220) + 2)|0;
 $$sink9$in$us$1 = $$sink9$in$in$us$1 >>> 2;
 $$sink9$us$1 = $$sink9$in$us$1&255;
 $221 = (($$pre) + 1)|0;
 $222 = (($0) + ($221)|0);
 HEAP8[$222>>0] = $$sink9$us$1;
 $223 = ((($5)) + 9|0);
 $224 = HEAP8[$223>>0]|0;
 $225 = $224&255;
 $226 = ((($5)) + 10|0);
 $227 = HEAP8[$226>>0]|0;
 $228 = $227&255;
 $229 = $228 << 1;
 $230 = (($229) + ($225))|0;
 $231 = ((($5)) + 11|0);
 $232 = HEAP8[$231>>0]|0;
 $233 = $232&255;
 $234 = (($230) + ($233))|0;
 $$sink9$in$in$us$2 = (($234) + 2)|0;
 $$sink9$in$us$2 = $$sink9$in$in$us$2 >>> 2;
 $$sink9$us$2 = $$sink9$in$us$2&255;
 $235 = (($$pre) + 2)|0;
 $236 = (($0) + ($235)|0);
 HEAP8[$236>>0] = $$sink9$us$2;
 $237 = ((($5)) + 10|0);
 $238 = HEAP8[$237>>0]|0;
 $239 = $238&255;
 $240 = ((($5)) + 11|0);
 $241 = HEAP8[$240>>0]|0;
 $242 = $241&255;
 $243 = $242 << 1;
 $244 = (($243) + ($239))|0;
 $245 = ((($5)) + 12|0);
 $246 = HEAP8[$245>>0]|0;
 $247 = $246&255;
 $248 = (($244) + ($247))|0;
 $$sink9$in$in$us$3 = (($248) + 2)|0;
 $$sink9$in$us$3 = $$sink9$in$in$us$3 >>> 2;
 $$sink9$us$3 = $$sink9$in$us$3&255;
 $249 = (($$pre) + 3)|0;
 $250 = (($0) + ($249)|0);
 HEAP8[$250>>0] = $$sink9$us$3;
 $251 = ((($5)) + 11|0);
 $252 = HEAP8[$251>>0]|0;
 $253 = $252&255;
 $254 = ((($5)) + 12|0);
 $255 = HEAP8[$254>>0]|0;
 $256 = $255&255;
 $257 = $256 << 1;
 $258 = (($257) + ($253))|0;
 $259 = ((($5)) + 13|0);
 $260 = HEAP8[$259>>0]|0;
 $261 = $260&255;
 $262 = (($258) + ($261))|0;
 $$sink9$in$in$us$4 = (($262) + 2)|0;
 $$sink9$in$us$4 = $$sink9$in$in$us$4 >>> 2;
 $$sink9$us$4 = $$sink9$in$us$4&255;
 $263 = (($$pre) + 4)|0;
 $264 = (($0) + ($263)|0);
 HEAP8[$264>>0] = $$sink9$us$4;
 $265 = ((($5)) + 12|0);
 $266 = HEAP8[$265>>0]|0;
 $267 = $266&255;
 $268 = ((($5)) + 13|0);
 $269 = HEAP8[$268>>0]|0;
 $270 = $269&255;
 $271 = $270 << 1;
 $272 = (($271) + ($267))|0;
 $273 = HEAP8[$70>>0]|0;
 $274 = $273&255;
 $275 = (($272) + ($274))|0;
 $$sink9$in$in$us$5 = (($275) + 2)|0;
 $$sink9$in$us$5 = $$sink9$in$in$us$5 >>> 2;
 $$sink9$us$5 = $$sink9$in$us$5&255;
 $276 = (($$pre) + 5)|0;
 $277 = (($0) + ($276)|0);
 HEAP8[$277>>0] = $$sink9$us$5;
 $278 = ((($5)) + 13|0);
 $279 = HEAP8[$278>>0]|0;
 $280 = $279&255;
 $281 = HEAP8[$70>>0]|0;
 $282 = $281&255;
 $283 = $282 << 1;
 $284 = (($283) + ($280))|0;
 $285 = HEAP8[$69>>0]|0;
 $286 = $285&255;
 $287 = (($284) + ($286))|0;
 $$sink9$in$in$us$6 = (($287) + 2)|0;
 $$sink9$in$us$6 = $$sink9$in$in$us$6 >>> 2;
 $$sink9$us$6 = $$sink9$in$us$6&255;
 $288 = (($$pre) + 6)|0;
 $289 = (($0) + ($288)|0);
 HEAP8[$289>>0] = $$sink9$us$6;
 $$sink9$in$in$us$7 = (($75) + 2)|0;
 $$sink9$in$us$7 = $$sink9$in$in$us$7 >>> 2;
 $$sink9$us$7 = $$sink9$in$us$7&255;
 $290 = (($$pre) + 7)|0;
 $291 = (($0) + ($290)|0);
 HEAP8[$291>>0] = $$sink9$us$7;
 STACKTOP = sp;return;
}
function __ZN7WelsDec24WelsI8x8LumaPredDDLTop_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$384 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink75$ph = 0, $$sink9 = 0, $$sink9$1 = 0, $$sink9$2 = 0, $$sink9$3 = 0, $$sink9$4 = 0, $$sink9$5 = 0, $$sink9$6 = 0, $$sink9$7 = 0, $$sink9$in = 0, $$sink9$in$1 = 0, $$sink9$in$2 = 0, $$sink9$in$3 = 0, $$sink9$in$4 = 0, $$sink9$in$5 = 0, $$sink9$in$6 = 0, $$sink9$in$7 = 0;
 var $$sink9$in$in = 0, $$sink9$in$in$1 = 0, $$sink9$in$in$2 = 0, $$sink9$in$in$3 = 0, $$sink9$in$in$4 = 0, $$sink9$in$in$5 = 0, $$sink9$in$in$6 = 0, $$sink9$in$in$7 = 0, $$sink9$in$in$us = 0, $$sink9$in$in$us$1 = 0, $$sink9$in$in$us$2 = 0, $$sink9$in$in$us$3 = 0, $$sink9$in$in$us$4 = 0, $$sink9$in$in$us$5 = 0, $$sink9$in$in$us$6 = 0, $$sink9$in$us = 0, $$sink9$in$us$1 = 0, $$sink9$in$us$2 = 0, $$sink9$in$us$3 = 0, $$sink9$in$us$4 = 0;
 var $$sink9$in$us$5 = 0, $$sink9$in$us$6 = 0, $$sink9$us = 0, $$sink9$us$1 = 0, $$sink9$us$2 = 0, $$sink9$us$3 = 0, $$sink9$us$4 = 0, $$sink9$us$5 = 0, $$sink9$us$6 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = $1 << 1;
 $8 = ((($4)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1*3)|0;
 $10 = ((($4)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = $1 << 2;
 $12 = ((($4)) + 16|0);
 HEAP32[$12>>2] = $11;
 $13 = ($1*5)|0;
 $14 = ((($4)) + 20|0);
 HEAP32[$14>>2] = $13;
 $15 = ($1*6)|0;
 $16 = ((($4)) + 24|0);
 HEAP32[$16>>2] = $15;
 $17 = ($1*7)|0;
 $18 = ((($4)) + 28|0);
 HEAP32[$18>>2] = $17;
 $19 = (0 - ($1))|0;
 $20 = (($0) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 if ($2) {
  $23 = $1 ^ -1;
  $24 = (($0) + ($23)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = $22 << 1;
  $28 = (($26) + ($27))|0;
  $$pre$phiZ2D = $23;$$sink75$ph = $28;
 } else {
  $29 = ($22*3)|0;
  $$pre = $1 ^ -1;
  $$pre$phiZ2D = $$pre;$$sink75$ph = $29;
 }
 $30 = (1 - ($1))|0;
 $31 = (($0) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($$sink75$ph) + 2)|0;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 2;
 $37 = $36&255;
 HEAP8[$5>>0] = $37;
 $38 = (($$pre$phiZ2D) + 1)|0;
 $39 = (($0) + ($38)|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&255;
 $42 = $33 << 1;
 $43 = (($42) + ($41))|0;
 $44 = (2 - ($1))|0;
 $45 = (($0) + ($44)|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46&255;
 $48 = (($43) + 2)|0;
 $49 = (($48) + ($47))|0;
 $50 = $49 >>> 2;
 $51 = $50&255;
 $52 = ((($5)) + 1|0);
 HEAP8[$52>>0] = $51;
 $53 = (($$pre$phiZ2D) + 2)|0;
 $54 = (($0) + ($53)|0);
 $55 = HEAP8[$54>>0]|0;
 $56 = $55&255;
 $57 = $47 << 1;
 $58 = (($57) + ($56))|0;
 $59 = (3 - ($1))|0;
 $60 = (($0) + ($59)|0);
 $61 = HEAP8[$60>>0]|0;
 $62 = $61&255;
 $63 = (($58) + 2)|0;
 $64 = (($63) + ($62))|0;
 $65 = $64 >>> 2;
 $66 = $65&255;
 $67 = ((($5)) + 2|0);
 HEAP8[$67>>0] = $66;
 $68 = (($$pre$phiZ2D) + 3)|0;
 $69 = (($0) + ($68)|0);
 $70 = HEAP8[$69>>0]|0;
 $71 = $70&255;
 $72 = $62 << 1;
 $73 = (($72) + ($71))|0;
 $74 = (4 - ($1))|0;
 $75 = (($0) + ($74)|0);
 $76 = HEAP8[$75>>0]|0;
 $77 = $76&255;
 $78 = (($73) + 2)|0;
 $79 = (($78) + ($77))|0;
 $80 = $79 >>> 2;
 $81 = $80&255;
 $82 = ((($5)) + 3|0);
 HEAP8[$82>>0] = $81;
 $83 = (($$pre$phiZ2D) + 4)|0;
 $84 = (($0) + ($83)|0);
 $85 = HEAP8[$84>>0]|0;
 $86 = $85&255;
 $87 = $77 << 1;
 $88 = (($87) + ($86))|0;
 $89 = (5 - ($1))|0;
 $90 = (($0) + ($89)|0);
 $91 = HEAP8[$90>>0]|0;
 $92 = $91&255;
 $93 = (($88) + 2)|0;
 $94 = (($93) + ($92))|0;
 $95 = $94 >>> 2;
 $96 = $95&255;
 $97 = ((($5)) + 4|0);
 HEAP8[$97>>0] = $96;
 $98 = (($$pre$phiZ2D) + 5)|0;
 $99 = (($0) + ($98)|0);
 $100 = HEAP8[$99>>0]|0;
 $101 = $100&255;
 $102 = $92 << 1;
 $103 = (($102) + ($101))|0;
 $104 = (6 - ($1))|0;
 $105 = (($0) + ($104)|0);
 $106 = HEAP8[$105>>0]|0;
 $107 = $106&255;
 $108 = (($103) + 2)|0;
 $109 = (($108) + ($107))|0;
 $110 = $109 >>> 2;
 $111 = $110&255;
 $112 = ((($5)) + 5|0);
 HEAP8[$112>>0] = $111;
 $113 = (($$pre$phiZ2D) + 6)|0;
 $114 = (($0) + ($113)|0);
 $115 = HEAP8[$114>>0]|0;
 $116 = $115&255;
 $117 = $107 << 1;
 $118 = (($117) + ($116))|0;
 $119 = (7 - ($1))|0;
 $120 = (($0) + ($119)|0);
 $121 = HEAP8[$120>>0]|0;
 $122 = $121&255;
 $123 = (($118) + 2)|0;
 $124 = (($123) + ($122))|0;
 $125 = $124 >>> 2;
 $126 = $125&255;
 $127 = ((($5)) + 6|0);
 HEAP8[$127>>0] = $126;
 $128 = ($122*3)|0;
 $129 = (($107) + 2)|0;
 $130 = (($129) + ($128))|0;
 $131 = $130 >>> 2;
 $132 = $131&255;
 $133 = ((($5)) + 7|0);
 HEAP8[$133>>0] = $132;
 $scevgep = ((($5)) + 8|0);
 _memset(($scevgep|0),($121|0),8)|0;
 $134 = ((($5)) + 14|0);
 $135 = ((($5)) + 15|0);
 $$384 = 0;
 while(1) {
  $136 = ($$384|0)==(7);
  $137 = (($4) + ($$384<<2)|0);
  $138 = HEAP32[$137>>2]|0;
  if ($136) {
   break;
  }
  $139 = (($5) + ($$384)|0);
  $140 = HEAP8[$139>>0]|0;
  $141 = $140&255;
  $142 = (($$384) + 1)|0;
  $143 = (($5) + ($142)|0);
  $144 = HEAP8[$143>>0]|0;
  $145 = $144&255;
  $146 = $145 << 1;
  $147 = (($146) + ($141))|0;
  $148 = (($$384) + 2)|0;
  $149 = (($5) + ($148)|0);
  $150 = HEAP8[$149>>0]|0;
  $151 = $150&255;
  $152 = (($147) + ($151))|0;
  $$sink9$in$in = (($152) + 2)|0;
  $$sink9$in = $$sink9$in$in >>> 2;
  $$sink9 = $$sink9$in&255;
  $153 = (($0) + ($138)|0);
  HEAP8[$153>>0] = $$sink9;
  $154 = $151 << 1;
  $155 = (($154) + ($145))|0;
  $156 = (($$384) + 3)|0;
  $157 = (($5) + ($156)|0);
  $158 = HEAP8[$157>>0]|0;
  $159 = $158&255;
  $160 = (($155) + ($159))|0;
  $$sink9$in$in$1 = (($160) + 2)|0;
  $$sink9$in$1 = $$sink9$in$in$1 >>> 2;
  $$sink9$1 = $$sink9$in$1&255;
  $161 = (($138) + 1)|0;
  $162 = (($0) + ($161)|0);
  HEAP8[$162>>0] = $$sink9$1;
  $163 = $159 << 1;
  $164 = (($163) + ($151))|0;
  $165 = (($$384) + 4)|0;
  $166 = (($5) + ($165)|0);
  $167 = HEAP8[$166>>0]|0;
  $168 = $167&255;
  $169 = (($164) + ($168))|0;
  $$sink9$in$in$2 = (($169) + 2)|0;
  $$sink9$in$2 = $$sink9$in$in$2 >>> 2;
  $$sink9$2 = $$sink9$in$2&255;
  $170 = (($138) + 2)|0;
  $171 = (($0) + ($170)|0);
  HEAP8[$171>>0] = $$sink9$2;
  $172 = (($$384) + 3)|0;
  $173 = (($5) + ($172)|0);
  $174 = HEAP8[$173>>0]|0;
  $175 = $174&255;
  $176 = (($$384) + 4)|0;
  $177 = (($5) + ($176)|0);
  $178 = HEAP8[$177>>0]|0;
  $179 = $178&255;
  $180 = $179 << 1;
  $181 = (($180) + ($175))|0;
  $182 = (($$384) + 5)|0;
  $183 = (($5) + ($182)|0);
  $184 = HEAP8[$183>>0]|0;
  $185 = $184&255;
  $186 = (($181) + ($185))|0;
  $$sink9$in$in$3 = (($186) + 2)|0;
  $$sink9$in$3 = $$sink9$in$in$3 >>> 2;
  $$sink9$3 = $$sink9$in$3&255;
  $187 = (($138) + 3)|0;
  $188 = (($0) + ($187)|0);
  HEAP8[$188>>0] = $$sink9$3;
  $189 = (($$384) + 4)|0;
  $190 = (($5) + ($189)|0);
  $191 = HEAP8[$190>>0]|0;
  $192 = $191&255;
  $193 = (($$384) + 5)|0;
  $194 = (($5) + ($193)|0);
  $195 = HEAP8[$194>>0]|0;
  $196 = $195&255;
  $197 = $196 << 1;
  $198 = (($197) + ($192))|0;
  $199 = (($$384) + 6)|0;
  $200 = (($5) + ($199)|0);
  $201 = HEAP8[$200>>0]|0;
  $202 = $201&255;
  $203 = (($198) + ($202))|0;
  $$sink9$in$in$4 = (($203) + 2)|0;
  $$sink9$in$4 = $$sink9$in$in$4 >>> 2;
  $$sink9$4 = $$sink9$in$4&255;
  $204 = (($138) + 4)|0;
  $205 = (($0) + ($204)|0);
  HEAP8[$205>>0] = $$sink9$4;
  $206 = (($$384) + 5)|0;
  $207 = (($5) + ($206)|0);
  $208 = HEAP8[$207>>0]|0;
  $209 = $208&255;
  $210 = (($$384) + 6)|0;
  $211 = (($5) + ($210)|0);
  $212 = HEAP8[$211>>0]|0;
  $213 = $212&255;
  $214 = $213 << 1;
  $215 = (($214) + ($209))|0;
  $216 = (($$384) + 7)|0;
  $217 = (($5) + ($216)|0);
  $218 = HEAP8[$217>>0]|0;
  $219 = $218&255;
  $220 = (($215) + ($219))|0;
  $$sink9$in$in$5 = (($220) + 2)|0;
  $$sink9$in$5 = $$sink9$in$in$5 >>> 2;
  $$sink9$5 = $$sink9$in$5&255;
  $221 = (($138) + 5)|0;
  $222 = (($0) + ($221)|0);
  HEAP8[$222>>0] = $$sink9$5;
  $223 = (($$384) + 6)|0;
  $224 = (($5) + ($223)|0);
  $225 = HEAP8[$224>>0]|0;
  $226 = $225&255;
  $227 = (($$384) + 7)|0;
  $228 = (($5) + ($227)|0);
  $229 = HEAP8[$228>>0]|0;
  $230 = $229&255;
  $231 = $230 << 1;
  $232 = (($231) + ($226))|0;
  $233 = (($$384) + 8)|0;
  $234 = (($5) + ($233)|0);
  $235 = HEAP8[$234>>0]|0;
  $236 = $235&255;
  $237 = (($232) + ($236))|0;
  $$sink9$in$in$6 = (($237) + 2)|0;
  $$sink9$in$6 = $$sink9$in$in$6 >>> 2;
  $$sink9$6 = $$sink9$in$6&255;
  $238 = (($138) + 6)|0;
  $239 = (($0) + ($238)|0);
  HEAP8[$239>>0] = $$sink9$6;
  $240 = (($$384) + 7)|0;
  $241 = (($5) + ($240)|0);
  $242 = HEAP8[$241>>0]|0;
  $243 = $242&255;
  $244 = (($$384) + 8)|0;
  $245 = (($5) + ($244)|0);
  $246 = HEAP8[$245>>0]|0;
  $247 = $246&255;
  $248 = $247 << 1;
  $249 = (($248) + ($243))|0;
  $250 = (($$384) + 9)|0;
  $251 = (($5) + ($250)|0);
  $252 = HEAP8[$251>>0]|0;
  $253 = $252&255;
  $254 = (($249) + ($253))|0;
  $$sink9$in$in$7 = (($254) + 2)|0;
  $$sink9$in$7 = $$sink9$in$in$7 >>> 2;
  $$sink9$7 = $$sink9$in$7&255;
  $255 = (($138) + 7)|0;
  $256 = (($0) + ($255)|0);
  HEAP8[$256>>0] = $$sink9$7;
  $exitcond = ($142|0)==(8);
  if ($exitcond) {
   label = 7;
   break;
  } else {
   $$384 = $142;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $257 = HEAP8[$133>>0]|0;
 $258 = $257&255;
 $259 = HEAP8[$scevgep>>0]|0;
 $260 = $259&255;
 $261 = $260 << 1;
 $262 = (($261) + ($258))|0;
 $263 = ((($5)) + 9|0);
 $264 = HEAP8[$263>>0]|0;
 $265 = $264&255;
 $266 = (($262) + ($265))|0;
 $$sink9$in$in$us = (($266) + 2)|0;
 $$sink9$in$us = $$sink9$in$in$us >>> 2;
 $$sink9$us = $$sink9$in$us&255;
 $267 = (($0) + ($138)|0);
 HEAP8[$267>>0] = $$sink9$us;
 $268 = HEAP8[$scevgep>>0]|0;
 $269 = $268&255;
 $270 = ((($5)) + 9|0);
 $271 = HEAP8[$270>>0]|0;
 $272 = $271&255;
 $273 = $272 << 1;
 $274 = (($273) + ($269))|0;
 $275 = ((($5)) + 10|0);
 $276 = HEAP8[$275>>0]|0;
 $277 = $276&255;
 $278 = (($274) + ($277))|0;
 $$sink9$in$in$us$1 = (($278) + 2)|0;
 $$sink9$in$us$1 = $$sink9$in$in$us$1 >>> 2;
 $$sink9$us$1 = $$sink9$in$us$1&255;
 $279 = (($138) + 1)|0;
 $280 = (($0) + ($279)|0);
 HEAP8[$280>>0] = $$sink9$us$1;
 $281 = ((($5)) + 9|0);
 $282 = HEAP8[$281>>0]|0;
 $283 = $282&255;
 $284 = ((($5)) + 10|0);
 $285 = HEAP8[$284>>0]|0;
 $286 = $285&255;
 $287 = $286 << 1;
 $288 = (($287) + ($283))|0;
 $289 = ((($5)) + 11|0);
 $290 = HEAP8[$289>>0]|0;
 $291 = $290&255;
 $292 = (($288) + ($291))|0;
 $$sink9$in$in$us$2 = (($292) + 2)|0;
 $$sink9$in$us$2 = $$sink9$in$in$us$2 >>> 2;
 $$sink9$us$2 = $$sink9$in$us$2&255;
 $293 = (($138) + 2)|0;
 $294 = (($0) + ($293)|0);
 HEAP8[$294>>0] = $$sink9$us$2;
 $295 = ((($5)) + 10|0);
 $296 = HEAP8[$295>>0]|0;
 $297 = $296&255;
 $298 = ((($5)) + 11|0);
 $299 = HEAP8[$298>>0]|0;
 $300 = $299&255;
 $301 = $300 << 1;
 $302 = (($301) + ($297))|0;
 $303 = ((($5)) + 12|0);
 $304 = HEAP8[$303>>0]|0;
 $305 = $304&255;
 $306 = (($302) + ($305))|0;
 $$sink9$in$in$us$3 = (($306) + 2)|0;
 $$sink9$in$us$3 = $$sink9$in$in$us$3 >>> 2;
 $$sink9$us$3 = $$sink9$in$us$3&255;
 $307 = (($138) + 3)|0;
 $308 = (($0) + ($307)|0);
 HEAP8[$308>>0] = $$sink9$us$3;
 $309 = ((($5)) + 11|0);
 $310 = HEAP8[$309>>0]|0;
 $311 = $310&255;
 $312 = ((($5)) + 12|0);
 $313 = HEAP8[$312>>0]|0;
 $314 = $313&255;
 $315 = $314 << 1;
 $316 = (($315) + ($311))|0;
 $317 = ((($5)) + 13|0);
 $318 = HEAP8[$317>>0]|0;
 $319 = $318&255;
 $320 = (($316) + ($319))|0;
 $$sink9$in$in$us$4 = (($320) + 2)|0;
 $$sink9$in$us$4 = $$sink9$in$in$us$4 >>> 2;
 $$sink9$us$4 = $$sink9$in$us$4&255;
 $321 = (($138) + 4)|0;
 $322 = (($0) + ($321)|0);
 HEAP8[$322>>0] = $$sink9$us$4;
 $323 = ((($5)) + 12|0);
 $324 = HEAP8[$323>>0]|0;
 $325 = $324&255;
 $326 = ((($5)) + 13|0);
 $327 = HEAP8[$326>>0]|0;
 $328 = $327&255;
 $329 = $328 << 1;
 $330 = (($329) + ($325))|0;
 $331 = HEAP8[$134>>0]|0;
 $332 = $331&255;
 $333 = (($330) + ($332))|0;
 $$sink9$in$in$us$5 = (($333) + 2)|0;
 $$sink9$in$us$5 = $$sink9$in$in$us$5 >>> 2;
 $$sink9$us$5 = $$sink9$in$us$5&255;
 $334 = (($138) + 5)|0;
 $335 = (($0) + ($334)|0);
 HEAP8[$335>>0] = $$sink9$us$5;
 $336 = ((($5)) + 13|0);
 $337 = HEAP8[$336>>0]|0;
 $338 = $337&255;
 $339 = HEAP8[$134>>0]|0;
 $340 = $339&255;
 $341 = $340 << 1;
 $342 = (($341) + ($338))|0;
 $343 = HEAP8[$135>>0]|0;
 $344 = $343&255;
 $345 = (($342) + ($344))|0;
 $$sink9$in$in$us$6 = (($345) + 2)|0;
 $$sink9$in$us$6 = $$sink9$in$in$us$6 >>> 2;
 $$sink9$us$6 = $$sink9$in$us$6&255;
 $346 = (($138) + 6)|0;
 $347 = (($0) + ($346)|0);
 HEAP8[$347>>0] = $$sink9$us$6;
 $348 = (($138) + 7)|0;
 $349 = (($0) + ($348)|0);
 HEAP8[$349>>0] = $121;
 STACKTOP = sp;return;
}
function __ZN7WelsDec21WelsI8x8LumaPredDDR_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$096 = 0, $$193104 = 0, $$199 = 0, $$2103 = 0, $$phi$trans$insert = 0, $$pre = 0, $$sink1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $57$phi = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond106 = 0;
 var $exitcond107 = 0, $exitcond108 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 40|0;
 $6 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $7 = ((($4)) + 4|0);
 HEAP32[$7>>2] = $1;
 $8 = $1 << 1;
 $9 = ((($4)) + 8|0);
 HEAP32[$9>>2] = $8;
 $10 = ($1*3)|0;
 $11 = ((($4)) + 12|0);
 HEAP32[$11>>2] = $10;
 $12 = $1 << 2;
 $13 = ((($4)) + 16|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*5)|0;
 $15 = ((($4)) + 20|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*6)|0;
 $17 = ((($4)) + 24|0);
 HEAP32[$17>>2] = $16;
 $18 = ($1*7)|0;
 $19 = ((($4)) + 28|0);
 HEAP32[$19>>2] = $18;
 $20 = ((($0)) + -1|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 $23 = $1 ^ -1;
 $24 = (($0) + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = $26 << 1;
 $28 = (0 - ($1))|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($22) + 2)|0;
 $33 = (($32) + ($27))|0;
 $34 = (($33) + ($31))|0;
 $35 = $22 << 1;
 $36 = (($1) + -1)|0;
 $37 = (($0) + ($36)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = (($35) + 2)|0;
 $41 = (($40) + ($26))|0;
 $42 = (($41) + ($39))|0;
 $43 = $42 >>> 2;
 $44 = $43&255;
 HEAP8[$5>>0] = $44;
 $45 = $31 << 1;
 $46 = (1 - ($1))|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (($26) + 2)|0;
 $51 = (($50) + ($45))|0;
 $52 = (($51) + ($49))|0;
 $53 = $52 >>> 2;
 $54 = $53&255;
 HEAP8[$6>>0] = $54;
 $$193104 = 1;$57 = $21;$59 = $38;
 while(1) {
  $55 = (($$193104) + -1)|0;
  $56 = $57&255;
  $58 = $59&255;
  $60 = $58 << 1;
  $61 = (($$193104) + 1)|0;
  $62 = (($4) + ($61<<2)|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = (($63) + -1)|0;
  $65 = (($0) + ($64)|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66&255;
  $68 = (($56) + 2)|0;
  $69 = (($68) + ($60))|0;
  $70 = (($69) + ($67))|0;
  $71 = $70 >>> 2;
  $72 = $71&255;
  $73 = (($5) + ($$193104)|0);
  HEAP8[$73>>0] = $72;
  $74 = (($55) - ($1))|0;
  $75 = (($0) + ($74)|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76&255;
  $78 = (($$193104) - ($1))|0;
  $79 = (($0) + ($78)|0);
  $80 = HEAP8[$79>>0]|0;
  $81 = $80&255;
  $82 = $81 << 1;
  $83 = (($61) - ($1))|0;
  $84 = (($0) + ($83)|0);
  $85 = HEAP8[$84>>0]|0;
  $86 = $85&255;
  $87 = (($77) + 2)|0;
  $88 = (($87) + ($82))|0;
  $89 = (($88) + ($86))|0;
  $90 = $89 >>> 2;
  $91 = $90&255;
  $92 = (($6) + ($$193104)|0);
  HEAP8[$92>>0] = $91;
  $exitcond108 = ($61|0)==(7);
  if ($exitcond108) {
   break;
  } else {
   $57$phi = $59;$$193104 = $61;$59 = $66;$57 = $57$phi;
  }
 }
 $93 = $34 >>> 2;
 $94 = (($16) + -1)|0;
 $95 = (($0) + ($94)|0);
 $96 = HEAP8[$95>>0]|0;
 $97 = $96&255;
 $98 = (($18) + -1)|0;
 $99 = (($0) + ($98)|0);
 $100 = HEAP8[$99>>0]|0;
 $101 = $100&255;
 $102 = ($101*3)|0;
 $103 = (($97) + 2)|0;
 $104 = (($103) + ($102))|0;
 $105 = $104 >>> 2;
 $106 = $105&255;
 $107 = ((($5)) + 7|0);
 HEAP8[$107>>0] = $106;
 $108 = (6 - ($1))|0;
 $109 = (($0) + ($108)|0);
 $110 = HEAP8[$109>>0]|0;
 $111 = $110&255;
 $112 = (7 - ($1))|0;
 $113 = (($0) + ($112)|0);
 $114 = HEAP8[$113>>0]|0;
 $115 = $114&255;
 if ($3) {
  $116 = $115 << 1;
  $117 = (($116) + ($111))|0;
  $118 = (8 - ($1))|0;
  $119 = (($0) + ($118)|0);
  $120 = HEAP8[$119>>0]|0;
  $121 = $120&255;
  $122 = (($117) + ($121))|0;
  $$sink1 = $122;
 } else {
  $123 = ($115*3)|0;
  $124 = (($123) + ($111))|0;
  $$sink1 = $124;
 }
 $125 = (($$sink1) + 2)|0;
 $126 = $125 >>> 2;
 $127 = $126&255;
 $128 = ((($6)) + 7|0);
 HEAP8[$128>>0] = $127;
 $129 = $93 & 255;
 $130 = ((($5)) + 1|0);
 $131 = (($129) + 2)|0;
 $132 = $129 << 1;
 $133 = (($132) + 2)|0;
 $134 = ((($6)) + 1|0);
 $135 = HEAP8[$5>>0]|0;
 $136 = $135&255;
 $137 = $136 << 1;
 $138 = HEAP8[$130>>0]|0;
 $139 = $138&255;
 $140 = (($131) + ($137))|0;
 $141 = (($140) + ($139))|0;
 $142 = $141 >>> 2;
 $143 = $142&255;
 $144 = HEAP8[$6>>0]|0;
 $145 = $144&255;
 $146 = (($133) + ($136))|0;
 $147 = (($146) + ($145))|0;
 $148 = $147 >>> 2;
 $149 = $148&255;
 $150 = $145 << 1;
 $151 = HEAP8[$134>>0]|0;
 $152 = $151&255;
 $153 = (($131) + ($150))|0;
 $154 = (($153) + ($152))|0;
 $155 = $154 >>> 2;
 $156 = $155&255;
 $$2103 = 0;$178 = 0;$indvars$iv = -1;
 while(1) {
  $157 = (($$2103) + -1)|0;
  $158 = ($$2103|0)>(1);
  if ($158) {
   $$096 = 0;
   while(1) {
    $159 = (($$2103) - ($$096))|0;
    $160 = (($159) + -2)|0;
    $161 = (($5) + ($160)|0);
    $162 = HEAP8[$161>>0]|0;
    $163 = $162&255;
    $164 = (($159) + -1)|0;
    $165 = (($5) + ($164)|0);
    $166 = HEAP8[$165>>0]|0;
    $167 = $166&255;
    $168 = $167 << 1;
    $169 = (($5) + ($159)|0);
    $170 = HEAP8[$169>>0]|0;
    $171 = $170&255;
    $172 = (($163) + 2)|0;
    $173 = (($172) + ($168))|0;
    $174 = (($173) + ($171))|0;
    $175 = $174 >>> 2;
    $176 = $175&255;
    $177 = (($178) + ($$096))|0;
    $179 = (($0) + ($177)|0);
    HEAP8[$179>>0] = $176;
    $180 = (($$096) + 1)|0;
    $exitcond = ($180|0)==($indvars$iv|0);
    if ($exitcond) {
     break;
    } else {
     $$096 = $180;
    }
   }
  }
  $181 = ($$2103|0)>(0);
  if ($181) {
   $182 = (($178) + ($157))|0;
   $183 = (($0) + ($182)|0);
   HEAP8[$183>>0] = $143;
  }
  $184 = (($178) + ($$2103))|0;
  $185 = (($0) + ($184)|0);
  HEAP8[$185>>0] = $149;
  $186 = ($$2103|0)<(7);
  if ($186) {
   $187 = (($$2103) + 1)|0;
   $188 = (($187) + ($178))|0;
   $189 = (($0) + ($188)|0);
   HEAP8[$189>>0] = $156;
  }
  $190 = (($$2103) + 2)|0;
  $191 = ($190|0)<(8);
  if ($191) {
   $$199 = $190;
   while(1) {
    $192 = (($$199) - ($$2103))|0;
    $193 = (($192) + -2)|0;
    $194 = (($6) + ($193)|0);
    $195 = HEAP8[$194>>0]|0;
    $196 = $195&255;
    $197 = (($192) + -1)|0;
    $198 = (($6) + ($197)|0);
    $199 = HEAP8[$198>>0]|0;
    $200 = $199&255;
    $201 = $200 << 1;
    $202 = (($6) + ($192)|0);
    $203 = HEAP8[$202>>0]|0;
    $204 = $203&255;
    $205 = (($196) + 2)|0;
    $206 = (($205) + ($201))|0;
    $207 = (($206) + ($204))|0;
    $208 = $207 >>> 2;
    $209 = $208&255;
    $210 = (($178) + ($$199))|0;
    $211 = (($0) + ($210)|0);
    HEAP8[$211>>0] = $209;
    $212 = (($$199) + 1)|0;
    $exitcond106 = ($212|0)==(8);
    if ($exitcond106) {
     break;
    } else {
     $$199 = $212;
    }
   }
  }
  $213 = (($$2103) + 1)|0;
  $exitcond107 = ($213|0)==(8);
  if ($exitcond107) {
   break;
  }
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $$phi$trans$insert = (($4) + ($213<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$2103 = $213;$178 = $$pre;$indvars$iv = $indvars$iv$next;
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI8x8LumaPredVL_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$279 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre85 = 0, $$sink68$ph = 0, $$sink7380 = 0, $$sink89 = 0, $$sink90 = 0, $$sink91 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond83 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = $1 << 1;
 $8 = ((($4)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1*3)|0;
 $10 = ((($4)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = $1 << 2;
 $12 = ((($4)) + 16|0);
 HEAP32[$12>>2] = $11;
 $13 = ($1*5)|0;
 $14 = ((($4)) + 20|0);
 HEAP32[$14>>2] = $13;
 $15 = ($1*6)|0;
 $16 = ((($4)) + 24|0);
 HEAP32[$16>>2] = $15;
 $17 = ($1*7)|0;
 $18 = ((($4)) + 28|0);
 HEAP32[$18>>2] = $17;
 $19 = (0 - ($1))|0;
 $20 = (($0) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 if ($2) {
  $23 = $1 ^ -1;
  $24 = (($0) + ($23)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = $22 << 1;
  $28 = (($26) + ($27))|0;
  $$pre$phiZ2D = $23;$$sink68$ph = $28;
 } else {
  $29 = ($22*3)|0;
  $$pre85 = $1 ^ -1;
  $$pre$phiZ2D = $$pre85;$$sink68$ph = $29;
 }
 $30 = (1 - ($1))|0;
 $31 = (($0) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($$sink68$ph) + 2)|0;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 2;
 $37 = $36&255;
 HEAP8[$5>>0] = $37;
 $$sink7380 = 1;$43 = $32;
 while(1) {
  $38 = (($$sink7380) + ($$pre$phiZ2D))|0;
  $39 = (($0) + ($38)|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40&255;
  $42 = $43&255;
  $44 = $42 << 1;
  $45 = (($44) + ($41))|0;
  $46 = (($$sink7380) + 1)|0;
  $47 = (($46) - ($1))|0;
  $48 = (($0) + ($47)|0);
  $49 = HEAP8[$48>>0]|0;
  $50 = $49&255;
  $51 = (($45) + 2)|0;
  $52 = (($51) + ($50))|0;
  $53 = $52 >>> 2;
  $54 = $53&255;
  $55 = (($5) + ($$sink7380)|0);
  HEAP8[$55>>0] = $54;
  $exitcond83 = ($46|0)==(15);
  if ($exitcond83) {
   break;
  } else {
   $$sink7380 = $46;$43 = $49;
  }
 }
 $56 = (14 - ($1))|0;
 $57 = (($0) + ($56)|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = $58&255;
 $60 = (15 - ($1))|0;
 $61 = (($0) + ($60)|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = $62&255;
 $64 = ($63*3)|0;
 $65 = (($59) + 2)|0;
 $66 = (($65) + ($64))|0;
 $67 = $66 >>> 2;
 $68 = $67&255;
 $69 = ((($5)) + 15|0);
 HEAP8[$69>>0] = $68;
 $$279 = 0;$91 = 0;
 while(1) {
  $70 = $$279 & 1;
  $71 = ($70|0)==(0);
  $72 = $$279 >> 1;
  $73 = (($5) + ($72)|0);
  $74 = HEAP8[$73>>0]|0;
  $75 = $74&255;
  $76 = (($72) + 1)|0;
  $77 = (($5) + ($76)|0);
  $78 = HEAP8[$77>>0]|0;
  $79 = $78&255;
  if ($71) {
   $211 = (($75) + 1)|0;
   $212 = (($211) + ($79))|0;
   $213 = $212 >>> 1;
   $214 = $213&255;
   $215 = (($0) + ($91)|0);
   HEAP8[$215>>0] = $214;
   $216 = (($72) + 2)|0;
   $217 = (($5) + ($216)|0);
   $218 = HEAP8[$217>>0]|0;
   $219 = $218&255;
   $220 = (($79) + 1)|0;
   $221 = (($220) + ($219))|0;
   $222 = $221 >>> 1;
   $223 = $222&255;
   $224 = (($91) + 1)|0;
   $225 = (($0) + ($224)|0);
   HEAP8[$225>>0] = $223;
   $226 = (($72) + 2)|0;
   $227 = (($5) + ($226)|0);
   $228 = HEAP8[$227>>0]|0;
   $229 = $228&255;
   $230 = (($72) + 3)|0;
   $231 = (($5) + ($230)|0);
   $232 = HEAP8[$231>>0]|0;
   $233 = $232&255;
   $234 = (($229) + 1)|0;
   $235 = (($234) + ($233))|0;
   $236 = $235 >>> 1;
   $237 = $236&255;
   $238 = (($91) + 2)|0;
   $239 = (($0) + ($238)|0);
   HEAP8[$239>>0] = $237;
   $240 = (($72) + 3)|0;
   $241 = (($5) + ($240)|0);
   $242 = HEAP8[$241>>0]|0;
   $243 = $242&255;
   $244 = (($72) + 4)|0;
   $245 = (($5) + ($244)|0);
   $246 = HEAP8[$245>>0]|0;
   $247 = $246&255;
   $248 = (($243) + 1)|0;
   $249 = (($248) + ($247))|0;
   $250 = $249 >>> 1;
   $251 = $250&255;
   $252 = (($91) + 3)|0;
   $253 = (($0) + ($252)|0);
   HEAP8[$253>>0] = $251;
   $254 = (($72) + 4)|0;
   $255 = (($5) + ($254)|0);
   $256 = HEAP8[$255>>0]|0;
   $257 = $256&255;
   $258 = (($72) + 5)|0;
   $259 = (($5) + ($258)|0);
   $260 = HEAP8[$259>>0]|0;
   $261 = $260&255;
   $262 = (($257) + 1)|0;
   $263 = (($262) + ($261))|0;
   $264 = $263 >>> 1;
   $265 = $264&255;
   $266 = (($91) + 4)|0;
   $267 = (($0) + ($266)|0);
   HEAP8[$267>>0] = $265;
   $268 = (($72) + 5)|0;
   $269 = (($5) + ($268)|0);
   $270 = HEAP8[$269>>0]|0;
   $271 = $270&255;
   $272 = (($72) + 6)|0;
   $273 = (($5) + ($272)|0);
   $274 = HEAP8[$273>>0]|0;
   $275 = $274&255;
   $276 = (($271) + 1)|0;
   $277 = (($276) + ($275))|0;
   $278 = $277 >>> 1;
   $279 = $278&255;
   $280 = (($91) + 5)|0;
   $281 = (($0) + ($280)|0);
   HEAP8[$281>>0] = $279;
   $282 = (($72) + 6)|0;
   $283 = (($5) + ($282)|0);
   $284 = HEAP8[$283>>0]|0;
   $285 = $284&255;
   $286 = (($72) + 7)|0;
   $287 = (($5) + ($286)|0);
   $288 = HEAP8[$287>>0]|0;
   $289 = $288&255;
   $290 = (($285) + 1)|0;
   $291 = (($290) + ($289))|0;
   $292 = $291 >>> 1;
   $293 = $292&255;
   $294 = (($91) + 6)|0;
   $295 = (($0) + ($294)|0);
   HEAP8[$295>>0] = $293;
   $296 = (($72) + 7)|0;
   $297 = (($5) + ($296)|0);
   $298 = HEAP8[$297>>0]|0;
   $299 = $298&255;
   $300 = (($72) + 8)|0;
   $301 = (($5) + ($300)|0);
   $302 = HEAP8[$301>>0]|0;
   $303 = $302&255;
   $304 = (($299) + 1)|0;
   $$sink89 = 1;$$sink90 = $304;$$sink91 = $303;
  } else {
   $80 = $79 << 1;
   $81 = (($72) + 2)|0;
   $82 = (($5) + ($81)|0);
   $83 = HEAP8[$82>>0]|0;
   $84 = $83&255;
   $85 = (($75) + 2)|0;
   $86 = (($85) + ($80))|0;
   $87 = (($86) + ($84))|0;
   $88 = $87 >>> 2;
   $89 = $88&255;
   $90 = (($0) + ($91)|0);
   HEAP8[$90>>0] = $89;
   $92 = $84 << 1;
   $93 = (($72) + 3)|0;
   $94 = (($5) + ($93)|0);
   $95 = HEAP8[$94>>0]|0;
   $96 = $95&255;
   $97 = (($79) + 2)|0;
   $98 = (($97) + ($92))|0;
   $99 = (($98) + ($96))|0;
   $100 = $99 >>> 2;
   $101 = $100&255;
   $102 = (($91) + 1)|0;
   $103 = (($0) + ($102)|0);
   HEAP8[$103>>0] = $101;
   $104 = $96 << 1;
   $105 = (($72) + 4)|0;
   $106 = (($5) + ($105)|0);
   $107 = HEAP8[$106>>0]|0;
   $108 = $107&255;
   $109 = (($84) + 2)|0;
   $110 = (($109) + ($104))|0;
   $111 = (($110) + ($108))|0;
   $112 = $111 >>> 2;
   $113 = $112&255;
   $114 = (($91) + 2)|0;
   $115 = (($0) + ($114)|0);
   HEAP8[$115>>0] = $113;
   $116 = (($72) + 3)|0;
   $117 = (($5) + ($116)|0);
   $118 = HEAP8[$117>>0]|0;
   $119 = $118&255;
   $120 = (($72) + 4)|0;
   $121 = (($5) + ($120)|0);
   $122 = HEAP8[$121>>0]|0;
   $123 = $122&255;
   $124 = $123 << 1;
   $125 = (($72) + 5)|0;
   $126 = (($5) + ($125)|0);
   $127 = HEAP8[$126>>0]|0;
   $128 = $127&255;
   $129 = (($119) + 2)|0;
   $130 = (($129) + ($124))|0;
   $131 = (($130) + ($128))|0;
   $132 = $131 >>> 2;
   $133 = $132&255;
   $134 = (($91) + 3)|0;
   $135 = (($0) + ($134)|0);
   HEAP8[$135>>0] = $133;
   $136 = (($72) + 4)|0;
   $137 = (($5) + ($136)|0);
   $138 = HEAP8[$137>>0]|0;
   $139 = $138&255;
   $140 = (($72) + 5)|0;
   $141 = (($5) + ($140)|0);
   $142 = HEAP8[$141>>0]|0;
   $143 = $142&255;
   $144 = $143 << 1;
   $145 = (($72) + 6)|0;
   $146 = (($5) + ($145)|0);
   $147 = HEAP8[$146>>0]|0;
   $148 = $147&255;
   $149 = (($139) + 2)|0;
   $150 = (($149) + ($144))|0;
   $151 = (($150) + ($148))|0;
   $152 = $151 >>> 2;
   $153 = $152&255;
   $154 = (($91) + 4)|0;
   $155 = (($0) + ($154)|0);
   HEAP8[$155>>0] = $153;
   $156 = (($72) + 5)|0;
   $157 = (($5) + ($156)|0);
   $158 = HEAP8[$157>>0]|0;
   $159 = $158&255;
   $160 = (($72) + 6)|0;
   $161 = (($5) + ($160)|0);
   $162 = HEAP8[$161>>0]|0;
   $163 = $162&255;
   $164 = $163 << 1;
   $165 = (($72) + 7)|0;
   $166 = (($5) + ($165)|0);
   $167 = HEAP8[$166>>0]|0;
   $168 = $167&255;
   $169 = (($159) + 2)|0;
   $170 = (($169) + ($164))|0;
   $171 = (($170) + ($168))|0;
   $172 = $171 >>> 2;
   $173 = $172&255;
   $174 = (($91) + 5)|0;
   $175 = (($0) + ($174)|0);
   HEAP8[$175>>0] = $173;
   $176 = (($72) + 6)|0;
   $177 = (($5) + ($176)|0);
   $178 = HEAP8[$177>>0]|0;
   $179 = $178&255;
   $180 = (($72) + 7)|0;
   $181 = (($5) + ($180)|0);
   $182 = HEAP8[$181>>0]|0;
   $183 = $182&255;
   $184 = $183 << 1;
   $185 = (($72) + 8)|0;
   $186 = (($5) + ($185)|0);
   $187 = HEAP8[$186>>0]|0;
   $188 = $187&255;
   $189 = (($179) + 2)|0;
   $190 = (($189) + ($184))|0;
   $191 = (($190) + ($188))|0;
   $192 = $191 >>> 2;
   $193 = $192&255;
   $194 = (($91) + 6)|0;
   $195 = (($0) + ($194)|0);
   HEAP8[$195>>0] = $193;
   $196 = (($72) + 7)|0;
   $197 = (($5) + ($196)|0);
   $198 = HEAP8[$197>>0]|0;
   $199 = $198&255;
   $200 = (($72) + 8)|0;
   $201 = (($5) + ($200)|0);
   $202 = HEAP8[$201>>0]|0;
   $203 = $202&255;
   $204 = $203 << 1;
   $205 = (($72) + 9)|0;
   $206 = (($5) + ($205)|0);
   $207 = HEAP8[$206>>0]|0;
   $208 = $207&255;
   $209 = (($199) + 2)|0;
   $210 = (($209) + ($204))|0;
   $$sink89 = 2;$$sink90 = $210;$$sink91 = $208;
  }
  $305 = (($$sink90) + ($$sink91))|0;
  $306 = $305 >>> $$sink89;
  $307 = $306&255;
  $308 = (($91) + 7)|0;
  $309 = (($0) + ($308)|0);
  HEAP8[$309>>0] = $307;
  $310 = (($$279) + 1)|0;
  $exitcond = ($310|0)==(8);
  if ($exitcond) {
   break;
  }
  $$phi$trans$insert = (($4) + ($310<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$279 = $310;$91 = $$pre;
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec23WelsI8x8LumaPredVLTop_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$385 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink73$ph = 0, $$sink96 = 0, $$sink97 = 0, $$sink98 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;
 var $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = $1 << 1;
 $8 = ((($4)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1*3)|0;
 $10 = ((($4)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = $1 << 2;
 $12 = ((($4)) + 16|0);
 HEAP32[$12>>2] = $11;
 $13 = ($1*5)|0;
 $14 = ((($4)) + 20|0);
 HEAP32[$14>>2] = $13;
 $15 = ($1*6)|0;
 $16 = ((($4)) + 24|0);
 HEAP32[$16>>2] = $15;
 $17 = ($1*7)|0;
 $18 = ((($4)) + 28|0);
 HEAP32[$18>>2] = $17;
 $19 = (0 - ($1))|0;
 $20 = (($0) + ($19)|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 if ($2) {
  $23 = $1 ^ -1;
  $24 = (($0) + ($23)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = $22 << 1;
  $28 = (($26) + ($27))|0;
  $$pre$phiZ2D = $23;$$sink73$ph = $28;
 } else {
  $29 = ($22*3)|0;
  $$pre = $1 ^ -1;
  $$pre$phiZ2D = $$pre;$$sink73$ph = $29;
 }
 $30 = (1 - ($1))|0;
 $31 = (($0) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($$sink73$ph) + 2)|0;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 2;
 $37 = $36&255;
 HEAP8[$5>>0] = $37;
 $38 = (($$pre$phiZ2D) + 1)|0;
 $39 = (($0) + ($38)|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&255;
 $42 = $33 << 1;
 $43 = (($42) + ($41))|0;
 $44 = (2 - ($1))|0;
 $45 = (($0) + ($44)|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46&255;
 $48 = (($43) + 2)|0;
 $49 = (($48) + ($47))|0;
 $50 = $49 >>> 2;
 $51 = $50&255;
 $52 = ((($5)) + 1|0);
 HEAP8[$52>>0] = $51;
 $53 = (($$pre$phiZ2D) + 2)|0;
 $54 = (($0) + ($53)|0);
 $55 = HEAP8[$54>>0]|0;
 $56 = $55&255;
 $57 = $47 << 1;
 $58 = (($57) + ($56))|0;
 $59 = (3 - ($1))|0;
 $60 = (($0) + ($59)|0);
 $61 = HEAP8[$60>>0]|0;
 $62 = $61&255;
 $63 = (($58) + 2)|0;
 $64 = (($63) + ($62))|0;
 $65 = $64 >>> 2;
 $66 = $65&255;
 $67 = ((($5)) + 2|0);
 HEAP8[$67>>0] = $66;
 $68 = (($$pre$phiZ2D) + 3)|0;
 $69 = (($0) + ($68)|0);
 $70 = HEAP8[$69>>0]|0;
 $71 = $70&255;
 $72 = $62 << 1;
 $73 = (($72) + ($71))|0;
 $74 = (4 - ($1))|0;
 $75 = (($0) + ($74)|0);
 $76 = HEAP8[$75>>0]|0;
 $77 = $76&255;
 $78 = (($73) + 2)|0;
 $79 = (($78) + ($77))|0;
 $80 = $79 >>> 2;
 $81 = $80&255;
 $82 = ((($5)) + 3|0);
 HEAP8[$82>>0] = $81;
 $83 = (($$pre$phiZ2D) + 4)|0;
 $84 = (($0) + ($83)|0);
 $85 = HEAP8[$84>>0]|0;
 $86 = $85&255;
 $87 = $77 << 1;
 $88 = (($87) + ($86))|0;
 $89 = (5 - ($1))|0;
 $90 = (($0) + ($89)|0);
 $91 = HEAP8[$90>>0]|0;
 $92 = $91&255;
 $93 = (($88) + 2)|0;
 $94 = (($93) + ($92))|0;
 $95 = $94 >>> 2;
 $96 = $95&255;
 $97 = ((($5)) + 4|0);
 HEAP8[$97>>0] = $96;
 $98 = (($$pre$phiZ2D) + 5)|0;
 $99 = (($0) + ($98)|0);
 $100 = HEAP8[$99>>0]|0;
 $101 = $100&255;
 $102 = $92 << 1;
 $103 = (($102) + ($101))|0;
 $104 = (6 - ($1))|0;
 $105 = (($0) + ($104)|0);
 $106 = HEAP8[$105>>0]|0;
 $107 = $106&255;
 $108 = (($103) + 2)|0;
 $109 = (($108) + ($107))|0;
 $110 = $109 >>> 2;
 $111 = $110&255;
 $112 = ((($5)) + 5|0);
 HEAP8[$112>>0] = $111;
 $113 = (($$pre$phiZ2D) + 6)|0;
 $114 = (($0) + ($113)|0);
 $115 = HEAP8[$114>>0]|0;
 $116 = $115&255;
 $117 = $107 << 1;
 $118 = (($117) + ($116))|0;
 $119 = (7 - ($1))|0;
 $120 = (($0) + ($119)|0);
 $121 = HEAP8[$120>>0]|0;
 $122 = $121&255;
 $123 = (($118) + 2)|0;
 $124 = (($123) + ($122))|0;
 $125 = $124 >>> 2;
 $126 = $125&255;
 $127 = ((($5)) + 6|0);
 HEAP8[$127>>0] = $126;
 $128 = ($122*3)|0;
 $129 = (($107) + 2)|0;
 $130 = (($129) + ($128))|0;
 $131 = $130 >>> 2;
 $132 = $131&255;
 $133 = ((($5)) + 7|0);
 HEAP8[$133>>0] = $132;
 $scevgep = ((($5)) + 8|0);
 _memset(($scevgep|0),($121|0),8)|0;
 $$385 = 0;
 while(1) {
  $134 = $$385 & 1;
  $135 = ($134|0)==(0);
  $136 = $$385 >> 1;
  $137 = (($4) + ($$385<<2)|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (($5) + ($136)|0);
  $140 = HEAP8[$139>>0]|0;
  $141 = $140&255;
  $142 = (($136) + 1)|0;
  $143 = (($5) + ($142)|0);
  $144 = HEAP8[$143>>0]|0;
  $145 = $144&255;
  if ($135) {
   $276 = (($141) + 1)|0;
   $277 = (($276) + ($145))|0;
   $278 = $277 >>> 1;
   $279 = $278&255;
   $280 = (($0) + ($138)|0);
   HEAP8[$280>>0] = $279;
   $281 = (($136) + 2)|0;
   $282 = (($5) + ($281)|0);
   $283 = HEAP8[$282>>0]|0;
   $284 = $283&255;
   $285 = (($145) + 1)|0;
   $286 = (($285) + ($284))|0;
   $287 = $286 >>> 1;
   $288 = $287&255;
   $289 = (($138) + 1)|0;
   $290 = (($0) + ($289)|0);
   HEAP8[$290>>0] = $288;
   $291 = (($136) + 2)|0;
   $292 = (($5) + ($291)|0);
   $293 = HEAP8[$292>>0]|0;
   $294 = $293&255;
   $295 = (($136) + 3)|0;
   $296 = (($5) + ($295)|0);
   $297 = HEAP8[$296>>0]|0;
   $298 = $297&255;
   $299 = (($294) + 1)|0;
   $300 = (($299) + ($298))|0;
   $301 = $300 >>> 1;
   $302 = $301&255;
   $303 = (($138) + 2)|0;
   $304 = (($0) + ($303)|0);
   HEAP8[$304>>0] = $302;
   $305 = (($136) + 3)|0;
   $306 = (($5) + ($305)|0);
   $307 = HEAP8[$306>>0]|0;
   $308 = $307&255;
   $309 = (($136) + 4)|0;
   $310 = (($5) + ($309)|0);
   $311 = HEAP8[$310>>0]|0;
   $312 = $311&255;
   $313 = (($308) + 1)|0;
   $314 = (($313) + ($312))|0;
   $315 = $314 >>> 1;
   $316 = $315&255;
   $317 = (($138) + 3)|0;
   $318 = (($0) + ($317)|0);
   HEAP8[$318>>0] = $316;
   $319 = (($136) + 4)|0;
   $320 = (($5) + ($319)|0);
   $321 = HEAP8[$320>>0]|0;
   $322 = $321&255;
   $323 = (($136) + 5)|0;
   $324 = (($5) + ($323)|0);
   $325 = HEAP8[$324>>0]|0;
   $326 = $325&255;
   $327 = (($322) + 1)|0;
   $328 = (($327) + ($326))|0;
   $329 = $328 >>> 1;
   $330 = $329&255;
   $331 = (($138) + 4)|0;
   $332 = (($0) + ($331)|0);
   HEAP8[$332>>0] = $330;
   $333 = (($136) + 5)|0;
   $334 = (($5) + ($333)|0);
   $335 = HEAP8[$334>>0]|0;
   $336 = $335&255;
   $337 = (($136) + 6)|0;
   $338 = (($5) + ($337)|0);
   $339 = HEAP8[$338>>0]|0;
   $340 = $339&255;
   $341 = (($336) + 1)|0;
   $342 = (($341) + ($340))|0;
   $343 = $342 >>> 1;
   $344 = $343&255;
   $345 = (($138) + 5)|0;
   $346 = (($0) + ($345)|0);
   HEAP8[$346>>0] = $344;
   $347 = (($136) + 6)|0;
   $348 = (($5) + ($347)|0);
   $349 = HEAP8[$348>>0]|0;
   $350 = $349&255;
   $351 = (($136) + 7)|0;
   $352 = (($5) + ($351)|0);
   $353 = HEAP8[$352>>0]|0;
   $354 = $353&255;
   $355 = (($350) + 1)|0;
   $356 = (($355) + ($354))|0;
   $357 = $356 >>> 1;
   $358 = $357&255;
   $359 = (($138) + 6)|0;
   $360 = (($0) + ($359)|0);
   HEAP8[$360>>0] = $358;
   $361 = (($136) + 7)|0;
   $362 = (($5) + ($361)|0);
   $363 = HEAP8[$362>>0]|0;
   $364 = $363&255;
   $365 = (($136) + 8)|0;
   $366 = (($5) + ($365)|0);
   $367 = HEAP8[$366>>0]|0;
   $368 = $367&255;
   $369 = (($364) + 1)|0;
   $$sink96 = 1;$$sink97 = $369;$$sink98 = $368;
  } else {
   $146 = $145 << 1;
   $147 = (($136) + 2)|0;
   $148 = (($5) + ($147)|0);
   $149 = HEAP8[$148>>0]|0;
   $150 = $149&255;
   $151 = (($141) + 2)|0;
   $152 = (($151) + ($146))|0;
   $153 = (($152) + ($150))|0;
   $154 = $153 >>> 2;
   $155 = $154&255;
   $156 = (($0) + ($138)|0);
   HEAP8[$156>>0] = $155;
   $157 = $150 << 1;
   $158 = (($136) + 3)|0;
   $159 = (($5) + ($158)|0);
   $160 = HEAP8[$159>>0]|0;
   $161 = $160&255;
   $162 = (($145) + 2)|0;
   $163 = (($162) + ($157))|0;
   $164 = (($163) + ($161))|0;
   $165 = $164 >>> 2;
   $166 = $165&255;
   $167 = (($138) + 1)|0;
   $168 = (($0) + ($167)|0);
   HEAP8[$168>>0] = $166;
   $169 = $161 << 1;
   $170 = (($136) + 4)|0;
   $171 = (($5) + ($170)|0);
   $172 = HEAP8[$171>>0]|0;
   $173 = $172&255;
   $174 = (($150) + 2)|0;
   $175 = (($174) + ($169))|0;
   $176 = (($175) + ($173))|0;
   $177 = $176 >>> 2;
   $178 = $177&255;
   $179 = (($138) + 2)|0;
   $180 = (($0) + ($179)|0);
   HEAP8[$180>>0] = $178;
   $181 = (($136) + 3)|0;
   $182 = (($5) + ($181)|0);
   $183 = HEAP8[$182>>0]|0;
   $184 = $183&255;
   $185 = (($136) + 4)|0;
   $186 = (($5) + ($185)|0);
   $187 = HEAP8[$186>>0]|0;
   $188 = $187&255;
   $189 = $188 << 1;
   $190 = (($136) + 5)|0;
   $191 = (($5) + ($190)|0);
   $192 = HEAP8[$191>>0]|0;
   $193 = $192&255;
   $194 = (($184) + 2)|0;
   $195 = (($194) + ($189))|0;
   $196 = (($195) + ($193))|0;
   $197 = $196 >>> 2;
   $198 = $197&255;
   $199 = (($138) + 3)|0;
   $200 = (($0) + ($199)|0);
   HEAP8[$200>>0] = $198;
   $201 = (($136) + 4)|0;
   $202 = (($5) + ($201)|0);
   $203 = HEAP8[$202>>0]|0;
   $204 = $203&255;
   $205 = (($136) + 5)|0;
   $206 = (($5) + ($205)|0);
   $207 = HEAP8[$206>>0]|0;
   $208 = $207&255;
   $209 = $208 << 1;
   $210 = (($136) + 6)|0;
   $211 = (($5) + ($210)|0);
   $212 = HEAP8[$211>>0]|0;
   $213 = $212&255;
   $214 = (($204) + 2)|0;
   $215 = (($214) + ($209))|0;
   $216 = (($215) + ($213))|0;
   $217 = $216 >>> 2;
   $218 = $217&255;
   $219 = (($138) + 4)|0;
   $220 = (($0) + ($219)|0);
   HEAP8[$220>>0] = $218;
   $221 = (($136) + 5)|0;
   $222 = (($5) + ($221)|0);
   $223 = HEAP8[$222>>0]|0;
   $224 = $223&255;
   $225 = (($136) + 6)|0;
   $226 = (($5) + ($225)|0);
   $227 = HEAP8[$226>>0]|0;
   $228 = $227&255;
   $229 = $228 << 1;
   $230 = (($136) + 7)|0;
   $231 = (($5) + ($230)|0);
   $232 = HEAP8[$231>>0]|0;
   $233 = $232&255;
   $234 = (($224) + 2)|0;
   $235 = (($234) + ($229))|0;
   $236 = (($235) + ($233))|0;
   $237 = $236 >>> 2;
   $238 = $237&255;
   $239 = (($138) + 5)|0;
   $240 = (($0) + ($239)|0);
   HEAP8[$240>>0] = $238;
   $241 = (($136) + 6)|0;
   $242 = (($5) + ($241)|0);
   $243 = HEAP8[$242>>0]|0;
   $244 = $243&255;
   $245 = (($136) + 7)|0;
   $246 = (($5) + ($245)|0);
   $247 = HEAP8[$246>>0]|0;
   $248 = $247&255;
   $249 = $248 << 1;
   $250 = (($136) + 8)|0;
   $251 = (($5) + ($250)|0);
   $252 = HEAP8[$251>>0]|0;
   $253 = $252&255;
   $254 = (($244) + 2)|0;
   $255 = (($254) + ($249))|0;
   $256 = (($255) + ($253))|0;
   $257 = $256 >>> 2;
   $258 = $257&255;
   $259 = (($138) + 6)|0;
   $260 = (($0) + ($259)|0);
   HEAP8[$260>>0] = $258;
   $261 = (($136) + 7)|0;
   $262 = (($5) + ($261)|0);
   $263 = HEAP8[$262>>0]|0;
   $264 = $263&255;
   $265 = (($136) + 8)|0;
   $266 = (($5) + ($265)|0);
   $267 = HEAP8[$266>>0]|0;
   $268 = $267&255;
   $269 = $268 << 1;
   $270 = (($136) + 9)|0;
   $271 = (($5) + ($270)|0);
   $272 = HEAP8[$271>>0]|0;
   $273 = $272&255;
   $274 = (($264) + 2)|0;
   $275 = (($274) + ($269))|0;
   $$sink96 = 2;$$sink97 = $275;$$sink98 = $273;
  }
  $370 = (($$sink97) + ($$sink98))|0;
  $371 = $370 >>> $$sink96;
  $372 = $371&255;
  $373 = (($138) + 7)|0;
  $374 = (($0) + ($373)|0);
  HEAP8[$374>>0] = $372;
  $375 = (($$385) + 1)|0;
  $exitcond = ($375|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$385 = $375;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI8x8LumaPredVR_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$1140 = 0, $$2139 = 0, $$phi$trans$insert = 0, $$pre = 0, $$sink1 = 0, $$sink136 = 0, $$sink136$1 = 0, $$sink136$2 = 0, $$sink136$3 = 0, $$sink136$4 = 0, $$sink136$5 = 0, $$sink136$6 = 0, $$sink136$7 = 0, $$sink137 = 0, $$sink137$1 = 0, $$sink137$2 = 0, $$sink137$3 = 0, $$sink137$4 = 0, $$sink137$5 = 0;
 var $$sink137$6 = 0, $$sink137$7 = 0, $$sink21$sink$sink = 0, $$sink21$sink$sink$1 = 0, $$sink21$sink$sink$2 = 0, $$sink21$sink$sink$3 = 0, $$sink21$sink$sink$4 = 0, $$sink21$sink$sink$5 = 0, $$sink21$sink$sink$6 = 0, $$sink21$sink$sink$7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $57$phi = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond142 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 40|0;
 $6 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $7 = ((($4)) + 4|0);
 HEAP32[$7>>2] = $1;
 $8 = $1 << 1;
 $9 = ((($4)) + 8|0);
 HEAP32[$9>>2] = $8;
 $10 = ($1*3)|0;
 $11 = ((($4)) + 12|0);
 HEAP32[$11>>2] = $10;
 $12 = $1 << 2;
 $13 = ((($4)) + 16|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*5)|0;
 $15 = ((($4)) + 20|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*6)|0;
 $17 = ((($4)) + 24|0);
 HEAP32[$17>>2] = $16;
 $18 = ($1*7)|0;
 $19 = ((($4)) + 28|0);
 HEAP32[$19>>2] = $18;
 $20 = ((($0)) + -1|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 $23 = $1 ^ -1;
 $24 = (($0) + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = $26 << 1;
 $28 = (0 - ($1))|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($22) + 2)|0;
 $33 = (($32) + ($27))|0;
 $34 = (($33) + ($31))|0;
 $35 = $22 << 1;
 $36 = (($1) + -1)|0;
 $37 = (($0) + ($36)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = (($35) + 2)|0;
 $41 = (($40) + ($26))|0;
 $42 = (($41) + ($39))|0;
 $43 = $42 >>> 2;
 $44 = $43&255;
 HEAP8[$5>>0] = $44;
 $45 = $31 << 1;
 $46 = (1 - ($1))|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (($26) + 2)|0;
 $51 = (($50) + ($45))|0;
 $52 = (($51) + ($49))|0;
 $53 = $52 >>> 2;
 $54 = $53&255;
 HEAP8[$6>>0] = $54;
 $$1140 = 1;$57 = $21;$59 = $38;
 while(1) {
  $55 = (($$1140) + -1)|0;
  $56 = $57&255;
  $58 = $59&255;
  $60 = $58 << 1;
  $61 = (($$1140) + 1)|0;
  $62 = (($4) + ($61<<2)|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = (($63) + -1)|0;
  $65 = (($0) + ($64)|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66&255;
  $68 = (($56) + 2)|0;
  $69 = (($68) + ($60))|0;
  $70 = (($69) + ($67))|0;
  $71 = $70 >>> 2;
  $72 = $71&255;
  $73 = (($5) + ($$1140)|0);
  HEAP8[$73>>0] = $72;
  $74 = (($55) - ($1))|0;
  $75 = (($0) + ($74)|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76&255;
  $78 = (($$1140) - ($1))|0;
  $79 = (($0) + ($78)|0);
  $80 = HEAP8[$79>>0]|0;
  $81 = $80&255;
  $82 = $81 << 1;
  $83 = (($61) - ($1))|0;
  $84 = (($0) + ($83)|0);
  $85 = HEAP8[$84>>0]|0;
  $86 = $85&255;
  $87 = (($77) + 2)|0;
  $88 = (($87) + ($82))|0;
  $89 = (($88) + ($86))|0;
  $90 = $89 >>> 2;
  $91 = $90&255;
  $92 = (($6) + ($$1140)|0);
  HEAP8[$92>>0] = $91;
  $exitcond142 = ($61|0)==(7);
  if ($exitcond142) {
   break;
  } else {
   $57$phi = $59;$$1140 = $61;$59 = $66;$57 = $57$phi;
  }
 }
 $93 = $34 >>> 2;
 $94 = (($16) + -1)|0;
 $95 = (($0) + ($94)|0);
 $96 = HEAP8[$95>>0]|0;
 $97 = $96&255;
 $98 = (($18) + -1)|0;
 $99 = (($0) + ($98)|0);
 $100 = HEAP8[$99>>0]|0;
 $101 = $100&255;
 $102 = ($101*3)|0;
 $103 = (($97) + 2)|0;
 $104 = (($103) + ($102))|0;
 $105 = $104 >>> 2;
 $106 = $105&255;
 $107 = ((($5)) + 7|0);
 HEAP8[$107>>0] = $106;
 $108 = (6 - ($1))|0;
 $109 = (($0) + ($108)|0);
 $110 = HEAP8[$109>>0]|0;
 $111 = $110&255;
 $112 = (7 - ($1))|0;
 $113 = (($0) + ($112)|0);
 $114 = HEAP8[$113>>0]|0;
 $115 = $114&255;
 if ($3) {
  $116 = $115 << 1;
  $117 = (($116) + ($111))|0;
  $118 = (8 - ($1))|0;
  $119 = (($0) + ($118)|0);
  $120 = HEAP8[$119>>0]|0;
  $121 = $120&255;
  $122 = (($117) + ($121))|0;
  $$sink1 = $122;
 } else {
  $123 = ($115*3)|0;
  $124 = (($123) + ($111))|0;
  $$sink1 = $124;
 }
 $125 = (($$sink1) + 2)|0;
 $126 = $125 >>> 2;
 $127 = $126&255;
 $128 = ((($6)) + 7|0);
 HEAP8[$128>>0] = $127;
 $129 = $93 & 255;
 $130 = HEAP8[$6>>0]|0;
 $131 = $130&255;
 $132 = (($131) + ($129))|0;
 $133 = $131 << 1;
 $134 = (($133) + ($129))|0;
 $135 = ((($6)) + 1|0);
 $136 = HEAP8[$135>>0]|0;
 $137 = $136&255;
 $138 = (($134) + ($137))|0;
 $139 = HEAP8[$5>>0]|0;
 $140 = $139&255;
 $141 = $93 << 1;
 $142 = $141 & 510;
 $143 = (($140) + ($142))|0;
 $144 = (($143) + ($131))|0;
 $145 = ((($5)) + 1|0);
 $146 = HEAP8[$145>>0]|0;
 $147 = $146&255;
 $148 = $140 << 1;
 $149 = (($147) + ($129))|0;
 $150 = (($149) + ($148))|0;
 $$2139 = 0;$200 = 0;
 while(1) {
  $151 = $$2139 >> 1;
  $152 = (0 - ($151))|0;
  $153 = ($$2139|0)<(1);
  do {
   if ($153) {
    $154 = $$2139 & 1;
    $155 = ($154|0)==(0);
    if ($155) {
     $156 = ($151|0)<(0);
     if (!($156)) {
      $$sink136 = $132;$$sink137 = 1;
      break;
     }
     $157 = $151 ^ -1;
     $158 = (($6) + ($157)|0);
     $159 = HEAP8[$158>>0]|0;
     $160 = $159&255;
     $161 = (($6) + ($152)|0);
     $162 = HEAP8[$161>>0]|0;
     $163 = $162&255;
     $164 = (($163) + ($160))|0;
     $$sink136 = $164;$$sink137 = 1;
     break;
    } else {
     $165 = ($151|0)<(-1);
     if (!($165)) {
      $$sink136 = $138;$$sink137 = 2;
      break;
     }
     $166 = (-2 - ($151))|0;
     $167 = (($6) + ($166)|0);
     $168 = HEAP8[$167>>0]|0;
     $169 = $168&255;
     $170 = $151 ^ -1;
     $171 = (($6) + ($170)|0);
     $172 = HEAP8[$171>>0]|0;
     $173 = $172&255;
     $174 = $173 << 1;
     $175 = (($174) + ($169))|0;
     $176 = (($6) + ($152)|0);
     $177 = HEAP8[$176>>0]|0;
     $178 = $177&255;
     $179 = (($175) + ($178))|0;
     $$sink136 = $179;$$sink137 = 2;
     break;
    }
   } else {
    $180 = ($$2139|0)==(1);
    if ($180) {
     $$sink136 = $144;$$sink137 = 2;
    } else {
     $181 = ($$2139|0)>(2);
     if ($181) {
      $182 = (($$2139) + -1)|0;
      $183 = (($5) + ($182)|0);
      $184 = HEAP8[$183>>0]|0;
      $185 = $184&255;
      $186 = (($$2139) + -2)|0;
      $187 = (($5) + ($186)|0);
      $188 = HEAP8[$187>>0]|0;
      $189 = $188&255;
      $190 = $189 << 1;
      $191 = (($190) + ($185))|0;
      $192 = (($$2139) + -3)|0;
      $193 = (($5) + ($192)|0);
      $194 = HEAP8[$193>>0]|0;
      $195 = $194&255;
      $196 = (($191) + ($195))|0;
      $$sink136 = $196;$$sink137 = 2;
     } else {
      $$sink136 = $150;$$sink137 = 2;
     }
    }
   }
  } while(0);
  $197 = (($$sink136) + ($$sink137))|0;
  $198 = $197 >>> $$sink137;
  $$sink21$sink$sink = $198&255;
  $199 = (($0) + ($200)|0);
  HEAP8[$199>>0] = $$sink21$sink$sink;
  $201 = (2 - ($$2139))|0;
  $202 = (1 - ($151))|0;
  $203 = ($201|0)>(-1);
  do {
   if ($203) {
    $221 = $201 & 1;
    $222 = ($221|0)==(0);
    if ($222) {
     $238 = ($202|0)>(0);
     if (!($238)) {
      $$sink136$1 = $132;$$sink137$1 = 1;
      break;
     }
     $239 = (($202) + -1)|0;
     $240 = (($6) + ($239)|0);
     $241 = HEAP8[$240>>0]|0;
     $242 = $241&255;
     $243 = (($6) + ($202)|0);
     $244 = HEAP8[$243>>0]|0;
     $245 = $244&255;
     $246 = (($245) + ($242))|0;
     $$sink136$1 = $246;$$sink137$1 = 1;
     break;
    } else {
     $223 = ($151|0)<(0);
     if (!($223)) {
      $$sink136$1 = $138;$$sink137$1 = 2;
      break;
     }
     $224 = (($202) + -2)|0;
     $225 = (($6) + ($224)|0);
     $226 = HEAP8[$225>>0]|0;
     $227 = $226&255;
     $228 = (($202) + -1)|0;
     $229 = (($6) + ($228)|0);
     $230 = HEAP8[$229>>0]|0;
     $231 = $230&255;
     $232 = $231 << 1;
     $233 = (($232) + ($227))|0;
     $234 = (($6) + ($202)|0);
     $235 = HEAP8[$234>>0]|0;
     $236 = $235&255;
     $237 = (($233) + ($236))|0;
     $$sink136$1 = $237;$$sink137$1 = 2;
     break;
    }
   } else {
    $204 = ($201|0)==(-1);
    if ($204) {
     $$sink136$1 = $144;$$sink137$1 = 2;
    } else {
     $205 = ($201|0)<(-2);
     if ($205) {
      $206 = (($$2139) + -3)|0;
      $207 = (($5) + ($206)|0);
      $208 = HEAP8[$207>>0]|0;
      $209 = $208&255;
      $210 = (-2 - ($201))|0;
      $211 = (($5) + ($210)|0);
      $212 = HEAP8[$211>>0]|0;
      $213 = $212&255;
      $214 = $213 << 1;
      $215 = (($214) + ($209))|0;
      $216 = (-3 - ($201))|0;
      $217 = (($5) + ($216)|0);
      $218 = HEAP8[$217>>0]|0;
      $219 = $218&255;
      $220 = (($215) + ($219))|0;
      $$sink136$1 = $220;$$sink137$1 = 2;
     } else {
      $$sink136$1 = $150;$$sink137$1 = 2;
     }
    }
   }
  } while(0);
  $247 = (($$sink136$1) + ($$sink137$1))|0;
  $248 = $247 >>> $$sink137$1;
  $$sink21$sink$sink$1 = $248&255;
  $249 = (($200) + 1)|0;
  $250 = (($0) + ($249)|0);
  HEAP8[$250>>0] = $$sink21$sink$sink$1;
  $251 = (4 - ($$2139))|0;
  $252 = (2 - ($151))|0;
  $253 = ($251|0)>(-1);
  do {
   if ($253) {
    $271 = $251 & 1;
    $272 = ($271|0)==(0);
    if ($272) {
     $288 = ($252|0)>(0);
     if (!($288)) {
      $$sink136$2 = $132;$$sink137$2 = 1;
      break;
     }
     $289 = (($252) + -1)|0;
     $290 = (($6) + ($289)|0);
     $291 = HEAP8[$290>>0]|0;
     $292 = $291&255;
     $293 = (($6) + ($252)|0);
     $294 = HEAP8[$293>>0]|0;
     $295 = $294&255;
     $296 = (($295) + ($292))|0;
     $$sink136$2 = $296;$$sink137$2 = 1;
     break;
    } else {
     $273 = ($252|0)>(1);
     if (!($273)) {
      $$sink136$2 = $138;$$sink137$2 = 2;
      break;
     }
     $274 = (($252) + -2)|0;
     $275 = (($6) + ($274)|0);
     $276 = HEAP8[$275>>0]|0;
     $277 = $276&255;
     $278 = (($252) + -1)|0;
     $279 = (($6) + ($278)|0);
     $280 = HEAP8[$279>>0]|0;
     $281 = $280&255;
     $282 = $281 << 1;
     $283 = (($282) + ($277))|0;
     $284 = (($6) + ($252)|0);
     $285 = HEAP8[$284>>0]|0;
     $286 = $285&255;
     $287 = (($283) + ($286))|0;
     $$sink136$2 = $287;$$sink137$2 = 2;
     break;
    }
   } else {
    $254 = ($251|0)==(-1);
    if ($254) {
     $$sink136$2 = $144;$$sink137$2 = 2;
    } else {
     $255 = ($251|0)<(-2);
     if ($255) {
      $256 = (($$2139) + -5)|0;
      $257 = (($5) + ($256)|0);
      $258 = HEAP8[$257>>0]|0;
      $259 = $258&255;
      $260 = (-2 - ($251))|0;
      $261 = (($5) + ($260)|0);
      $262 = HEAP8[$261>>0]|0;
      $263 = $262&255;
      $264 = $263 << 1;
      $265 = (($264) + ($259))|0;
      $266 = (-3 - ($251))|0;
      $267 = (($5) + ($266)|0);
      $268 = HEAP8[$267>>0]|0;
      $269 = $268&255;
      $270 = (($265) + ($269))|0;
      $$sink136$2 = $270;$$sink137$2 = 2;
     } else {
      $$sink136$2 = $150;$$sink137$2 = 2;
     }
    }
   }
  } while(0);
  $297 = (($$sink136$2) + ($$sink137$2))|0;
  $298 = $297 >>> $$sink137$2;
  $$sink21$sink$sink$2 = $298&255;
  $299 = (($200) + 2)|0;
  $300 = (($0) + ($299)|0);
  HEAP8[$300>>0] = $$sink21$sink$sink$2;
  $301 = (6 - ($$2139))|0;
  $302 = (3 - ($151))|0;
  $303 = ($301|0)>(-1);
  do {
   if ($303) {
    $305 = $301 & 1;
    $306 = ($305|0)==(0);
    if ($306) {
     $322 = ($302|0)>(0);
     if (!($322)) {
      $$sink136$3 = $132;$$sink137$3 = 1;
      break;
     }
     $323 = (($302) + -1)|0;
     $324 = (($6) + ($323)|0);
     $325 = HEAP8[$324>>0]|0;
     $326 = $325&255;
     $327 = (($6) + ($302)|0);
     $328 = HEAP8[$327>>0]|0;
     $329 = $328&255;
     $330 = (($329) + ($326))|0;
     $$sink136$3 = $330;$$sink137$3 = 1;
     break;
    } else {
     $307 = ($302|0)>(1);
     if (!($307)) {
      $$sink136$3 = $138;$$sink137$3 = 2;
      break;
     }
     $308 = (($302) + -2)|0;
     $309 = (($6) + ($308)|0);
     $310 = HEAP8[$309>>0]|0;
     $311 = $310&255;
     $312 = (($302) + -1)|0;
     $313 = (($6) + ($312)|0);
     $314 = HEAP8[$313>>0]|0;
     $315 = $314&255;
     $316 = $315 << 1;
     $317 = (($316) + ($311))|0;
     $318 = (($6) + ($302)|0);
     $319 = HEAP8[$318>>0]|0;
     $320 = $319&255;
     $321 = (($317) + ($320))|0;
     $$sink136$3 = $321;$$sink137$3 = 2;
     break;
    }
   } else {
    $304 = ($301|0)==(-1);
    $$ = $304 ? $144 : $150;
    $$sink136$3 = $$;$$sink137$3 = 2;
   }
  } while(0);
  $331 = (($$sink136$3) + ($$sink137$3))|0;
  $332 = $331 >>> $$sink137$3;
  $$sink21$sink$sink$3 = $332&255;
  $333 = (($200) + 3)|0;
  $334 = (($0) + ($333)|0);
  HEAP8[$334>>0] = $$sink21$sink$sink$3;
  $335 = (4 - ($151))|0;
  $336 = $$2139 & 1;
  $337 = ($336|0)==(0);
  if ($337) {
   $353 = ($335|0)>(0);
   if ($353) {
    $354 = (($335) + -1)|0;
    $355 = (($6) + ($354)|0);
    $356 = HEAP8[$355>>0]|0;
    $357 = $356&255;
    $358 = (($6) + ($335)|0);
    $359 = HEAP8[$358>>0]|0;
    $360 = $359&255;
    $361 = (($360) + ($357))|0;
    $$sink136$4 = $361;$$sink137$4 = 1;
   } else {
    $$sink136$4 = $132;$$sink137$4 = 1;
   }
  } else {
   $338 = ($335|0)>(1);
   if ($338) {
    $339 = (($335) + -2)|0;
    $340 = (($6) + ($339)|0);
    $341 = HEAP8[$340>>0]|0;
    $342 = $341&255;
    $343 = (($335) + -1)|0;
    $344 = (($6) + ($343)|0);
    $345 = HEAP8[$344>>0]|0;
    $346 = $345&255;
    $347 = $346 << 1;
    $348 = (($347) + ($342))|0;
    $349 = (($6) + ($335)|0);
    $350 = HEAP8[$349>>0]|0;
    $351 = $350&255;
    $352 = (($348) + ($351))|0;
    $$sink136$4 = $352;$$sink137$4 = 2;
   } else {
    $$sink136$4 = $138;$$sink137$4 = 2;
   }
  }
  $362 = (($$sink136$4) + ($$sink137$4))|0;
  $363 = $362 >>> $$sink137$4;
  $$sink21$sink$sink$4 = $363&255;
  $364 = (($200) + 4)|0;
  $365 = (($0) + ($364)|0);
  HEAP8[$365>>0] = $$sink21$sink$sink$4;
  $366 = (5 - ($151))|0;
  $367 = $$2139 & 1;
  $368 = ($367|0)==(0);
  if ($368) {
   $384 = ($366|0)>(0);
   if ($384) {
    $385 = (($366) + -1)|0;
    $386 = (($6) + ($385)|0);
    $387 = HEAP8[$386>>0]|0;
    $388 = $387&255;
    $389 = (($6) + ($366)|0);
    $390 = HEAP8[$389>>0]|0;
    $391 = $390&255;
    $392 = (($391) + ($388))|0;
    $$sink136$5 = $392;$$sink137$5 = 1;
   } else {
    $$sink136$5 = $132;$$sink137$5 = 1;
   }
  } else {
   $369 = ($366|0)>(1);
   if ($369) {
    $370 = (($366) + -2)|0;
    $371 = (($6) + ($370)|0);
    $372 = HEAP8[$371>>0]|0;
    $373 = $372&255;
    $374 = (($366) + -1)|0;
    $375 = (($6) + ($374)|0);
    $376 = HEAP8[$375>>0]|0;
    $377 = $376&255;
    $378 = $377 << 1;
    $379 = (($378) + ($373))|0;
    $380 = (($6) + ($366)|0);
    $381 = HEAP8[$380>>0]|0;
    $382 = $381&255;
    $383 = (($379) + ($382))|0;
    $$sink136$5 = $383;$$sink137$5 = 2;
   } else {
    $$sink136$5 = $138;$$sink137$5 = 2;
   }
  }
  $393 = (($$sink136$5) + ($$sink137$5))|0;
  $394 = $393 >>> $$sink137$5;
  $$sink21$sink$sink$5 = $394&255;
  $395 = (($200) + 5)|0;
  $396 = (($0) + ($395)|0);
  HEAP8[$396>>0] = $$sink21$sink$sink$5;
  $397 = (6 - ($151))|0;
  $398 = $$2139 & 1;
  $399 = ($398|0)==(0);
  if ($399) {
   $415 = ($397|0)>(0);
   if ($415) {
    $416 = (($397) + -1)|0;
    $417 = (($6) + ($416)|0);
    $418 = HEAP8[$417>>0]|0;
    $419 = $418&255;
    $420 = (($6) + ($397)|0);
    $421 = HEAP8[$420>>0]|0;
    $422 = $421&255;
    $423 = (($422) + ($419))|0;
    $$sink136$6 = $423;$$sink137$6 = 1;
   } else {
    $$sink136$6 = $132;$$sink137$6 = 1;
   }
  } else {
   $400 = ($397|0)>(1);
   if ($400) {
    $401 = (($397) + -2)|0;
    $402 = (($6) + ($401)|0);
    $403 = HEAP8[$402>>0]|0;
    $404 = $403&255;
    $405 = (($397) + -1)|0;
    $406 = (($6) + ($405)|0);
    $407 = HEAP8[$406>>0]|0;
    $408 = $407&255;
    $409 = $408 << 1;
    $410 = (($409) + ($404))|0;
    $411 = (($6) + ($397)|0);
    $412 = HEAP8[$411>>0]|0;
    $413 = $412&255;
    $414 = (($410) + ($413))|0;
    $$sink136$6 = $414;$$sink137$6 = 2;
   } else {
    $$sink136$6 = $138;$$sink137$6 = 2;
   }
  }
  $424 = (($$sink136$6) + ($$sink137$6))|0;
  $425 = $424 >>> $$sink137$6;
  $$sink21$sink$sink$6 = $425&255;
  $426 = (($200) + 6)|0;
  $427 = (($0) + ($426)|0);
  HEAP8[$427>>0] = $$sink21$sink$sink$6;
  $428 = (7 - ($151))|0;
  $429 = $$2139 & 1;
  $430 = ($429|0)==(0);
  if ($430) {
   $446 = ($428|0)>(0);
   if ($446) {
    $447 = (($428) + -1)|0;
    $448 = (($6) + ($447)|0);
    $449 = HEAP8[$448>>0]|0;
    $450 = $449&255;
    $451 = (($6) + ($428)|0);
    $452 = HEAP8[$451>>0]|0;
    $453 = $452&255;
    $454 = (($453) + ($450))|0;
    $$sink136$7 = $454;$$sink137$7 = 1;
   } else {
    $$sink136$7 = $132;$$sink137$7 = 1;
   }
  } else {
   $431 = ($428|0)>(1);
   if ($431) {
    $432 = (($428) + -2)|0;
    $433 = (($6) + ($432)|0);
    $434 = HEAP8[$433>>0]|0;
    $435 = $434&255;
    $436 = (($428) + -1)|0;
    $437 = (($6) + ($436)|0);
    $438 = HEAP8[$437>>0]|0;
    $439 = $438&255;
    $440 = $439 << 1;
    $441 = (($440) + ($435))|0;
    $442 = (($6) + ($428)|0);
    $443 = HEAP8[$442>>0]|0;
    $444 = $443&255;
    $445 = (($441) + ($444))|0;
    $$sink136$7 = $445;$$sink137$7 = 2;
   } else {
    $$sink136$7 = $138;$$sink137$7 = 2;
   }
  }
  $455 = (($$sink136$7) + ($$sink137$7))|0;
  $456 = $455 >>> $$sink137$7;
  $$sink21$sink$sink$7 = $456&255;
  $457 = (($200) + 7)|0;
  $458 = (($0) + ($457)|0);
  HEAP8[$458>>0] = $$sink21$sink$sink$7;
  $459 = (($$2139) + 1)|0;
  $exitcond = ($459|0)==(8);
  if ($exitcond) {
   break;
  }
  $$phi$trans$insert = (($4) + ($459<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$2139 = $459;$200 = $$pre;
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI8x8LumaPredHU_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$07691 = 0, $$292 = 0, $$phi$trans$insert = 0, $$pre = 0, $$sink17$sink = 0, $$sink82$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = $1 << 1;
 $8 = ((($4)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1*3)|0;
 $10 = ((($4)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = $1 << 2;
 $12 = ((($4)) + 16|0);
 HEAP32[$12>>2] = $11;
 $13 = ($1*5)|0;
 $14 = ((($4)) + 20|0);
 HEAP32[$14>>2] = $13;
 $15 = ($1*6)|0;
 $16 = ((($4)) + 24|0);
 HEAP32[$16>>2] = $15;
 $17 = ($1*7)|0;
 $18 = ((($4)) + 28|0);
 HEAP32[$18>>2] = $17;
 $19 = ((($0)) + -1|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $20&255;
 if ($2) {
  $22 = $1 ^ -1;
  $23 = (($0) + ($22)|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = $21 << 1;
  $27 = (($25) + ($26))|0;
  $$sink82$ph = $27;
 } else {
  $28 = ($21*3)|0;
  $$sink82$ph = $28;
 }
 $29 = (($1) + -1)|0;
 $30 = (($0) + ($29)|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = (($$sink82$ph) + 2)|0;
 $34 = (($33) + ($32))|0;
 $35 = $34 >>> 2;
 $36 = $35&255;
 HEAP8[$5>>0] = $36;
 $37 = $32 << 1;
 $38 = (($37) + ($21))|0;
 $39 = (($7) + -1)|0;
 $40 = (($0) + ($39)|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = $41&255;
 $43 = (($38) + 2)|0;
 $44 = (($43) + ($42))|0;
 $45 = $44 >>> 2;
 $46 = $45&255;
 $47 = ((($5)) + 1|0);
 HEAP8[$47>>0] = $46;
 $48 = $42 << 1;
 $49 = (($48) + ($32))|0;
 $50 = (($9) + -1)|0;
 $51 = (($0) + ($50)|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = $52&255;
 $54 = (($49) + 2)|0;
 $55 = (($54) + ($53))|0;
 $56 = $55 >>> 2;
 $57 = $56&255;
 $58 = ((($5)) + 2|0);
 HEAP8[$58>>0] = $57;
 $59 = $53 << 1;
 $60 = (($59) + ($42))|0;
 $61 = (($11) + -1)|0;
 $62 = (($0) + ($61)|0);
 $63 = HEAP8[$62>>0]|0;
 $64 = $63&255;
 $65 = (($60) + 2)|0;
 $66 = (($65) + ($64))|0;
 $67 = $66 >>> 2;
 $68 = $67&255;
 $69 = ((($5)) + 3|0);
 HEAP8[$69>>0] = $68;
 $70 = $64 << 1;
 $71 = (($70) + ($53))|0;
 $72 = (($13) + -1)|0;
 $73 = (($0) + ($72)|0);
 $74 = HEAP8[$73>>0]|0;
 $75 = $74&255;
 $76 = (($71) + 2)|0;
 $77 = (($76) + ($75))|0;
 $78 = $77 >>> 2;
 $79 = $78&255;
 $80 = ((($5)) + 4|0);
 HEAP8[$80>>0] = $79;
 $81 = $75 << 1;
 $82 = (($81) + ($64))|0;
 $83 = (($15) + -1)|0;
 $84 = (($0) + ($83)|0);
 $85 = HEAP8[$84>>0]|0;
 $86 = $85&255;
 $87 = (($82) + 2)|0;
 $88 = (($87) + ($86))|0;
 $89 = $88 >>> 2;
 $90 = $89&255;
 $91 = ((($5)) + 5|0);
 HEAP8[$91>>0] = $90;
 $92 = $86 << 1;
 $93 = (($92) + ($75))|0;
 $94 = (($17) + -1)|0;
 $95 = (($0) + ($94)|0);
 $96 = HEAP8[$95>>0]|0;
 $97 = $96&255;
 $98 = (($93) + 2)|0;
 $99 = (($98) + ($97))|0;
 $100 = $99 >>> 2;
 $101 = $100&255;
 $102 = ((($5)) + 6|0);
 HEAP8[$102>>0] = $101;
 $103 = ($97*3)|0;
 $104 = (($86) + 2)|0;
 $105 = (($104) + ($103))|0;
 $106 = $105 >>> 2;
 $107 = $106&255;
 $108 = ((($5)) + 7|0);
 HEAP8[$108>>0] = $107;
 $109 = $100 & 255;
 $110 = $106 & 255;
 $111 = ($110*3)|0;
 $112 = (($111) + 2)|0;
 $113 = (($112) + ($109))|0;
 $114 = $113 >>> 2;
 $115 = $114&255;
 $$292 = 0;$145 = 0;
 while(1) {
  $116 = $$292 << 1;
  $$07691 = 0;
  while(1) {
   $117 = (($$07691) + ($116))|0;
   $118 = ($117|0)<(13);
   do {
    if ($118) {
     $119 = $117 & 1;
     $120 = ($119|0)==(0);
     $121 = $117 >> 1;
     $122 = (($5) + ($121)|0);
     $123 = HEAP8[$122>>0]|0;
     $124 = $123&255;
     $125 = (($121) + 1)|0;
     $126 = (($5) + ($125)|0);
     $127 = HEAP8[$126>>0]|0;
     $128 = $127&255;
     if ($120) {
      $129 = (($124) + 1)|0;
      $130 = (($129) + ($128))|0;
      $131 = $130 >>> 1;
      $132 = $131&255;
      $$sink17$sink = $132;
      break;
     } else {
      $133 = $128 << 1;
      $134 = (($121) + 2)|0;
      $135 = (($5) + ($134)|0);
      $136 = HEAP8[$135>>0]|0;
      $137 = $136&255;
      $138 = (($124) + 2)|0;
      $139 = (($138) + ($133))|0;
      $140 = (($139) + ($137))|0;
      $141 = $140 >>> 2;
      $142 = $141&255;
      $$sink17$sink = $142;
      break;
     }
    } else {
     $143 = ($117|0)==(13);
     $$ = $143 ? $115 : $107;
     $$sink17$sink = $$;
    }
   } while(0);
   $144 = (($145) + ($$07691))|0;
   $146 = (($0) + ($144)|0);
   HEAP8[$146>>0] = $$sink17$sink;
   $147 = (($$07691) + 1)|0;
   $exitcond = ($147|0)==(8);
   if ($exitcond) {
    break;
   } else {
    $$07691 = $147;
   }
  }
  $148 = (($$292) + 1)|0;
  $exitcond95 = ($148|0)==(8);
  if ($exitcond95) {
   break;
  }
  $$phi$trans$insert = (($4) + ($148<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$292 = $148;$145 = $$pre;
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec20WelsI8x8LumaPredHD_cEPhibb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$1139 = 0, $$2138 = 0, $$phi$trans$insert = 0, $$pre = 0, $$sink1 = 0, $$sink135 = 0, $$sink135$1 = 0, $$sink135$2 = 0, $$sink135$3 = 0, $$sink135$4 = 0, $$sink135$5 = 0, $$sink135$6 = 0, $$sink135$7 = 0, $$sink136$2 = 0, $$sink136$4 = 0, $$sink136$6 = 0, $$sink21$sink$sink = 0, $$sink21$sink$sink$1 = 0, $$sink21$sink$sink$2 = 0;
 var $$sink21$sink$sink$3 = 0, $$sink21$sink$sink$4 = 0, $$sink21$sink$sink$5 = 0, $$sink21$sink$sink$6 = 0, $$sink21$sink$sink$7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $57$phi = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond141 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = sp + 40|0;
 $6 = sp + 32|0;
 HEAP32[$4>>2] = 0;
 $7 = ((($4)) + 4|0);
 HEAP32[$7>>2] = $1;
 $8 = $1 << 1;
 $9 = ((($4)) + 8|0);
 HEAP32[$9>>2] = $8;
 $10 = ($1*3)|0;
 $11 = ((($4)) + 12|0);
 HEAP32[$11>>2] = $10;
 $12 = $1 << 2;
 $13 = ((($4)) + 16|0);
 HEAP32[$13>>2] = $12;
 $14 = ($1*5)|0;
 $15 = ((($4)) + 20|0);
 HEAP32[$15>>2] = $14;
 $16 = ($1*6)|0;
 $17 = ((($4)) + 24|0);
 HEAP32[$17>>2] = $16;
 $18 = ($1*7)|0;
 $19 = ((($4)) + 28|0);
 HEAP32[$19>>2] = $18;
 $20 = ((($0)) + -1|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = $21&255;
 $23 = $1 ^ -1;
 $24 = (($0) + ($23)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = $26 << 1;
 $28 = (0 - ($1))|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($22) + 2)|0;
 $33 = (($32) + ($27))|0;
 $34 = (($33) + ($31))|0;
 $35 = $22 << 1;
 $36 = (($1) + -1)|0;
 $37 = (($0) + ($36)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = (($35) + 2)|0;
 $41 = (($40) + ($26))|0;
 $42 = (($41) + ($39))|0;
 $43 = $42 >>> 2;
 $44 = $43&255;
 HEAP8[$5>>0] = $44;
 $45 = $31 << 1;
 $46 = (1 - ($1))|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (($26) + 2)|0;
 $51 = (($50) + ($45))|0;
 $52 = (($51) + ($49))|0;
 $53 = $52 >>> 2;
 $54 = $53&255;
 HEAP8[$6>>0] = $54;
 $$1139 = 1;$57 = $21;$59 = $38;
 while(1) {
  $55 = (($$1139) + -1)|0;
  $56 = $57&255;
  $58 = $59&255;
  $60 = $58 << 1;
  $61 = (($$1139) + 1)|0;
  $62 = (($4) + ($61<<2)|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = (($63) + -1)|0;
  $65 = (($0) + ($64)|0);
  $66 = HEAP8[$65>>0]|0;
  $67 = $66&255;
  $68 = (($56) + 2)|0;
  $69 = (($68) + ($60))|0;
  $70 = (($69) + ($67))|0;
  $71 = $70 >>> 2;
  $72 = $71&255;
  $73 = (($5) + ($$1139)|0);
  HEAP8[$73>>0] = $72;
  $74 = (($55) - ($1))|0;
  $75 = (($0) + ($74)|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76&255;
  $78 = (($$1139) - ($1))|0;
  $79 = (($0) + ($78)|0);
  $80 = HEAP8[$79>>0]|0;
  $81 = $80&255;
  $82 = $81 << 1;
  $83 = (($61) - ($1))|0;
  $84 = (($0) + ($83)|0);
  $85 = HEAP8[$84>>0]|0;
  $86 = $85&255;
  $87 = (($77) + 2)|0;
  $88 = (($87) + ($82))|0;
  $89 = (($88) + ($86))|0;
  $90 = $89 >>> 2;
  $91 = $90&255;
  $92 = (($6) + ($$1139)|0);
  HEAP8[$92>>0] = $91;
  $exitcond141 = ($61|0)==(7);
  if ($exitcond141) {
   break;
  } else {
   $57$phi = $59;$$1139 = $61;$59 = $66;$57 = $57$phi;
  }
 }
 $93 = $34 >>> 2;
 $94 = (($16) + -1)|0;
 $95 = (($0) + ($94)|0);
 $96 = HEAP8[$95>>0]|0;
 $97 = $96&255;
 $98 = (($18) + -1)|0;
 $99 = (($0) + ($98)|0);
 $100 = HEAP8[$99>>0]|0;
 $101 = $100&255;
 $102 = ($101*3)|0;
 $103 = (($97) + 2)|0;
 $104 = (($103) + ($102))|0;
 $105 = $104 >>> 2;
 $106 = $105&255;
 $107 = ((($5)) + 7|0);
 HEAP8[$107>>0] = $106;
 $108 = (6 - ($1))|0;
 $109 = (($0) + ($108)|0);
 $110 = HEAP8[$109>>0]|0;
 $111 = $110&255;
 $112 = (7 - ($1))|0;
 $113 = (($0) + ($112)|0);
 $114 = HEAP8[$113>>0]|0;
 $115 = $114&255;
 if ($3) {
  $116 = $115 << 1;
  $117 = (($116) + ($111))|0;
  $118 = (8 - ($1))|0;
  $119 = (($0) + ($118)|0);
  $120 = HEAP8[$119>>0]|0;
  $121 = $120&255;
  $122 = (($117) + ($121))|0;
  $$sink1 = $122;
 } else {
  $123 = ($115*3)|0;
  $124 = (($123) + ($111))|0;
  $$sink1 = $124;
 }
 $125 = (($$sink1) + 2)|0;
 $126 = $125 >>> 2;
 $127 = $126&255;
 $128 = ((($6)) + 7|0);
 HEAP8[$128>>0] = $127;
 $129 = $93 & 255;
 $130 = HEAP8[$5>>0]|0;
 $131 = $130&255;
 $132 = (($131) + ($129))|0;
 $133 = $131 << 1;
 $134 = (($133) + ($129))|0;
 $135 = ((($5)) + 1|0);
 $136 = HEAP8[$135>>0]|0;
 $137 = $136&255;
 $138 = (($134) + ($137))|0;
 $139 = $93 << 1;
 $140 = $139 & 510;
 $141 = (($131) + ($140))|0;
 $142 = HEAP8[$6>>0]|0;
 $143 = $142&255;
 $144 = (($141) + ($143))|0;
 $145 = ((($6)) + 1|0);
 $146 = HEAP8[$145>>0]|0;
 $147 = $146&255;
 $148 = $143 << 1;
 $149 = (($147) + ($129))|0;
 $150 = (($149) + ($148))|0;
 $$2138 = 0;$164 = 0;
 while(1) {
  $151 = $$2138 << 1;
  $152 = ($$2138|0)==(0);
  if ($152) {
   $$sink135 = $132;
  } else {
   $153 = (($$2138) + -1)|0;
   $154 = (($5) + ($153)|0);
   $155 = HEAP8[$154>>0]|0;
   $156 = $155&255;
   $157 = (($5) + ($$2138)|0);
   $158 = HEAP8[$157>>0]|0;
   $159 = $158&255;
   $160 = (($159) + ($156))|0;
   $$sink135 = $160;
  }
  $161 = (($$sink135) + 1)|0;
  $162 = $161 >>> 1;
  $$sink21$sink$sink = $162&255;
  $163 = (($0) + ($164)|0);
  HEAP8[$163>>0] = $$sink21$sink$sink;
  $165 = ($151|0)>(0);
  if ($165) {
   $167 = ($$2138|0)==(1);
   if ($167) {
    $$sink135$1 = $138;
   } else {
    $168 = (($$2138) + -2)|0;
    $169 = (($5) + ($168)|0);
    $170 = HEAP8[$169>>0]|0;
    $171 = $170&255;
    $172 = (($$2138) + -1)|0;
    $173 = (($5) + ($172)|0);
    $174 = HEAP8[$173>>0]|0;
    $175 = $174&255;
    $176 = $175 << 1;
    $177 = (($176) + ($171))|0;
    $178 = (($5) + ($$2138)|0);
    $179 = HEAP8[$178>>0]|0;
    $180 = $179&255;
    $181 = (($177) + ($180))|0;
    $$sink135$1 = $181;
   }
  } else {
   $166 = ($151|0)==(0);
   $$ = $166 ? $144 : $150;
   $$sink135$1 = $$;
  }
  $182 = (($$sink135$1) + 2)|0;
  $183 = $182 >>> 2;
  $$sink21$sink$sink$1 = $183&255;
  $184 = (($164) + 1)|0;
  $185 = (($0) + ($184)|0);
  HEAP8[$185>>0] = $$sink21$sink$sink$1;
  $186 = (($151) + -2)|0;
  $187 = (($$2138) + -1)|0;
  $188 = ($186|0)>(-1);
  if ($188) {
   $189 = ($187|0)==(0);
   if ($189) {
    $$sink135$2 = $132;$$sink136$2 = 1;
   } else {
    $190 = (($$2138) + -2)|0;
    $191 = (($5) + ($190)|0);
    $192 = HEAP8[$191>>0]|0;
    $193 = $192&255;
    $194 = (($5) + ($187)|0);
    $195 = HEAP8[$194>>0]|0;
    $196 = $195&255;
    $197 = (($196) + ($193))|0;
    $$sink135$2 = $197;$$sink136$2 = 1;
   }
  } else {
   $$sink135$2 = $150;$$sink136$2 = 2;
  }
  $198 = (($$sink135$2) + ($$sink136$2))|0;
  $199 = $198 >>> $$sink136$2;
  $$sink21$sink$sink$2 = $199&255;
  $200 = (($164) + 2)|0;
  $201 = (($0) + ($200)|0);
  HEAP8[$201>>0] = $$sink21$sink$sink$2;
  $202 = (($151) + -3)|0;
  $203 = ($202|0)>(-1);
  if ($203) {
   $221 = ($187|0)==(1);
   if ($221) {
    $$sink135$3 = $138;
   } else {
    $222 = (($$2138) + -3)|0;
    $223 = (($5) + ($222)|0);
    $224 = HEAP8[$223>>0]|0;
    $225 = $224&255;
    $226 = (($$2138) + -2)|0;
    $227 = (($5) + ($226)|0);
    $228 = HEAP8[$227>>0]|0;
    $229 = $228&255;
    $230 = $229 << 1;
    $231 = (($230) + ($225))|0;
    $232 = (($5) + ($187)|0);
    $233 = HEAP8[$232>>0]|0;
    $234 = $233&255;
    $235 = (($231) + ($234))|0;
    $$sink135$3 = $235;
   }
  } else {
   $204 = ($202|0)==(-1);
   if ($204) {
    $$sink135$3 = $144;
   } else {
    $205 = ($202|0)<(-2);
    if ($205) {
     $206 = (2 - ($151))|0;
     $207 = (($6) + ($206)|0);
     $208 = HEAP8[$207>>0]|0;
     $209 = $208&255;
     $210 = (1 - ($151))|0;
     $211 = (($6) + ($210)|0);
     $212 = HEAP8[$211>>0]|0;
     $213 = $212&255;
     $214 = $213 << 1;
     $215 = (($214) + ($209))|0;
     $216 = (0 - ($151))|0;
     $217 = (($6) + ($216)|0);
     $218 = HEAP8[$217>>0]|0;
     $219 = $218&255;
     $220 = (($215) + ($219))|0;
     $$sink135$3 = $220;
    } else {
     $$sink135$3 = $150;
    }
   }
  }
  $236 = (($$sink135$3) + 2)|0;
  $237 = $236 >>> 2;
  $$sink21$sink$sink$3 = $237&255;
  $238 = (($164) + 3)|0;
  $239 = (($0) + ($238)|0);
  HEAP8[$239>>0] = $$sink21$sink$sink$3;
  $240 = (($151) + -4)|0;
  $241 = (($$2138) + -2)|0;
  $242 = ($240|0)>(-1);
  if ($242) {
   $259 = ($241|0)==(0);
   if ($259) {
    $$sink135$4 = $132;$$sink136$4 = 1;
   } else {
    $260 = (($$2138) + -3)|0;
    $261 = (($5) + ($260)|0);
    $262 = HEAP8[$261>>0]|0;
    $263 = $262&255;
    $264 = (($5) + ($241)|0);
    $265 = HEAP8[$264>>0]|0;
    $266 = $265&255;
    $267 = (($266) + ($263))|0;
    $$sink135$4 = $267;$$sink136$4 = 1;
   }
  } else {
   $243 = ($240|0)<(-2);
   if ($243) {
    $244 = (3 - ($151))|0;
    $245 = (($6) + ($244)|0);
    $246 = HEAP8[$245>>0]|0;
    $247 = $246&255;
    $248 = (2 - ($151))|0;
    $249 = (($6) + ($248)|0);
    $250 = HEAP8[$249>>0]|0;
    $251 = $250&255;
    $252 = $251 << 1;
    $253 = (($252) + ($247))|0;
    $254 = (1 - ($151))|0;
    $255 = (($6) + ($254)|0);
    $256 = HEAP8[$255>>0]|0;
    $257 = $256&255;
    $258 = (($253) + ($257))|0;
    $$sink135$4 = $258;$$sink136$4 = 2;
   } else {
    $$sink135$4 = $150;$$sink136$4 = 2;
   }
  }
  $268 = (($$sink135$4) + ($$sink136$4))|0;
  $269 = $268 >>> $$sink136$4;
  $$sink21$sink$sink$4 = $269&255;
  $270 = (($164) + 4)|0;
  $271 = (($0) + ($270)|0);
  HEAP8[$271>>0] = $$sink21$sink$sink$4;
  $272 = (($151) + -5)|0;
  $273 = ($272|0)>(-1);
  if ($273) {
   $291 = ($241|0)==(1);
   if ($291) {
    $$sink135$5 = $138;
   } else {
    $292 = (($$2138) + -4)|0;
    $293 = (($5) + ($292)|0);
    $294 = HEAP8[$293>>0]|0;
    $295 = $294&255;
    $296 = (($$2138) + -3)|0;
    $297 = (($5) + ($296)|0);
    $298 = HEAP8[$297>>0]|0;
    $299 = $298&255;
    $300 = $299 << 1;
    $301 = (($300) + ($295))|0;
    $302 = (($5) + ($241)|0);
    $303 = HEAP8[$302>>0]|0;
    $304 = $303&255;
    $305 = (($301) + ($304))|0;
    $$sink135$5 = $305;
   }
  } else {
   $274 = ($272|0)==(-1);
   if ($274) {
    $$sink135$5 = $144;
   } else {
    $275 = ($272|0)<(-2);
    if ($275) {
     $276 = (4 - ($151))|0;
     $277 = (($6) + ($276)|0);
     $278 = HEAP8[$277>>0]|0;
     $279 = $278&255;
     $280 = (3 - ($151))|0;
     $281 = (($6) + ($280)|0);
     $282 = HEAP8[$281>>0]|0;
     $283 = $282&255;
     $284 = $283 << 1;
     $285 = (($284) + ($279))|0;
     $286 = (2 - ($151))|0;
     $287 = (($6) + ($286)|0);
     $288 = HEAP8[$287>>0]|0;
     $289 = $288&255;
     $290 = (($285) + ($289))|0;
     $$sink135$5 = $290;
    } else {
     $$sink135$5 = $150;
    }
   }
  }
  $306 = (($$sink135$5) + 2)|0;
  $307 = $306 >>> 2;
  $$sink21$sink$sink$5 = $307&255;
  $308 = (($164) + 5)|0;
  $309 = (($0) + ($308)|0);
  HEAP8[$309>>0] = $$sink21$sink$sink$5;
  $310 = (($151) + -6)|0;
  $311 = (($$2138) + -3)|0;
  $312 = ($310|0)>(-1);
  if ($312) {
   $329 = ($311|0)==(0);
   if ($329) {
    $$sink135$6 = $132;$$sink136$6 = 1;
   } else {
    $330 = (($$2138) + -4)|0;
    $331 = (($5) + ($330)|0);
    $332 = HEAP8[$331>>0]|0;
    $333 = $332&255;
    $334 = (($5) + ($311)|0);
    $335 = HEAP8[$334>>0]|0;
    $336 = $335&255;
    $337 = (($336) + ($333))|0;
    $$sink135$6 = $337;$$sink136$6 = 1;
   }
  } else {
   $313 = ($310|0)<(-2);
   if ($313) {
    $314 = (5 - ($151))|0;
    $315 = (($6) + ($314)|0);
    $316 = HEAP8[$315>>0]|0;
    $317 = $316&255;
    $318 = (4 - ($151))|0;
    $319 = (($6) + ($318)|0);
    $320 = HEAP8[$319>>0]|0;
    $321 = $320&255;
    $322 = $321 << 1;
    $323 = (($322) + ($317))|0;
    $324 = (3 - ($151))|0;
    $325 = (($6) + ($324)|0);
    $326 = HEAP8[$325>>0]|0;
    $327 = $326&255;
    $328 = (($323) + ($327))|0;
    $$sink135$6 = $328;$$sink136$6 = 2;
   } else {
    $$sink135$6 = $150;$$sink136$6 = 2;
   }
  }
  $338 = (($$sink135$6) + ($$sink136$6))|0;
  $339 = $338 >>> $$sink136$6;
  $$sink21$sink$sink$6 = $339&255;
  $340 = (($164) + 6)|0;
  $341 = (($0) + ($340)|0);
  HEAP8[$341>>0] = $$sink21$sink$sink$6;
  $342 = (($151) + -7)|0;
  $343 = ($342|0)>(-1);
  if ($343) {
   $361 = ($311|0)==(1);
   if ($361) {
    $$sink135$7 = $138;
   } else {
    $362 = (($$2138) + -5)|0;
    $363 = (($5) + ($362)|0);
    $364 = HEAP8[$363>>0]|0;
    $365 = $364&255;
    $366 = (($$2138) + -4)|0;
    $367 = (($5) + ($366)|0);
    $368 = HEAP8[$367>>0]|0;
    $369 = $368&255;
    $370 = $369 << 1;
    $371 = (($370) + ($365))|0;
    $372 = (($5) + ($311)|0);
    $373 = HEAP8[$372>>0]|0;
    $374 = $373&255;
    $375 = (($371) + ($374))|0;
    $$sink135$7 = $375;
   }
  } else {
   $344 = ($342|0)==(-1);
   if ($344) {
    $$sink135$7 = $144;
   } else {
    $345 = ($342|0)<(-2);
    if ($345) {
     $346 = (6 - ($151))|0;
     $347 = (($6) + ($346)|0);
     $348 = HEAP8[$347>>0]|0;
     $349 = $348&255;
     $350 = (5 - ($151))|0;
     $351 = (($6) + ($350)|0);
     $352 = HEAP8[$351>>0]|0;
     $353 = $352&255;
     $354 = $353 << 1;
     $355 = (($354) + ($349))|0;
     $356 = (4 - ($151))|0;
     $357 = (($6) + ($356)|0);
     $358 = HEAP8[$357>>0]|0;
     $359 = $358&255;
     $360 = (($355) + ($359))|0;
     $$sink135$7 = $360;
    } else {
     $$sink135$7 = $150;
    }
   }
  }
  $376 = (($$sink135$7) + 2)|0;
  $377 = $376 >>> 2;
  $$sink21$sink$sink$7 = $377&255;
  $378 = (($164) + 7)|0;
  $379 = (($0) + ($378)|0);
  HEAP8[$379>>0] = $$sink21$sink$sink$7;
  $380 = (($$2138) + 1)|0;
  $exitcond = ($380|0)==(8);
  if ($exitcond) {
   break;
  }
  $$phi$trans$insert = (($4) + ($380<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$2138 = $380;$164 = $$pre;
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec19WelsIChromaPredDc_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$mask = 0, $$mask115 = 0, $$mask116 = 0, $$mask117 = 0, $$sroa$7$0$insert$insert123 = 0, $$sroa$715$0$insert$insert120 = 0, $$sroa$8$0$insert$insert122 = 0, $$sroa$816$0$insert$insert119 = 0, $$sroa$9$0$insert$insert121 = 0, $$sroa$917$0$insert$insert118 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = (($2) + ($1))|0;
 $4 = (($3) + ($1))|0;
 $5 = (($4) + ($1))|0;
 $6 = (($5) + ($1))|0;
 $7 = (($6) + ($1))|0;
 $8 = (($7) + ($1))|0;
 $9 = (0 - ($1))|0;
 $10 = (($0) + ($9)|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = (1 - ($1))|0;
 $14 = (($0) + ($13)|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15&255;
 $17 = (2 - ($1))|0;
 $18 = (($0) + ($17)|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19&255;
 $21 = (3 - ($1))|0;
 $22 = (($0) + ($21)|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23&255;
 $25 = ((($0)) + -1|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $26&255;
 $28 = (($0) + ($2)|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = $29&255;
 $31 = (($0) + ($3)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($0) + ($4)|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = $35&255;
 $37 = (($12) + 4)|0;
 $38 = (($37) + ($16))|0;
 $39 = (($38) + ($20))|0;
 $40 = (($39) + ($24))|0;
 $41 = (($40) + ($27))|0;
 $42 = (($41) + ($30))|0;
 $43 = (($42) + ($33))|0;
 $44 = (($43) + ($36))|0;
 $45 = $44 >>> 3;
 $46 = (4 - ($1))|0;
 $47 = (($0) + ($46)|0);
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = (5 - ($1))|0;
 $51 = (($0) + ($50)|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = $52&255;
 $54 = (($53) + ($49))|0;
 $55 = (6 - ($1))|0;
 $56 = (($0) + ($55)|0);
 $57 = HEAP8[$56>>0]|0;
 $58 = $57&255;
 $59 = (($54) + ($58))|0;
 $60 = (7 - ($1))|0;
 $61 = (($0) + ($60)|0);
 $62 = HEAP8[$61>>0]|0;
 $63 = $62&255;
 $64 = (($59) + ($63))|0;
 $65 = (($0) + ($5)|0);
 $66 = HEAP8[$65>>0]|0;
 $67 = $66&255;
 $68 = (($0) + ($6)|0);
 $69 = HEAP8[$68>>0]|0;
 $70 = $69&255;
 $71 = (($70) + ($67))|0;
 $72 = (($0) + ($7)|0);
 $73 = HEAP8[$72>>0]|0;
 $74 = $73&255;
 $75 = (($71) + ($74))|0;
 $76 = (($0) + ($8)|0);
 $77 = HEAP8[$76>>0]|0;
 $78 = $77&255;
 $79 = (($75) + ($78))|0;
 $80 = (($64) + 2)|0;
 $81 = $80 >>> 2;
 $82 = (($79) + 2)|0;
 $83 = $82 >>> 2;
 $84 = (($64) + 4)|0;
 $85 = (($84) + ($79))|0;
 $86 = $85 >>> 3;
 $$mask = $81 & 255;
 $87 = (_bitshift64Shl(($$mask|0),0,56)|0);
 $88 = tempRet0;
 $89 = (_bitshift64Shl(($$mask|0),0,48)|0);
 $90 = tempRet0;
 $91 = (_bitshift64Shl(($$mask|0),0,40)|0);
 $92 = tempRet0;
 $$mask115 = $45 & 255;
 $93 = $45 << 24;
 $94 = $$mask115 << 16;
 $95 = $$mask115 << 8;
 $$sroa$917$0$insert$insert118 = $$mask115 | $93;
 $$sroa$816$0$insert$insert119 = $$sroa$917$0$insert$insert118 | $94;
 $$sroa$715$0$insert$insert120 = $$sroa$816$0$insert$insert119 | $95;
 $96 = $$sroa$715$0$insert$insert120 | $89;
 $97 = $96 | $87;
 $98 = $90 | $88;
 $99 = $97 | $91;
 $100 = $98 | $92;
 $101 = $100 | $$mask;
 $$mask116 = $86 & 255;
 $102 = (_bitshift64Shl(($$mask116|0),0,56)|0);
 $103 = tempRet0;
 $104 = (_bitshift64Shl(($$mask116|0),0,48)|0);
 $105 = tempRet0;
 $106 = (_bitshift64Shl(($$mask116|0),0,40)|0);
 $107 = tempRet0;
 $$mask117 = $83 & 255;
 $108 = $83 << 24;
 $109 = $$mask117 << 16;
 $110 = $$mask117 << 8;
 $$sroa$9$0$insert$insert121 = $$mask117 | $108;
 $$sroa$8$0$insert$insert122 = $$sroa$9$0$insert$insert121 | $109;
 $$sroa$7$0$insert$insert123 = $$sroa$8$0$insert$insert122 | $110;
 $111 = $$sroa$7$0$insert$insert123 | $104;
 $112 = $111 | $102;
 $113 = $105 | $103;
 $114 = $112 | $106;
 $115 = $113 | $107;
 $116 = $115 | $$mask116;
 $117 = $0;
 $118 = $117;
 HEAP32[$118>>2] = $99;
 $119 = (($117) + 4)|0;
 $120 = $119;
 HEAP32[$120>>2] = $101;
 $121 = ((($28)) + 1|0);
 $122 = $121;
 $123 = $122;
 HEAP32[$123>>2] = $99;
 $124 = (($122) + 4)|0;
 $125 = $124;
 HEAP32[$125>>2] = $101;
 $126 = ((($31)) + 1|0);
 $127 = $126;
 $128 = $127;
 HEAP32[$128>>2] = $99;
 $129 = (($127) + 4)|0;
 $130 = $129;
 HEAP32[$130>>2] = $101;
 $131 = ((($34)) + 1|0);
 $132 = $131;
 $133 = $132;
 HEAP32[$133>>2] = $99;
 $134 = (($132) + 4)|0;
 $135 = $134;
 HEAP32[$135>>2] = $101;
 $136 = ((($65)) + 1|0);
 $137 = $136;
 $138 = $137;
 HEAP32[$138>>2] = $114;
 $139 = (($137) + 4)|0;
 $140 = $139;
 HEAP32[$140>>2] = $116;
 $141 = ((($68)) + 1|0);
 $142 = $141;
 $143 = $142;
 HEAP32[$143>>2] = $114;
 $144 = (($142) + 4)|0;
 $145 = $144;
 HEAP32[$145>>2] = $116;
 $146 = ((($72)) + 1|0);
 $147 = $146;
 $148 = $147;
 HEAP32[$148>>2] = $114;
 $149 = (($147) + 4)|0;
 $150 = $149;
 HEAP32[$150>>2] = $116;
 $151 = ((($76)) + 1|0);
 $152 = $151;
 $153 = $152;
 HEAP32[$153>>2] = $114;
 $154 = (($152) + 4)|0;
 $155 = $154;
 HEAP32[$155>>2] = $116;
 return;
}
function __ZN7WelsDec18WelsIChromaPredH_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*7)|0;
 $3 = (($2) + -1)|0;
 $4 = (($0) + ($3)|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (___muldi3(($6|0),0,16843009,16843009)|0);
 $8 = tempRet0;
 $9 = (($0) + ($2)|0);
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = $7;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = ($1*6)|0;
 $15 = (($14) + -1)|0;
 $16 = (($0) + ($15)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = (___muldi3(($18|0),0,16843009,16843009)|0);
 $20 = tempRet0;
 $21 = (($0) + ($14)|0);
 $22 = $21;
 $23 = $22;
 HEAP32[$23>>2] = $19;
 $24 = (($22) + 4)|0;
 $25 = $24;
 HEAP32[$25>>2] = $20;
 $26 = ($1*5)|0;
 $27 = (($26) + -1)|0;
 $28 = (($0) + ($27)|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = $29&255;
 $31 = (___muldi3(($30|0),0,16843009,16843009)|0);
 $32 = tempRet0;
 $33 = (($0) + ($26)|0);
 $34 = $33;
 $35 = $34;
 HEAP32[$35>>2] = $31;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = $32;
 $38 = $1 << 2;
 $39 = (($38) + -1)|0;
 $40 = (($0) + ($39)|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = $41&255;
 $43 = (___muldi3(($42|0),0,16843009,16843009)|0);
 $44 = tempRet0;
 $45 = (($0) + ($38)|0);
 $46 = $45;
 $47 = $46;
 HEAP32[$47>>2] = $43;
 $48 = (($46) + 4)|0;
 $49 = $48;
 HEAP32[$49>>2] = $44;
 $50 = ($1*3)|0;
 $51 = (($50) + -1)|0;
 $52 = (($0) + ($51)|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = (___muldi3(($54|0),0,16843009,16843009)|0);
 $56 = tempRet0;
 $57 = (($0) + ($50)|0);
 $58 = $57;
 $59 = $58;
 HEAP32[$59>>2] = $55;
 $60 = (($58) + 4)|0;
 $61 = $60;
 HEAP32[$61>>2] = $56;
 $62 = $1 << 1;
 $63 = (($62) + -1)|0;
 $64 = (($0) + ($63)|0);
 $65 = HEAP8[$64>>0]|0;
 $66 = $65&255;
 $67 = (___muldi3(($66|0),0,16843009,16843009)|0);
 $68 = tempRet0;
 $69 = (($0) + ($62)|0);
 $70 = $69;
 $71 = $70;
 HEAP32[$71>>2] = $67;
 $72 = (($70) + 4)|0;
 $73 = $72;
 HEAP32[$73>>2] = $68;
 $74 = (($1) + -1)|0;
 $75 = (($0) + ($74)|0);
 $76 = HEAP8[$75>>0]|0;
 $77 = $76&255;
 $78 = (___muldi3(($77|0),0,16843009,16843009)|0);
 $79 = tempRet0;
 $80 = (($0) + ($1)|0);
 $81 = $80;
 $82 = $81;
 HEAP32[$82>>2] = $78;
 $83 = (($81) + 4)|0;
 $84 = $83;
 HEAP32[$84>>2] = $79;
 $85 = ((($0)) + -1|0);
 $86 = HEAP8[$85>>0]|0;
 $87 = $86&255;
 $88 = (___muldi3(($87|0),0,16843009,16843009)|0);
 $89 = tempRet0;
 $90 = $0;
 $91 = $90;
 HEAP32[$91>>2] = $88;
 $92 = (($90) + 4)|0;
 $93 = $92;
 HEAP32[$93>>2] = $89;
 return;
}
function __ZN7WelsDec18WelsIChromaPredV_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (0 - ($1))|0;
 $3 = (($0) + ($2)|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $1 << 1;
 $11 = $1 << 2;
 $12 = $0;
 $13 = $12;
 HEAP32[$13>>2] = $6;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $9;
 $16 = (($0) + ($1)|0);
 $17 = $16;
 $18 = $17;
 HEAP32[$18>>2] = $6;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = $9;
 $21 = (($0) + ($10)|0);
 $22 = $21;
 $23 = $22;
 HEAP32[$23>>2] = $6;
 $24 = (($22) + 4)|0;
 $25 = $24;
 HEAP32[$25>>2] = $9;
 $26 = (($21) + ($1)|0);
 $27 = $26;
 $28 = $27;
 HEAP32[$28>>2] = $6;
 $29 = (($27) + 4)|0;
 $30 = $29;
 HEAP32[$30>>2] = $9;
 $31 = (($0) + ($11)|0);
 $32 = $31;
 $33 = $32;
 HEAP32[$33>>2] = $6;
 $34 = (($32) + 4)|0;
 $35 = $34;
 HEAP32[$35>>2] = $9;
 $36 = (($31) + ($1)|0);
 $37 = $36;
 $38 = $37;
 HEAP32[$38>>2] = $6;
 $39 = (($37) + 4)|0;
 $40 = $39;
 HEAP32[$40>>2] = $9;
 $41 = (($31) + ($10)|0);
 $42 = $41;
 $43 = $42;
 HEAP32[$43>>2] = $6;
 $44 = (($42) + 4)|0;
 $45 = $44;
 HEAP32[$45>>2] = $9;
 $46 = $1 << 3;
 $47 = (($0) + ($46)|0);
 $48 = (($47) + ($2)|0);
 $49 = $48;
 $50 = $49;
 HEAP32[$50>>2] = $6;
 $51 = (($49) + 4)|0;
 $52 = $51;
 HEAP32[$52>>2] = $9;
 return;
}
function __ZN7WelsDec22WelsIChromaPredPlane_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$063 = 0, $$162 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = (0 - ($1))|0;
 $3 = (($0) + ($2)|0);
 $4 = ((($0)) + -1|0);
 $5 = ((($3)) + 4|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = ((($3)) + 2|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = (($7) - ($10))|0;
 $12 = $1 << 2;
 $13 = (($4) + ($12)|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = $1 << 1;
 $17 = (($4) + ($16)|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&255;
 $20 = (($15) - ($19))|0;
 $21 = ((($3)) + 5|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $22&255;
 $24 = ((($3)) + 1|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = (($23) - ($26))|0;
 $28 = $27 << 1;
 $29 = (($28) + ($11))|0;
 $30 = ($1*5)|0;
 $31 = (($4) + ($30)|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&255;
 $34 = (($4) + ($1)|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = $35&255;
 $37 = (($33) - ($36))|0;
 $38 = $37 << 1;
 $39 = (($38) + ($20))|0;
 $40 = ((($3)) + 6|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = $41&255;
 $43 = HEAP8[$3>>0]|0;
 $44 = $43&255;
 $45 = (($42) - ($44))|0;
 $46 = ($45*3)|0;
 $47 = (($46) + ($29))|0;
 $48 = ($1*6)|0;
 $49 = (($4) + ($48)|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = $50&255;
 $52 = HEAP8[$4>>0]|0;
 $53 = $52&255;
 $54 = (($51) - ($53))|0;
 $55 = ($54*3)|0;
 $56 = (($55) + ($39))|0;
 $57 = ((($3)) + 7|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = $58&255;
 $60 = ((($3)) + -1|0);
 $61 = HEAP8[$60>>0]|0;
 $62 = $61&255;
 $63 = (($59) - ($62))|0;
 $64 = $63 << 2;
 $65 = (($64) + ($47))|0;
 $66 = ($1*7)|0;
 $67 = (($4) + ($66)|0);
 $68 = HEAP8[$67>>0]|0;
 $69 = $68&255;
 $70 = (0 - ($1))|0;
 $71 = (($4) + ($70)|0);
 $72 = HEAP8[$71>>0]|0;
 $73 = $72&255;
 $74 = (($69) - ($73))|0;
 $75 = $74 << 2;
 $76 = (($75) + ($56))|0;
 $77 = (($59) + ($69))|0;
 $78 = $77 << 4;
 $79 = ($65*17)|0;
 $80 = (($79) + 16)|0;
 $81 = $80 >> 5;
 $82 = ($76*17)|0;
 $83 = (($82) + 16)|0;
 $84 = $83 >> 5;
 $85 = (($78) + 16)|0;
 $86 = Math_imul($81, -3)|0;
 $87 = Math_imul($81, -2)|0;
 $88 = $81 << 1;
 $89 = ($81*3)|0;
 $90 = $81 << 2;
 $$063 = $0;$$162 = 0;
 while(1) {
  $91 = (($$162) + -3)|0;
  $92 = Math_imul($91, $84)|0;
  $93 = (($85) + ($92))|0;
  $94 = (($93) + ($86))|0;
  $95 = $94 >> 5;
  $96 = ($95>>>0)>(255);
  $97 = (0 - ($95))|0;
  $98 = $97 >> 31;
  $99 = $96 ? $98 : $95;
  $100 = $99&255;
  HEAP8[$$063>>0] = $100;
  $101 = (($93) + ($87))|0;
  $102 = $101 >> 5;
  $103 = ($102>>>0)>(255);
  $104 = (0 - ($102))|0;
  $105 = $104 >> 31;
  $106 = $103 ? $105 : $102;
  $107 = $106&255;
  $108 = ((($$063)) + 1|0);
  HEAP8[$108>>0] = $107;
  $109 = (($93) - ($81))|0;
  $110 = $109 >> 5;
  $111 = ($110>>>0)>(255);
  $112 = (0 - ($110))|0;
  $113 = $112 >> 31;
  $114 = $111 ? $113 : $110;
  $115 = $114&255;
  $116 = ((($$063)) + 2|0);
  HEAP8[$116>>0] = $115;
  $117 = $93 >> 5;
  $118 = ($117>>>0)>(255);
  $119 = (0 - ($117))|0;
  $120 = $119 >> 31;
  $121 = $118 ? $120 : $117;
  $122 = $121&255;
  $123 = ((($$063)) + 3|0);
  HEAP8[$123>>0] = $122;
  $124 = (($93) + ($81))|0;
  $125 = $124 >> 5;
  $126 = ($125>>>0)>(255);
  $127 = (0 - ($125))|0;
  $128 = $127 >> 31;
  $129 = $126 ? $128 : $125;
  $130 = $129&255;
  $131 = ((($$063)) + 4|0);
  HEAP8[$131>>0] = $130;
  $132 = (($93) + ($88))|0;
  $133 = $132 >> 5;
  $134 = ($133>>>0)>(255);
  $135 = (0 - ($133))|0;
  $136 = $135 >> 31;
  $137 = $134 ? $136 : $133;
  $138 = $137&255;
  $139 = ((($$063)) + 5|0);
  HEAP8[$139>>0] = $138;
  $140 = (($93) + ($89))|0;
  $141 = $140 >> 5;
  $142 = ($141>>>0)>(255);
  $143 = (0 - ($141))|0;
  $144 = $143 >> 31;
  $145 = $142 ? $144 : $141;
  $146 = $145&255;
  $147 = ((($$063)) + 6|0);
  HEAP8[$147>>0] = $146;
  $148 = (($93) + ($90))|0;
  $149 = $148 >> 5;
  $150 = ($149>>>0)>(255);
  $151 = (0 - ($149))|0;
  $152 = $151 >> 31;
  $153 = $150 ? $152 : $149;
  $154 = $153&255;
  $155 = ((($$063)) + 7|0);
  HEAP8[$155>>0] = $154;
  $156 = (($$063) + ($1)|0);
  $157 = (($$162) + 1)|0;
  $exitcond = ($157|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$063 = $156;$$162 = $157;
  }
 }
 return;
}
function __ZN7WelsDec23WelsIChromaPredDcLeft_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$mask = 0, $$mask69 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = (($2) + ($1))|0;
 $4 = (($3) + ($1))|0;
 $5 = (($4) + ($1))|0;
 $6 = (($5) + ($1))|0;
 $7 = (($6) + ($1))|0;
 $8 = (($7) + ($1))|0;
 $9 = ((($0)) + -1|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&255;
 $12 = (($0) + ($2)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = (($0) + ($3)|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = (($0) + ($4)|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19&255;
 $21 = (($11) + 2)|0;
 $22 = (($21) + ($14))|0;
 $23 = (($22) + ($17))|0;
 $24 = (($23) + ($20))|0;
 $25 = $24 >>> 2;
 $26 = (($0) + ($5)|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = $27&255;
 $29 = (($0) + ($6)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (($0) + ($7)|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = $33&255;
 $35 = (($0) + ($8)|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = $36&255;
 $38 = (($28) + 2)|0;
 $39 = (($38) + ($31))|0;
 $40 = (($39) + ($34))|0;
 $41 = (($40) + ($37))|0;
 $42 = $41 >>> 2;
 $$mask = $25 & 255;
 $43 = (___muldi3(($$mask|0),0,16843009,16843009)|0);
 $44 = tempRet0;
 $$mask69 = $42 & 255;
 $45 = (___muldi3(($$mask69|0),0,16843009,16843009)|0);
 $46 = tempRet0;
 $47 = $0;
 $48 = $47;
 HEAP32[$48>>2] = $43;
 $49 = (($47) + 4)|0;
 $50 = $49;
 HEAP32[$50>>2] = $44;
 $51 = ((($12)) + 1|0);
 $52 = $51;
 $53 = $52;
 HEAP32[$53>>2] = $43;
 $54 = (($52) + 4)|0;
 $55 = $54;
 HEAP32[$55>>2] = $44;
 $56 = ((($15)) + 1|0);
 $57 = $56;
 $58 = $57;
 HEAP32[$58>>2] = $43;
 $59 = (($57) + 4)|0;
 $60 = $59;
 HEAP32[$60>>2] = $44;
 $61 = ((($18)) + 1|0);
 $62 = $61;
 $63 = $62;
 HEAP32[$63>>2] = $43;
 $64 = (($62) + 4)|0;
 $65 = $64;
 HEAP32[$65>>2] = $44;
 $66 = ((($26)) + 1|0);
 $67 = $66;
 $68 = $67;
 HEAP32[$68>>2] = $45;
 $69 = (($67) + 4)|0;
 $70 = $69;
 HEAP32[$70>>2] = $46;
 $71 = ((($29)) + 1|0);
 $72 = $71;
 $73 = $72;
 HEAP32[$73>>2] = $45;
 $74 = (($72) + 4)|0;
 $75 = $74;
 HEAP32[$75>>2] = $46;
 $76 = ((($32)) + 1|0);
 $77 = $76;
 $78 = $77;
 HEAP32[$78>>2] = $45;
 $79 = (($77) + 4)|0;
 $80 = $79;
 HEAP32[$80>>2] = $46;
 $81 = ((($35)) + 1|0);
 $82 = $81;
 $83 = $82;
 HEAP32[$83>>2] = $45;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP32[$85>>2] = $46;
 return;
}
function __ZN7WelsDec22WelsIChromaPredDcTop_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$mask = 0, $$mask32 = 0, $$sroa$7$0$insert$insert35 = 0, $$sroa$8$0$insert$insert34 = 0, $$sroa$9$0$insert$insert33 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*7)|0;
 $3 = (0 - ($1))|0;
 $4 = (($0) + ($3)|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (1 - ($1))|0;
 $8 = (($0) + ($7)|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = (2 - ($1))|0;
 $12 = (($0) + ($11)|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = (3 - ($1))|0;
 $16 = (($0) + ($15)|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = (($6) + 2)|0;
 $20 = (($19) + ($10))|0;
 $21 = (($20) + ($14))|0;
 $22 = (($21) + ($18))|0;
 $23 = $22 >>> 2;
 $24 = (4 - ($1))|0;
 $25 = (($0) + ($24)|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $26&255;
 $28 = (5 - ($1))|0;
 $29 = (($0) + ($28)|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&255;
 $32 = (6 - ($1))|0;
 $33 = (($0) + ($32)|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = $34&255;
 $36 = (7 - ($1))|0;
 $37 = (($0) + ($36)|0);
 $38 = HEAP8[$37>>0]|0;
 $39 = $38&255;
 $40 = (($27) + 2)|0;
 $41 = (($40) + ($31))|0;
 $42 = (($41) + ($35))|0;
 $43 = (($42) + ($39))|0;
 $44 = $43 >>> 2;
 $$mask = $44 & 255;
 $45 = (_bitshift64Shl(($$mask|0),0,56)|0);
 $46 = tempRet0;
 $47 = (_bitshift64Shl(($$mask|0),0,48)|0);
 $48 = tempRet0;
 $49 = (_bitshift64Shl(($$mask|0),0,40)|0);
 $50 = tempRet0;
 $$mask32 = $23 & 255;
 $51 = $23 << 24;
 $52 = $$mask32 << 16;
 $53 = $$mask32 << 8;
 $$sroa$9$0$insert$insert33 = $$mask32 | $51;
 $$sroa$8$0$insert$insert34 = $$sroa$9$0$insert$insert33 | $52;
 $$sroa$7$0$insert$insert35 = $$sroa$8$0$insert$insert34 | $53;
 $54 = $$sroa$7$0$insert$insert35 | $47;
 $55 = $54 | $45;
 $56 = $48 | $46;
 $57 = $55 | $49;
 $58 = $56 | $50;
 $59 = $58 | $$mask;
 $60 = (($0) + ($2)|0);
 $61 = $60;
 $62 = $61;
 HEAP32[$62>>2] = $57;
 $63 = (($61) + 4)|0;
 $64 = $63;
 HEAP32[$64>>2] = $59;
 $65 = ($1*6)|0;
 $66 = (($0) + ($65)|0);
 $67 = $66;
 $68 = $67;
 HEAP32[$68>>2] = $57;
 $69 = (($67) + 4)|0;
 $70 = $69;
 HEAP32[$70>>2] = $59;
 $71 = ($1*5)|0;
 $72 = (($0) + ($71)|0);
 $73 = $72;
 $74 = $73;
 HEAP32[$74>>2] = $57;
 $75 = (($73) + 4)|0;
 $76 = $75;
 HEAP32[$76>>2] = $59;
 $77 = $1 << 2;
 $78 = (($0) + ($77)|0);
 $79 = $78;
 $80 = $79;
 HEAP32[$80>>2] = $57;
 $81 = (($79) + 4)|0;
 $82 = $81;
 HEAP32[$82>>2] = $59;
 $83 = ($1*3)|0;
 $84 = (($0) + ($83)|0);
 $85 = $84;
 $86 = $85;
 HEAP32[$86>>2] = $57;
 $87 = (($85) + 4)|0;
 $88 = $87;
 HEAP32[$88>>2] = $59;
 $89 = $1 << 1;
 $90 = (($0) + ($89)|0);
 $91 = $90;
 $92 = $91;
 HEAP32[$92>>2] = $57;
 $93 = (($91) + 4)|0;
 $94 = $93;
 HEAP32[$94>>2] = $59;
 $95 = (($0) + ($1)|0);
 $96 = $95;
 $97 = $96;
 HEAP32[$97>>2] = $57;
 $98 = (($96) + 4)|0;
 $99 = $98;
 HEAP32[$99>>2] = $59;
 $100 = $0;
 $101 = $100;
 HEAP32[$101>>2] = $57;
 $102 = (($100) + 4)|0;
 $103 = $102;
 HEAP32[$103>>2] = $59;
 return;
}
function __ZN7WelsDec21WelsIChromaPredDcNA_cEPhi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1*7)|0;
 $3 = (($0) + ($2)|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = -2139062144;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = -2139062144;
 $8 = ($1*6)|0;
 $9 = (($0) + ($8)|0);
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = -2139062144;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = -2139062144;
 $14 = ($1*5)|0;
 $15 = (($0) + ($14)|0);
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = -2139062144;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = -2139062144;
 $20 = $1 << 2;
 $21 = (($0) + ($20)|0);
 $22 = $21;
 $23 = $22;
 HEAP32[$23>>2] = -2139062144;
 $24 = (($22) + 4)|0;
 $25 = $24;
 HEAP32[$25>>2] = -2139062144;
 $26 = ($1*3)|0;
 $27 = (($0) + ($26)|0);
 $28 = $27;
 $29 = $28;
 HEAP32[$29>>2] = -2139062144;
 $30 = (($28) + 4)|0;
 $31 = $30;
 HEAP32[$31>>2] = -2139062144;
 $32 = $1 << 1;
 $33 = (($0) + ($32)|0);
 $34 = $33;
 $35 = $34;
 HEAP32[$35>>2] = -2139062144;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = -2139062144;
 $38 = (($0) + ($1)|0);
 $39 = $38;
 $40 = $39;
 HEAP32[$40>>2] = -2139062144;
 $41 = (($39) + 4)|0;
 $42 = $41;
 HEAP32[$42>>2] = -2139062144;
 $43 = $0;
 $44 = $43;
 HEAP32[$44>>2] = -2139062144;
 $45 = (($43) + 4)|0;
 $46 = $45;
 HEAP32[$46>>2] = -2139062144;
 return;
}
function __ZN7WelsDec16IdctResAddPred_cEPhiPs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1101 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = sp;
 $4 = $1 << 1;
 $5 = HEAP16[$2>>1]|0;
 $6 = $5 << 16 >> 16;
 $7 = ((($2)) + 4|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8 << 16 >> 16;
 $10 = (($9) + ($6))|0;
 $11 = (($6) - ($9))|0;
 $12 = ((($2)) + 2|0);
 $13 = HEAP16[$12>>1]|0;
 $14 = $13 << 16 >> 16;
 $15 = $14 >> 1;
 $16 = ((($2)) + 6|0);
 $17 = HEAP16[$16>>1]|0;
 $18 = $17 << 16 >> 16;
 $19 = (($15) - ($18))|0;
 $20 = $18 >> 1;
 $21 = (($20) + ($14))|0;
 $22 = (($21) + ($10))|0;
 $23 = $22&65535;
 HEAP16[$3>>1] = $23;
 $24 = (($19) + ($11))|0;
 $25 = $24&65535;
 $26 = ((($3)) + 2|0);
 HEAP16[$26>>1] = $25;
 $27 = (($11) - ($19))|0;
 $28 = $27&65535;
 $29 = ((($3)) + 4|0);
 HEAP16[$29>>1] = $28;
 $30 = (($10) - ($21))|0;
 $31 = $30&65535;
 $32 = ((($3)) + 6|0);
 HEAP16[$32>>1] = $31;
 $33 = ((($2)) + 8|0);
 $34 = HEAP16[$33>>1]|0;
 $35 = $34 << 16 >> 16;
 $36 = ((($2)) + 12|0);
 $37 = HEAP16[$36>>1]|0;
 $38 = $37 << 16 >> 16;
 $39 = (($38) + ($35))|0;
 $40 = (($35) - ($38))|0;
 $41 = ((($2)) + 10|0);
 $42 = HEAP16[$41>>1]|0;
 $43 = $42 << 16 >> 16;
 $44 = $43 >> 1;
 $45 = ((($2)) + 14|0);
 $46 = HEAP16[$45>>1]|0;
 $47 = $46 << 16 >> 16;
 $48 = (($44) - ($47))|0;
 $49 = $47 >> 1;
 $50 = (($49) + ($43))|0;
 $51 = (($50) + ($39))|0;
 $52 = $51&65535;
 $53 = ((($3)) + 8|0);
 HEAP16[$53>>1] = $52;
 $54 = (($48) + ($40))|0;
 $55 = $54&65535;
 $56 = ((($3)) + 10|0);
 HEAP16[$56>>1] = $55;
 $57 = (($40) - ($48))|0;
 $58 = $57&65535;
 $59 = ((($3)) + 12|0);
 HEAP16[$59>>1] = $58;
 $60 = (($39) - ($50))|0;
 $61 = $60&65535;
 $62 = ((($3)) + 14|0);
 HEAP16[$62>>1] = $61;
 $63 = ((($2)) + 16|0);
 $64 = HEAP16[$63>>1]|0;
 $65 = $64 << 16 >> 16;
 $66 = ((($2)) + 20|0);
 $67 = HEAP16[$66>>1]|0;
 $68 = $67 << 16 >> 16;
 $69 = (($68) + ($65))|0;
 $70 = (($65) - ($68))|0;
 $71 = ((($2)) + 18|0);
 $72 = HEAP16[$71>>1]|0;
 $73 = $72 << 16 >> 16;
 $74 = $73 >> 1;
 $75 = ((($2)) + 22|0);
 $76 = HEAP16[$75>>1]|0;
 $77 = $76 << 16 >> 16;
 $78 = (($74) - ($77))|0;
 $79 = $77 >> 1;
 $80 = (($79) + ($73))|0;
 $81 = (($80) + ($69))|0;
 $82 = $81&65535;
 $83 = ((($3)) + 16|0);
 HEAP16[$83>>1] = $82;
 $84 = (($78) + ($70))|0;
 $85 = $84&65535;
 $86 = ((($3)) + 18|0);
 HEAP16[$86>>1] = $85;
 $87 = (($70) - ($78))|0;
 $88 = $87&65535;
 $89 = ((($3)) + 20|0);
 HEAP16[$89>>1] = $88;
 $90 = (($69) - ($80))|0;
 $91 = $90&65535;
 $92 = ((($3)) + 22|0);
 HEAP16[$92>>1] = $91;
 $93 = ((($2)) + 24|0);
 $94 = HEAP16[$93>>1]|0;
 $95 = $94 << 16 >> 16;
 $96 = ((($2)) + 28|0);
 $97 = HEAP16[$96>>1]|0;
 $98 = $97 << 16 >> 16;
 $99 = (($98) + ($95))|0;
 $100 = (($95) - ($98))|0;
 $101 = ((($2)) + 26|0);
 $102 = HEAP16[$101>>1]|0;
 $103 = $102 << 16 >> 16;
 $104 = $103 >> 1;
 $105 = ((($2)) + 30|0);
 $106 = HEAP16[$105>>1]|0;
 $107 = $106 << 16 >> 16;
 $108 = (($104) - ($107))|0;
 $109 = $107 >> 1;
 $110 = (($109) + ($103))|0;
 $111 = (($110) + ($99))|0;
 $112 = $111&65535;
 $113 = ((($3)) + 24|0);
 HEAP16[$113>>1] = $112;
 $114 = (($108) + ($100))|0;
 $115 = $114&65535;
 $116 = ((($3)) + 26|0);
 HEAP16[$116>>1] = $115;
 $117 = (($100) - ($108))|0;
 $118 = $117&65535;
 $119 = ((($3)) + 28|0);
 HEAP16[$119>>1] = $118;
 $120 = (($99) - ($110))|0;
 $121 = $120&65535;
 $122 = ((($3)) + 30|0);
 HEAP16[$122>>1] = $121;
 $123 = ($1*3)|0;
 $$1101 = 0;
 while(1) {
  $124 = (($3) + ($$1101<<1)|0);
  $125 = HEAP16[$124>>1]|0;
  $126 = $125 << 16 >> 16;
  $127 = (($$1101) + 8)|0;
  $128 = (($3) + ($127<<1)|0);
  $129 = HEAP16[$128>>1]|0;
  $130 = $129 << 16 >> 16;
  $131 = (($$1101) + 4)|0;
  $132 = (($3) + ($131<<1)|0);
  $133 = HEAP16[$132>>1]|0;
  $134 = $133 << 16 >> 16;
  $135 = (($$1101) + 12)|0;
  $136 = (($3) + ($135<<1)|0);
  $137 = HEAP16[$136>>1]|0;
  $138 = $137 << 16 >> 16;
  $139 = $138 >> 1;
  $140 = (($139) + ($134))|0;
  $141 = (($126) + 32)|0;
  $142 = (($141) + ($130))|0;
  $143 = (($140) + ($142))|0;
  $144 = $143 >> 6;
  $145 = (($142) - ($140))|0;
  $146 = $145 >> 6;
  $147 = (($0) + ($$1101)|0);
  $148 = HEAP8[$147>>0]|0;
  $149 = $148&255;
  $150 = (($144) + ($149))|0;
  $151 = ($150>>>0)>(255);
  $152 = (0 - ($150))|0;
  $153 = $152 >> 31;
  $154 = $151 ? $153 : $150;
  $155 = $154&255;
  HEAP8[$147>>0] = $155;
  $156 = (($$1101) + ($123))|0;
  $157 = (($0) + ($156)|0);
  $158 = HEAP8[$157>>0]|0;
  $159 = $158&255;
  $160 = (($146) + ($159))|0;
  $161 = ($160>>>0)>(255);
  $162 = (0 - ($160))|0;
  $163 = $162 >> 31;
  $164 = $161 ? $163 : $160;
  $165 = $164&255;
  HEAP8[$157>>0] = $165;
  $166 = (($126) - ($130))|0;
  $167 = $134 >> 1;
  $168 = (($167) - ($138))|0;
  $169 = (($166) + 32)|0;
  $170 = (($168) + ($169))|0;
  $171 = $170 >> 6;
  $172 = (($$1101) + ($1))|0;
  $173 = (($0) + ($172)|0);
  $174 = HEAP8[$173>>0]|0;
  $175 = $174&255;
  $176 = (($171) + ($175))|0;
  $177 = ($176>>>0)>(255);
  $178 = (0 - ($176))|0;
  $179 = $178 >> 31;
  $180 = $177 ? $179 : $176;
  $181 = $180&255;
  HEAP8[$173>>0] = $181;
  $182 = (($169) - ($168))|0;
  $183 = $182 >> 6;
  $184 = (($$1101) + ($4))|0;
  $185 = (($0) + ($184)|0);
  $186 = HEAP8[$185>>0]|0;
  $187 = $186&255;
  $188 = (($183) + ($187))|0;
  $189 = ($188>>>0)>(255);
  $190 = (0 - ($188))|0;
  $191 = $190 >> 31;
  $192 = $189 ? $191 : $188;
  $193 = $192&255;
  HEAP8[$185>>0] = $193;
  $194 = (($$1101) + 1)|0;
  $exitcond = ($194|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$1101 = $194;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec19IdctResAddPred8x8_cEPhiPs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0126176 = 0, $$0126176$lver$orig = 0, $$0128178 = 0, $$0130180 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$lver$orig = 0, $exitcond183 = 0, $exitcond186 = 0, $ident$check = 0, $load_initial = 0, $scevgep = 0, $scevgep201 = 0, $sext = 0, $sext131 = 0;
 var $sext132 = 0, $sext133 = 0, $sext134 = 0, $sext135 = 0, $sext136 = 0, $sext137 = 0, $sext138 = 0, $sext139 = 0, $sext140 = 0, $sext141 = 0, $sext142 = 0, $sext144 = 0, $sext146 = 0, $sext147 = 0, $sext148 = 0, $sext149 = 0, $sext150 = 0, $sext151 = 0, $sext152 = 0, $sext153 = 0;
 var $sext154 = 0, $sext155 = 0, $sext156 = 0, $sext157 = 0, $sext158 = 0, $sext160 = 0, $store_forwarded = 0, $sum = 0, $sum181 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $3 = sp + 256|0;
 $4 = sp + 128|0;
 $5 = sp;
 $6 = ((($3)) + 8|0);
 $7 = ((($3)) + 12|0);
 $8 = ((($3)) + 4|0);
 $9 = ((($3)) + 6|0);
 $10 = ((($3)) + 10|0);
 $11 = ((($3)) + 14|0);
 $12 = ((($3)) + 2|0);
 $$0130180 = 0;
 while(1) {
  $13 = $$0130180 << 3;
  $scevgep = (($2) + ($13<<1)|0);
  ;HEAP16[$3>>1]=HEAP16[$scevgep>>1]|0;HEAP16[$3+2>>1]=HEAP16[$scevgep+2>>1]|0;HEAP16[$3+4>>1]=HEAP16[$scevgep+4>>1]|0;HEAP16[$3+6>>1]=HEAP16[$scevgep+6>>1]|0;HEAP16[$3+8>>1]=HEAP16[$scevgep+8>>1]|0;HEAP16[$3+10>>1]=HEAP16[$scevgep+10>>1]|0;HEAP16[$3+12>>1]=HEAP16[$scevgep+12>>1]|0;HEAP16[$3+14>>1]=HEAP16[$scevgep+14>>1]|0;
  $14 = HEAP16[$3>>1]|0;
  $15 = $14 << 16 >> 16;
  $16 = HEAP16[$6>>1]|0;
  $17 = $16 << 16 >> 16;
  $18 = (($17) + ($15))|0;
  $19 = (($15) - ($17))|0;
  $20 = HEAP16[$7>>1]|0;
  $21 = $20 << 16 >> 16;
  $22 = HEAP16[$8>>1]|0;
  $23 = $22 << 16 >> 16;
  $24 = $23 >>> 1;
  $25 = (($21) - ($24))|0;
  $26 = $21 >>> 1;
  $27 = (($23) + ($26))|0;
  $sext146 = $18 << 16;
  $28 = $sext146 >> 16;
  $sext147 = $27 << 16;
  $29 = $sext147 >> 16;
  $30 = (($29) + ($28))|0;
  $sext148 = $19 << 16;
  $31 = $sext148 >> 16;
  $sext149 = $25 << 16;
  $32 = $sext149 >> 16;
  $33 = (($31) - ($32))|0;
  $34 = (($32) + ($31))|0;
  $35 = (($28) - ($29))|0;
  $36 = HEAP16[$9>>1]|0;
  $37 = $36 << 16 >> 16;
  $38 = HEAP16[$10>>1]|0;
  $39 = $38 << 16 >> 16;
  $40 = (($39) - ($37))|0;
  $41 = HEAP16[$11>>1]|0;
  $42 = $41 << 16 >> 16;
  $43 = (($40) - ($42))|0;
  $44 = $42 >>> 1;
  $45 = (($43) - ($44))|0;
  $46 = HEAP16[$12>>1]|0;
  $47 = $46 << 16 >> 16;
  $48 = $37 >>> 1;
  $sum = (($48) + ($37))|0;
  $49 = (($42) - ($sum))|0;
  $50 = (($49) + ($47))|0;
  $51 = $39 >>> 1;
  $52 = (($42) + ($39))|0;
  $53 = (($52) + ($51))|0;
  $54 = (($53) - ($47))|0;
  $55 = (($39) + ($37))|0;
  $56 = (($55) + ($47))|0;
  $57 = $47 >>> 1;
  $58 = (($56) + ($57))|0;
  $sext150 = $45 << 16;
  $sext151 = $58 << 16;
  $59 = $sext151 >> 18;
  $sext152 = $50 << 16;
  $sext153 = $54 << 16;
  $60 = $sext153 >> 18;
  $61 = $sext152 >> 18;
  $62 = (($54) - ($61))|0;
  $63 = $sext150 >> 18;
  $64 = (($58) - ($63))|0;
  $sext154 = $30 << 16;
  $65 = $sext154 >> 16;
  $sext155 = $64 << 16;
  $66 = $sext155 >> 16;
  $67 = (($66) + ($65))|0;
  $68 = $67&65535;
  $69 = (($4) + ($13<<1)|0);
  HEAP16[$69>>1] = $68;
  $sext156 = $33 << 16;
  $70 = $sext156 >> 16;
  $sext157 = $62 << 16;
  $71 = $sext157 >> 16;
  $72 = (($70) - ($71))|0;
  $73 = $72&65535;
  $74 = $13 | 1;
  $75 = (($4) + ($74<<1)|0);
  HEAP16[$75>>1] = $73;
  $sext158 = $34 << 16;
  $76 = $sext158 >> 16;
  $77 = $60 << 16;
  $78 = (($77) + ($sext152))|0;
  $79 = $78 >> 16;
  $80 = (($79) + ($76))|0;
  $81 = $80&65535;
  $82 = $13 | 2;
  $83 = (($4) + ($82<<1)|0);
  HEAP16[$83>>1] = $81;
  $sext160 = $35 << 16;
  $84 = $sext160 >> 16;
  $85 = $59 << 16;
  $86 = (($85) + ($sext150))|0;
  $87 = $86 >> 16;
  $88 = (($87) + ($84))|0;
  $89 = $88&65535;
  $90 = $13 | 3;
  $91 = (($4) + ($90<<1)|0);
  HEAP16[$91>>1] = $89;
  $92 = (($84) - ($87))|0;
  $93 = $92&65535;
  $94 = $13 | 4;
  $95 = (($4) + ($94<<1)|0);
  HEAP16[$95>>1] = $93;
  $96 = (($76) - ($79))|0;
  $97 = $96&65535;
  $98 = $13 | 5;
  $99 = (($4) + ($98<<1)|0);
  HEAP16[$99>>1] = $97;
  $100 = (($71) + ($70))|0;
  $101 = $100&65535;
  $102 = $13 | 6;
  $103 = (($4) + ($102<<1)|0);
  HEAP16[$103>>1] = $101;
  $104 = (($65) - ($66))|0;
  $105 = $104&65535;
  $106 = $13 | 7;
  $107 = (($4) + ($106<<1)|0);
  HEAP16[$107>>1] = $105;
  $108 = (($$0130180) + 1)|0;
  $exitcond186 = ($108|0)==(8);
  if ($exitcond186) {
   $$0128178 = 0;
   break;
  } else {
   $$0130180 = $108;
  }
 }
 while(1) {
  $109 = (($4) + ($$0128178<<1)|0);
  $110 = HEAP16[$109>>1]|0;
  $111 = (($$0128178) + 8)|0;
  $112 = (($4) + ($111<<1)|0);
  $113 = HEAP16[$112>>1]|0;
  $114 = (($$0128178) + 16)|0;
  $115 = (($4) + ($114<<1)|0);
  $116 = HEAP16[$115>>1]|0;
  $117 = (($$0128178) + 24)|0;
  $118 = (($4) + ($117<<1)|0);
  $119 = HEAP16[$118>>1]|0;
  $120 = (($$0128178) + 32)|0;
  $121 = (($4) + ($120<<1)|0);
  $122 = HEAP16[$121>>1]|0;
  $123 = (($$0128178) + 40)|0;
  $124 = (($4) + ($123<<1)|0);
  $125 = HEAP16[$124>>1]|0;
  $126 = (($$0128178) + 48)|0;
  $127 = (($4) + ($126<<1)|0);
  $128 = HEAP16[$127>>1]|0;
  $129 = (($$0128178) + 56)|0;
  $130 = (($4) + ($129<<1)|0);
  $131 = HEAP16[$130>>1]|0;
  $132 = $110 << 16 >> 16;
  $133 = $122 << 16 >> 16;
  $134 = (($133) + ($132))|0;
  $135 = (($132) - ($133))|0;
  $136 = $128 << 16 >> 16;
  $137 = $116 << 16 >> 16;
  $138 = $137 >>> 1;
  $139 = (($136) - ($138))|0;
  $140 = $136 >>> 1;
  $141 = (($137) + ($140))|0;
  $sext = $134 << 16;
  $142 = $sext >> 16;
  $sext131 = $141 << 16;
  $143 = $sext131 >> 16;
  $144 = (($143) + ($142))|0;
  $sext132 = $135 << 16;
  $145 = $sext132 >> 16;
  $sext133 = $139 << 16;
  $146 = $sext133 >> 16;
  $147 = (($145) - ($146))|0;
  $148 = (($146) + ($145))|0;
  $149 = (($142) - ($143))|0;
  $150 = $119 << 16 >> 16;
  $151 = $125 << 16 >> 16;
  $152 = (($151) - ($150))|0;
  $153 = $131 << 16 >> 16;
  $154 = (($152) - ($153))|0;
  $155 = $153 >>> 1;
  $156 = (($154) - ($155))|0;
  $157 = $113 << 16 >> 16;
  $158 = $150 >>> 1;
  $sum181 = (($158) + ($150))|0;
  $159 = (($153) - ($sum181))|0;
  $160 = (($159) + ($157))|0;
  $161 = $151 >>> 1;
  $162 = (($153) + ($151))|0;
  $163 = (($162) + ($161))|0;
  $164 = (($163) - ($157))|0;
  $165 = (($151) + ($150))|0;
  $166 = (($165) + ($157))|0;
  $167 = $157 >>> 1;
  $168 = (($166) + ($167))|0;
  $sext134 = $156 << 16;
  $sext135 = $168 << 16;
  $169 = $sext135 >> 18;
  $170 = $sext134 >> 18;
  $171 = (($168) - ($170))|0;
  $sext136 = $160 << 16;
  $sext137 = $164 << 16;
  $172 = $sext137 >> 18;
  $173 = $sext136 >> 18;
  $174 = (($164) - ($173))|0;
  $sext138 = $144 << 16;
  $175 = $sext138 >> 16;
  $sext139 = $171 << 16;
  $176 = $sext139 >> 16;
  $177 = (($176) + ($175))|0;
  $178 = $177&65535;
  $179 = (($5) + ($$0128178<<1)|0);
  HEAP16[$179>>1] = $178;
  $sext140 = $147 << 16;
  $180 = $sext140 >> 16;
  $sext141 = $174 << 16;
  $181 = $sext141 >> 16;
  $182 = (($180) - ($181))|0;
  $183 = $182&65535;
  $184 = (($5) + ($111<<1)|0);
  HEAP16[$184>>1] = $183;
  $sext142 = $148 << 16;
  $185 = $sext142 >> 16;
  $186 = $172 << 16;
  $187 = (($186) + ($sext136))|0;
  $188 = $187 >> 16;
  $189 = (($188) + ($185))|0;
  $190 = $189&65535;
  $191 = (($5) + ($114<<1)|0);
  HEAP16[$191>>1] = $190;
  $sext144 = $149 << 16;
  $192 = $sext144 >> 16;
  $193 = $169 << 16;
  $194 = (($193) + ($sext134))|0;
  $195 = $194 >> 16;
  $196 = (($195) + ($192))|0;
  $197 = $196&65535;
  $198 = (($5) + ($117<<1)|0);
  HEAP16[$198>>1] = $197;
  $199 = (($192) - ($195))|0;
  $200 = $199&65535;
  $201 = (($5) + ($120<<1)|0);
  HEAP16[$201>>1] = $200;
  $202 = (($185) - ($188))|0;
  $203 = $202&65535;
  $204 = (($5) + ($123<<1)|0);
  HEAP16[$204>>1] = $203;
  $205 = (($181) + ($180))|0;
  $206 = $205&65535;
  $207 = (($5) + ($126<<1)|0);
  HEAP16[$207>>1] = $206;
  $208 = (($175) - ($176))|0;
  $209 = $208&65535;
  $210 = (($5) + ($129<<1)|0);
  HEAP16[$210>>1] = $209;
  $211 = (($$0128178) + 1)|0;
  $exitcond183 = ($211|0)==(8);
  if ($exitcond183) {
   break;
  } else {
   $$0128178 = $211;
  }
 }
 HEAP16[$3>>1] = $110;
 HEAP16[$12>>1] = $113;
 HEAP16[$8>>1] = $116;
 HEAP16[$9>>1] = $119;
 HEAP16[$6>>1] = $122;
 HEAP16[$10>>1] = $125;
 HEAP16[$7>>1] = $128;
 HEAP16[$11>>1] = $131;
 $ident$check = ($1|0)==(1);
 if (!($ident$check)) {
  $$0126176$lver$orig = 0;
  while(1) {
   $212 = $$0126176$lver$orig << 3;
   $213 = Math_imul($$0126176$lver$orig, $1)|0;
   $214 = (($5) + ($212<<1)|0);
   $215 = HEAP16[$214>>1]|0;
   $216 = $215 << 16 >> 16;
   $217 = (($216) + 32)|0;
   $218 = $217 >> 6;
   $219 = (($0) + ($213)|0);
   $220 = HEAP8[$219>>0]|0;
   $221 = $220&255;
   $222 = (($218) + ($221))|0;
   $223 = ($222>>>0)>(255);
   $224 = (0 - ($222))|0;
   $225 = $224 >> 31;
   $226 = $223 ? $225 : $222;
   $227 = $226&255;
   HEAP8[$219>>0] = $227;
   $228 = $212 | 1;
   $229 = (($5) + ($228<<1)|0);
   $230 = HEAP16[$229>>1]|0;
   $231 = $230 << 16 >> 16;
   $232 = (($231) + 32)|0;
   $233 = $232 >> 6;
   $234 = (($213) + 1)|0;
   $235 = (($0) + ($234)|0);
   $236 = HEAP8[$235>>0]|0;
   $237 = $236&255;
   $238 = (($233) + ($237))|0;
   $239 = ($238>>>0)>(255);
   $240 = (0 - ($238))|0;
   $241 = $240 >> 31;
   $242 = $239 ? $241 : $238;
   $243 = $242&255;
   HEAP8[$235>>0] = $243;
   $244 = $212 | 2;
   $245 = (($5) + ($244<<1)|0);
   $246 = HEAP16[$245>>1]|0;
   $247 = $246 << 16 >> 16;
   $248 = (($247) + 32)|0;
   $249 = $248 >> 6;
   $250 = (($213) + 2)|0;
   $251 = (($0) + ($250)|0);
   $252 = HEAP8[$251>>0]|0;
   $253 = $252&255;
   $254 = (($249) + ($253))|0;
   $255 = ($254>>>0)>(255);
   $256 = (0 - ($254))|0;
   $257 = $256 >> 31;
   $258 = $255 ? $257 : $254;
   $259 = $258&255;
   HEAP8[$251>>0] = $259;
   $260 = $212 | 3;
   $261 = (($5) + ($260<<1)|0);
   $262 = HEAP16[$261>>1]|0;
   $263 = $262 << 16 >> 16;
   $264 = (($263) + 32)|0;
   $265 = $264 >> 6;
   $266 = (($213) + 3)|0;
   $267 = (($0) + ($266)|0);
   $268 = HEAP8[$267>>0]|0;
   $269 = $268&255;
   $270 = (($265) + ($269))|0;
   $271 = ($270>>>0)>(255);
   $272 = (0 - ($270))|0;
   $273 = $272 >> 31;
   $274 = $271 ? $273 : $270;
   $275 = $274&255;
   HEAP8[$267>>0] = $275;
   $276 = $212 | 4;
   $277 = (($5) + ($276<<1)|0);
   $278 = HEAP16[$277>>1]|0;
   $279 = $278 << 16 >> 16;
   $280 = (($279) + 32)|0;
   $281 = $280 >> 6;
   $282 = (($213) + 4)|0;
   $283 = (($0) + ($282)|0);
   $284 = HEAP8[$283>>0]|0;
   $285 = $284&255;
   $286 = (($281) + ($285))|0;
   $287 = ($286>>>0)>(255);
   $288 = (0 - ($286))|0;
   $289 = $288 >> 31;
   $290 = $287 ? $289 : $286;
   $291 = $290&255;
   HEAP8[$283>>0] = $291;
   $292 = $212 | 5;
   $293 = (($5) + ($292<<1)|0);
   $294 = HEAP16[$293>>1]|0;
   $295 = $294 << 16 >> 16;
   $296 = (($295) + 32)|0;
   $297 = $296 >> 6;
   $298 = (($213) + 5)|0;
   $299 = (($0) + ($298)|0);
   $300 = HEAP8[$299>>0]|0;
   $301 = $300&255;
   $302 = (($297) + ($301))|0;
   $303 = ($302>>>0)>(255);
   $304 = (0 - ($302))|0;
   $305 = $304 >> 31;
   $306 = $303 ? $305 : $302;
   $307 = $306&255;
   HEAP8[$299>>0] = $307;
   $308 = $212 | 6;
   $309 = (($5) + ($308<<1)|0);
   $310 = HEAP16[$309>>1]|0;
   $311 = $310 << 16 >> 16;
   $312 = (($311) + 32)|0;
   $313 = $312 >> 6;
   $314 = (($213) + 6)|0;
   $315 = (($0) + ($314)|0);
   $316 = HEAP8[$315>>0]|0;
   $317 = $316&255;
   $318 = (($313) + ($317))|0;
   $319 = ($318>>>0)>(255);
   $320 = (0 - ($318))|0;
   $321 = $320 >> 31;
   $322 = $319 ? $321 : $318;
   $323 = $322&255;
   HEAP8[$315>>0] = $323;
   $324 = $212 | 7;
   $325 = (($5) + ($324<<1)|0);
   $326 = HEAP16[$325>>1]|0;
   $327 = $326 << 16 >> 16;
   $328 = (($327) + 32)|0;
   $329 = $328 >> 6;
   $330 = (($213) + 7)|0;
   $331 = (($0) + ($330)|0);
   $332 = HEAP8[$331>>0]|0;
   $333 = $332&255;
   $334 = (($329) + ($333))|0;
   $335 = ($334>>>0)>(255);
   $336 = (0 - ($334))|0;
   $337 = $336 >> 31;
   $338 = $335 ? $337 : $334;
   $339 = $338&255;
   HEAP8[$331>>0] = $339;
   $340 = (($$0126176$lver$orig) + 1)|0;
   $exitcond$lver$orig = ($340|0)==(8);
   if ($exitcond$lver$orig) {
    break;
   } else {
    $$0126176$lver$orig = $340;
   }
  }
  STACKTOP = sp;return;
 }
 $scevgep201 = ((($0)) + 6|0);
 $load_initial = HEAP8[$scevgep201>>0]|0;
 $$0126176 = 0;$store_forwarded = $load_initial;
 while(1) {
  $341 = $$0126176 << 3;
  $342 = Math_imul($$0126176, $1)|0;
  $343 = (($5) + ($341<<1)|0);
  $344 = HEAP16[$343>>1]|0;
  $345 = $344 << 16 >> 16;
  $346 = (($345) + 32)|0;
  $347 = $346 >> 6;
  $348 = (($0) + ($342)|0);
  $349 = HEAP8[$348>>0]|0;
  $350 = $349&255;
  $351 = (($347) + ($350))|0;
  $352 = ($351>>>0)>(255);
  $353 = (0 - ($351))|0;
  $354 = $353 >> 31;
  $355 = $352 ? $354 : $351;
  $356 = $355&255;
  HEAP8[$348>>0] = $356;
  $357 = $341 | 1;
  $358 = (($5) + ($357<<1)|0);
  $359 = HEAP16[$358>>1]|0;
  $360 = $359 << 16 >> 16;
  $361 = (($360) + 32)|0;
  $362 = $361 >> 6;
  $363 = (($342) + 1)|0;
  $364 = (($0) + ($363)|0);
  $365 = HEAP8[$364>>0]|0;
  $366 = $365&255;
  $367 = (($362) + ($366))|0;
  $368 = ($367>>>0)>(255);
  $369 = (0 - ($367))|0;
  $370 = $369 >> 31;
  $371 = $368 ? $370 : $367;
  $372 = $371&255;
  HEAP8[$364>>0] = $372;
  $373 = $341 | 2;
  $374 = (($5) + ($373<<1)|0);
  $375 = HEAP16[$374>>1]|0;
  $376 = $375 << 16 >> 16;
  $377 = (($376) + 32)|0;
  $378 = $377 >> 6;
  $379 = (($342) + 2)|0;
  $380 = (($0) + ($379)|0);
  $381 = HEAP8[$380>>0]|0;
  $382 = $381&255;
  $383 = (($378) + ($382))|0;
  $384 = ($383>>>0)>(255);
  $385 = (0 - ($383))|0;
  $386 = $385 >> 31;
  $387 = $384 ? $386 : $383;
  $388 = $387&255;
  HEAP8[$380>>0] = $388;
  $389 = $341 | 3;
  $390 = (($5) + ($389<<1)|0);
  $391 = HEAP16[$390>>1]|0;
  $392 = $391 << 16 >> 16;
  $393 = (($392) + 32)|0;
  $394 = $393 >> 6;
  $395 = (($342) + 3)|0;
  $396 = (($0) + ($395)|0);
  $397 = HEAP8[$396>>0]|0;
  $398 = $397&255;
  $399 = (($394) + ($398))|0;
  $400 = ($399>>>0)>(255);
  $401 = (0 - ($399))|0;
  $402 = $401 >> 31;
  $403 = $400 ? $402 : $399;
  $404 = $403&255;
  HEAP8[$396>>0] = $404;
  $405 = $341 | 4;
  $406 = (($5) + ($405<<1)|0);
  $407 = HEAP16[$406>>1]|0;
  $408 = $407 << 16 >> 16;
  $409 = (($408) + 32)|0;
  $410 = $409 >> 6;
  $411 = (($342) + 4)|0;
  $412 = (($0) + ($411)|0);
  $413 = HEAP8[$412>>0]|0;
  $414 = $413&255;
  $415 = (($410) + ($414))|0;
  $416 = ($415>>>0)>(255);
  $417 = (0 - ($415))|0;
  $418 = $417 >> 31;
  $419 = $416 ? $418 : $415;
  $420 = $419&255;
  HEAP8[$412>>0] = $420;
  $421 = $341 | 5;
  $422 = (($5) + ($421<<1)|0);
  $423 = HEAP16[$422>>1]|0;
  $424 = $423 << 16 >> 16;
  $425 = (($424) + 32)|0;
  $426 = $425 >> 6;
  $427 = (($342) + 5)|0;
  $428 = (($0) + ($427)|0);
  $429 = HEAP8[$428>>0]|0;
  $430 = $429&255;
  $431 = (($426) + ($430))|0;
  $432 = ($431>>>0)>(255);
  $433 = (0 - ($431))|0;
  $434 = $433 >> 31;
  $435 = $432 ? $434 : $431;
  $436 = $435&255;
  HEAP8[$428>>0] = $436;
  $437 = $341 | 6;
  $438 = (($5) + ($437<<1)|0);
  $439 = HEAP16[$438>>1]|0;
  $440 = $439 << 16 >> 16;
  $441 = (($440) + 32)|0;
  $442 = $441 >> 6;
  $443 = (($342) + 6)|0;
  $444 = (($0) + ($443)|0);
  $445 = $store_forwarded&255;
  $446 = (($442) + ($445))|0;
  $447 = ($446>>>0)>(255);
  $448 = (0 - ($446))|0;
  $449 = $448 >> 31;
  $450 = $447 ? $449 : $446;
  $451 = $450&255;
  HEAP8[$444>>0] = $451;
  $452 = $341 | 7;
  $453 = (($5) + ($452<<1)|0);
  $454 = HEAP16[$453>>1]|0;
  $455 = $454 << 16 >> 16;
  $456 = (($455) + 32)|0;
  $457 = $456 >> 6;
  $458 = (($342) + 7)|0;
  $459 = (($0) + ($458)|0);
  $460 = HEAP8[$459>>0]|0;
  $461 = $460&255;
  $462 = (($457) + ($461))|0;
  $463 = ($462>>>0)>(255);
  $464 = (0 - ($462))|0;
  $465 = $464 >> 31;
  $466 = $463 ? $465 : $462;
  $467 = $466&255;
  HEAP8[$459>>0] = $467;
  $468 = (($$0126176) + 1)|0;
  $exitcond = ($468|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$0126176 = $468;$store_forwarded = $467;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7WelsDec14DeblockingInitEPNS_17TagDeblockingFuncEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 3;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 23;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 4;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 24;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = 19;
 $6 = ((($0)) + 20|0);
 HEAP32[$6>>2] = 5;
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = 20;
 $8 = ((($0)) + 28|0);
 HEAP32[$8>>2] = 6;
 $9 = ((($0)) + 32|0);
 HEAP32[$9>>2] = 7;
 $10 = ((($0)) + 36|0);
 HEAP32[$10>>2] = 25;
 $11 = ((($0)) + 40|0);
 HEAP32[$11>>2] = 8;
 $12 = ((($0)) + 44|0);
 HEAP32[$12>>2] = 26;
 return;
}
function __ZN7WelsDec17WelsBlockFuncInitEPNS_12TagBlockFuncEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 10;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 33;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 34;
 return;
}
function __ZN7WelsDec14WelsInitMemoryEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 3;
  return ($$0|0);
 }
 $2 = ((($0)) + 241888|0);
 $3 = ((($0)) + 562528|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN7WelsDec14MemInitNalListEPPNS_14TagAccessUnitsEjPN10WelsCommon12CMemoryAlignE($2,32,$4)|0);
 $6 = ($5|0)==(0);
 if (!($6)) {
  $$0 = 1;
  return ($$0|0);
 }
 $7 = (__ZN7WelsDec12InitBsBufferEPNS_21TagWelsDecoderContextE($0)|0);
 $8 = ($7|0)==(0);
 if (!($8)) {
  $$0 = 1;
  return ($$0|0);
 }
 $9 = ((($0)) + 241950|0);
 $10 = ((($0)) + 241948|0);
 HEAP8[$10>>0] = -1;
 HEAP8[$9>>0] = 0;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec14MemInitNalListEPPNS_14TagAccessUnitsEjPN10WelsCommon12CMemoryAlignE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$045 = 0, $$046 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 << 2;
 $4 = (($3) + 28)|0;
 $5 = ($1*3920)|0;
 $6 = (($4) + ($5))|0;
 $7 = ($1|0)==(0);
 if ($7) {
  $$0 = 1;
  return ($$0|0);
 }
 $8 = HEAP32[$0>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  __ZN10WelsCommon12CMemoryAlign8WelsFreeEPvPKc($2,$8,22218);
  HEAP32[$0>>2] = 0;
 }
 $10 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($2,$6,22218)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 1;
  return ($$0|0);
 }
 HEAP32[$0>>2] = $10;
 $12 = ((($10)) + 28|0);
 HEAP32[$10>>2] = $12;
 $13 = (($12) + ($3)|0);
 $$045 = 0;$$046 = $13;
 while(1) {
  $14 = HEAP32[$0>>2]|0;
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + ($$045<<2)|0);
  HEAP32[$16>>2] = $$046;
  $17 = ((($$046)) + 3920|0);
  $18 = (($$045) + 1)|0;
  $19 = ($18>>>0)<($1>>>0);
  if ($19) {
   $$045 = $18;$$046 = $17;
  } else {
   break;
  }
 }
 $20 = HEAP32[$0>>2]|0;
 $21 = ((($20)) + 12|0);
 HEAP32[$21>>2] = $1;
 $22 = HEAP32[$0>>2]|0;
 $23 = ((($22)) + 4|0);
 HEAP32[$23>>2] = 0;
 $24 = HEAP32[$0>>2]|0;
 $25 = ((($24)) + 8|0);
 HEAP32[$25>>2] = 0;
 $26 = HEAP32[$0>>2]|0;
 $27 = ((($26)) + 16|0);
 HEAP32[$27>>2] = 0;
 $28 = HEAP32[$0>>2]|0;
 $29 = ((($28)) + 20|0);
 HEAP32[$29>>2] = 0;
 $30 = HEAP32[$0>>2]|0;
 $31 = ((($30)) + 24|0);
 HEAP8[$31>>0] = 0;
 $$0 = 0;
 return ($$0|0);
}
function __ZN7WelsDec12InitBsBufferEPNS_21TagWelsDecoderContextE($0) {
 $0 = $0|0;
 var $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$1 = 3;
  return ($$1|0);
 }
 $2 = ((($0)) + 562528|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 6172|0);
 HEAP32[$4>>2] = 3145728;
 $5 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($3,3145728,30589)|0);
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = $5;
 $7 = ($5|0)==(0|0);
 if ($7) {
  $$1 = 1;
  return ($$1|0);
 }
 $8 = ((($0)) + 28|0);
 HEAP32[$8>>2] = $5;
 $9 = ((($0)) + 24|0);
 HEAP32[$9>>2] = $5;
 $10 = HEAP32[$4>>2]|0;
 $11 = (($5) + ($10)|0);
 $12 = ((($0)) + 20|0);
 HEAP32[$12>>2] = $11;
 $13 = ((($0)) + 242344|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)==(0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($3,544,22198)|0);
 $17 = ((($0)) + 316848|0);
 HEAP32[$17>>2] = $16;
 $18 = ($16|0)==(0|0);
 if ($18) {
  $$1 = 1;
  return ($$1|0);
 }
 _memset(($16|0),0,544)|0;
 $19 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($3,7077888,22168)|0);
 $20 = HEAP32[$17>>2]|0;
 $21 = ((($20)) + 516|0);
 HEAP32[$21>>2] = $19;
 $22 = HEAP32[$17>>2]|0;
 $23 = ((($22)) + 516|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(0|0);
 if ($25) {
  $$1 = 1;
  return ($$1|0);
 }
 _memset(($24|0),0,7077888)|0;
 $26 = HEAP32[$4>>2]|0;
 $27 = (__ZN10WelsCommon12CMemoryAlign11WelsMalloczEjPKc($3,$26,30831)|0);
 $28 = ((($0)) + 32|0);
 HEAP32[$28>>2] = $27;
 $29 = ($27|0)==(0|0);
 if ($29) {
  $$1 = 1;
  return ($$1|0);
 }
 $30 = ((($0)) + 44|0);
 HEAP32[$30>>2] = $27;
 $31 = ((($0)) + 40|0);
 HEAP32[$31>>2] = $27;
 $32 = HEAP32[$4>>2]|0;
 $33 = (($27) + ($32)|0);
 $34 = ((($0)) + 36|0);
 HEAP32[$34>>2] = $33;
 $$1 = 0;
 return ($$1|0);
}
function __ZN7WelsDec20WelsBlockZero16x16_cEPsi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 dest=$0; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $2 = (($0) + ($1<<1)|0);
 dest=$2; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $3 = (($2) + ($1<<1)|0);
 dest=$3; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $4 = (($3) + ($1<<1)|0);
 dest=$4; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $5 = (($4) + ($1<<1)|0);
 dest=$5; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $6 = (($5) + ($1<<1)|0);
 dest=$6; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $7 = (($6) + ($1<<1)|0);
 dest=$7; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $8 = (($7) + ($1<<1)|0);
 dest=$8; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $9 = (($8) + ($1<<1)|0);
 dest=$9; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $10 = (($9) + ($1<<1)|0);
 dest=$10; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $11 = (($10) + ($1<<1)|0);
 dest=$11; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $12 = (($11) + ($1<<1)|0);
 dest=$12; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $13 = (($12) + ($1<<1)|0);
 dest=$13; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $14 = (($13) + ($1<<1)|0);
 dest=$14; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $15 = (($14) + ($1<<1)|0);
 dest=$15; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $16 = (($15) + ($1<<1)|0);
 dest=$16; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 return;
}
function __ZN7WelsDec18WelsBlockZero8x8_cEPsi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP16[$0>>1]=0|0;HEAP16[$0+2>>1]=0|0;HEAP16[$0+4>>1]=0|0;HEAP16[$0+6>>1]=0|0;HEAP16[$0+8>>1]=0|0;HEAP16[$0+10>>1]=0|0;HEAP16[$0+12>>1]=0|0;HEAP16[$0+14>>1]=0|0;
 $2 = (($0) + ($1<<1)|0);
 ;HEAP16[$2>>1]=0|0;HEAP16[$2+2>>1]=0|0;HEAP16[$2+4>>1]=0|0;HEAP16[$2+6>>1]=0|0;HEAP16[$2+8>>1]=0|0;HEAP16[$2+10>>1]=0|0;HEAP16[$2+12>>1]=0|0;HEAP16[$2+14>>1]=0|0;
 $3 = (($2) + ($1<<1)|0);
 ;HEAP16[$3>>1]=0|0;HEAP16[$3+2>>1]=0|0;HEAP16[$3+4>>1]=0|0;HEAP16[$3+6>>1]=0|0;HEAP16[$3+8>>1]=0|0;HEAP16[$3+10>>1]=0|0;HEAP16[$3+12>>1]=0|0;HEAP16[$3+14>>1]=0|0;
 $4 = (($3) + ($1<<1)|0);
 ;HEAP16[$4>>1]=0|0;HEAP16[$4+2>>1]=0|0;HEAP16[$4+4>>1]=0|0;HEAP16[$4+6>>1]=0|0;HEAP16[$4+8>>1]=0|0;HEAP16[$4+10>>1]=0|0;HEAP16[$4+12>>1]=0|0;HEAP16[$4+14>>1]=0|0;
 $5 = (($4) + ($1<<1)|0);
 ;HEAP16[$5>>1]=0|0;HEAP16[$5+2>>1]=0|0;HEAP16[$5+4>>1]=0|0;HEAP16[$5+6>>1]=0|0;HEAP16[$5+8>>1]=0|0;HEAP16[$5+10>>1]=0|0;HEAP16[$5+12>>1]=0|0;HEAP16[$5+14>>1]=0|0;
 $6 = (($5) + ($1<<1)|0);
 ;HEAP16[$6>>1]=0|0;HEAP16[$6+2>>1]=0|0;HEAP16[$6+4>>1]=0|0;HEAP16[$6+6>>1]=0|0;HEAP16[$6+8>>1]=0|0;HEAP16[$6+10>>1]=0|0;HEAP16[$6+12>>1]=0|0;HEAP16[$6+14>>1]=0|0;
 $7 = (($6) + ($1<<1)|0);
 ;HEAP16[$7>>1]=0|0;HEAP16[$7+2>>1]=0|0;HEAP16[$7+4>>1]=0|0;HEAP16[$7+6>>1]=0|0;HEAP16[$7+8>>1]=0|0;HEAP16[$7+10>>1]=0|0;HEAP16[$7+12>>1]=0|0;HEAP16[$7+14>>1]=0|0;
 $8 = (($7) + ($1<<1)|0);
 ;HEAP16[$8>>1]=0|0;HEAP16[$8+2>>1]=0|0;HEAP16[$8+4>>1]=0|0;HEAP16[$8+6>>1]=0|0;HEAP16[$8+8>>1]=0|0;HEAP16[$8+10>>1]=0|0;HEAP16[$8+12>>1]=0|0;HEAP16[$8+14>>1]=0|0;
 return;
}
function __Z20DeblockChromaLt4V2_cPhiiiPa($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __Z19DeblockChromaLt42_cPhiiiiPa($0,$1,1,$2,$3,$4);
 return;
}
function __Z20DeblockChromaEq4V2_cPhiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05254$i = 0, $$055$i = 0, $$not$i = 0, $$not53$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (0 - ($1))|0;
 $5 = Math_imul($1, -2)|0;
 $$05254$i = $0;$$055$i = 0;
 while(1) {
  $6 = (($$05254$i) + ($4)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7&255;
  $9 = (($$05254$i) + ($5)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10&255;
  $12 = HEAP8[$$05254$i>>0]|0;
  $13 = $12&255;
  $14 = (($$05254$i) + ($1)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15&255;
  $17 = (($8) - ($13))|0;
  $18 = $17 >> 31;
  $19 = $18 ^ $17;
  $20 = (($19) - ($18))|0;
  $21 = ($20|0)<($2|0);
  $22 = (($11) - ($8))|0;
  $23 = $22 >> 31;
  $24 = (($16) - ($13))|0;
  $25 = $24 >> 31;
  if ($21) {
   $26 = $25 ^ $24;
   $27 = (($26) - ($25))|0;
   $28 = $23 ^ $22;
   $29 = (($28) - ($23))|0;
   $$not$i = ($29|0)>=($3|0);
   $$not53$i = ($27|0)>=($3|0);
   $brmerge$i = $$not$i | $$not53$i;
   if (!($brmerge$i)) {
    $30 = $11 << 1;
    $31 = (($8) + 2)|0;
    $32 = (($31) + ($30))|0;
    $33 = (($32) + ($16))|0;
    $34 = $33 >>> 2;
    $35 = $34&255;
    HEAP8[$6>>0] = $35;
    $36 = $16 << 1;
    $37 = (($11) + 2)|0;
    $38 = (($37) + ($13))|0;
    $39 = (($38) + ($36))|0;
    $40 = $39 >>> 2;
    $41 = $40&255;
    HEAP8[$$05254$i>>0] = $41;
   }
  }
  $42 = ((($$05254$i)) + 1|0);
  $43 = (($$055$i) + 1)|0;
  $exitcond$i = ($43|0)==(8);
  if ($exitcond$i) {
   break;
  } else {
   $$05254$i = $42;$$055$i = $43;
  }
 }
 return;
}
function __Z20DeblockChromaLt4H2_cPhiiiPa($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i = 0, $$07375$i = 0, $$076$i = 0, $$not$i = 0, $$not74$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge$i = 0, $exitcond$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $$07375$i = 0;$$076$i = $0;
 while(1) {
  $5 = $$07375$i >> 1;
  $6 = (($4) + ($5)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7 << 24 >> 24;
  $9 = ($7<<24>>24)>(0);
  if ($9) {
   $10 = ((($$076$i)) + -1|0);
   $11 = HEAP8[$10>>0]|0;
   $12 = $11&255;
   $13 = ((($$076$i)) + -2|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = HEAP8[$$076$i>>0]|0;
   $17 = $16&255;
   $18 = ((($$076$i)) + 1|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19&255;
   $21 = (($12) - ($17))|0;
   $22 = $21 >> 31;
   $23 = $22 ^ $21;
   $24 = (($23) - ($22))|0;
   $25 = ($24|0)<($2|0);
   $26 = (($15) - ($12))|0;
   $27 = $26 >> 31;
   $28 = (($20) - ($17))|0;
   $29 = $28 >> 31;
   if ($25) {
    $30 = $29 ^ $28;
    $31 = (($30) - ($29))|0;
    $32 = $27 ^ $26;
    $33 = (($32) - ($27))|0;
    $$not$i = ($33|0)>=($3|0);
    $$not74$i = ($31|0)>=($3|0);
    $brmerge$i = $$not$i | $$not74$i;
    if (!($brmerge$i)) {
     $34 = (($17) - ($12))|0;
     $35 = $34 << 2;
     $36 = (($15) + 4)|0;
     $37 = (($36) - ($20))|0;
     $38 = (($37) + ($35))|0;
     $39 = $38 >> 3;
     $40 = (0 - ($8))|0;
     $41 = ($39|0)<($40|0);
     $42 = ($39|0)>($8|0);
     $$$i = $42 ? $8 : $39;
     $43 = $41 ? $40 : $$$i;
     $44 = (($43) + ($12))|0;
     $45 = ($44>>>0)>(255);
     $46 = (0 - ($44))|0;
     $47 = $46 >> 31;
     $48 = $45 ? $47 : $44;
     $49 = $48&255;
     HEAP8[$10>>0] = $49;
     $50 = (($17) - ($43))|0;
     $51 = ($50>>>0)>(255);
     $52 = (0 - ($50))|0;
     $53 = $52 >> 31;
     $54 = $51 ? $53 : $50;
     $55 = $54&255;
     HEAP8[$$076$i>>0] = $55;
    }
   }
  }
  $56 = (($$076$i) + ($1)|0);
  $57 = (($$07375$i) + 1)|0;
  $exitcond$i = ($57|0)==(8);
  if ($exitcond$i) {
   break;
  } else {
   $$07375$i = $57;$$076$i = $56;
  }
 }
 return;
}
function __Z20DeblockChromaEq4H2_cPhiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05254$i = 0, $$055$i = 0, $$not$i = 0, $$not53$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $brmerge$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$05254$i = $0;$$055$i = 0;
 while(1) {
  $4 = ((($$05254$i)) + -1|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = $5&255;
  $7 = ((($$05254$i)) + -2|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = $8&255;
  $10 = HEAP8[$$05254$i>>0]|0;
  $11 = $10&255;
  $12 = ((($$05254$i)) + 1|0);
  $13 = HEAP8[$12>>0]|0;
  $14 = $13&255;
  $15 = (($6) - ($11))|0;
  $16 = $15 >> 31;
  $17 = $16 ^ $15;
  $18 = (($17) - ($16))|0;
  $19 = ($18|0)<($2|0);
  $20 = (($9) - ($6))|0;
  $21 = $20 >> 31;
  $22 = (($14) - ($11))|0;
  $23 = $22 >> 31;
  if ($19) {
   $24 = $23 ^ $22;
   $25 = (($24) - ($23))|0;
   $26 = $21 ^ $20;
   $27 = (($26) - ($21))|0;
   $$not$i = ($27|0)>=($3|0);
   $$not53$i = ($25|0)>=($3|0);
   $brmerge$i = $$not$i | $$not53$i;
   if (!($brmerge$i)) {
    $28 = $9 << 1;
    $29 = (($6) + 2)|0;
    $30 = (($29) + ($28))|0;
    $31 = (($30) + ($14))|0;
    $32 = $31 >>> 2;
    $33 = $32&255;
    HEAP8[$4>>0] = $33;
    $34 = $14 << 1;
    $35 = (($9) + 2)|0;
    $36 = (($35) + ($11))|0;
    $37 = (($36) + ($34))|0;
    $38 = $37 >>> 2;
    $39 = $38&255;
    HEAP8[$$05254$i>>0] = $39;
   }
  }
  $40 = (($$05254$i) + ($1)|0);
  $41 = (($$055$i) + 1)|0;
  $exitcond$i = ($41|0)==(8);
  if ($exitcond$i) {
   break;
  } else {
   $$05254$i = $40;$$055$i = $41;
  }
 }
 return;
}
function __Z19DeblockChromaLt42_cPhiiiiPa($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$07375 = 0, $$076 = 0, $$not = 0, $$not74 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $brmerge = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (0 - ($1))|0;
 $7 = Math_imul($1, -2)|0;
 $$07375 = 0;$$076 = $0;
 while(1) {
  $8 = $$07375 >> 1;
  $9 = (($5) + ($8)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10 << 24 >> 24;
  $12 = ($10<<24>>24)>(0);
  if ($12) {
   $13 = (($$076) + ($6)|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = $14&255;
   $16 = (($$076) + ($7)|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = $17&255;
   $19 = HEAP8[$$076>>0]|0;
   $20 = $19&255;
   $21 = (($$076) + ($1)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22&255;
   $24 = (($15) - ($20))|0;
   $25 = $24 >> 31;
   $26 = $25 ^ $24;
   $27 = (($26) - ($25))|0;
   $28 = ($27|0)<($3|0);
   $29 = (($18) - ($15))|0;
   $30 = $29 >> 31;
   $31 = (($23) - ($20))|0;
   $32 = $31 >> 31;
   if ($28) {
    $33 = $32 ^ $31;
    $34 = (($33) - ($32))|0;
    $35 = $30 ^ $29;
    $36 = (($35) - ($30))|0;
    $$not = ($36|0)>=($4|0);
    $$not74 = ($34|0)>=($4|0);
    $brmerge = $$not | $$not74;
    if (!($brmerge)) {
     $37 = (($20) - ($15))|0;
     $38 = $37 << 2;
     $39 = (($18) + 4)|0;
     $40 = (($39) - ($23))|0;
     $41 = (($40) + ($38))|0;
     $42 = $41 >> 3;
     $43 = (0 - ($11))|0;
     $44 = ($42|0)<($43|0);
     $45 = ($42|0)>($11|0);
     $$ = $45 ? $11 : $42;
     $46 = $44 ? $43 : $$;
     $47 = (($46) + ($15))|0;
     $48 = ($47>>>0)>(255);
     $49 = (0 - ($47))|0;
     $50 = $49 >> 31;
     $51 = $48 ? $50 : $47;
     $52 = $51&255;
     HEAP8[$13>>0] = $52;
     $53 = (($20) - ($46))|0;
     $54 = ($53>>>0)>(255);
     $55 = (0 - ($53))|0;
     $56 = $55 >> 31;
     $57 = $54 ? $56 : $53;
     $58 = $57&255;
     HEAP8[$$076>>0] = $58;
    }
   }
  }
  $59 = (($$076) + ($2)|0);
  $60 = (($$07375) + 1)|0;
  $exitcond = ($60|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$07375 = $60;$$076 = $59;
  }
 }
 return;
}
function __ZN14welsCodecTrace16SetCodecInstanceEPv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZN14welsCodecTraceC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 2;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 5;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 16|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 27;
 $5 = ((($0)) + 20|0);
 HEAP32[$5>>2] = 0;
 return;
}
function __ZL15welsStderrTracePviPKc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[2517]|0;
 HEAP32[$vararg_buffer>>2] = $2;
 (_fprintf($3,30893,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __ZN14welsCodecTrace16StaticCodecTraceEPviPKcPi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024|0;
 $4 = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)<($1|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 _memset(($4|0),0,1024)|0;
 (_WelsVsnprintf($4,1024,$2,$3)|0);
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $10 = ((($0)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viii[$8 & 7]($11,$1,$4);
 }
 STACKTOP = sp;return;
}
function _WelsVsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_vsnprintf($0,$1,$2,$3)|0);
 return ($4|0);
}
function __ZN7WelsDec12CWelsDecoderC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 HEAP32[$0>>2] = (9248);
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (__Znwj(24)|0);
 __ZN14welsCodecTraceC2Ev($3);
 HEAP32[$2>>2] = $3;
 __ZN14welsCodecTrace16SetCodecInstanceEPv($3,$0);
 $4 = HEAP32[$2>>2]|0;
 __ZN14welsCodecTrace13SetTraceLevelEi($4,1);
 $5 = HEAP32[$2>>2]|0;
 $6 = ((($5)) + 12|0);
 __Z7WelsLogP13TagLogContextiPKcz($6,4,30897,$vararg_buffer);
 STACKTOP = sp;return;
}
function _WelsCreateDecoder($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 1;
  return ($$0|0);
 }
 $2 = (__Znwj(12)|0);
 __ZN7WelsDec12CWelsDecoderC2Ev($2);
 HEAP32[$0>>2] = $2;
 $$0 = 0;
 return ($$0|0);
}
function _WelsDestroyDecoder($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vi[$4 & 15]($0);
 return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 5;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___pthread_self_701()|0);
 $1 = ((($0)) + 64|0);
 return ($1|0);
}
function ___pthread_self_701() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9820|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;
 var $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$25 = $17;
   while(1) {
    $26 = ($25|0)<(0);
    if ($26) {
     break;
    }
    $34 = (($$04855) - ($25))|0;
    $35 = ((($$04954)) + 4|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($25>>>0)>($36>>>0);
    $38 = ((($$04954)) + 8|0);
    $$150 = $37 ? $38 : $$04954;
    $39 = $37 << 31 >> 31;
    $$1 = (($39) + ($$04756))|0;
    $40 = $37 ? $36 : 0;
    $$0 = (($25) - ($40))|0;
    $41 = HEAP32[$$150>>2]|0;
    $42 = (($41) + ($$0)|0);
    HEAP32[$$150>>2] = $42;
    $43 = ((($$150)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (($44) - ($$0))|0;
    HEAP32[$43>>2] = $45;
    $46 = HEAP32[$13>>2]|0;
    $47 = $$150;
    HEAP32[$vararg_buffer3>>2] = $46;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $47;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $48 = (___syscall146(146,($vararg_buffer3|0))|0);
    $49 = (___syscall_ret($48)|0);
    $50 = ($34|0)==($49|0);
    if ($50) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $34;$$04954 = $$150;$25 = $49;
    }
   }
   $27 = ((($0)) + 16|0);
   HEAP32[$27>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $28 = HEAP32[$0>>2]|0;
   $29 = $28 | 32;
   HEAP32[$0>>2] = $29;
   $30 = ($$04756|0)==(2);
   if ($30) {
    $$051 = 0;
   } else {
    $31 = ((($$04954)) + 4|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($2) - ($32))|0;
    $$051 = $33;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  HEAP32[$4>>2] = $20;
  HEAP32[$7>>2] = $20;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function _dummy($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (33488|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01519 = $0;$23 = $1;
   while(1) {
    $4 = HEAP8[$$01519>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$sink = $23;
     break L1;
    }
    $6 = ((($$01519)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01519 = $6;$23 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn = $$0;
   while(1) {
    $19 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$sink = $21;
 }
 $22 = (($$sink) - ($1))|0;
 return ($22|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   $$2 = $$035$lcssa;$$3 = 0;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;
   } else {
    $20 = Math_imul($3, 16843009)|0;
    $21 = ($$036$lcssa64>>>0)>(3);
    L11: do {
     if ($21) {
      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
      while(1) {
       $22 = HEAP32[$$046>>2]|0;
       $23 = $22 ^ $20;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        break;
       }
       $29 = ((($$046)) + 4|0);
       $30 = (($$13745) + -4)|0;
       $31 = ($30>>>0)>(3);
       if ($31) {
        $$046 = $29;$$13745 = $30;
       } else {
        $$0$lcssa = $29;$$137$lcssa = $30;
        label = 11;
        break L11;
       }
      }
      $$140 = $$046;$$23839 = $$13745;
     } else {
      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $32 = ($$137$lcssa|0)==(0);
     if ($32) {
      $$2 = $$0$lcssa;$$3 = 0;
      break;
     } else {
      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;
     }
    }
    while(1) {
     $33 = HEAP8[$$140>>0]|0;
     $34 = ($33<<24>>24)==($18<<24>>24);
     if ($34) {
      $$2 = $$140;$$3 = $$23839;
      break L8;
     }
     $35 = ((($$140)) + 1|0);
     $36 = (($$23839) + -1)|0;
     $37 = ($36|0)==(0);
     if ($37) {
      $$2 = $35;$$3 = 0;
      break;
     } else {
      $$140 = $35;$$23839 = $36;
     }
    }
   }
  }
 } while(0);
 $38 = ($$3|0)!=(0);
 $39 = $38 ? $$2 : 0;
 return ($39|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)!=(0|0);
 $8 = $7 ? $$0 : $0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$191 = $63 ? $$090 : $26;
      if ($62) {
       $$4 = 0;
       break L1;
      } else {
       $$090 = $$191;$$094 = $$195;
      }
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $$ = $61 ? $57 : 0;
      $$4 = $$;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $$ = $2 ? $0 : $3;
 return ($$|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _strncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpncpy($0,$1,$2)|0);
 return ($0|0);
}
function ___stpncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03753 = 0, $$038$lcssa = 0, $$038$lcssa79 = 0, $$03866 = 0, $$039$lcssa = 0, $$039$lcssa78 = 0, $$03965 = 0, $$041$lcssa = 0, $$041$lcssa77 = 0, $$04164 = 0, $$054 = 0, $$1$lcssa = 0, $$140$ph = 0, $$14046 = 0, $$142$ph = 0, $$14245 = 0, $$152 = 0, $$2$ph = 0;
 var $$243 = 0, $$247 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond63 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1;
 $4 = $0;
 $5 = $3 ^ $4;
 $6 = $5 & 3;
 $7 = ($6|0)==(0);
 do {
  if ($7) {
   $8 = $3 & 3;
   $9 = ($8|0)!=(0);
   $10 = ($2|0)!=(0);
   $or$cond63 = $10 & $9;
   L3: do {
    if ($or$cond63) {
     $$03866 = $2;$$03965 = $1;$$04164 = $0;
     while(1) {
      $11 = HEAP8[$$03965>>0]|0;
      HEAP8[$$04164>>0] = $11;
      $12 = ($11<<24>>24)==(0);
      if ($12) {
       $$038$lcssa79 = $$03866;$$039$lcssa78 = $$03965;$$041$lcssa77 = $$04164;
       break L3;
      }
      $13 = (($$03866) + -1)|0;
      $14 = ((($$03965)) + 1|0);
      $15 = ((($$04164)) + 1|0);
      $16 = $14;
      $17 = $16 & 3;
      $18 = ($17|0)!=(0);
      $19 = ($13|0)!=(0);
      $or$cond = $19 & $18;
      if ($or$cond) {
       $$03866 = $13;$$03965 = $14;$$04164 = $15;
      } else {
       $$038$lcssa = $13;$$039$lcssa = $14;$$041$lcssa = $15;$$lcssa = $19;
       label = 5;
       break;
      }
     }
    } else {
     $$038$lcssa = $2;$$039$lcssa = $1;$$041$lcssa = $0;$$lcssa = $10;
     label = 5;
    }
   } while(0);
   if ((label|0) == 5) {
    if ($$lcssa) {
     $$038$lcssa79 = $$038$lcssa;$$039$lcssa78 = $$039$lcssa;$$041$lcssa77 = $$041$lcssa;
    } else {
     $$243 = $$041$lcssa;$$3 = 0;
     break;
    }
   }
   $20 = HEAP8[$$039$lcssa78>>0]|0;
   $21 = ($20<<24>>24)==(0);
   if ($21) {
    $$243 = $$041$lcssa77;$$3 = $$038$lcssa79;
   } else {
    $22 = ($$038$lcssa79>>>0)>(3);
    L11: do {
     if ($22) {
      $$03753 = $$041$lcssa77;$$054 = $$039$lcssa78;$$152 = $$038$lcssa79;
      while(1) {
       $23 = HEAP32[$$054>>2]|0;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        $$0$lcssa = $$054;$$037$lcssa = $$03753;$$1$lcssa = $$152;
        break L11;
       }
       HEAP32[$$03753>>2] = $23;
       $29 = (($$152) + -4)|0;
       $30 = ((($$054)) + 4|0);
       $31 = ((($$03753)) + 4|0);
       $32 = ($29>>>0)>(3);
       if ($32) {
        $$03753 = $31;$$054 = $30;$$152 = $29;
       } else {
        $$0$lcssa = $30;$$037$lcssa = $31;$$1$lcssa = $29;
        break;
       }
      }
     } else {
      $$0$lcssa = $$039$lcssa78;$$037$lcssa = $$041$lcssa77;$$1$lcssa = $$038$lcssa79;
     }
    } while(0);
    $$140$ph = $$0$lcssa;$$142$ph = $$037$lcssa;$$2$ph = $$1$lcssa;
    label = 11;
   }
  } else {
   $$140$ph = $1;$$142$ph = $0;$$2$ph = $2;
   label = 11;
  }
 } while(0);
 L16: do {
  if ((label|0) == 11) {
   $33 = ($$2$ph|0)==(0);
   if ($33) {
    $$243 = $$142$ph;$$3 = 0;
   } else {
    $$14046 = $$140$ph;$$14245 = $$142$ph;$$247 = $$2$ph;
    while(1) {
     $34 = HEAP8[$$14046>>0]|0;
     HEAP8[$$14245>>0] = $34;
     $35 = ($34<<24>>24)==(0);
     if ($35) {
      $$243 = $$14245;$$3 = $$247;
      break L16;
     }
     $36 = (($$247) + -1)|0;
     $37 = ((($$14046)) + 1|0);
     $38 = ((($$14245)) + 1|0);
     $39 = ($36|0)==(0);
     if ($39) {
      $$243 = $38;$$3 = 0;
      break;
     } else {
      $$14046 = $37;$$14245 = $38;$$247 = $36;
     }
    }
   }
  }
 } while(0);
 _memset(($$243|0),0,($$3|0))|0;
 return ($$243|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_698()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function ___pthread_self_698() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $3 = (30932 + ($$016)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = $4&255;
  $6 = ($5|0)==($0|0);
  if ($6) {
   label = 2;
   break;
  }
  $7 = (($$016) + 1)|0;
  $8 = ($7|0)==(87);
  if ($8) {
   $$01214 = 31020;$$115 = 87;
   label = 5;
   break;
  } else {
   $$016 = $7;
  }
 }
 if ((label|0) == 2) {
  $2 = ($$016|0)==(0);
  if ($2) {
   $$012$lcssa = 31020;
  } else {
   $$01214 = 31020;$$115 = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
    label = 5;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $4 = sp + 124|0;
 $5 = sp;
 dest=$5; src=10196; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $$$015 = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $$$015;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($$$015)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($$$015|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $$1$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $3 = sp + 120|0;
 $4 = sp + 80|0;
 $5 = sp;
 $6 = sp + 136|0;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $39 = $12;
  } else {
   $39 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (FUNCTION_TABLE_iiii[$32 & 15]($0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $$ = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $$;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $$1$ = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $40 = ($39|0)==(0);
  if (!($40)) {
   ___unlockfile($0);
  }
  $$0 = $$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$ = 0, $$$0259 = 0, $$$0262 = 0, $$$0269 = 0, $$$4266 = 0, $$$5 = 0, $$0 = 0, $$0228 = 0, $$0228$ = 0, $$0229322 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240$lcssa = 0, $$0240$lcssa357 = 0, $$0240321 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0;
 var $$0249306 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0254$$0254$ = 0, $$0259 = 0, $$0262$lcssa = 0, $$0262311 = 0, $$0269 = 0, $$0269$phi = 0, $$1 = 0, $$1230333 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241332 = 0, $$1244320 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0;
 var $$1260 = 0, $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242305 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2256$ = 0, $$2256$$$2256 = 0, $$2261 = 0, $$2271 = 0, $$284$ = 0, $$289 = 0, $$290 = 0, $$3257 = 0, $$3265 = 0;
 var $$3272 = 0, $$3303 = 0, $$377 = 0, $$4258355 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa295 = 0, $$pre = 0, $$pre346 = 0, $$pre347 = 0, $$pre347$pre = 0, $$pre349 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0.0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $isdigit = 0, $isdigit275 = 0, $isdigit277 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp274 = 0;
 var $isdigittmp276 = 0, $narrow = 0, $or$cond = 0, $or$cond281 = 0, $or$cond283 = 0, $or$cond286 = 0, $storemerge = 0, $storemerge273310 = 0, $storemerge278 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $5 = sp + 16|0;
 $6 = sp;
 $7 = sp + 24|0;
 $8 = sp + 8|0;
 $9 = sp + 20|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243 = 0;$$0247 = 0;$$0269 = 0;$21 = $1;
 L1: while(1) {
  $15 = ($$0247|0)>(-1);
  do {
   if ($15) {
    $16 = (2147483647 - ($$0247))|0;
    $17 = ($$0243|0)>($16|0);
    if ($17) {
     $18 = (___errno_location()|0);
     HEAP32[$18>>2] = 75;
     $$1248 = -1;
     break;
    } else {
     $19 = (($$0243) + ($$0247))|0;
     $$1248 = $19;
     break;
    }
   } else {
    $$1248 = $$0247;
   }
  } while(0);
  $20 = HEAP8[$21>>0]|0;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   label = 87;
   break;
  } else {
   $23 = $20;$25 = $21;
  }
  L9: while(1) {
   switch ($23<<24>>24) {
   case 37:  {
    $$0249306 = $25;$27 = $25;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$0249$lcssa = $25;$39 = $25;
    break L9;
    break;
   }
   default: {
   }
   }
   $24 = ((($25)) + 1|0);
   HEAP32[$5>>2] = $24;
   $$pre = HEAP8[$24>>0]|0;
   $23 = $$pre;$25 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $26 = ((($27)) + 1|0);
     $28 = HEAP8[$26>>0]|0;
     $29 = ($28<<24>>24)==(37);
     if (!($29)) {
      $$0249$lcssa = $$0249306;$39 = $27;
      break L12;
     }
     $30 = ((($$0249306)) + 1|0);
     $31 = ((($27)) + 2|0);
     HEAP32[$5>>2] = $31;
     $32 = HEAP8[$31>>0]|0;
     $33 = ($32<<24>>24)==(37);
     if ($33) {
      $$0249306 = $30;$27 = $31;
      label = 9;
     } else {
      $$0249$lcssa = $30;$39 = $31;
      break;
     }
    }
   }
  } while(0);
  $34 = $$0249$lcssa;
  $35 = $21;
  $36 = (($34) - ($35))|0;
  if ($10) {
   _out_95($0,$21,$36);
  }
  $37 = ($36|0)==(0);
  if (!($37)) {
   $$0269$phi = $$0269;$$0243 = $36;$$0247 = $$1248;$21 = $39;$$0269 = $$0269$phi;
   continue;
  }
  $38 = ((($39)) + 1|0);
  $40 = HEAP8[$38>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($39)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($39)) + 3|0);
   $$377 = $44 ? $45 : $38;
   $$$0269 = $44 ? 1 : $$0269;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$0253 = $isdigittmp$;$$1270 = $$$0269;$storemerge = $$377;
  } else {
   $$0253 = -1;$$1270 = $$0269;$storemerge = $38;
  }
  HEAP32[$5>>2] = $storemerge;
  $46 = HEAP8[$storemerge>>0]|0;
  $47 = $46 << 24 >> 24;
  $48 = (($47) + -32)|0;
  $49 = ($48>>>0)<(32);
  L24: do {
   if ($49) {
    $$0262311 = 0;$329 = $46;$51 = $48;$storemerge273310 = $storemerge;
    while(1) {
     $50 = 1 << $51;
     $52 = $50 & 75913;
     $53 = ($52|0)==(0);
     if ($53) {
      $$0262$lcssa = $$0262311;$$lcssa295 = $329;$62 = $storemerge273310;
      break L24;
     }
     $54 = $50 | $$0262311;
     $55 = ((($storemerge273310)) + 1|0);
     HEAP32[$5>>2] = $55;
     $56 = HEAP8[$55>>0]|0;
     $57 = $56 << 24 >> 24;
     $58 = (($57) + -32)|0;
     $59 = ($58>>>0)<(32);
     if ($59) {
      $$0262311 = $54;$329 = $56;$51 = $58;$storemerge273310 = $55;
     } else {
      $$0262$lcssa = $54;$$lcssa295 = $56;$62 = $55;
      break;
     }
    }
   } else {
    $$0262$lcssa = 0;$$lcssa295 = $46;$62 = $storemerge;
   }
  } while(0);
  $60 = ($$lcssa295<<24>>24)==(42);
  if ($60) {
   $61 = ((($62)) + 1|0);
   $63 = HEAP8[$61>>0]|0;
   $64 = $63 << 24 >> 24;
   $isdigittmp276 = (($64) + -48)|0;
   $isdigit277 = ($isdigittmp276>>>0)<(10);
   if ($isdigit277) {
    $65 = ((($62)) + 2|0);
    $66 = HEAP8[$65>>0]|0;
    $67 = ($66<<24>>24)==(36);
    if ($67) {
     $68 = (($4) + ($isdigittmp276<<2)|0);
     HEAP32[$68>>2] = 10;
     $69 = HEAP8[$61>>0]|0;
     $70 = $69 << 24 >> 24;
     $71 = (($70) + -48)|0;
     $72 = (($3) + ($71<<3)|0);
     $73 = $72;
     $74 = $73;
     $75 = HEAP32[$74>>2]|0;
     $76 = (($73) + 4)|0;
     $77 = $76;
     $78 = HEAP32[$77>>2]|0;
     $79 = ((($62)) + 3|0);
     $$0259 = $75;$$2271 = 1;$storemerge278 = $79;
    } else {
     label = 23;
    }
   } else {
    label = 23;
   }
   if ((label|0) == 23) {
    label = 0;
    $80 = ($$1270|0)==(0);
    if (!($80)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $81 = $arglist_current;
     $82 = ((0) + 4|0);
     $expanded4 = $82;
     $expanded = (($expanded4) - 1)|0;
     $83 = (($81) + ($expanded))|0;
     $84 = ((0) + 4|0);
     $expanded8 = $84;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $85 = $83 & $expanded6;
     $86 = $85;
     $87 = HEAP32[$86>>2]|0;
     $arglist_next = ((($86)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $$0259 = $87;$$2271 = 0;$storemerge278 = $61;
    } else {
     $$0259 = 0;$$2271 = 0;$storemerge278 = $61;
    }
   }
   HEAP32[$5>>2] = $storemerge278;
   $88 = ($$0259|0)<(0);
   $89 = $$0262$lcssa | 8192;
   $90 = (0 - ($$0259))|0;
   $$$0262 = $88 ? $89 : $$0262$lcssa;
   $$$0259 = $88 ? $90 : $$0259;
   $$1260 = $$$0259;$$1263 = $$$0262;$$3272 = $$2271;$94 = $storemerge278;
  } else {
   $91 = (_getint_96($5)|0);
   $92 = ($91|0)<(0);
   if ($92) {
    $$0 = -1;
    break;
   }
   $$pre346 = HEAP32[$5>>2]|0;
   $$1260 = $91;$$1263 = $$0262$lcssa;$$3272 = $$1270;$94 = $$pre346;
  }
  $93 = HEAP8[$94>>0]|0;
  $95 = ($93<<24>>24)==(46);
  do {
   if ($95) {
    $96 = ((($94)) + 1|0);
    $97 = HEAP8[$96>>0]|0;
    $98 = ($97<<24>>24)==(42);
    if (!($98)) {
     $125 = ((($94)) + 1|0);
     HEAP32[$5>>2] = $125;
     $126 = (_getint_96($5)|0);
     $$pre347$pre = HEAP32[$5>>2]|0;
     $$0254 = $126;$$pre347 = $$pre347$pre;
     break;
    }
    $99 = ((($94)) + 2|0);
    $100 = HEAP8[$99>>0]|0;
    $101 = $100 << 24 >> 24;
    $isdigittmp274 = (($101) + -48)|0;
    $isdigit275 = ($isdigittmp274>>>0)<(10);
    if ($isdigit275) {
     $102 = ((($94)) + 3|0);
     $103 = HEAP8[$102>>0]|0;
     $104 = ($103<<24>>24)==(36);
     if ($104) {
      $105 = (($4) + ($isdigittmp274<<2)|0);
      HEAP32[$105>>2] = 10;
      $106 = HEAP8[$99>>0]|0;
      $107 = $106 << 24 >> 24;
      $108 = (($107) + -48)|0;
      $109 = (($3) + ($108<<3)|0);
      $110 = $109;
      $111 = $110;
      $112 = HEAP32[$111>>2]|0;
      $113 = (($110) + 4)|0;
      $114 = $113;
      $115 = HEAP32[$114>>2]|0;
      $116 = ((($94)) + 4|0);
      HEAP32[$5>>2] = $116;
      $$0254 = $112;$$pre347 = $116;
      break;
     }
    }
    $117 = ($$3272|0)==(0);
    if (!($117)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $118 = $arglist_current2;
     $119 = ((0) + 4|0);
     $expanded11 = $119;
     $expanded10 = (($expanded11) - 1)|0;
     $120 = (($118) + ($expanded10))|0;
     $121 = ((0) + 4|0);
     $expanded15 = $121;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $122 = $120 & $expanded13;
     $123 = $122;
     $124 = HEAP32[$123>>2]|0;
     $arglist_next3 = ((($123)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $330 = $124;
    } else {
     $330 = 0;
    }
    HEAP32[$5>>2] = $99;
    $$0254 = $330;$$pre347 = $99;
   } else {
    $$0254 = -1;$$pre347 = $94;
   }
  } while(0);
  $$0252 = 0;$128 = $$pre347;
  while(1) {
   $127 = HEAP8[$128>>0]|0;
   $129 = $127 << 24 >> 24;
   $130 = (($129) + -65)|0;
   $131 = ($130>>>0)>(57);
   if ($131) {
    $$0 = -1;
    break L1;
   }
   $132 = ((($128)) + 1|0);
   HEAP32[$5>>2] = $132;
   $133 = HEAP8[$128>>0]|0;
   $134 = $133 << 24 >> 24;
   $135 = (($134) + -65)|0;
   $136 = ((32824 + (($$0252*58)|0)|0) + ($135)|0);
   $137 = HEAP8[$136>>0]|0;
   $138 = $137&255;
   $139 = (($138) + -1)|0;
   $140 = ($139>>>0)<(8);
   if ($140) {
    $$0252 = $138;$128 = $132;
   } else {
    break;
   }
  }
  $141 = ($137<<24>>24)==(0);
  if ($141) {
   $$0 = -1;
   break;
  }
  $142 = ($137<<24>>24)==(19);
  $143 = ($$0253|0)>(-1);
  do {
   if ($142) {
    if ($143) {
     $$0 = -1;
     break L1;
    } else {
     label = 49;
    }
   } else {
    if ($143) {
     $144 = (($4) + ($$0253<<2)|0);
     HEAP32[$144>>2] = $138;
     $145 = (($3) + ($$0253<<3)|0);
     $146 = $145;
     $147 = $146;
     $148 = HEAP32[$147>>2]|0;
     $149 = (($146) + 4)|0;
     $150 = $149;
     $151 = HEAP32[$150>>2]|0;
     $152 = $6;
     $153 = $152;
     HEAP32[$153>>2] = $148;
     $154 = (($152) + 4)|0;
     $155 = $154;
     HEAP32[$155>>2] = $151;
     label = 49;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg_98($6,$138,$2);
   }
  } while(0);
  if ((label|0) == 49) {
   label = 0;
   if (!($10)) {
    $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
    continue;
   }
  }
  $156 = HEAP8[$128>>0]|0;
  $157 = $156 << 24 >> 24;
  $158 = ($$0252|0)!=(0);
  $159 = $157 & 15;
  $160 = ($159|0)==(3);
  $or$cond281 = $158 & $160;
  $161 = $157 & -33;
  $$0235 = $or$cond281 ? $161 : $157;
  $162 = $$1263 & 8192;
  $163 = ($162|0)==(0);
  $164 = $$1263 & -65537;
  $$1263$ = $163 ? $$1263 : $164;
  L71: do {
   switch ($$0235|0) {
   case 110:  {
    $trunc = $$0252&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $171 = HEAP32[$6>>2]|0;
     HEAP32[$171>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 1:  {
     $172 = HEAP32[$6>>2]|0;
     HEAP32[$172>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 2:  {
     $173 = ($$1248|0)<(0);
     $174 = $173 << 31 >> 31;
     $175 = HEAP32[$6>>2]|0;
     $176 = $175;
     $177 = $176;
     HEAP32[$177>>2] = $$1248;
     $178 = (($176) + 4)|0;
     $179 = $178;
     HEAP32[$179>>2] = $174;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 3:  {
     $180 = $$1248&65535;
     $181 = HEAP32[$6>>2]|0;
     HEAP16[$181>>1] = $180;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 4:  {
     $182 = $$1248&255;
     $183 = HEAP32[$6>>2]|0;
     HEAP8[$183>>0] = $182;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 6:  {
     $184 = HEAP32[$6>>2]|0;
     HEAP32[$184>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 7:  {
     $185 = ($$1248|0)<(0);
     $186 = $185 << 31 >> 31;
     $187 = HEAP32[$6>>2]|0;
     $188 = $187;
     $189 = $188;
     HEAP32[$189>>2] = $$1248;
     $190 = (($188) + 4)|0;
     $191 = $190;
     HEAP32[$191>>2] = $186;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    default: {
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $192 = ($$0254>>>0)>(8);
    $193 = $192 ? $$0254 : 8;
    $194 = $$1263$ | 8;
    $$1236 = 120;$$1255 = $193;$$3265 = $194;
    label = 61;
    break;
   }
   case 88: case 120:  {
    $$1236 = $$0235;$$1255 = $$0254;$$3265 = $$1263$;
    label = 61;
    break;
   }
   case 111:  {
    $210 = $6;
    $211 = $210;
    $212 = HEAP32[$211>>2]|0;
    $213 = (($210) + 4)|0;
    $214 = $213;
    $215 = HEAP32[$214>>2]|0;
    $216 = (_fmt_o($212,$215,$11)|0);
    $217 = $$1263$ & 8;
    $218 = ($217|0)==(0);
    $219 = $216;
    $220 = (($12) - ($219))|0;
    $221 = ($$0254|0)>($220|0);
    $222 = (($220) + 1)|0;
    $223 = $218 | $221;
    $$0254$$0254$ = $223 ? $$0254 : $222;
    $$0228 = $216;$$1233 = 0;$$1238 = 33288;$$2256 = $$0254$$0254$;$$4266 = $$1263$;$247 = $212;$249 = $215;
    label = 67;
    break;
   }
   case 105: case 100:  {
    $224 = $6;
    $225 = $224;
    $226 = HEAP32[$225>>2]|0;
    $227 = (($224) + 4)|0;
    $228 = $227;
    $229 = HEAP32[$228>>2]|0;
    $230 = ($229|0)<(0);
    if ($230) {
     $231 = (_i64Subtract(0,0,($226|0),($229|0))|0);
     $232 = tempRet0;
     $233 = $6;
     $234 = $233;
     HEAP32[$234>>2] = $231;
     $235 = (($233) + 4)|0;
     $236 = $235;
     HEAP32[$236>>2] = $232;
     $$0232 = 1;$$0237 = 33288;$242 = $231;$243 = $232;
     label = 66;
     break L71;
    } else {
     $237 = $$1263$ & 2048;
     $238 = ($237|0)==(0);
     $239 = $$1263$ & 1;
     $240 = ($239|0)==(0);
     $$ = $240 ? 33288 : (33290);
     $$$ = $238 ? $$ : (33289);
     $241 = $$1263$ & 2049;
     $narrow = ($241|0)!=(0);
     $$284$ = $narrow&1;
     $$0232 = $$284$;$$0237 = $$$;$242 = $226;$243 = $229;
     label = 66;
     break L71;
    }
    break;
   }
   case 117:  {
    $165 = $6;
    $166 = $165;
    $167 = HEAP32[$166>>2]|0;
    $168 = (($165) + 4)|0;
    $169 = $168;
    $170 = HEAP32[$169>>2]|0;
    $$0232 = 0;$$0237 = 33288;$242 = $167;$243 = $170;
    label = 66;
    break;
   }
   case 99:  {
    $259 = $6;
    $260 = $259;
    $261 = HEAP32[$260>>2]|0;
    $262 = (($259) + 4)|0;
    $263 = $262;
    $264 = HEAP32[$263>>2]|0;
    $265 = $261&255;
    HEAP8[$13>>0] = $265;
    $$2 = $13;$$2234 = 0;$$2239 = 33288;$$2251 = $11;$$5 = 1;$$6268 = $164;
    break;
   }
   case 109:  {
    $266 = (___errno_location()|0);
    $267 = HEAP32[$266>>2]|0;
    $268 = (_strerror($267)|0);
    $$1 = $268;
    label = 71;
    break;
   }
   case 115:  {
    $269 = HEAP32[$6>>2]|0;
    $270 = ($269|0)!=(0|0);
    $271 = $270 ? $269 : 33298;
    $$1 = $271;
    label = 71;
    break;
   }
   case 67:  {
    $278 = $6;
    $279 = $278;
    $280 = HEAP32[$279>>2]|0;
    $281 = (($278) + 4)|0;
    $282 = $281;
    $283 = HEAP32[$282>>2]|0;
    HEAP32[$8>>2] = $280;
    HEAP32[$14>>2] = 0;
    HEAP32[$6>>2] = $8;
    $$4258355 = -1;$331 = $8;
    label = 75;
    break;
   }
   case 83:  {
    $$pre349 = HEAP32[$6>>2]|0;
    $284 = ($$0254|0)==(0);
    if ($284) {
     _pad($0,32,$$1260,0,$$1263$);
     $$0240$lcssa357 = 0;
     label = 84;
    } else {
     $$4258355 = $$0254;$331 = $$pre349;
     label = 75;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $306 = +HEAPF64[$6>>3];
    $307 = (_fmt_fp($0,$306,$$1260,$$0254,$$1263$,$$0235)|0);
    $$0243 = $307;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
    continue L1;
    break;
   }
   default: {
    $$2 = $21;$$2234 = 0;$$2239 = 33288;$$2251 = $11;$$5 = $$0254;$$6268 = $$1263$;
   }
   }
  } while(0);
  L95: do {
   if ((label|0) == 61) {
    label = 0;
    $195 = $6;
    $196 = $195;
    $197 = HEAP32[$196>>2]|0;
    $198 = (($195) + 4)|0;
    $199 = $198;
    $200 = HEAP32[$199>>2]|0;
    $201 = $$1236 & 32;
    $202 = (_fmt_x($197,$200,$11,$201)|0);
    $203 = ($197|0)==(0);
    $204 = ($200|0)==(0);
    $205 = $203 & $204;
    $206 = $$3265 & 8;
    $207 = ($206|0)==(0);
    $or$cond283 = $207 | $205;
    $208 = $$1236 >> 4;
    $209 = (33288 + ($208)|0);
    $$289 = $or$cond283 ? 33288 : $209;
    $$290 = $or$cond283 ? 0 : 2;
    $$0228 = $202;$$1233 = $$290;$$1238 = $$289;$$2256 = $$1255;$$4266 = $$3265;$247 = $197;$249 = $200;
    label = 67;
   }
   else if ((label|0) == 66) {
    label = 0;
    $244 = (_fmt_u($242,$243,$11)|0);
    $$0228 = $244;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $$1263$;$247 = $242;$249 = $243;
    label = 67;
   }
   else if ((label|0) == 71) {
    label = 0;
    $272 = (_memchr($$1,0,$$0254)|0);
    $273 = ($272|0)==(0|0);
    $274 = $272;
    $275 = $$1;
    $276 = (($274) - ($275))|0;
    $277 = (($$1) + ($$0254)|0);
    $$3257 = $273 ? $$0254 : $276;
    $$1250 = $273 ? $277 : $272;
    $$2 = $$1;$$2234 = 0;$$2239 = 33288;$$2251 = $$1250;$$5 = $$3257;$$6268 = $164;
   }
   else if ((label|0) == 75) {
    label = 0;
    $$0229322 = $331;$$0240321 = 0;$$1244320 = 0;
    while(1) {
     $285 = HEAP32[$$0229322>>2]|0;
     $286 = ($285|0)==(0);
     if ($286) {
      $$0240$lcssa = $$0240321;$$2245 = $$1244320;
      break;
     }
     $287 = (_wctomb($9,$285)|0);
     $288 = ($287|0)<(0);
     $289 = (($$4258355) - ($$0240321))|0;
     $290 = ($287>>>0)>($289>>>0);
     $or$cond286 = $288 | $290;
     if ($or$cond286) {
      $$0240$lcssa = $$0240321;$$2245 = $287;
      break;
     }
     $291 = ((($$0229322)) + 4|0);
     $292 = (($287) + ($$0240321))|0;
     $293 = ($$4258355>>>0)>($292>>>0);
     if ($293) {
      $$0229322 = $291;$$0240321 = $292;$$1244320 = $287;
     } else {
      $$0240$lcssa = $292;$$2245 = $287;
      break;
     }
    }
    $294 = ($$2245|0)<(0);
    if ($294) {
     $$0 = -1;
     break L1;
    }
    _pad($0,32,$$1260,$$0240$lcssa,$$1263$);
    $295 = ($$0240$lcssa|0)==(0);
    if ($295) {
     $$0240$lcssa357 = 0;
     label = 84;
    } else {
     $$1230333 = $331;$$1241332 = 0;
     while(1) {
      $296 = HEAP32[$$1230333>>2]|0;
      $297 = ($296|0)==(0);
      if ($297) {
       $$0240$lcssa357 = $$0240$lcssa;
       label = 84;
       break L95;
      }
      $298 = (_wctomb($9,$296)|0);
      $299 = (($298) + ($$1241332))|0;
      $300 = ($299|0)>($$0240$lcssa|0);
      if ($300) {
       $$0240$lcssa357 = $$0240$lcssa;
       label = 84;
       break L95;
      }
      $301 = ((($$1230333)) + 4|0);
      _out_95($0,$9,$298);
      $302 = ($299>>>0)<($$0240$lcssa>>>0);
      if ($302) {
       $$1230333 = $301;$$1241332 = $299;
      } else {
       $$0240$lcssa357 = $$0240$lcssa;
       label = 84;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 67) {
   label = 0;
   $245 = ($$2256|0)>(-1);
   $246 = $$4266 & -65537;
   $$$4266 = $245 ? $246 : $$4266;
   $248 = ($247|0)!=(0);
   $250 = ($249|0)!=(0);
   $251 = $248 | $250;
   $252 = ($$2256|0)!=(0);
   $or$cond = $252 | $251;
   $253 = $$0228;
   $254 = (($12) - ($253))|0;
   $255 = $251 ^ 1;
   $256 = $255&1;
   $257 = (($256) + ($254))|0;
   $258 = ($$2256|0)>($257|0);
   $$2256$ = $258 ? $$2256 : $257;
   $$2256$$$2256 = $or$cond ? $$2256$ : $$2256;
   $$0228$ = $or$cond ? $$0228 : $11;
   $$2 = $$0228$;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $11;$$5 = $$2256$$$2256;$$6268 = $$$4266;
  }
  else if ((label|0) == 84) {
   label = 0;
   $303 = $$1263$ ^ 8192;
   _pad($0,32,$$1260,$$0240$lcssa357,$303);
   $304 = ($$1260|0)>($$0240$lcssa357|0);
   $305 = $304 ? $$1260 : $$0240$lcssa357;
   $$0243 = $305;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
   continue;
  }
  $308 = $$2251;
  $309 = $$2;
  $310 = (($308) - ($309))|0;
  $311 = ($$5|0)<($310|0);
  $$$5 = $311 ? $310 : $$5;
  $312 = (($$$5) + ($$2234))|0;
  $313 = ($$1260|0)<($312|0);
  $$2261 = $313 ? $312 : $$1260;
  _pad($0,32,$$2261,$312,$$6268);
  _out_95($0,$$2239,$$2234);
  $314 = $$6268 ^ 65536;
  _pad($0,48,$$2261,$312,$314);
  _pad($0,48,$$$5,$310,0);
  _out_95($0,$$2,$310);
  $315 = $$6268 ^ 8192;
  _pad($0,32,$$2261,$312,$315);
  $$0243 = $$2261;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
 }
 L114: do {
  if ((label|0) == 87) {
   $316 = ($0|0)==(0|0);
   if ($316) {
    $317 = ($$0269|0)==(0);
    if ($317) {
     $$0 = 0;
    } else {
     $$2242305 = 1;
     while(1) {
      $318 = (($4) + ($$2242305<<2)|0);
      $319 = HEAP32[$318>>2]|0;
      $320 = ($319|0)==(0);
      if ($320) {
       $$3303 = $$2242305;
       break;
      }
      $321 = (($3) + ($$2242305<<3)|0);
      _pop_arg_98($321,$319,$2);
      $322 = (($$2242305) + 1)|0;
      $323 = ($322|0)<(10);
      if ($323) {
       $$2242305 = $322;
      } else {
       $$0 = 1;
       break L114;
      }
     }
     while(1) {
      $326 = (($4) + ($$3303<<2)|0);
      $327 = HEAP32[$326>>2]|0;
      $328 = ($327|0)==(0);
      $324 = (($$3303) + 1)|0;
      if (!($328)) {
       $$0 = -1;
       break L114;
      }
      $325 = ($324|0)<(10);
      if ($325) {
       $$3303 = $324;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out_95($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint_96($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$06 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit5 = 0, $isdigittmp = 0, $isdigittmp4 = 0, $isdigittmp7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $isdigittmp4 = (($3) + -48)|0;
 $isdigit5 = ($isdigittmp4>>>0)<(10);
 if ($isdigit5) {
  $$06 = 0;$7 = $1;$isdigittmp7 = $isdigittmp4;
  while(1) {
   $4 = ($$06*10)|0;
   $5 = (($isdigittmp7) + ($4))|0;
   $6 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $6;
   $8 = HEAP8[$6>>0]|0;
   $9 = $8 << 24 >> 24;
   $isdigittmp = (($9) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $$06 = $5;$7 = $6;$isdigittmp7 = $isdigittmp;
   } else {
    $$0$lcssa = $5;
    break;
   }
  }
 } else {
  $$0$lcssa = 0;
 }
 return ($$0$lcssa|0);
}
function _pop_arg_98($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (33340 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___uremdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = $10&255;
   $13 = $12 | 48;
   $14 = ((($$0914)) + -1|0);
   HEAP8[$14>>0] = $13;
   $15 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $16 = tempRet0;
   $17 = ($9>>>0)>(9);
   $18 = ($8>>>0)>(4294967295);
   $19 = ($9|0)==(9);
   $20 = $19 & $18;
   $21 = $17 | $20;
   if ($21) {
    $$0914 = $14;$8 = $15;$9 = $16;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $15;$$09$lcssa = $14;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $22 = ($$010$lcssa$off0|0)==(0);
 if ($22) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $23 = (($$012>>>0) % 10)&-1;
   $24 = $23 | 48;
   $25 = $24&255;
   $26 = ((($$111)) + -1|0);
   HEAP8[$26>>0] = $25;
   $27 = (($$012>>>0) / 10)&-1;
   $28 = ($$012>>>0)<(10);
   if ($28) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = $27;$$111 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = ($9>>>0)<(256);
  $11 = $10 ? $9 : 256;
  _memset(($5|0),($1|0),($11|0))|0;
  $12 = ($9>>>0)>(255);
  if ($12) {
   $13 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out_95($0,$5,256);
    $14 = (($$011) + -256)|0;
    $15 = ($14>>>0)>(255);
    if ($15) {
     $$011 = $14;
    } else {
     break;
    }
   }
   $16 = $13 & 255;
   $$0$lcssa = $16;
  } else {
   $$0$lcssa = $9;
  }
  _out_95($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$ = 0, $$$$559 = 0.0, $$$3484 = 0, $$$3484691 = 0, $$$3484692 = 0, $$$3501 = 0, $$$4502 = 0, $$$542 = 0.0, $$$559 = 0.0, $$0 = 0, $$0463$lcssa = 0, $$0463584 = 0, $$0464594 = 0, $$0471 = 0.0, $$0479 = 0, $$0487642 = 0, $$0488 = 0, $$0488653 = 0, $$0488655 = 0;
 var $$0496$$9 = 0, $$0497654 = 0, $$0498 = 0, $$0509582 = 0.0, $$0510 = 0, $$0511 = 0, $$0514637 = 0, $$0520 = 0, $$0521 = 0, $$0521$ = 0, $$0523 = 0, $$0525 = 0, $$0527 = 0, $$0527629 = 0, $$0527631 = 0, $$0530636 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0;
 var $$1480 = 0, $$1482$lcssa = 0, $$1482661 = 0, $$1489641 = 0, $$1499$lcssa = 0, $$1499660 = 0, $$1508583 = 0, $$1512$lcssa = 0, $$1512607 = 0, $$1515 = 0, $$1524 = 0, $$1526 = 0, $$1528614 = 0, $$1531$lcssa = 0, $$1531630 = 0, $$1598 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2476$$547 = 0;
 var $$2476$$549 = 0, $$2483$ph = 0, $$2500 = 0, $$2513 = 0, $$2516618 = 0, $$2529 = 0, $$2532617 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484648 = 0, $$3501$lcssa = 0, $$3501647 = 0, $$3533613 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478590 = 0, $$4492 = 0, $$4502 = 0, $$4518 = 0;
 var $$5$lcssa = 0, $$534$ = 0, $$539 = 0, $$539$ = 0, $$542 = 0.0, $$546 = 0, $$548 = 0, $$5486$lcssa = 0, $$5486623 = 0, $$5493597 = 0, $$5519$ph = 0, $$555 = 0, $$556 = 0, $$559 = 0.0, $$5602 = 0, $$6 = 0, $$6494589 = 0, $$7495601 = 0, $$7505 = 0, $$7505$ = 0;
 var $$7505$ph = 0, $$8 = 0, $$9$ph = 0, $$lcssa673 = 0, $$neg = 0, $$neg567 = 0, $$pn = 0, $$pn566 = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi690Z2D = 0, $$pre689 = 0, $$sink545$lcssa = 0, $$sink545622 = 0, $$sink562 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0;
 var $230 = 0, $231 = 0.0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;
 var $narrow = 0, $not$ = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond537 = 0, $or$cond541 = 0, $or$cond544 = 0, $or$cond554 = 0, $or$cond6 = 0, $scevgep684 = 0, $scevgep684685 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = sp + 524|0;
 $9 = $8;
 $10 = sp + 512|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 (___DOUBLE_BITS($1)|0);
 $12 = tempRet0;
 $13 = ($12|0)<(0);
 if ($13) {
  $14 = -$1;
  $$0471 = $14;$$0520 = 1;$$0521 = 33305;
 } else {
  $15 = $4 & 2048;
  $16 = ($15|0)==(0);
  $17 = $4 & 1;
  $18 = ($17|0)==(0);
  $$ = $18 ? (33306) : (33311);
  $$$ = $16 ? $$ : (33308);
  $19 = $4 & 2049;
  $narrow = ($19|0)!=(0);
  $$534$ = $narrow&1;
  $$0471 = $1;$$0520 = $$534$;$$0521 = $$$;
 }
 (___DOUBLE_BITS($$0471)|0);
 $20 = tempRet0;
 $21 = $20 & 2146435072;
 $22 = ($21>>>0)<(2146435072);
 $23 = (0)<(0);
 $24 = ($21|0)==(2146435072);
 $25 = $24 & $23;
 $26 = $22 | $25;
 do {
  if ($26) {
   $35 = (+_frexpl($$0471,$7));
   $36 = $35 * 2.0;
   $37 = $36 != 0.0;
   if ($37) {
    $38 = HEAP32[$7>>2]|0;
    $39 = (($38) + -1)|0;
    HEAP32[$7>>2] = $39;
   }
   $40 = $5 | 32;
   $41 = ($40|0)==(97);
   if ($41) {
    $42 = $5 & 32;
    $43 = ($42|0)==(0);
    $44 = ((($$0521)) + 9|0);
    $$0521$ = $43 ? $$0521 : $44;
    $45 = $$0520 | 2;
    $46 = ($3>>>0)>(11);
    $47 = (12 - ($3))|0;
    $48 = ($47|0)==(0);
    $49 = $46 | $48;
    do {
     if ($49) {
      $$1472 = $36;
     } else {
      $$0509582 = 8.0;$$1508583 = $47;
      while(1) {
       $50 = (($$1508583) + -1)|0;
       $51 = $$0509582 * 16.0;
       $52 = ($50|0)==(0);
       if ($52) {
        break;
       } else {
        $$0509582 = $51;$$1508583 = $50;
       }
      }
      $53 = HEAP8[$$0521$>>0]|0;
      $54 = ($53<<24>>24)==(45);
      if ($54) {
       $55 = -$36;
       $56 = $55 - $51;
       $57 = $51 + $56;
       $58 = -$57;
       $$1472 = $58;
       break;
      } else {
       $59 = $36 + $51;
       $60 = $59 - $51;
       $$1472 = $60;
       break;
      }
     }
    } while(0);
    $61 = HEAP32[$7>>2]|0;
    $62 = ($61|0)<(0);
    $63 = (0 - ($61))|0;
    $64 = $62 ? $63 : $61;
    $65 = ($64|0)<(0);
    $66 = $65 << 31 >> 31;
    $67 = (_fmt_u($64,$66,$11)|0);
    $68 = ($67|0)==($11|0);
    if ($68) {
     $69 = ((($10)) + 11|0);
     HEAP8[$69>>0] = 48;
     $$0511 = $69;
    } else {
     $$0511 = $67;
    }
    $70 = $61 >> 31;
    $71 = $70 & 2;
    $72 = (($71) + 43)|0;
    $73 = $72&255;
    $74 = ((($$0511)) + -1|0);
    HEAP8[$74>>0] = $73;
    $75 = (($5) + 15)|0;
    $76 = $75&255;
    $77 = ((($$0511)) + -2|0);
    HEAP8[$77>>0] = $76;
    $notrhs = ($3|0)<(1);
    $78 = $4 & 8;
    $79 = ($78|0)==(0);
    $$0523 = $8;$$2473 = $$1472;
    while(1) {
     $80 = (~~(($$2473)));
     $81 = (33340 + ($80)|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = $82&255;
     $84 = $83 | $42;
     $85 = $84&255;
     $86 = ((($$0523)) + 1|0);
     HEAP8[$$0523>>0] = $85;
     $87 = (+($80|0));
     $88 = $$2473 - $87;
     $89 = $88 * 16.0;
     $90 = $86;
     $91 = (($90) - ($9))|0;
     $92 = ($91|0)==(1);
     if ($92) {
      $notlhs = $89 == 0.0;
      $or$cond3$not = $notrhs & $notlhs;
      $or$cond = $79 & $or$cond3$not;
      if ($or$cond) {
       $$1524 = $86;
      } else {
       $93 = ((($$0523)) + 2|0);
       HEAP8[$86>>0] = 46;
       $$1524 = $93;
      }
     } else {
      $$1524 = $86;
     }
     $94 = $89 != 0.0;
     if ($94) {
      $$0523 = $$1524;$$2473 = $89;
     } else {
      break;
     }
    }
    $95 = ($3|0)!=(0);
    $96 = $77;
    $97 = $11;
    $98 = $$1524;
    $99 = (($98) - ($9))|0;
    $100 = (($97) - ($96))|0;
    $101 = (($99) + -2)|0;
    $102 = ($101|0)<($3|0);
    $or$cond537 = $95 & $102;
    $103 = (($3) + 2)|0;
    $$pn = $or$cond537 ? $103 : $99;
    $$0525 = (($100) + ($45))|0;
    $104 = (($$0525) + ($$pn))|0;
    _pad($0,32,$2,$104,$4);
    _out_95($0,$$0521$,$45);
    $105 = $4 ^ 65536;
    _pad($0,48,$2,$104,$105);
    _out_95($0,$8,$99);
    $106 = (($$pn) - ($99))|0;
    _pad($0,48,$106,0,0);
    _out_95($0,$77,$100);
    $107 = $4 ^ 8192;
    _pad($0,32,$2,$104,$107);
    $$sink562 = $104;
    break;
   }
   $108 = ($3|0)<(0);
   $$539 = $108 ? 6 : $3;
   if ($37) {
    $109 = $36 * 268435456.0;
    $110 = HEAP32[$7>>2]|0;
    $111 = (($110) + -28)|0;
    HEAP32[$7>>2] = $111;
    $$3 = $109;$$pr = $111;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $36;$$pr = $$pre;
   }
   $112 = ($$pr|0)<(0);
   $113 = ((($6)) + 288|0);
   $$556 = $112 ? $6 : $113;
   $$0498 = $$556;$$4 = $$3;
   while(1) {
    $114 = (~~(($$4))>>>0);
    HEAP32[$$0498>>2] = $114;
    $115 = ((($$0498)) + 4|0);
    $116 = (+($114>>>0));
    $117 = $$4 - $116;
    $118 = $117 * 1.0E+9;
    $119 = $118 != 0.0;
    if ($119) {
     $$0498 = $115;$$4 = $118;
    } else {
     break;
    }
   }
   $120 = ($$pr|0)>(0);
   if ($120) {
    $$1482661 = $$556;$$1499660 = $115;$121 = $$pr;
    while(1) {
     $122 = ($121|0)<(29);
     $123 = $122 ? $121 : 29;
     $$0488653 = ((($$1499660)) + -4|0);
     $124 = ($$0488653>>>0)<($$1482661>>>0);
     if ($124) {
      $$2483$ph = $$1482661;
     } else {
      $$0488655 = $$0488653;$$0497654 = 0;
      while(1) {
       $125 = HEAP32[$$0488655>>2]|0;
       $126 = (_bitshift64Shl(($125|0),0,($123|0))|0);
       $127 = tempRet0;
       $128 = (_i64Add(($126|0),($127|0),($$0497654|0),0)|0);
       $129 = tempRet0;
       $130 = (___uremdi3(($128|0),($129|0),1000000000,0)|0);
       $131 = tempRet0;
       HEAP32[$$0488655>>2] = $130;
       $132 = (___udivdi3(($128|0),($129|0),1000000000,0)|0);
       $133 = tempRet0;
       $$0488 = ((($$0488655)) + -4|0);
       $134 = ($$0488>>>0)<($$1482661>>>0);
       if ($134) {
        break;
       } else {
        $$0488655 = $$0488;$$0497654 = $132;
       }
      }
      $135 = ($132|0)==(0);
      if ($135) {
       $$2483$ph = $$1482661;
      } else {
       $136 = ((($$1482661)) + -4|0);
       HEAP32[$136>>2] = $132;
       $$2483$ph = $136;
      }
     }
     $$2500 = $$1499660;
     while(1) {
      $137 = ($$2500>>>0)>($$2483$ph>>>0);
      if (!($137)) {
       break;
      }
      $138 = ((($$2500)) + -4|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ($139|0)==(0);
      if ($140) {
       $$2500 = $138;
      } else {
       break;
      }
     }
     $141 = HEAP32[$7>>2]|0;
     $142 = (($141) - ($123))|0;
     HEAP32[$7>>2] = $142;
     $143 = ($142|0)>(0);
     if ($143) {
      $$1482661 = $$2483$ph;$$1499660 = $$2500;$121 = $142;
     } else {
      $$1482$lcssa = $$2483$ph;$$1499$lcssa = $$2500;$$pr564 = $142;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$556;$$1499$lcssa = $115;$$pr564 = $$pr;
   }
   $144 = ($$pr564|0)<(0);
   if ($144) {
    $145 = (($$539) + 25)|0;
    $146 = (($145|0) / 9)&-1;
    $147 = (($146) + 1)|0;
    $148 = ($40|0)==(102);
    $$3484648 = $$1482$lcssa;$$3501647 = $$1499$lcssa;$150 = $$pr564;
    while(1) {
     $149 = (0 - ($150))|0;
     $151 = ($149|0)<(9);
     $152 = $151 ? $149 : 9;
     $153 = ($$3484648>>>0)<($$3501647>>>0);
     if ($153) {
      $157 = 1 << $152;
      $158 = (($157) + -1)|0;
      $159 = 1000000000 >>> $152;
      $$0487642 = 0;$$1489641 = $$3484648;
      while(1) {
       $160 = HEAP32[$$1489641>>2]|0;
       $161 = $160 & $158;
       $162 = $160 >>> $152;
       $163 = (($162) + ($$0487642))|0;
       HEAP32[$$1489641>>2] = $163;
       $164 = Math_imul($161, $159)|0;
       $165 = ((($$1489641)) + 4|0);
       $166 = ($165>>>0)<($$3501647>>>0);
       if ($166) {
        $$0487642 = $164;$$1489641 = $165;
       } else {
        break;
       }
      }
      $167 = HEAP32[$$3484648>>2]|0;
      $168 = ($167|0)==(0);
      $169 = ((($$3484648)) + 4|0);
      $$$3484 = $168 ? $169 : $$3484648;
      $170 = ($164|0)==(0);
      if ($170) {
       $$$3484692 = $$$3484;$$4502 = $$3501647;
      } else {
       $171 = ((($$3501647)) + 4|0);
       HEAP32[$$3501647>>2] = $164;
       $$$3484692 = $$$3484;$$4502 = $171;
      }
     } else {
      $154 = HEAP32[$$3484648>>2]|0;
      $155 = ($154|0)==(0);
      $156 = ((($$3484648)) + 4|0);
      $$$3484691 = $155 ? $156 : $$3484648;
      $$$3484692 = $$$3484691;$$4502 = $$3501647;
     }
     $172 = $148 ? $$556 : $$$3484692;
     $173 = $$4502;
     $174 = $172;
     $175 = (($173) - ($174))|0;
     $176 = $175 >> 2;
     $177 = ($176|0)>($147|0);
     $178 = (($172) + ($147<<2)|0);
     $$$4502 = $177 ? $178 : $$4502;
     $179 = HEAP32[$7>>2]|0;
     $180 = (($179) + ($152))|0;
     HEAP32[$7>>2] = $180;
     $181 = ($180|0)<(0);
     if ($181) {
      $$3484648 = $$$3484692;$$3501647 = $$$4502;$150 = $180;
     } else {
      $$3484$lcssa = $$$3484692;$$3501$lcssa = $$$4502;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$3501$lcssa = $$1499$lcssa;
   }
   $182 = ($$3484$lcssa>>>0)<($$3501$lcssa>>>0);
   $183 = $$556;
   if ($182) {
    $184 = $$3484$lcssa;
    $185 = (($183) - ($184))|0;
    $186 = $185 >> 2;
    $187 = ($186*9)|0;
    $188 = HEAP32[$$3484$lcssa>>2]|0;
    $189 = ($188>>>0)<(10);
    if ($189) {
     $$1515 = $187;
    } else {
     $$0514637 = $187;$$0530636 = 10;
     while(1) {
      $190 = ($$0530636*10)|0;
      $191 = (($$0514637) + 1)|0;
      $192 = ($188>>>0)<($190>>>0);
      if ($192) {
       $$1515 = $191;
       break;
      } else {
       $$0514637 = $191;$$0530636 = $190;
      }
     }
    }
   } else {
    $$1515 = 0;
   }
   $193 = ($40|0)!=(102);
   $194 = $193 ? $$1515 : 0;
   $195 = (($$539) - ($194))|0;
   $196 = ($40|0)==(103);
   $197 = ($$539|0)!=(0);
   $198 = $197 & $196;
   $$neg = $198 << 31 >> 31;
   $199 = (($195) + ($$neg))|0;
   $200 = $$3501$lcssa;
   $201 = (($200) - ($183))|0;
   $202 = $201 >> 2;
   $203 = ($202*9)|0;
   $204 = (($203) + -9)|0;
   $205 = ($199|0)<($204|0);
   if ($205) {
    $206 = ((($$556)) + 4|0);
    $207 = (($199) + 9216)|0;
    $208 = (($207|0) / 9)&-1;
    $209 = (($208) + -1024)|0;
    $210 = (($206) + ($209<<2)|0);
    $211 = (($207|0) % 9)&-1;
    $$0527629 = (($211) + 1)|0;
    $212 = ($$0527629|0)<(9);
    if ($212) {
     $$0527631 = $$0527629;$$1531630 = 10;
     while(1) {
      $213 = ($$1531630*10)|0;
      $$0527 = (($$0527631) + 1)|0;
      $exitcond = ($$0527|0)==(9);
      if ($exitcond) {
       $$1531$lcssa = $213;
       break;
      } else {
       $$0527631 = $$0527;$$1531630 = $213;
      }
     }
    } else {
     $$1531$lcssa = 10;
    }
    $214 = HEAP32[$210>>2]|0;
    $215 = (($214>>>0) % ($$1531$lcssa>>>0))&-1;
    $216 = ($215|0)==(0);
    $217 = ((($210)) + 4|0);
    $218 = ($217|0)==($$3501$lcssa|0);
    $or$cond541 = $218 & $216;
    if ($or$cond541) {
     $$4492 = $210;$$4518 = $$1515;$$8 = $$3484$lcssa;
    } else {
     $219 = (($214>>>0) / ($$1531$lcssa>>>0))&-1;
     $220 = $219 & 1;
     $221 = ($220|0)==(0);
     $$542 = $221 ? 9007199254740992.0 : 9007199254740994.0;
     $222 = (($$1531$lcssa|0) / 2)&-1;
     $223 = ($215>>>0)<($222>>>0);
     $224 = ($215|0)==($222|0);
     $or$cond544 = $218 & $224;
     $$559 = $or$cond544 ? 1.0 : 1.5;
     $$$559 = $223 ? 0.5 : $$559;
     $225 = ($$0520|0)==(0);
     if ($225) {
      $$1467 = $$$559;$$1469 = $$542;
     } else {
      $226 = HEAP8[$$0521>>0]|0;
      $227 = ($226<<24>>24)==(45);
      $228 = -$$542;
      $229 = -$$$559;
      $$$542 = $227 ? $228 : $$542;
      $$$$559 = $227 ? $229 : $$$559;
      $$1467 = $$$$559;$$1469 = $$$542;
     }
     $230 = (($214) - ($215))|0;
     HEAP32[$210>>2] = $230;
     $231 = $$1469 + $$1467;
     $232 = $231 != $$1469;
     if ($232) {
      $233 = (($230) + ($$1531$lcssa))|0;
      HEAP32[$210>>2] = $233;
      $234 = ($233>>>0)>(999999999);
      if ($234) {
       $$5486623 = $$3484$lcssa;$$sink545622 = $210;
       while(1) {
        $235 = ((($$sink545622)) + -4|0);
        HEAP32[$$sink545622>>2] = 0;
        $236 = ($235>>>0)<($$5486623>>>0);
        if ($236) {
         $237 = ((($$5486623)) + -4|0);
         HEAP32[$237>>2] = 0;
         $$6 = $237;
        } else {
         $$6 = $$5486623;
        }
        $238 = HEAP32[$235>>2]|0;
        $239 = (($238) + 1)|0;
        HEAP32[$235>>2] = $239;
        $240 = ($239>>>0)>(999999999);
        if ($240) {
         $$5486623 = $$6;$$sink545622 = $235;
        } else {
         $$5486$lcssa = $$6;$$sink545$lcssa = $235;
         break;
        }
       }
      } else {
       $$5486$lcssa = $$3484$lcssa;$$sink545$lcssa = $210;
      }
      $241 = $$5486$lcssa;
      $242 = (($183) - ($241))|0;
      $243 = $242 >> 2;
      $244 = ($243*9)|0;
      $245 = HEAP32[$$5486$lcssa>>2]|0;
      $246 = ($245>>>0)<(10);
      if ($246) {
       $$4492 = $$sink545$lcssa;$$4518 = $244;$$8 = $$5486$lcssa;
      } else {
       $$2516618 = $244;$$2532617 = 10;
       while(1) {
        $247 = ($$2532617*10)|0;
        $248 = (($$2516618) + 1)|0;
        $249 = ($245>>>0)<($247>>>0);
        if ($249) {
         $$4492 = $$sink545$lcssa;$$4518 = $248;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2516618 = $248;$$2532617 = $247;
        }
       }
      }
     } else {
      $$4492 = $210;$$4518 = $$1515;$$8 = $$3484$lcssa;
     }
    }
    $250 = ((($$4492)) + 4|0);
    $251 = ($$3501$lcssa>>>0)>($250>>>0);
    $$$3501 = $251 ? $250 : $$3501$lcssa;
    $$5519$ph = $$4518;$$7505$ph = $$$3501;$$9$ph = $$8;
   } else {
    $$5519$ph = $$1515;$$7505$ph = $$3501$lcssa;$$9$ph = $$3484$lcssa;
   }
   $$7505 = $$7505$ph;
   while(1) {
    $252 = ($$7505>>>0)>($$9$ph>>>0);
    if (!($252)) {
     $$lcssa673 = 0;
     break;
    }
    $253 = ((($$7505)) + -4|0);
    $254 = HEAP32[$253>>2]|0;
    $255 = ($254|0)==(0);
    if ($255) {
     $$7505 = $253;
    } else {
     $$lcssa673 = 1;
     break;
    }
   }
   $256 = (0 - ($$5519$ph))|0;
   do {
    if ($196) {
     $not$ = $197 ^ 1;
     $257 = $not$&1;
     $$539$ = (($257) + ($$539))|0;
     $258 = ($$539$|0)>($$5519$ph|0);
     $259 = ($$5519$ph|0)>(-5);
     $or$cond6 = $258 & $259;
     if ($or$cond6) {
      $260 = (($5) + -1)|0;
      $$neg567 = (($$539$) + -1)|0;
      $261 = (($$neg567) - ($$5519$ph))|0;
      $$0479 = $260;$$2476 = $261;
     } else {
      $262 = (($5) + -2)|0;
      $263 = (($$539$) + -1)|0;
      $$0479 = $262;$$2476 = $263;
     }
     $264 = $4 & 8;
     $265 = ($264|0)==(0);
     if ($265) {
      if ($$lcssa673) {
       $266 = ((($$7505)) + -4|0);
       $267 = HEAP32[$266>>2]|0;
       $268 = ($267|0)==(0);
       if ($268) {
        $$2529 = 9;
       } else {
        $269 = (($267>>>0) % 10)&-1;
        $270 = ($269|0)==(0);
        if ($270) {
         $$1528614 = 0;$$3533613 = 10;
         while(1) {
          $271 = ($$3533613*10)|0;
          $272 = (($$1528614) + 1)|0;
          $273 = (($267>>>0) % ($271>>>0))&-1;
          $274 = ($273|0)==(0);
          if ($274) {
           $$1528614 = $272;$$3533613 = $271;
          } else {
           $$2529 = $272;
           break;
          }
         }
        } else {
         $$2529 = 0;
        }
       }
      } else {
       $$2529 = 9;
      }
      $275 = $$0479 | 32;
      $276 = ($275|0)==(102);
      $277 = $$7505;
      $278 = (($277) - ($183))|0;
      $279 = $278 >> 2;
      $280 = ($279*9)|0;
      $281 = (($280) + -9)|0;
      if ($276) {
       $282 = (($281) - ($$2529))|0;
       $283 = ($282|0)>(0);
       $$546 = $283 ? $282 : 0;
       $284 = ($$2476|0)<($$546|0);
       $$2476$$547 = $284 ? $$2476 : $$546;
       $$1480 = $$0479;$$3477 = $$2476$$547;$$pre$phi690Z2D = 0;
       break;
      } else {
       $285 = (($281) + ($$5519$ph))|0;
       $286 = (($285) - ($$2529))|0;
       $287 = ($286|0)>(0);
       $$548 = $287 ? $286 : 0;
       $288 = ($$2476|0)<($$548|0);
       $$2476$$549 = $288 ? $$2476 : $$548;
       $$1480 = $$0479;$$3477 = $$2476$$549;$$pre$phi690Z2D = 0;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;$$pre$phi690Z2D = $264;
     }
    } else {
     $$pre689 = $4 & 8;
     $$1480 = $5;$$3477 = $$539;$$pre$phi690Z2D = $$pre689;
    }
   } while(0);
   $289 = $$3477 | $$pre$phi690Z2D;
   $290 = ($289|0)!=(0);
   $291 = $290&1;
   $292 = $$1480 | 32;
   $293 = ($292|0)==(102);
   if ($293) {
    $294 = ($$5519$ph|0)>(0);
    $295 = $294 ? $$5519$ph : 0;
    $$2513 = 0;$$pn566 = $295;
   } else {
    $296 = ($$5519$ph|0)<(0);
    $297 = $296 ? $256 : $$5519$ph;
    $298 = ($297|0)<(0);
    $299 = $298 << 31 >> 31;
    $300 = (_fmt_u($297,$299,$11)|0);
    $301 = $11;
    $302 = $300;
    $303 = (($301) - ($302))|0;
    $304 = ($303|0)<(2);
    if ($304) {
     $$1512607 = $300;
     while(1) {
      $305 = ((($$1512607)) + -1|0);
      HEAP8[$305>>0] = 48;
      $306 = $305;
      $307 = (($301) - ($306))|0;
      $308 = ($307|0)<(2);
      if ($308) {
       $$1512607 = $305;
      } else {
       $$1512$lcssa = $305;
       break;
      }
     }
    } else {
     $$1512$lcssa = $300;
    }
    $309 = $$5519$ph >> 31;
    $310 = $309 & 2;
    $311 = (($310) + 43)|0;
    $312 = $311&255;
    $313 = ((($$1512$lcssa)) + -1|0);
    HEAP8[$313>>0] = $312;
    $314 = $$1480&255;
    $315 = ((($$1512$lcssa)) + -2|0);
    HEAP8[$315>>0] = $314;
    $316 = $315;
    $317 = (($301) - ($316))|0;
    $$2513 = $315;$$pn566 = $317;
   }
   $318 = (($$0520) + 1)|0;
   $319 = (($318) + ($$3477))|0;
   $$1526 = (($319) + ($291))|0;
   $320 = (($$1526) + ($$pn566))|0;
   _pad($0,32,$2,$320,$4);
   _out_95($0,$$0521,$$0520);
   $321 = $4 ^ 65536;
   _pad($0,48,$2,$320,$321);
   if ($293) {
    $322 = ($$9$ph>>>0)>($$556>>>0);
    $$0496$$9 = $322 ? $$556 : $$9$ph;
    $323 = ((($8)) + 9|0);
    $324 = $323;
    $325 = ((($8)) + 8|0);
    $$5493597 = $$0496$$9;
    while(1) {
     $326 = HEAP32[$$5493597>>2]|0;
     $327 = (_fmt_u($326,0,$323)|0);
     $328 = ($$5493597|0)==($$0496$$9|0);
     if ($328) {
      $334 = ($327|0)==($323|0);
      if ($334) {
       HEAP8[$325>>0] = 48;
       $$1465 = $325;
      } else {
       $$1465 = $327;
      }
     } else {
      $329 = ($327>>>0)>($8>>>0);
      if ($329) {
       $330 = $327;
       $331 = (($330) - ($9))|0;
       _memset(($8|0),48,($331|0))|0;
       $$0464594 = $327;
       while(1) {
        $332 = ((($$0464594)) + -1|0);
        $333 = ($332>>>0)>($8>>>0);
        if ($333) {
         $$0464594 = $332;
        } else {
         $$1465 = $332;
         break;
        }
       }
      } else {
       $$1465 = $327;
      }
     }
     $335 = $$1465;
     $336 = (($324) - ($335))|0;
     _out_95($0,$$1465,$336);
     $337 = ((($$5493597)) + 4|0);
     $338 = ($337>>>0)>($$556>>>0);
     if ($338) {
      break;
     } else {
      $$5493597 = $337;
     }
    }
    $339 = ($289|0)==(0);
    if (!($339)) {
     _out_95($0,33356,1);
    }
    $340 = ($337>>>0)<($$7505>>>0);
    $341 = ($$3477|0)>(0);
    $342 = $340 & $341;
    if ($342) {
     $$4478590 = $$3477;$$6494589 = $337;
     while(1) {
      $343 = HEAP32[$$6494589>>2]|0;
      $344 = (_fmt_u($343,0,$323)|0);
      $345 = ($344>>>0)>($8>>>0);
      if ($345) {
       $346 = $344;
       $347 = (($346) - ($9))|0;
       _memset(($8|0),48,($347|0))|0;
       $$0463584 = $344;
       while(1) {
        $348 = ((($$0463584)) + -1|0);
        $349 = ($348>>>0)>($8>>>0);
        if ($349) {
         $$0463584 = $348;
        } else {
         $$0463$lcssa = $348;
         break;
        }
       }
      } else {
       $$0463$lcssa = $344;
      }
      $350 = ($$4478590|0)<(9);
      $351 = $350 ? $$4478590 : 9;
      _out_95($0,$$0463$lcssa,$351);
      $352 = ((($$6494589)) + 4|0);
      $353 = (($$4478590) + -9)|0;
      $354 = ($352>>>0)<($$7505>>>0);
      $355 = ($$4478590|0)>(9);
      $356 = $354 & $355;
      if ($356) {
       $$4478590 = $353;$$6494589 = $352;
      } else {
       $$4478$lcssa = $353;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $357 = (($$4478$lcssa) + 9)|0;
    _pad($0,48,$357,9,0);
   } else {
    $358 = ((($$9$ph)) + 4|0);
    $$7505$ = $$lcssa673 ? $$7505 : $358;
    $359 = ($$3477|0)>(-1);
    if ($359) {
     $360 = ((($8)) + 9|0);
     $361 = ($$pre$phi690Z2D|0)==(0);
     $362 = $360;
     $363 = (0 - ($9))|0;
     $364 = ((($8)) + 8|0);
     $$5602 = $$3477;$$7495601 = $$9$ph;
     while(1) {
      $365 = HEAP32[$$7495601>>2]|0;
      $366 = (_fmt_u($365,0,$360)|0);
      $367 = ($366|0)==($360|0);
      if ($367) {
       HEAP8[$364>>0] = 48;
       $$0 = $364;
      } else {
       $$0 = $366;
      }
      $368 = ($$7495601|0)==($$9$ph|0);
      do {
       if ($368) {
        $372 = ((($$0)) + 1|0);
        _out_95($0,$$0,1);
        $373 = ($$5602|0)<(1);
        $or$cond554 = $361 & $373;
        if ($or$cond554) {
         $$2 = $372;
         break;
        }
        _out_95($0,33356,1);
        $$2 = $372;
       } else {
        $369 = ($$0>>>0)>($8>>>0);
        if (!($369)) {
         $$2 = $$0;
         break;
        }
        $scevgep684 = (($$0) + ($363)|0);
        $scevgep684685 = $scevgep684;
        _memset(($8|0),48,($scevgep684685|0))|0;
        $$1598 = $$0;
        while(1) {
         $370 = ((($$1598)) + -1|0);
         $371 = ($370>>>0)>($8>>>0);
         if ($371) {
          $$1598 = $370;
         } else {
          $$2 = $370;
          break;
         }
        }
       }
      } while(0);
      $374 = $$2;
      $375 = (($362) - ($374))|0;
      $376 = ($$5602|0)>($375|0);
      $377 = $376 ? $375 : $$5602;
      _out_95($0,$$2,$377);
      $378 = (($$5602) - ($375))|0;
      $379 = ((($$7495601)) + 4|0);
      $380 = ($379>>>0)<($$7505$>>>0);
      $381 = ($378|0)>(-1);
      $382 = $380 & $381;
      if ($382) {
       $$5602 = $378;$$7495601 = $379;
      } else {
       $$5$lcssa = $378;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $383 = (($$5$lcssa) + 18)|0;
    _pad($0,48,$383,18,0);
    $384 = $11;
    $385 = $$2513;
    $386 = (($384) - ($385))|0;
    _out_95($0,$$2513,$386);
   }
   $387 = $4 ^ 8192;
   _pad($0,32,$2,$320,$387);
   $$sink562 = $320;
  } else {
   $27 = $5 & 32;
   $28 = ($27|0)!=(0);
   $29 = $28 ? 33324 : 33328;
   $30 = ($$0471 != $$0471) | (0.0 != 0.0);
   $31 = $28 ? 33332 : 33336;
   $$0510 = $30 ? $31 : $29;
   $32 = (($$0520) + 3)|0;
   $33 = $4 & -65537;
   _pad($0,32,$2,$32,$33);
   _out_95($0,$$0521,$$0520);
   _out_95($0,$$0510,3);
   $34 = $4 ^ 8192;
   _pad($0,32,$2,$32,$34);
   $$sink562 = $32;
  }
 } while(0);
 $388 = ($$sink562|0)<($2|0);
 $$555 = $388 ? $2 : $$sink562;
 STACKTOP = sp;return ($$555|0);
}
function ___DOUBLE_BITS($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_324()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $not$ = ($9|0)==(0|0);
   if ($not$) {
    $10 = $1 & -128;
    $11 = ($10|0)==(57216);
    if ($11) {
     $13 = $1&255;
     HEAP8[$0>>0] = $13;
     $$0 = 1;
     break;
    } else {
     $12 = (___errno_location()|0);
     HEAP32[$12>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $14 = ($1>>>0)<(2048);
   if ($14) {
    $15 = $1 >>> 6;
    $16 = $15 | 192;
    $17 = $16&255;
    $18 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $17;
    $19 = $1 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    HEAP8[$18>>0] = $21;
    $$0 = 2;
    break;
   }
   $22 = ($1>>>0)<(55296);
   $23 = $1 & -8192;
   $24 = ($23|0)==(57344);
   $or$cond = $22 | $24;
   if ($or$cond) {
    $25 = $1 >>> 12;
    $26 = $25 | 224;
    $27 = $26&255;
    $28 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $27;
    $29 = $1 >>> 6;
    $30 = $29 & 63;
    $31 = $30 | 128;
    $32 = $31&255;
    $33 = ((($0)) + 2|0);
    HEAP8[$28>>0] = $32;
    $34 = $1 & 63;
    $35 = $34 | 128;
    $36 = $35&255;
    HEAP8[$33>>0] = $36;
    $$0 = 3;
    break;
   }
   $37 = (($1) + -65536)|0;
   $38 = ($37>>>0)<(1048576);
   if ($38) {
    $39 = $1 >>> 18;
    $40 = $39 | 240;
    $41 = $40&255;
    $42 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $41;
    $43 = $1 >>> 12;
    $44 = $43 & 63;
    $45 = $44 | 128;
    $46 = $45&255;
    $47 = ((($0)) + 2|0);
    HEAP8[$42>>0] = $46;
    $48 = $1 >>> 6;
    $49 = $48 & 63;
    $50 = $49 | 128;
    $51 = $50&255;
    $52 = ((($0)) + 3|0);
    HEAP8[$47>>0] = $51;
    $53 = $1 & 63;
    $54 = $53 | 128;
    $55 = $54&255;
    HEAP8[$52>>0] = $55;
    $$0 = 4;
    break;
   } else {
    $56 = (___errno_location()|0);
    HEAP32[$56>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_324() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$038 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre47 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 15]($2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)>(-1);
   L10: do {
    if ($20) {
     $$038 = $1;
     while(1) {
      $21 = ($$038|0)==(0);
      if ($21) {
       $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
       break L10;
      }
      $22 = (($$038) + -1)|0;
      $23 = (($0) + ($22)|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = ($24<<24>>24)==(10);
      if ($25) {
       break;
      } else {
       $$038 = $22;
      }
     }
     $26 = ((($2)) + 36|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (FUNCTION_TABLE_iiii[$27 & 15]($2,$0,$$038)|0);
     $29 = ($28>>>0)<($$038>>>0);
     if ($29) {
      $$1 = $28;
      break L5;
     }
     $30 = (($0) + ($$038)|0);
     $$042 = (($1) - ($$038))|0;
     $$pre47 = HEAP32[$9>>2]|0;
     $$139 = $$038;$$141 = $30;$$143 = $$042;$31 = $$pre47;
    } else {
     $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
    }
   } while(0);
   _memcpy(($31|0),($$141|0),($$143|0))|0;
   $32 = HEAP32[$9>>2]|0;
   $33 = (($32) + ($$143)|0);
   HEAP32[$9>>2] = $33;
   $34 = (($$139) + ($$143))|0;
   $$1 = $34;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = ((($0)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($14) + ($18)|0);
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6;
 $8 = (($4) - ($7))|0;
 $9 = ($8>>>0)>($2>>>0);
 $$ = $9 ? $2 : $8;
 _memcpy(($6|0),($1|0),($$|0))|0;
 $10 = HEAP32[$5>>2]|0;
 $11 = (($10) + ($$)|0);
 HEAP32[$5>>2] = $11;
 return ($2|0);
}
function _fprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vfprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((33552|0));
 return (33560|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((33552|0));
 return;
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[2516]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[2516]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $25 = $17;
     } else {
      $25 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $26 = ($25|0)==(0);
     if (!($26)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (FUNCTION_TABLE_iiii[$7 & 15]($0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (FUNCTION_TABLE_iiii[$19 & 15]($0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0192$i = 0, $$$0193$i = 0, $$$4236$i = 0, $$$4351$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0189$i = 0, $$0192$lcssa$i = 0, $$01928$i = 0, $$0193$lcssa$i = 0, $$01937$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0;
 var $$0212$i$i = 0, $$024371$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0289$i$i = 0, $$0295$i$i = 0, $$0296$i$i = 0, $$0342$i = 0, $$0344$i = 0, $$0345$i = 0, $$0347$i = 0, $$0353$i = 0, $$0358$i = 0, $$0359$$i = 0, $$0359$i = 0, $$0361$i = 0, $$0362$i = 0, $$0368$i = 0, $$1196$i = 0, $$1198$i = 0;
 var $$124470$i = 0, $$1291$i$i = 0, $$1293$i$i = 0, $$1343$i = 0, $$1348$i = 0, $$1363$i = 0, $$1370$i = 0, $$1374$i = 0, $$2234253237$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2355$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3350$i = 0, $$3372$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$415$i = 0;
 var $$4236$i = 0, $$4351$lcssa$i = 0, $$435114$i = 0, $$4357$$4$i = 0, $$4357$ph$i = 0, $$435713$i = 0, $$723948$i = 0, $$749$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i210 = 0, $$pre$i212 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi11$i$iZ2D = 0, $$pre$phiZ2D = 0;
 var $$pre10$i$i = 0, $$sink1$i = 0, $$sink1$i$i = 0, $$sink16$i = 0, $$sink2$i = 0, $$sink2$i204 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;
 var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;
 var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;
 var $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i208 = 0, $exitcond$i$i = 0, $not$$i = 0, $not$$i$i = 0, $not$$i17$i = 0, $not$$i209 = 0, $not$$i216 = 0, $not$1$i = 0, $not$1$i203 = 0, $not$5$i = 0, $not$7$i$i = 0, $not$8$i = 0, $not$9$i = 0;
 var $or$cond$i = 0, $or$cond$i214 = 0, $or$cond1$i = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond2$i215 = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[8391]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (33604 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    do {
     if ($21) {
      $22 = 1 << $14;
      $23 = $22 ^ -1;
      $24 = $8 & $23;
      HEAP32[8391] = $24;
     } else {
      $25 = HEAP32[(33580)>>2]|0;
      $26 = ($20>>>0)<($25>>>0);
      if ($26) {
       _abort();
       // unreachable;
      }
      $27 = ((($20)) + 12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==($18|0);
      if ($29) {
       HEAP32[$27>>2] = $16;
       HEAP32[$17>>2] = $20;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $30 = $14 << 3;
    $31 = $30 | 3;
    $32 = ((($18)) + 4|0);
    HEAP32[$32>>2] = $31;
    $33 = (($18) + ($30)|0);
    $34 = ((($33)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = $35 | 1;
    HEAP32[$34>>2] = $36;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = HEAP32[(33572)>>2]|0;
   $38 = ($6>>>0)>($37>>>0);
   if ($38) {
    $39 = ($9|0)==(0);
    if (!($39)) {
     $40 = $9 << $7;
     $41 = 2 << $7;
     $42 = (0 - ($41))|0;
     $43 = $41 | $42;
     $44 = $40 & $43;
     $45 = (0 - ($44))|0;
     $46 = $44 & $45;
     $47 = (($46) + -1)|0;
     $48 = $47 >>> 12;
     $49 = $48 & 16;
     $50 = $47 >>> $49;
     $51 = $50 >>> 5;
     $52 = $51 & 8;
     $53 = $52 | $49;
     $54 = $50 >>> $52;
     $55 = $54 >>> 2;
     $56 = $55 & 4;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 2;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = $62 >>> 1;
     $64 = $63 & 1;
     $65 = $61 | $64;
     $66 = $62 >>> $64;
     $67 = (($65) + ($66))|0;
     $68 = $67 << 1;
     $69 = (33604 + ($68<<2)|0);
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($69|0)==($73|0);
     do {
      if ($74) {
       $75 = 1 << $67;
       $76 = $75 ^ -1;
       $77 = $8 & $76;
       HEAP32[8391] = $77;
       $98 = $77;
      } else {
       $78 = HEAP32[(33580)>>2]|0;
       $79 = ($73>>>0)<($78>>>0);
       if ($79) {
        _abort();
        // unreachable;
       }
       $80 = ((($73)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)==($71|0);
       if ($82) {
        HEAP32[$80>>2] = $69;
        HEAP32[$70>>2] = $73;
        $98 = $8;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $83 = $67 << 3;
     $84 = (($83) - ($6))|0;
     $85 = $6 | 3;
     $86 = ((($71)) + 4|0);
     HEAP32[$86>>2] = $85;
     $87 = (($71) + ($6)|0);
     $88 = $84 | 1;
     $89 = ((($87)) + 4|0);
     HEAP32[$89>>2] = $88;
     $90 = (($87) + ($84)|0);
     HEAP32[$90>>2] = $84;
     $91 = ($37|0)==(0);
     if (!($91)) {
      $92 = HEAP32[(33584)>>2]|0;
      $93 = $37 >>> 3;
      $94 = $93 << 1;
      $95 = (33604 + ($94<<2)|0);
      $96 = 1 << $93;
      $97 = $98 & $96;
      $99 = ($97|0)==(0);
      if ($99) {
       $100 = $98 | $96;
       HEAP32[8391] = $100;
       $$pre = ((($95)) + 8|0);
       $$0199 = $95;$$pre$phiZ2D = $$pre;
      } else {
       $101 = ((($95)) + 8|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = HEAP32[(33580)>>2]|0;
       $104 = ($102>>>0)<($103>>>0);
       if ($104) {
        _abort();
        // unreachable;
       } else {
        $$0199 = $102;$$pre$phiZ2D = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $92;
      $105 = ((($$0199)) + 12|0);
      HEAP32[$105>>2] = $92;
      $106 = ((($92)) + 8|0);
      HEAP32[$106>>2] = $$0199;
      $107 = ((($92)) + 12|0);
      HEAP32[$107>>2] = $95;
     }
     HEAP32[(33572)>>2] = $84;
     HEAP32[(33584)>>2] = $87;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    $108 = HEAP32[(33568)>>2]|0;
    $109 = ($108|0)==(0);
    if ($109) {
     $$0197 = $6;
    } else {
     $110 = (0 - ($108))|0;
     $111 = $108 & $110;
     $112 = (($111) + -1)|0;
     $113 = $112 >>> 12;
     $114 = $113 & 16;
     $115 = $112 >>> $114;
     $116 = $115 >>> 5;
     $117 = $116 & 8;
     $118 = $117 | $114;
     $119 = $115 >>> $117;
     $120 = $119 >>> 2;
     $121 = $120 & 4;
     $122 = $118 | $121;
     $123 = $119 >>> $121;
     $124 = $123 >>> 1;
     $125 = $124 & 2;
     $126 = $122 | $125;
     $127 = $123 >>> $125;
     $128 = $127 >>> 1;
     $129 = $128 & 1;
     $130 = $126 | $129;
     $131 = $127 >>> $129;
     $132 = (($130) + ($131))|0;
     $133 = (33868 + ($132<<2)|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($134)) + 4|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = $136 & -8;
     $138 = (($137) - ($6))|0;
     $139 = ((($134)) + 16|0);
     $140 = HEAP32[$139>>2]|0;
     $not$5$i = ($140|0)==(0|0);
     $$sink16$i = $not$5$i&1;
     $141 = (((($134)) + 16|0) + ($$sink16$i<<2)|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($142|0)==(0|0);
     if ($143) {
      $$0192$lcssa$i = $134;$$0193$lcssa$i = $138;
     } else {
      $$01928$i = $134;$$01937$i = $138;$145 = $142;
      while(1) {
       $144 = ((($145)) + 4|0);
       $146 = HEAP32[$144>>2]|0;
       $147 = $146 & -8;
       $148 = (($147) - ($6))|0;
       $149 = ($148>>>0)<($$01937$i>>>0);
       $$$0193$i = $149 ? $148 : $$01937$i;
       $$$0192$i = $149 ? $145 : $$01928$i;
       $150 = ((($145)) + 16|0);
       $151 = HEAP32[$150>>2]|0;
       $not$$i = ($151|0)==(0|0);
       $$sink1$i = $not$$i&1;
       $152 = (((($145)) + 16|0) + ($$sink1$i<<2)|0);
       $153 = HEAP32[$152>>2]|0;
       $154 = ($153|0)==(0|0);
       if ($154) {
        $$0192$lcssa$i = $$$0192$i;$$0193$lcssa$i = $$$0193$i;
        break;
       } else {
        $$01928$i = $$$0192$i;$$01937$i = $$$0193$i;$145 = $153;
       }
      }
     }
     $155 = HEAP32[(33580)>>2]|0;
     $156 = ($$0192$lcssa$i>>>0)<($155>>>0);
     if ($156) {
      _abort();
      // unreachable;
     }
     $157 = (($$0192$lcssa$i) + ($6)|0);
     $158 = ($$0192$lcssa$i>>>0)<($157>>>0);
     if (!($158)) {
      _abort();
      // unreachable;
     }
     $159 = ((($$0192$lcssa$i)) + 24|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ((($$0192$lcssa$i)) + 12|0);
     $162 = HEAP32[$161>>2]|0;
     $163 = ($162|0)==($$0192$lcssa$i|0);
     do {
      if ($163) {
       $173 = ((($$0192$lcssa$i)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $176 = ((($$0192$lcssa$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $$3$i = 0;
         break;
        } else {
         $$1196$i = $177;$$1198$i = $176;
        }
       } else {
        $$1196$i = $174;$$1198$i = $173;
       }
       while(1) {
        $179 = ((($$1196$i)) + 20|0);
        $180 = HEAP32[$179>>2]|0;
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $$1196$i = $180;$$1198$i = $179;
         continue;
        }
        $182 = ((($$1196$i)) + 16|0);
        $183 = HEAP32[$182>>2]|0;
        $184 = ($183|0)==(0|0);
        if ($184) {
         break;
        } else {
         $$1196$i = $183;$$1198$i = $182;
        }
       }
       $185 = ($$1198$i>>>0)<($155>>>0);
       if ($185) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$1198$i>>2] = 0;
        $$3$i = $$1196$i;
        break;
       }
      } else {
       $164 = ((($$0192$lcssa$i)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165>>>0)<($155>>>0);
       if ($166) {
        _abort();
        // unreachable;
       }
       $167 = ((($165)) + 12|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==($$0192$lcssa$i|0);
       if (!($169)) {
        _abort();
        // unreachable;
       }
       $170 = ((($162)) + 8|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==($$0192$lcssa$i|0);
       if ($172) {
        HEAP32[$167>>2] = $162;
        HEAP32[$170>>2] = $165;
        $$3$i = $162;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $186 = ($160|0)==(0|0);
     L73: do {
      if (!($186)) {
       $187 = ((($$0192$lcssa$i)) + 28|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = (33868 + ($188<<2)|0);
       $190 = HEAP32[$189>>2]|0;
       $191 = ($$0192$lcssa$i|0)==($190|0);
       do {
        if ($191) {
         HEAP32[$189>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $192 = 1 << $188;
          $193 = $192 ^ -1;
          $194 = $108 & $193;
          HEAP32[(33568)>>2] = $194;
          break L73;
         }
        } else {
         $195 = HEAP32[(33580)>>2]|0;
         $196 = ($160>>>0)<($195>>>0);
         if ($196) {
          _abort();
          // unreachable;
         } else {
          $197 = ((($160)) + 16|0);
          $198 = HEAP32[$197>>2]|0;
          $not$1$i = ($198|0)!=($$0192$lcssa$i|0);
          $$sink2$i = $not$1$i&1;
          $199 = (((($160)) + 16|0) + ($$sink2$i<<2)|0);
          HEAP32[$199>>2] = $$3$i;
          $200 = ($$3$i|0)==(0|0);
          if ($200) {
           break L73;
          } else {
           break;
          }
         }
        }
       } while(0);
       $201 = HEAP32[(33580)>>2]|0;
       $202 = ($$3$i>>>0)<($201>>>0);
       if ($202) {
        _abort();
        // unreachable;
       }
       $203 = ((($$3$i)) + 24|0);
       HEAP32[$203>>2] = $160;
       $204 = ((($$0192$lcssa$i)) + 16|0);
       $205 = HEAP32[$204>>2]|0;
       $206 = ($205|0)==(0|0);
       do {
        if (!($206)) {
         $207 = ($205>>>0)<($201>>>0);
         if ($207) {
          _abort();
          // unreachable;
         } else {
          $208 = ((($$3$i)) + 16|0);
          HEAP32[$208>>2] = $205;
          $209 = ((($205)) + 24|0);
          HEAP32[$209>>2] = $$3$i;
          break;
         }
        }
       } while(0);
       $210 = ((($$0192$lcssa$i)) + 20|0);
       $211 = HEAP32[$210>>2]|0;
       $212 = ($211|0)==(0|0);
       if (!($212)) {
        $213 = HEAP32[(33580)>>2]|0;
        $214 = ($211>>>0)<($213>>>0);
        if ($214) {
         _abort();
         // unreachable;
        } else {
         $215 = ((($$3$i)) + 20|0);
         HEAP32[$215>>2] = $211;
         $216 = ((($211)) + 24|0);
         HEAP32[$216>>2] = $$3$i;
         break;
        }
       }
      }
     } while(0);
     $217 = ($$0193$lcssa$i>>>0)<(16);
     if ($217) {
      $218 = (($$0193$lcssa$i) + ($6))|0;
      $219 = $218 | 3;
      $220 = ((($$0192$lcssa$i)) + 4|0);
      HEAP32[$220>>2] = $219;
      $221 = (($$0192$lcssa$i) + ($218)|0);
      $222 = ((($221)) + 4|0);
      $223 = HEAP32[$222>>2]|0;
      $224 = $223 | 1;
      HEAP32[$222>>2] = $224;
     } else {
      $225 = $6 | 3;
      $226 = ((($$0192$lcssa$i)) + 4|0);
      HEAP32[$226>>2] = $225;
      $227 = $$0193$lcssa$i | 1;
      $228 = ((($157)) + 4|0);
      HEAP32[$228>>2] = $227;
      $229 = (($157) + ($$0193$lcssa$i)|0);
      HEAP32[$229>>2] = $$0193$lcssa$i;
      $230 = ($37|0)==(0);
      if (!($230)) {
       $231 = HEAP32[(33584)>>2]|0;
       $232 = $37 >>> 3;
       $233 = $232 << 1;
       $234 = (33604 + ($233<<2)|0);
       $235 = 1 << $232;
       $236 = $8 & $235;
       $237 = ($236|0)==(0);
       if ($237) {
        $238 = $8 | $235;
        HEAP32[8391] = $238;
        $$pre$i = ((($234)) + 8|0);
        $$0189$i = $234;$$pre$phi$iZ2D = $$pre$i;
       } else {
        $239 = ((($234)) + 8|0);
        $240 = HEAP32[$239>>2]|0;
        $241 = HEAP32[(33580)>>2]|0;
        $242 = ($240>>>0)<($241>>>0);
        if ($242) {
         _abort();
         // unreachable;
        } else {
         $$0189$i = $240;$$pre$phi$iZ2D = $239;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $231;
       $243 = ((($$0189$i)) + 12|0);
       HEAP32[$243>>2] = $231;
       $244 = ((($231)) + 8|0);
       HEAP32[$244>>2] = $$0189$i;
       $245 = ((($231)) + 12|0);
       HEAP32[$245>>2] = $234;
      }
      HEAP32[(33572)>>2] = $$0193$lcssa$i;
      HEAP32[(33584)>>2] = $157;
     }
     $246 = ((($$0192$lcssa$i)) + 8|0);
     $$0 = $246;
     STACKTOP = sp;return ($$0|0);
    }
   } else {
    $$0197 = $6;
   }
  } else {
   $247 = ($0>>>0)>(4294967231);
   if ($247) {
    $$0197 = -1;
   } else {
    $248 = (($0) + 11)|0;
    $249 = $248 & -8;
    $250 = HEAP32[(33568)>>2]|0;
    $251 = ($250|0)==(0);
    if ($251) {
     $$0197 = $249;
    } else {
     $252 = (0 - ($249))|0;
     $253 = $248 >>> 8;
     $254 = ($253|0)==(0);
     if ($254) {
      $$0358$i = 0;
     } else {
      $255 = ($249>>>0)>(16777215);
      if ($255) {
       $$0358$i = 31;
      } else {
       $256 = (($253) + 1048320)|0;
       $257 = $256 >>> 16;
       $258 = $257 & 8;
       $259 = $253 << $258;
       $260 = (($259) + 520192)|0;
       $261 = $260 >>> 16;
       $262 = $261 & 4;
       $263 = $262 | $258;
       $264 = $259 << $262;
       $265 = (($264) + 245760)|0;
       $266 = $265 >>> 16;
       $267 = $266 & 2;
       $268 = $263 | $267;
       $269 = (14 - ($268))|0;
       $270 = $264 << $267;
       $271 = $270 >>> 15;
       $272 = (($269) + ($271))|0;
       $273 = $272 << 1;
       $274 = (($272) + 7)|0;
       $275 = $249 >>> $274;
       $276 = $275 & 1;
       $277 = $276 | $273;
       $$0358$i = $277;
      }
     }
     $278 = (33868 + ($$0358$i<<2)|0);
     $279 = HEAP32[$278>>2]|0;
     $280 = ($279|0)==(0|0);
     L117: do {
      if ($280) {
       $$2355$i = 0;$$3$i201 = 0;$$3350$i = $252;
       label = 81;
      } else {
       $281 = ($$0358$i|0)==(31);
       $282 = $$0358$i >>> 1;
       $283 = (25 - ($282))|0;
       $284 = $281 ? 0 : $283;
       $285 = $249 << $284;
       $$0342$i = 0;$$0347$i = $252;$$0353$i = $279;$$0359$i = $285;$$0362$i = 0;
       while(1) {
        $286 = ((($$0353$i)) + 4|0);
        $287 = HEAP32[$286>>2]|0;
        $288 = $287 & -8;
        $289 = (($288) - ($249))|0;
        $290 = ($289>>>0)<($$0347$i>>>0);
        if ($290) {
         $291 = ($289|0)==(0);
         if ($291) {
          $$415$i = $$0353$i;$$435114$i = 0;$$435713$i = $$0353$i;
          label = 85;
          break L117;
         } else {
          $$1343$i = $$0353$i;$$1348$i = $289;
         }
        } else {
         $$1343$i = $$0342$i;$$1348$i = $$0347$i;
        }
        $292 = ((($$0353$i)) + 20|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = $$0359$i >>> 31;
        $295 = (((($$0353$i)) + 16|0) + ($294<<2)|0);
        $296 = HEAP32[$295>>2]|0;
        $297 = ($293|0)==(0|0);
        $298 = ($293|0)==($296|0);
        $or$cond2$i = $297 | $298;
        $$1363$i = $or$cond2$i ? $$0362$i : $293;
        $299 = ($296|0)==(0|0);
        $not$8$i = $299 ^ 1;
        $300 = $not$8$i&1;
        $$0359$$i = $$0359$i << $300;
        if ($299) {
         $$2355$i = $$1363$i;$$3$i201 = $$1343$i;$$3350$i = $$1348$i;
         label = 81;
         break;
        } else {
         $$0342$i = $$1343$i;$$0347$i = $$1348$i;$$0353$i = $296;$$0359$i = $$0359$$i;$$0362$i = $$1363$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 81) {
      $301 = ($$2355$i|0)==(0|0);
      $302 = ($$3$i201|0)==(0|0);
      $or$cond$i = $301 & $302;
      if ($or$cond$i) {
       $303 = 2 << $$0358$i;
       $304 = (0 - ($303))|0;
       $305 = $303 | $304;
       $306 = $250 & $305;
       $307 = ($306|0)==(0);
       if ($307) {
        $$0197 = $249;
        break;
       }
       $308 = (0 - ($306))|0;
       $309 = $306 & $308;
       $310 = (($309) + -1)|0;
       $311 = $310 >>> 12;
       $312 = $311 & 16;
       $313 = $310 >>> $312;
       $314 = $313 >>> 5;
       $315 = $314 & 8;
       $316 = $315 | $312;
       $317 = $313 >>> $315;
       $318 = $317 >>> 2;
       $319 = $318 & 4;
       $320 = $316 | $319;
       $321 = $317 >>> $319;
       $322 = $321 >>> 1;
       $323 = $322 & 2;
       $324 = $320 | $323;
       $325 = $321 >>> $323;
       $326 = $325 >>> 1;
       $327 = $326 & 1;
       $328 = $324 | $327;
       $329 = $325 >>> $327;
       $330 = (($328) + ($329))|0;
       $331 = (33868 + ($330<<2)|0);
       $332 = HEAP32[$331>>2]|0;
       $$4$ph$i = 0;$$4357$ph$i = $332;
      } else {
       $$4$ph$i = $$3$i201;$$4357$ph$i = $$2355$i;
      }
      $333 = ($$4357$ph$i|0)==(0|0);
      if ($333) {
       $$4$lcssa$i = $$4$ph$i;$$4351$lcssa$i = $$3350$i;
      } else {
       $$415$i = $$4$ph$i;$$435114$i = $$3350$i;$$435713$i = $$4357$ph$i;
       label = 85;
      }
     }
     if ((label|0) == 85) {
      while(1) {
       label = 0;
       $334 = ((($$435713$i)) + 4|0);
       $335 = HEAP32[$334>>2]|0;
       $336 = $335 & -8;
       $337 = (($336) - ($249))|0;
       $338 = ($337>>>0)<($$435114$i>>>0);
       $$$4351$i = $338 ? $337 : $$435114$i;
       $$4357$$4$i = $338 ? $$435713$i : $$415$i;
       $339 = ((($$435713$i)) + 16|0);
       $340 = HEAP32[$339>>2]|0;
       $not$1$i203 = ($340|0)==(0|0);
       $$sink2$i204 = $not$1$i203&1;
       $341 = (((($$435713$i)) + 16|0) + ($$sink2$i204<<2)|0);
       $342 = HEAP32[$341>>2]|0;
       $343 = ($342|0)==(0|0);
       if ($343) {
        $$4$lcssa$i = $$4357$$4$i;$$4351$lcssa$i = $$$4351$i;
        break;
       } else {
        $$415$i = $$4357$$4$i;$$435114$i = $$$4351$i;$$435713$i = $342;
        label = 85;
       }
      }
     }
     $344 = ($$4$lcssa$i|0)==(0|0);
     if ($344) {
      $$0197 = $249;
     } else {
      $345 = HEAP32[(33572)>>2]|0;
      $346 = (($345) - ($249))|0;
      $347 = ($$4351$lcssa$i>>>0)<($346>>>0);
      if ($347) {
       $348 = HEAP32[(33580)>>2]|0;
       $349 = ($$4$lcssa$i>>>0)<($348>>>0);
       if ($349) {
        _abort();
        // unreachable;
       }
       $350 = (($$4$lcssa$i) + ($249)|0);
       $351 = ($$4$lcssa$i>>>0)<($350>>>0);
       if (!($351)) {
        _abort();
        // unreachable;
       }
       $352 = ((($$4$lcssa$i)) + 24|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ((($$4$lcssa$i)) + 12|0);
       $355 = HEAP32[$354>>2]|0;
       $356 = ($355|0)==($$4$lcssa$i|0);
       do {
        if ($356) {
         $366 = ((($$4$lcssa$i)) + 20|0);
         $367 = HEAP32[$366>>2]|0;
         $368 = ($367|0)==(0|0);
         if ($368) {
          $369 = ((($$4$lcssa$i)) + 16|0);
          $370 = HEAP32[$369>>2]|0;
          $371 = ($370|0)==(0|0);
          if ($371) {
           $$3372$i = 0;
           break;
          } else {
           $$1370$i = $370;$$1374$i = $369;
          }
         } else {
          $$1370$i = $367;$$1374$i = $366;
         }
         while(1) {
          $372 = ((($$1370$i)) + 20|0);
          $373 = HEAP32[$372>>2]|0;
          $374 = ($373|0)==(0|0);
          if (!($374)) {
           $$1370$i = $373;$$1374$i = $372;
           continue;
          }
          $375 = ((($$1370$i)) + 16|0);
          $376 = HEAP32[$375>>2]|0;
          $377 = ($376|0)==(0|0);
          if ($377) {
           break;
          } else {
           $$1370$i = $376;$$1374$i = $375;
          }
         }
         $378 = ($$1374$i>>>0)<($348>>>0);
         if ($378) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$1374$i>>2] = 0;
          $$3372$i = $$1370$i;
          break;
         }
        } else {
         $357 = ((($$4$lcssa$i)) + 8|0);
         $358 = HEAP32[$357>>2]|0;
         $359 = ($358>>>0)<($348>>>0);
         if ($359) {
          _abort();
          // unreachable;
         }
         $360 = ((($358)) + 12|0);
         $361 = HEAP32[$360>>2]|0;
         $362 = ($361|0)==($$4$lcssa$i|0);
         if (!($362)) {
          _abort();
          // unreachable;
         }
         $363 = ((($355)) + 8|0);
         $364 = HEAP32[$363>>2]|0;
         $365 = ($364|0)==($$4$lcssa$i|0);
         if ($365) {
          HEAP32[$360>>2] = $355;
          HEAP32[$363>>2] = $358;
          $$3372$i = $355;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $379 = ($353|0)==(0|0);
       L164: do {
        if ($379) {
         $470 = $250;
        } else {
         $380 = ((($$4$lcssa$i)) + 28|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = (33868 + ($381<<2)|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = ($$4$lcssa$i|0)==($383|0);
         do {
          if ($384) {
           HEAP32[$382>>2] = $$3372$i;
           $cond$i208 = ($$3372$i|0)==(0|0);
           if ($cond$i208) {
            $385 = 1 << $381;
            $386 = $385 ^ -1;
            $387 = $250 & $386;
            HEAP32[(33568)>>2] = $387;
            $470 = $387;
            break L164;
           }
          } else {
           $388 = HEAP32[(33580)>>2]|0;
           $389 = ($353>>>0)<($388>>>0);
           if ($389) {
            _abort();
            // unreachable;
           } else {
            $390 = ((($353)) + 16|0);
            $391 = HEAP32[$390>>2]|0;
            $not$$i209 = ($391|0)!=($$4$lcssa$i|0);
            $$sink3$i = $not$$i209&1;
            $392 = (((($353)) + 16|0) + ($$sink3$i<<2)|0);
            HEAP32[$392>>2] = $$3372$i;
            $393 = ($$3372$i|0)==(0|0);
            if ($393) {
             $470 = $250;
             break L164;
            } else {
             break;
            }
           }
          }
         } while(0);
         $394 = HEAP32[(33580)>>2]|0;
         $395 = ($$3372$i>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($$3372$i)) + 24|0);
         HEAP32[$396>>2] = $353;
         $397 = ((($$4$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($$3372$i)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $$3372$i;
            break;
           }
          }
         } while(0);
         $403 = ((($$4$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if ($405) {
          $470 = $250;
         } else {
          $406 = HEAP32[(33580)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($$3372$i)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $$3372$i;
           $470 = $250;
           break;
          }
         }
        }
       } while(0);
       $410 = ($$4351$lcssa$i>>>0)<(16);
       do {
        if ($410) {
         $411 = (($$4351$lcssa$i) + ($249))|0;
         $412 = $411 | 3;
         $413 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $414 = (($$4$lcssa$i) + ($411)|0);
         $415 = ((($414)) + 4|0);
         $416 = HEAP32[$415>>2]|0;
         $417 = $416 | 1;
         HEAP32[$415>>2] = $417;
        } else {
         $418 = $249 | 3;
         $419 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$419>>2] = $418;
         $420 = $$4351$lcssa$i | 1;
         $421 = ((($350)) + 4|0);
         HEAP32[$421>>2] = $420;
         $422 = (($350) + ($$4351$lcssa$i)|0);
         HEAP32[$422>>2] = $$4351$lcssa$i;
         $423 = $$4351$lcssa$i >>> 3;
         $424 = ($$4351$lcssa$i>>>0)<(256);
         if ($424) {
          $425 = $423 << 1;
          $426 = (33604 + ($425<<2)|0);
          $427 = HEAP32[8391]|0;
          $428 = 1 << $423;
          $429 = $427 & $428;
          $430 = ($429|0)==(0);
          if ($430) {
           $431 = $427 | $428;
           HEAP32[8391] = $431;
           $$pre$i210 = ((($426)) + 8|0);
           $$0368$i = $426;$$pre$phi$i211Z2D = $$pre$i210;
          } else {
           $432 = ((($426)) + 8|0);
           $433 = HEAP32[$432>>2]|0;
           $434 = HEAP32[(33580)>>2]|0;
           $435 = ($433>>>0)<($434>>>0);
           if ($435) {
            _abort();
            // unreachable;
           } else {
            $$0368$i = $433;$$pre$phi$i211Z2D = $432;
           }
          }
          HEAP32[$$pre$phi$i211Z2D>>2] = $350;
          $436 = ((($$0368$i)) + 12|0);
          HEAP32[$436>>2] = $350;
          $437 = ((($350)) + 8|0);
          HEAP32[$437>>2] = $$0368$i;
          $438 = ((($350)) + 12|0);
          HEAP32[$438>>2] = $426;
          break;
         }
         $439 = $$4351$lcssa$i >>> 8;
         $440 = ($439|0)==(0);
         if ($440) {
          $$0361$i = 0;
         } else {
          $441 = ($$4351$lcssa$i>>>0)>(16777215);
          if ($441) {
           $$0361$i = 31;
          } else {
           $442 = (($439) + 1048320)|0;
           $443 = $442 >>> 16;
           $444 = $443 & 8;
           $445 = $439 << $444;
           $446 = (($445) + 520192)|0;
           $447 = $446 >>> 16;
           $448 = $447 & 4;
           $449 = $448 | $444;
           $450 = $445 << $448;
           $451 = (($450) + 245760)|0;
           $452 = $451 >>> 16;
           $453 = $452 & 2;
           $454 = $449 | $453;
           $455 = (14 - ($454))|0;
           $456 = $450 << $453;
           $457 = $456 >>> 15;
           $458 = (($455) + ($457))|0;
           $459 = $458 << 1;
           $460 = (($458) + 7)|0;
           $461 = $$4351$lcssa$i >>> $460;
           $462 = $461 & 1;
           $463 = $462 | $459;
           $$0361$i = $463;
          }
         }
         $464 = (33868 + ($$0361$i<<2)|0);
         $465 = ((($350)) + 28|0);
         HEAP32[$465>>2] = $$0361$i;
         $466 = ((($350)) + 16|0);
         $467 = ((($466)) + 4|0);
         HEAP32[$467>>2] = 0;
         HEAP32[$466>>2] = 0;
         $468 = 1 << $$0361$i;
         $469 = $470 & $468;
         $471 = ($469|0)==(0);
         if ($471) {
          $472 = $470 | $468;
          HEAP32[(33568)>>2] = $472;
          HEAP32[$464>>2] = $350;
          $473 = ((($350)) + 24|0);
          HEAP32[$473>>2] = $464;
          $474 = ((($350)) + 12|0);
          HEAP32[$474>>2] = $350;
          $475 = ((($350)) + 8|0);
          HEAP32[$475>>2] = $350;
          break;
         }
         $476 = HEAP32[$464>>2]|0;
         $477 = ($$0361$i|0)==(31);
         $478 = $$0361$i >>> 1;
         $479 = (25 - ($478))|0;
         $480 = $477 ? 0 : $479;
         $481 = $$4351$lcssa$i << $480;
         $$0344$i = $481;$$0345$i = $476;
         while(1) {
          $482 = ((($$0345$i)) + 4|0);
          $483 = HEAP32[$482>>2]|0;
          $484 = $483 & -8;
          $485 = ($484|0)==($$4351$lcssa$i|0);
          if ($485) {
           label = 139;
           break;
          }
          $486 = $$0344$i >>> 31;
          $487 = (((($$0345$i)) + 16|0) + ($486<<2)|0);
          $488 = $$0344$i << 1;
          $489 = HEAP32[$487>>2]|0;
          $490 = ($489|0)==(0|0);
          if ($490) {
           label = 136;
           break;
          } else {
           $$0344$i = $488;$$0345$i = $489;
          }
         }
         if ((label|0) == 136) {
          $491 = HEAP32[(33580)>>2]|0;
          $492 = ($487>>>0)<($491>>>0);
          if ($492) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$487>>2] = $350;
           $493 = ((($350)) + 24|0);
           HEAP32[$493>>2] = $$0345$i;
           $494 = ((($350)) + 12|0);
           HEAP32[$494>>2] = $350;
           $495 = ((($350)) + 8|0);
           HEAP32[$495>>2] = $350;
           break;
          }
         }
         else if ((label|0) == 139) {
          $496 = ((($$0345$i)) + 8|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = HEAP32[(33580)>>2]|0;
          $499 = ($497>>>0)>=($498>>>0);
          $not$9$i = ($$0345$i>>>0)>=($498>>>0);
          $500 = $499 & $not$9$i;
          if ($500) {
           $501 = ((($497)) + 12|0);
           HEAP32[$501>>2] = $350;
           HEAP32[$496>>2] = $350;
           $502 = ((($350)) + 8|0);
           HEAP32[$502>>2] = $497;
           $503 = ((($350)) + 12|0);
           HEAP32[$503>>2] = $$0345$i;
           $504 = ((($350)) + 24|0);
           HEAP32[$504>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $505 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $505;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0197 = $249;
      }
     }
    }
   }
  }
 } while(0);
 $506 = HEAP32[(33572)>>2]|0;
 $507 = ($506>>>0)<($$0197>>>0);
 if (!($507)) {
  $508 = (($506) - ($$0197))|0;
  $509 = HEAP32[(33584)>>2]|0;
  $510 = ($508>>>0)>(15);
  if ($510) {
   $511 = (($509) + ($$0197)|0);
   HEAP32[(33584)>>2] = $511;
   HEAP32[(33572)>>2] = $508;
   $512 = $508 | 1;
   $513 = ((($511)) + 4|0);
   HEAP32[$513>>2] = $512;
   $514 = (($511) + ($508)|0);
   HEAP32[$514>>2] = $508;
   $515 = $$0197 | 3;
   $516 = ((($509)) + 4|0);
   HEAP32[$516>>2] = $515;
  } else {
   HEAP32[(33572)>>2] = 0;
   HEAP32[(33584)>>2] = 0;
   $517 = $506 | 3;
   $518 = ((($509)) + 4|0);
   HEAP32[$518>>2] = $517;
   $519 = (($509) + ($506)|0);
   $520 = ((($519)) + 4|0);
   $521 = HEAP32[$520>>2]|0;
   $522 = $521 | 1;
   HEAP32[$520>>2] = $522;
  }
  $523 = ((($509)) + 8|0);
  $$0 = $523;
  STACKTOP = sp;return ($$0|0);
 }
 $524 = HEAP32[(33576)>>2]|0;
 $525 = ($524>>>0)>($$0197>>>0);
 if ($525) {
  $526 = (($524) - ($$0197))|0;
  HEAP32[(33576)>>2] = $526;
  $527 = HEAP32[(33588)>>2]|0;
  $528 = (($527) + ($$0197)|0);
  HEAP32[(33588)>>2] = $528;
  $529 = $526 | 1;
  $530 = ((($528)) + 4|0);
  HEAP32[$530>>2] = $529;
  $531 = $$0197 | 3;
  $532 = ((($527)) + 4|0);
  HEAP32[$532>>2] = $531;
  $533 = ((($527)) + 8|0);
  $$0 = $533;
  STACKTOP = sp;return ($$0|0);
 }
 $534 = HEAP32[8509]|0;
 $535 = ($534|0)==(0);
 if ($535) {
  HEAP32[(34044)>>2] = 4096;
  HEAP32[(34040)>>2] = 4096;
  HEAP32[(34048)>>2] = -1;
  HEAP32[(34052)>>2] = -1;
  HEAP32[(34056)>>2] = 0;
  HEAP32[(34008)>>2] = 0;
  $536 = $1;
  $537 = $536 & -16;
  $538 = $537 ^ 1431655768;
  HEAP32[$1>>2] = $538;
  HEAP32[8509] = $538;
  $542 = 4096;
 } else {
  $$pre$i212 = HEAP32[(34044)>>2]|0;
  $542 = $$pre$i212;
 }
 $539 = (($$0197) + 48)|0;
 $540 = (($$0197) + 47)|0;
 $541 = (($542) + ($540))|0;
 $543 = (0 - ($542))|0;
 $544 = $541 & $543;
 $545 = ($544>>>0)>($$0197>>>0);
 if (!($545)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $546 = HEAP32[(34004)>>2]|0;
 $547 = ($546|0)==(0);
 if (!($547)) {
  $548 = HEAP32[(33996)>>2]|0;
  $549 = (($548) + ($544))|0;
  $550 = ($549>>>0)<=($548>>>0);
  $551 = ($549>>>0)>($546>>>0);
  $or$cond1$i = $550 | $551;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $552 = HEAP32[(34008)>>2]|0;
 $553 = $552 & 4;
 $554 = ($553|0)==(0);
 L244: do {
  if ($554) {
   $555 = HEAP32[(33588)>>2]|0;
   $556 = ($555|0)==(0|0);
   L246: do {
    if ($556) {
     label = 163;
    } else {
     $$0$i$i = (34012);
     while(1) {
      $557 = HEAP32[$$0$i$i>>2]|0;
      $558 = ($557>>>0)>($555>>>0);
      if (!($558)) {
       $559 = ((($$0$i$i)) + 4|0);
       $560 = HEAP32[$559>>2]|0;
       $561 = (($557) + ($560)|0);
       $562 = ($561>>>0)>($555>>>0);
       if ($562) {
        break;
       }
      }
      $563 = ((($$0$i$i)) + 8|0);
      $564 = HEAP32[$563>>2]|0;
      $565 = ($564|0)==(0|0);
      if ($565) {
       label = 163;
       break L246;
      } else {
       $$0$i$i = $564;
      }
     }
     $588 = (($541) - ($524))|0;
     $589 = $588 & $543;
     $590 = ($589>>>0)<(2147483647);
     if ($590) {
      $591 = (_sbrk(($589|0))|0);
      $592 = HEAP32[$$0$i$i>>2]|0;
      $593 = HEAP32[$559>>2]|0;
      $594 = (($592) + ($593)|0);
      $595 = ($591|0)==($594|0);
      if ($595) {
       $596 = ($591|0)==((-1)|0);
       if ($596) {
        $$2234253237$i = $589;
       } else {
        $$723948$i = $589;$$749$i = $591;
        label = 180;
        break L244;
       }
      } else {
       $$2247$ph$i = $591;$$2253$ph$i = $589;
       label = 171;
      }
     } else {
      $$2234253237$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 163) {
     $566 = (_sbrk(0)|0);
     $567 = ($566|0)==((-1)|0);
     if ($567) {
      $$2234253237$i = 0;
     } else {
      $568 = $566;
      $569 = HEAP32[(34040)>>2]|0;
      $570 = (($569) + -1)|0;
      $571 = $570 & $568;
      $572 = ($571|0)==(0);
      $573 = (($570) + ($568))|0;
      $574 = (0 - ($569))|0;
      $575 = $573 & $574;
      $576 = (($575) - ($568))|0;
      $577 = $572 ? 0 : $576;
      $$$i = (($577) + ($544))|0;
      $578 = HEAP32[(33996)>>2]|0;
      $579 = (($$$i) + ($578))|0;
      $580 = ($$$i>>>0)>($$0197>>>0);
      $581 = ($$$i>>>0)<(2147483647);
      $or$cond$i214 = $580 & $581;
      if ($or$cond$i214) {
       $582 = HEAP32[(34004)>>2]|0;
       $583 = ($582|0)==(0);
       if (!($583)) {
        $584 = ($579>>>0)<=($578>>>0);
        $585 = ($579>>>0)>($582>>>0);
        $or$cond2$i215 = $584 | $585;
        if ($or$cond2$i215) {
         $$2234253237$i = 0;
         break;
        }
       }
       $586 = (_sbrk(($$$i|0))|0);
       $587 = ($586|0)==($566|0);
       if ($587) {
        $$723948$i = $$$i;$$749$i = $566;
        label = 180;
        break L244;
       } else {
        $$2247$ph$i = $586;$$2253$ph$i = $$$i;
        label = 171;
       }
      } else {
       $$2234253237$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 171) {
     $597 = (0 - ($$2253$ph$i))|0;
     $598 = ($$2247$ph$i|0)!=((-1)|0);
     $599 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $599 & $598;
     $600 = ($539>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $600 & $or$cond7$i;
     if (!($or$cond10$i)) {
      $610 = ($$2247$ph$i|0)==((-1)|0);
      if ($610) {
       $$2234253237$i = 0;
       break;
      } else {
       $$723948$i = $$2253$ph$i;$$749$i = $$2247$ph$i;
       label = 180;
       break L244;
      }
     }
     $601 = HEAP32[(34044)>>2]|0;
     $602 = (($540) - ($$2253$ph$i))|0;
     $603 = (($602) + ($601))|0;
     $604 = (0 - ($601))|0;
     $605 = $603 & $604;
     $606 = ($605>>>0)<(2147483647);
     if (!($606)) {
      $$723948$i = $$2253$ph$i;$$749$i = $$2247$ph$i;
      label = 180;
      break L244;
     }
     $607 = (_sbrk(($605|0))|0);
     $608 = ($607|0)==((-1)|0);
     if ($608) {
      (_sbrk(($597|0))|0);
      $$2234253237$i = 0;
      break;
     } else {
      $609 = (($605) + ($$2253$ph$i))|0;
      $$723948$i = $609;$$749$i = $$2247$ph$i;
      label = 180;
      break L244;
     }
    }
   } while(0);
   $611 = HEAP32[(34008)>>2]|0;
   $612 = $611 | 4;
   HEAP32[(34008)>>2] = $612;
   $$4236$i = $$2234253237$i;
   label = 178;
  } else {
   $$4236$i = 0;
   label = 178;
  }
 } while(0);
 if ((label|0) == 178) {
  $613 = ($544>>>0)<(2147483647);
  if ($613) {
   $614 = (_sbrk(($544|0))|0);
   $615 = (_sbrk(0)|0);
   $616 = ($614|0)!=((-1)|0);
   $617 = ($615|0)!=((-1)|0);
   $or$cond5$i = $616 & $617;
   $618 = ($614>>>0)<($615>>>0);
   $or$cond11$i = $618 & $or$cond5$i;
   $619 = $615;
   $620 = $614;
   $621 = (($619) - ($620))|0;
   $622 = (($$0197) + 40)|0;
   $623 = ($621>>>0)>($622>>>0);
   $$$4236$i = $623 ? $621 : $$4236$i;
   $or$cond11$not$i = $or$cond11$i ^ 1;
   $624 = ($614|0)==((-1)|0);
   $not$$i216 = $623 ^ 1;
   $625 = $624 | $not$$i216;
   $or$cond50$i = $625 | $or$cond11$not$i;
   if (!($or$cond50$i)) {
    $$723948$i = $$$4236$i;$$749$i = $614;
    label = 180;
   }
  }
 }
 if ((label|0) == 180) {
  $626 = HEAP32[(33996)>>2]|0;
  $627 = (($626) + ($$723948$i))|0;
  HEAP32[(33996)>>2] = $627;
  $628 = HEAP32[(34000)>>2]|0;
  $629 = ($627>>>0)>($628>>>0);
  if ($629) {
   HEAP32[(34000)>>2] = $627;
  }
  $630 = HEAP32[(33588)>>2]|0;
  $631 = ($630|0)==(0|0);
  do {
   if ($631) {
    $632 = HEAP32[(33580)>>2]|0;
    $633 = ($632|0)==(0|0);
    $634 = ($$749$i>>>0)<($632>>>0);
    $or$cond12$i = $633 | $634;
    if ($or$cond12$i) {
     HEAP32[(33580)>>2] = $$749$i;
    }
    HEAP32[(34012)>>2] = $$749$i;
    HEAP32[(34016)>>2] = $$723948$i;
    HEAP32[(34024)>>2] = 0;
    $635 = HEAP32[8509]|0;
    HEAP32[(33600)>>2] = $635;
    HEAP32[(33596)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $636 = $$01$i$i << 1;
     $637 = (33604 + ($636<<2)|0);
     $638 = ((($637)) + 12|0);
     HEAP32[$638>>2] = $637;
     $639 = ((($637)) + 8|0);
     HEAP32[$639>>2] = $637;
     $640 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($640|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $640;
     }
    }
    $641 = (($$723948$i) + -40)|0;
    $642 = ((($$749$i)) + 8|0);
    $643 = $642;
    $644 = $643 & 7;
    $645 = ($644|0)==(0);
    $646 = (0 - ($643))|0;
    $647 = $646 & 7;
    $648 = $645 ? 0 : $647;
    $649 = (($$749$i) + ($648)|0);
    $650 = (($641) - ($648))|0;
    HEAP32[(33588)>>2] = $649;
    HEAP32[(33576)>>2] = $650;
    $651 = $650 | 1;
    $652 = ((($649)) + 4|0);
    HEAP32[$652>>2] = $651;
    $653 = (($649) + ($650)|0);
    $654 = ((($653)) + 4|0);
    HEAP32[$654>>2] = 40;
    $655 = HEAP32[(34052)>>2]|0;
    HEAP32[(33592)>>2] = $655;
   } else {
    $$024371$i = (34012);
    while(1) {
     $656 = HEAP32[$$024371$i>>2]|0;
     $657 = ((($$024371$i)) + 4|0);
     $658 = HEAP32[$657>>2]|0;
     $659 = (($656) + ($658)|0);
     $660 = ($$749$i|0)==($659|0);
     if ($660) {
      label = 190;
      break;
     }
     $661 = ((($$024371$i)) + 8|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = ($662|0)==(0|0);
     if ($663) {
      break;
     } else {
      $$024371$i = $662;
     }
    }
    if ((label|0) == 190) {
     $664 = ((($$024371$i)) + 12|0);
     $665 = HEAP32[$664>>2]|0;
     $666 = $665 & 8;
     $667 = ($666|0)==(0);
     if ($667) {
      $668 = ($630>>>0)>=($656>>>0);
      $669 = ($630>>>0)<($$749$i>>>0);
      $or$cond51$i = $669 & $668;
      if ($or$cond51$i) {
       $670 = (($658) + ($$723948$i))|0;
       HEAP32[$657>>2] = $670;
       $671 = HEAP32[(33576)>>2]|0;
       $672 = ((($630)) + 8|0);
       $673 = $672;
       $674 = $673 & 7;
       $675 = ($674|0)==(0);
       $676 = (0 - ($673))|0;
       $677 = $676 & 7;
       $678 = $675 ? 0 : $677;
       $679 = (($630) + ($678)|0);
       $680 = (($$723948$i) - ($678))|0;
       $681 = (($671) + ($680))|0;
       HEAP32[(33588)>>2] = $679;
       HEAP32[(33576)>>2] = $681;
       $682 = $681 | 1;
       $683 = ((($679)) + 4|0);
       HEAP32[$683>>2] = $682;
       $684 = (($679) + ($681)|0);
       $685 = ((($684)) + 4|0);
       HEAP32[$685>>2] = 40;
       $686 = HEAP32[(34052)>>2]|0;
       HEAP32[(33592)>>2] = $686;
       break;
      }
     }
    }
    $687 = HEAP32[(33580)>>2]|0;
    $688 = ($$749$i>>>0)<($687>>>0);
    if ($688) {
     HEAP32[(33580)>>2] = $$749$i;
     $752 = $$749$i;
    } else {
     $752 = $687;
    }
    $689 = (($$749$i) + ($$723948$i)|0);
    $$124470$i = (34012);
    while(1) {
     $690 = HEAP32[$$124470$i>>2]|0;
     $691 = ($690|0)==($689|0);
     if ($691) {
      label = 198;
      break;
     }
     $692 = ((($$124470$i)) + 8|0);
     $693 = HEAP32[$692>>2]|0;
     $694 = ($693|0)==(0|0);
     if ($694) {
      break;
     } else {
      $$124470$i = $693;
     }
    }
    if ((label|0) == 198) {
     $695 = ((($$124470$i)) + 12|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = $696 & 8;
     $698 = ($697|0)==(0);
     if ($698) {
      HEAP32[$$124470$i>>2] = $$749$i;
      $699 = ((($$124470$i)) + 4|0);
      $700 = HEAP32[$699>>2]|0;
      $701 = (($700) + ($$723948$i))|0;
      HEAP32[$699>>2] = $701;
      $702 = ((($$749$i)) + 8|0);
      $703 = $702;
      $704 = $703 & 7;
      $705 = ($704|0)==(0);
      $706 = (0 - ($703))|0;
      $707 = $706 & 7;
      $708 = $705 ? 0 : $707;
      $709 = (($$749$i) + ($708)|0);
      $710 = ((($689)) + 8|0);
      $711 = $710;
      $712 = $711 & 7;
      $713 = ($712|0)==(0);
      $714 = (0 - ($711))|0;
      $715 = $714 & 7;
      $716 = $713 ? 0 : $715;
      $717 = (($689) + ($716)|0);
      $718 = $717;
      $719 = $709;
      $720 = (($718) - ($719))|0;
      $721 = (($709) + ($$0197)|0);
      $722 = (($720) - ($$0197))|0;
      $723 = $$0197 | 3;
      $724 = ((($709)) + 4|0);
      HEAP32[$724>>2] = $723;
      $725 = ($717|0)==($630|0);
      do {
       if ($725) {
        $726 = HEAP32[(33576)>>2]|0;
        $727 = (($726) + ($722))|0;
        HEAP32[(33576)>>2] = $727;
        HEAP32[(33588)>>2] = $721;
        $728 = $727 | 1;
        $729 = ((($721)) + 4|0);
        HEAP32[$729>>2] = $728;
       } else {
        $730 = HEAP32[(33584)>>2]|0;
        $731 = ($717|0)==($730|0);
        if ($731) {
         $732 = HEAP32[(33572)>>2]|0;
         $733 = (($732) + ($722))|0;
         HEAP32[(33572)>>2] = $733;
         HEAP32[(33584)>>2] = $721;
         $734 = $733 | 1;
         $735 = ((($721)) + 4|0);
         HEAP32[$735>>2] = $734;
         $736 = (($721) + ($733)|0);
         HEAP32[$736>>2] = $733;
         break;
        }
        $737 = ((($717)) + 4|0);
        $738 = HEAP32[$737>>2]|0;
        $739 = $738 & 3;
        $740 = ($739|0)==(1);
        if ($740) {
         $741 = $738 & -8;
         $742 = $738 >>> 3;
         $743 = ($738>>>0)<(256);
         L314: do {
          if ($743) {
           $744 = ((($717)) + 8|0);
           $745 = HEAP32[$744>>2]|0;
           $746 = ((($717)) + 12|0);
           $747 = HEAP32[$746>>2]|0;
           $748 = $742 << 1;
           $749 = (33604 + ($748<<2)|0);
           $750 = ($745|0)==($749|0);
           do {
            if (!($750)) {
             $751 = ($745>>>0)<($752>>>0);
             if ($751) {
              _abort();
              // unreachable;
             }
             $753 = ((($745)) + 12|0);
             $754 = HEAP32[$753>>2]|0;
             $755 = ($754|0)==($717|0);
             if ($755) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $756 = ($747|0)==($745|0);
           if ($756) {
            $757 = 1 << $742;
            $758 = $757 ^ -1;
            $759 = HEAP32[8391]|0;
            $760 = $759 & $758;
            HEAP32[8391] = $760;
            break;
           }
           $761 = ($747|0)==($749|0);
           do {
            if ($761) {
             $$pre10$i$i = ((($747)) + 8|0);
             $$pre$phi11$i$iZ2D = $$pre10$i$i;
            } else {
             $762 = ($747>>>0)<($752>>>0);
             if ($762) {
              _abort();
              // unreachable;
             }
             $763 = ((($747)) + 8|0);
             $764 = HEAP32[$763>>2]|0;
             $765 = ($764|0)==($717|0);
             if ($765) {
              $$pre$phi11$i$iZ2D = $763;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $766 = ((($745)) + 12|0);
           HEAP32[$766>>2] = $747;
           HEAP32[$$pre$phi11$i$iZ2D>>2] = $745;
          } else {
           $767 = ((($717)) + 24|0);
           $768 = HEAP32[$767>>2]|0;
           $769 = ((($717)) + 12|0);
           $770 = HEAP32[$769>>2]|0;
           $771 = ($770|0)==($717|0);
           do {
            if ($771) {
             $781 = ((($717)) + 16|0);
             $782 = ((($781)) + 4|0);
             $783 = HEAP32[$782>>2]|0;
             $784 = ($783|0)==(0|0);
             if ($784) {
              $785 = HEAP32[$781>>2]|0;
              $786 = ($785|0)==(0|0);
              if ($786) {
               $$3$i$i = 0;
               break;
              } else {
               $$1291$i$i = $785;$$1293$i$i = $781;
              }
             } else {
              $$1291$i$i = $783;$$1293$i$i = $782;
             }
             while(1) {
              $787 = ((($$1291$i$i)) + 20|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if (!($789)) {
               $$1291$i$i = $788;$$1293$i$i = $787;
               continue;
              }
              $790 = ((($$1291$i$i)) + 16|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if ($792) {
               break;
              } else {
               $$1291$i$i = $791;$$1293$i$i = $790;
              }
             }
             $793 = ($$1293$i$i>>>0)<($752>>>0);
             if ($793) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$1293$i$i>>2] = 0;
              $$3$i$i = $$1291$i$i;
              break;
             }
            } else {
             $772 = ((($717)) + 8|0);
             $773 = HEAP32[$772>>2]|0;
             $774 = ($773>>>0)<($752>>>0);
             if ($774) {
              _abort();
              // unreachable;
             }
             $775 = ((($773)) + 12|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776|0)==($717|0);
             if (!($777)) {
              _abort();
              // unreachable;
             }
             $778 = ((($770)) + 8|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($717|0);
             if ($780) {
              HEAP32[$775>>2] = $770;
              HEAP32[$778>>2] = $773;
              $$3$i$i = $770;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $794 = ($768|0)==(0|0);
           if ($794) {
            break;
           }
           $795 = ((($717)) + 28|0);
           $796 = HEAP32[$795>>2]|0;
           $797 = (33868 + ($796<<2)|0);
           $798 = HEAP32[$797>>2]|0;
           $799 = ($717|0)==($798|0);
           do {
            if ($799) {
             HEAP32[$797>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $800 = 1 << $796;
             $801 = $800 ^ -1;
             $802 = HEAP32[(33568)>>2]|0;
             $803 = $802 & $801;
             HEAP32[(33568)>>2] = $803;
             break L314;
            } else {
             $804 = HEAP32[(33580)>>2]|0;
             $805 = ($768>>>0)<($804>>>0);
             if ($805) {
              _abort();
              // unreachable;
             } else {
              $806 = ((($768)) + 16|0);
              $807 = HEAP32[$806>>2]|0;
              $not$$i17$i = ($807|0)!=($717|0);
              $$sink1$i$i = $not$$i17$i&1;
              $808 = (((($768)) + 16|0) + ($$sink1$i$i<<2)|0);
              HEAP32[$808>>2] = $$3$i$i;
              $809 = ($$3$i$i|0)==(0|0);
              if ($809) {
               break L314;
              } else {
               break;
              }
             }
            }
           } while(0);
           $810 = HEAP32[(33580)>>2]|0;
           $811 = ($$3$i$i>>>0)<($810>>>0);
           if ($811) {
            _abort();
            // unreachable;
           }
           $812 = ((($$3$i$i)) + 24|0);
           HEAP32[$812>>2] = $768;
           $813 = ((($717)) + 16|0);
           $814 = HEAP32[$813>>2]|0;
           $815 = ($814|0)==(0|0);
           do {
            if (!($815)) {
             $816 = ($814>>>0)<($810>>>0);
             if ($816) {
              _abort();
              // unreachable;
             } else {
              $817 = ((($$3$i$i)) + 16|0);
              HEAP32[$817>>2] = $814;
              $818 = ((($814)) + 24|0);
              HEAP32[$818>>2] = $$3$i$i;
              break;
             }
            }
           } while(0);
           $819 = ((($813)) + 4|0);
           $820 = HEAP32[$819>>2]|0;
           $821 = ($820|0)==(0|0);
           if ($821) {
            break;
           }
           $822 = HEAP32[(33580)>>2]|0;
           $823 = ($820>>>0)<($822>>>0);
           if ($823) {
            _abort();
            // unreachable;
           } else {
            $824 = ((($$3$i$i)) + 20|0);
            HEAP32[$824>>2] = $820;
            $825 = ((($820)) + 24|0);
            HEAP32[$825>>2] = $$3$i$i;
            break;
           }
          }
         } while(0);
         $826 = (($717) + ($741)|0);
         $827 = (($741) + ($722))|0;
         $$0$i18$i = $826;$$0287$i$i = $827;
        } else {
         $$0$i18$i = $717;$$0287$i$i = $722;
        }
        $828 = ((($$0$i18$i)) + 4|0);
        $829 = HEAP32[$828>>2]|0;
        $830 = $829 & -2;
        HEAP32[$828>>2] = $830;
        $831 = $$0287$i$i | 1;
        $832 = ((($721)) + 4|0);
        HEAP32[$832>>2] = $831;
        $833 = (($721) + ($$0287$i$i)|0);
        HEAP32[$833>>2] = $$0287$i$i;
        $834 = $$0287$i$i >>> 3;
        $835 = ($$0287$i$i>>>0)<(256);
        if ($835) {
         $836 = $834 << 1;
         $837 = (33604 + ($836<<2)|0);
         $838 = HEAP32[8391]|0;
         $839 = 1 << $834;
         $840 = $838 & $839;
         $841 = ($840|0)==(0);
         do {
          if ($841) {
           $842 = $838 | $839;
           HEAP32[8391] = $842;
           $$pre$i19$i = ((($837)) + 8|0);
           $$0295$i$i = $837;$$pre$phi$i20$iZ2D = $$pre$i19$i;
          } else {
           $843 = ((($837)) + 8|0);
           $844 = HEAP32[$843>>2]|0;
           $845 = HEAP32[(33580)>>2]|0;
           $846 = ($844>>>0)<($845>>>0);
           if (!($846)) {
            $$0295$i$i = $844;$$pre$phi$i20$iZ2D = $843;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i20$iZ2D>>2] = $721;
         $847 = ((($$0295$i$i)) + 12|0);
         HEAP32[$847>>2] = $721;
         $848 = ((($721)) + 8|0);
         HEAP32[$848>>2] = $$0295$i$i;
         $849 = ((($721)) + 12|0);
         HEAP32[$849>>2] = $837;
         break;
        }
        $850 = $$0287$i$i >>> 8;
        $851 = ($850|0)==(0);
        do {
         if ($851) {
          $$0296$i$i = 0;
         } else {
          $852 = ($$0287$i$i>>>0)>(16777215);
          if ($852) {
           $$0296$i$i = 31;
           break;
          }
          $853 = (($850) + 1048320)|0;
          $854 = $853 >>> 16;
          $855 = $854 & 8;
          $856 = $850 << $855;
          $857 = (($856) + 520192)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 4;
          $860 = $859 | $855;
          $861 = $856 << $859;
          $862 = (($861) + 245760)|0;
          $863 = $862 >>> 16;
          $864 = $863 & 2;
          $865 = $860 | $864;
          $866 = (14 - ($865))|0;
          $867 = $861 << $864;
          $868 = $867 >>> 15;
          $869 = (($866) + ($868))|0;
          $870 = $869 << 1;
          $871 = (($869) + 7)|0;
          $872 = $$0287$i$i >>> $871;
          $873 = $872 & 1;
          $874 = $873 | $870;
          $$0296$i$i = $874;
         }
        } while(0);
        $875 = (33868 + ($$0296$i$i<<2)|0);
        $876 = ((($721)) + 28|0);
        HEAP32[$876>>2] = $$0296$i$i;
        $877 = ((($721)) + 16|0);
        $878 = ((($877)) + 4|0);
        HEAP32[$878>>2] = 0;
        HEAP32[$877>>2] = 0;
        $879 = HEAP32[(33568)>>2]|0;
        $880 = 1 << $$0296$i$i;
        $881 = $879 & $880;
        $882 = ($881|0)==(0);
        if ($882) {
         $883 = $879 | $880;
         HEAP32[(33568)>>2] = $883;
         HEAP32[$875>>2] = $721;
         $884 = ((($721)) + 24|0);
         HEAP32[$884>>2] = $875;
         $885 = ((($721)) + 12|0);
         HEAP32[$885>>2] = $721;
         $886 = ((($721)) + 8|0);
         HEAP32[$886>>2] = $721;
         break;
        }
        $887 = HEAP32[$875>>2]|0;
        $888 = ($$0296$i$i|0)==(31);
        $889 = $$0296$i$i >>> 1;
        $890 = (25 - ($889))|0;
        $891 = $888 ? 0 : $890;
        $892 = $$0287$i$i << $891;
        $$0288$i$i = $892;$$0289$i$i = $887;
        while(1) {
         $893 = ((($$0289$i$i)) + 4|0);
         $894 = HEAP32[$893>>2]|0;
         $895 = $894 & -8;
         $896 = ($895|0)==($$0287$i$i|0);
         if ($896) {
          label = 265;
          break;
         }
         $897 = $$0288$i$i >>> 31;
         $898 = (((($$0289$i$i)) + 16|0) + ($897<<2)|0);
         $899 = $$0288$i$i << 1;
         $900 = HEAP32[$898>>2]|0;
         $901 = ($900|0)==(0|0);
         if ($901) {
          label = 262;
          break;
         } else {
          $$0288$i$i = $899;$$0289$i$i = $900;
         }
        }
        if ((label|0) == 262) {
         $902 = HEAP32[(33580)>>2]|0;
         $903 = ($898>>>0)<($902>>>0);
         if ($903) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$898>>2] = $721;
          $904 = ((($721)) + 24|0);
          HEAP32[$904>>2] = $$0289$i$i;
          $905 = ((($721)) + 12|0);
          HEAP32[$905>>2] = $721;
          $906 = ((($721)) + 8|0);
          HEAP32[$906>>2] = $721;
          break;
         }
        }
        else if ((label|0) == 265) {
         $907 = ((($$0289$i$i)) + 8|0);
         $908 = HEAP32[$907>>2]|0;
         $909 = HEAP32[(33580)>>2]|0;
         $910 = ($908>>>0)>=($909>>>0);
         $not$7$i$i = ($$0289$i$i>>>0)>=($909>>>0);
         $911 = $910 & $not$7$i$i;
         if ($911) {
          $912 = ((($908)) + 12|0);
          HEAP32[$912>>2] = $721;
          HEAP32[$907>>2] = $721;
          $913 = ((($721)) + 8|0);
          HEAP32[$913>>2] = $908;
          $914 = ((($721)) + 12|0);
          HEAP32[$914>>2] = $$0289$i$i;
          $915 = ((($721)) + 24|0);
          HEAP32[$915>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1047 = ((($709)) + 8|0);
      $$0 = $1047;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (34012);
    while(1) {
     $916 = HEAP32[$$0$i$i$i>>2]|0;
     $917 = ($916>>>0)>($630>>>0);
     if (!($917)) {
      $918 = ((($$0$i$i$i)) + 4|0);
      $919 = HEAP32[$918>>2]|0;
      $920 = (($916) + ($919)|0);
      $921 = ($920>>>0)>($630>>>0);
      if ($921) {
       break;
      }
     }
     $922 = ((($$0$i$i$i)) + 8|0);
     $923 = HEAP32[$922>>2]|0;
     $$0$i$i$i = $923;
    }
    $924 = ((($920)) + -47|0);
    $925 = ((($924)) + 8|0);
    $926 = $925;
    $927 = $926 & 7;
    $928 = ($927|0)==(0);
    $929 = (0 - ($926))|0;
    $930 = $929 & 7;
    $931 = $928 ? 0 : $930;
    $932 = (($924) + ($931)|0);
    $933 = ((($630)) + 16|0);
    $934 = ($932>>>0)<($933>>>0);
    $935 = $934 ? $630 : $932;
    $936 = ((($935)) + 8|0);
    $937 = ((($935)) + 24|0);
    $938 = (($$723948$i) + -40)|0;
    $939 = ((($$749$i)) + 8|0);
    $940 = $939;
    $941 = $940 & 7;
    $942 = ($941|0)==(0);
    $943 = (0 - ($940))|0;
    $944 = $943 & 7;
    $945 = $942 ? 0 : $944;
    $946 = (($$749$i) + ($945)|0);
    $947 = (($938) - ($945))|0;
    HEAP32[(33588)>>2] = $946;
    HEAP32[(33576)>>2] = $947;
    $948 = $947 | 1;
    $949 = ((($946)) + 4|0);
    HEAP32[$949>>2] = $948;
    $950 = (($946) + ($947)|0);
    $951 = ((($950)) + 4|0);
    HEAP32[$951>>2] = 40;
    $952 = HEAP32[(34052)>>2]|0;
    HEAP32[(33592)>>2] = $952;
    $953 = ((($935)) + 4|0);
    HEAP32[$953>>2] = 27;
    ;HEAP32[$936>>2]=HEAP32[(34012)>>2]|0;HEAP32[$936+4>>2]=HEAP32[(34012)+4>>2]|0;HEAP32[$936+8>>2]=HEAP32[(34012)+8>>2]|0;HEAP32[$936+12>>2]=HEAP32[(34012)+12>>2]|0;
    HEAP32[(34012)>>2] = $$749$i;
    HEAP32[(34016)>>2] = $$723948$i;
    HEAP32[(34024)>>2] = 0;
    HEAP32[(34020)>>2] = $936;
    $955 = $937;
    while(1) {
     $954 = ((($955)) + 4|0);
     HEAP32[$954>>2] = 7;
     $956 = ((($955)) + 8|0);
     $957 = ($956>>>0)<($920>>>0);
     if ($957) {
      $955 = $954;
     } else {
      break;
     }
    }
    $958 = ($935|0)==($630|0);
    if (!($958)) {
     $959 = $935;
     $960 = $630;
     $961 = (($959) - ($960))|0;
     $962 = HEAP32[$953>>2]|0;
     $963 = $962 & -2;
     HEAP32[$953>>2] = $963;
     $964 = $961 | 1;
     $965 = ((($630)) + 4|0);
     HEAP32[$965>>2] = $964;
     HEAP32[$935>>2] = $961;
     $966 = $961 >>> 3;
     $967 = ($961>>>0)<(256);
     if ($967) {
      $968 = $966 << 1;
      $969 = (33604 + ($968<<2)|0);
      $970 = HEAP32[8391]|0;
      $971 = 1 << $966;
      $972 = $970 & $971;
      $973 = ($972|0)==(0);
      if ($973) {
       $974 = $970 | $971;
       HEAP32[8391] = $974;
       $$pre$i$i = ((($969)) + 8|0);
       $$0211$i$i = $969;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $975 = ((($969)) + 8|0);
       $976 = HEAP32[$975>>2]|0;
       $977 = HEAP32[(33580)>>2]|0;
       $978 = ($976>>>0)<($977>>>0);
       if ($978) {
        _abort();
        // unreachable;
       } else {
        $$0211$i$i = $976;$$pre$phi$i$iZ2D = $975;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $630;
      $979 = ((($$0211$i$i)) + 12|0);
      HEAP32[$979>>2] = $630;
      $980 = ((($630)) + 8|0);
      HEAP32[$980>>2] = $$0211$i$i;
      $981 = ((($630)) + 12|0);
      HEAP32[$981>>2] = $969;
      break;
     }
     $982 = $961 >>> 8;
     $983 = ($982|0)==(0);
     if ($983) {
      $$0212$i$i = 0;
     } else {
      $984 = ($961>>>0)>(16777215);
      if ($984) {
       $$0212$i$i = 31;
      } else {
       $985 = (($982) + 1048320)|0;
       $986 = $985 >>> 16;
       $987 = $986 & 8;
       $988 = $982 << $987;
       $989 = (($988) + 520192)|0;
       $990 = $989 >>> 16;
       $991 = $990 & 4;
       $992 = $991 | $987;
       $993 = $988 << $991;
       $994 = (($993) + 245760)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 2;
       $997 = $992 | $996;
       $998 = (14 - ($997))|0;
       $999 = $993 << $996;
       $1000 = $999 >>> 15;
       $1001 = (($998) + ($1000))|0;
       $1002 = $1001 << 1;
       $1003 = (($1001) + 7)|0;
       $1004 = $961 >>> $1003;
       $1005 = $1004 & 1;
       $1006 = $1005 | $1002;
       $$0212$i$i = $1006;
      }
     }
     $1007 = (33868 + ($$0212$i$i<<2)|0);
     $1008 = ((($630)) + 28|0);
     HEAP32[$1008>>2] = $$0212$i$i;
     $1009 = ((($630)) + 20|0);
     HEAP32[$1009>>2] = 0;
     HEAP32[$933>>2] = 0;
     $1010 = HEAP32[(33568)>>2]|0;
     $1011 = 1 << $$0212$i$i;
     $1012 = $1010 & $1011;
     $1013 = ($1012|0)==(0);
     if ($1013) {
      $1014 = $1010 | $1011;
      HEAP32[(33568)>>2] = $1014;
      HEAP32[$1007>>2] = $630;
      $1015 = ((($630)) + 24|0);
      HEAP32[$1015>>2] = $1007;
      $1016 = ((($630)) + 12|0);
      HEAP32[$1016>>2] = $630;
      $1017 = ((($630)) + 8|0);
      HEAP32[$1017>>2] = $630;
      break;
     }
     $1018 = HEAP32[$1007>>2]|0;
     $1019 = ($$0212$i$i|0)==(31);
     $1020 = $$0212$i$i >>> 1;
     $1021 = (25 - ($1020))|0;
     $1022 = $1019 ? 0 : $1021;
     $1023 = $961 << $1022;
     $$0206$i$i = $1023;$$0207$i$i = $1018;
     while(1) {
      $1024 = ((($$0207$i$i)) + 4|0);
      $1025 = HEAP32[$1024>>2]|0;
      $1026 = $1025 & -8;
      $1027 = ($1026|0)==($961|0);
      if ($1027) {
       label = 292;
       break;
      }
      $1028 = $$0206$i$i >>> 31;
      $1029 = (((($$0207$i$i)) + 16|0) + ($1028<<2)|0);
      $1030 = $$0206$i$i << 1;
      $1031 = HEAP32[$1029>>2]|0;
      $1032 = ($1031|0)==(0|0);
      if ($1032) {
       label = 289;
       break;
      } else {
       $$0206$i$i = $1030;$$0207$i$i = $1031;
      }
     }
     if ((label|0) == 289) {
      $1033 = HEAP32[(33580)>>2]|0;
      $1034 = ($1029>>>0)<($1033>>>0);
      if ($1034) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$1029>>2] = $630;
       $1035 = ((($630)) + 24|0);
       HEAP32[$1035>>2] = $$0207$i$i;
       $1036 = ((($630)) + 12|0);
       HEAP32[$1036>>2] = $630;
       $1037 = ((($630)) + 8|0);
       HEAP32[$1037>>2] = $630;
       break;
      }
     }
     else if ((label|0) == 292) {
      $1038 = ((($$0207$i$i)) + 8|0);
      $1039 = HEAP32[$1038>>2]|0;
      $1040 = HEAP32[(33580)>>2]|0;
      $1041 = ($1039>>>0)>=($1040>>>0);
      $not$$i$i = ($$0207$i$i>>>0)>=($1040>>>0);
      $1042 = $1041 & $not$$i$i;
      if ($1042) {
       $1043 = ((($1039)) + 12|0);
       HEAP32[$1043>>2] = $630;
       HEAP32[$1038>>2] = $630;
       $1044 = ((($630)) + 8|0);
       HEAP32[$1044>>2] = $1039;
       $1045 = ((($630)) + 12|0);
       HEAP32[$1045>>2] = $$0207$i$i;
       $1046 = ((($630)) + 24|0);
       HEAP32[$1046>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1048 = HEAP32[(33576)>>2]|0;
  $1049 = ($1048>>>0)>($$0197>>>0);
  if ($1049) {
   $1050 = (($1048) - ($$0197))|0;
   HEAP32[(33576)>>2] = $1050;
   $1051 = HEAP32[(33588)>>2]|0;
   $1052 = (($1051) + ($$0197)|0);
   HEAP32[(33588)>>2] = $1052;
   $1053 = $1050 | 1;
   $1054 = ((($1052)) + 4|0);
   HEAP32[$1054>>2] = $1053;
   $1055 = $$0197 | 3;
   $1056 = ((($1051)) + 4|0);
   HEAP32[$1056>>2] = $1055;
   $1057 = ((($1051)) + 8|0);
   $$0 = $1057;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1058 = (___errno_location()|0);
 HEAP32[$1058>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0212$i = 0, $$0212$in$i = 0, $$0383 = 0, $$0384 = 0, $$0396 = 0, $$0403 = 0, $$1 = 0, $$1382 = 0, $$1387 = 0, $$1390 = 0, $$1398 = 0, $$1402 = 0, $$2 = 0, $$3 = 0, $$3400 = 0, $$pre = 0, $$pre$phi443Z2D = 0, $$pre$phi445Z2D = 0, $$pre$phiZ2D = 0, $$pre442 = 0;
 var $$pre444 = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $cond421 = 0, $cond422 = 0, $not$ = 0, $not$405 = 0, $not$437 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(33580)>>2]|0;
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  _abort();
  // unreachable;
 }
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 3;
 $8 = ($7|0)==(1);
 if ($8) {
  _abort();
  // unreachable;
 }
 $9 = $6 & -8;
 $10 = (($2) + ($9)|0);
 $11 = $6 & 1;
 $12 = ($11|0)==(0);
 L10: do {
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   $14 = ($7|0)==(0);
   if ($14) {
    return;
   }
   $15 = (0 - ($13))|0;
   $16 = (($2) + ($15)|0);
   $17 = (($13) + ($9))|0;
   $18 = ($16>>>0)<($3>>>0);
   if ($18) {
    _abort();
    // unreachable;
   }
   $19 = HEAP32[(33584)>>2]|0;
   $20 = ($16|0)==($19|0);
   if ($20) {
    $104 = ((($10)) + 4|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = $105 & 3;
    $107 = ($106|0)==(3);
    if (!($107)) {
     $$1 = $16;$$1382 = $17;$112 = $16;
     break;
    }
    $108 = (($16) + ($17)|0);
    $109 = ((($16)) + 4|0);
    $110 = $17 | 1;
    $111 = $105 & -2;
    HEAP32[(33572)>>2] = $17;
    HEAP32[$104>>2] = $111;
    HEAP32[$109>>2] = $110;
    HEAP32[$108>>2] = $17;
    return;
   }
   $21 = $13 >>> 3;
   $22 = ($13>>>0)<(256);
   if ($22) {
    $23 = ((($16)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($16)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $21 << 1;
    $28 = (33604 + ($27<<2)|0);
    $29 = ($24|0)==($28|0);
    if (!($29)) {
     $30 = ($24>>>0)<($3>>>0);
     if ($30) {
      _abort();
      // unreachable;
     }
     $31 = ((($24)) + 12|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==($16|0);
     if (!($33)) {
      _abort();
      // unreachable;
     }
    }
    $34 = ($26|0)==($24|0);
    if ($34) {
     $35 = 1 << $21;
     $36 = $35 ^ -1;
     $37 = HEAP32[8391]|0;
     $38 = $37 & $36;
     HEAP32[8391] = $38;
     $$1 = $16;$$1382 = $17;$112 = $16;
     break;
    }
    $39 = ($26|0)==($28|0);
    if ($39) {
     $$pre444 = ((($26)) + 8|0);
     $$pre$phi445Z2D = $$pre444;
    } else {
     $40 = ($26>>>0)<($3>>>0);
     if ($40) {
      _abort();
      // unreachable;
     }
     $41 = ((($26)) + 8|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = ($42|0)==($16|0);
     if ($43) {
      $$pre$phi445Z2D = $41;
     } else {
      _abort();
      // unreachable;
     }
    }
    $44 = ((($24)) + 12|0);
    HEAP32[$44>>2] = $26;
    HEAP32[$$pre$phi445Z2D>>2] = $24;
    $$1 = $16;$$1382 = $17;$112 = $16;
    break;
   }
   $45 = ((($16)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($16)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==($16|0);
   do {
    if ($49) {
     $59 = ((($16)) + 16|0);
     $60 = ((($59)) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61|0)==(0|0);
     if ($62) {
      $63 = HEAP32[$59>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $$3 = 0;
       break;
      } else {
       $$1387 = $63;$$1390 = $59;
      }
     } else {
      $$1387 = $61;$$1390 = $60;
     }
     while(1) {
      $65 = ((($$1387)) + 20|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66|0)==(0|0);
      if (!($67)) {
       $$1387 = $66;$$1390 = $65;
       continue;
      }
      $68 = ((($$1387)) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break;
      } else {
       $$1387 = $69;$$1390 = $68;
      }
     }
     $71 = ($$1390>>>0)<($3>>>0);
     if ($71) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1390>>2] = 0;
      $$3 = $$1387;
      break;
     }
    } else {
     $50 = ((($16)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51>>>0)<($3>>>0);
     if ($52) {
      _abort();
      // unreachable;
     }
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==($16|0);
     if (!($55)) {
      _abort();
      // unreachable;
     }
     $56 = ((($48)) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==($16|0);
     if ($58) {
      HEAP32[$53>>2] = $48;
      HEAP32[$56>>2] = $51;
      $$3 = $48;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $72 = ($46|0)==(0|0);
   if ($72) {
    $$1 = $16;$$1382 = $17;$112 = $16;
   } else {
    $73 = ((($16)) + 28|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (33868 + ($74<<2)|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ($16|0)==($76|0);
    do {
     if ($77) {
      HEAP32[$75>>2] = $$3;
      $cond421 = ($$3|0)==(0|0);
      if ($cond421) {
       $78 = 1 << $74;
       $79 = $78 ^ -1;
       $80 = HEAP32[(33568)>>2]|0;
       $81 = $80 & $79;
       HEAP32[(33568)>>2] = $81;
       $$1 = $16;$$1382 = $17;$112 = $16;
       break L10;
      }
     } else {
      $82 = HEAP32[(33580)>>2]|0;
      $83 = ($46>>>0)<($82>>>0);
      if ($83) {
       _abort();
       // unreachable;
      } else {
       $84 = ((($46)) + 16|0);
       $85 = HEAP32[$84>>2]|0;
       $not$405 = ($85|0)!=($16|0);
       $$sink3 = $not$405&1;
       $86 = (((($46)) + 16|0) + ($$sink3<<2)|0);
       HEAP32[$86>>2] = $$3;
       $87 = ($$3|0)==(0|0);
       if ($87) {
        $$1 = $16;$$1382 = $17;$112 = $16;
        break L10;
       } else {
        break;
       }
      }
     }
    } while(0);
    $88 = HEAP32[(33580)>>2]|0;
    $89 = ($$3>>>0)<($88>>>0);
    if ($89) {
     _abort();
     // unreachable;
    }
    $90 = ((($$3)) + 24|0);
    HEAP32[$90>>2] = $46;
    $91 = ((($16)) + 16|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==(0|0);
    do {
     if (!($93)) {
      $94 = ($92>>>0)<($88>>>0);
      if ($94) {
       _abort();
       // unreachable;
      } else {
       $95 = ((($$3)) + 16|0);
       HEAP32[$95>>2] = $92;
       $96 = ((($92)) + 24|0);
       HEAP32[$96>>2] = $$3;
       break;
      }
     }
    } while(0);
    $97 = ((($91)) + 4|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = ($98|0)==(0|0);
    if ($99) {
     $$1 = $16;$$1382 = $17;$112 = $16;
    } else {
     $100 = HEAP32[(33580)>>2]|0;
     $101 = ($98>>>0)<($100>>>0);
     if ($101) {
      _abort();
      // unreachable;
     } else {
      $102 = ((($$3)) + 20|0);
      HEAP32[$102>>2] = $98;
      $103 = ((($98)) + 24|0);
      HEAP32[$103>>2] = $$3;
      $$1 = $16;$$1382 = $17;$112 = $16;
      break;
     }
    }
   }
  } else {
   $$1 = $2;$$1382 = $9;$112 = $2;
  }
 } while(0);
 $113 = ($112>>>0)<($10>>>0);
 if (!($113)) {
  _abort();
  // unreachable;
 }
 $114 = ((($10)) + 4|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = $115 & 1;
 $117 = ($116|0)==(0);
 if ($117) {
  _abort();
  // unreachable;
 }
 $118 = $115 & 2;
 $119 = ($118|0)==(0);
 if ($119) {
  $120 = HEAP32[(33588)>>2]|0;
  $121 = ($10|0)==($120|0);
  $122 = HEAP32[(33584)>>2]|0;
  if ($121) {
   $123 = HEAP32[(33576)>>2]|0;
   $124 = (($123) + ($$1382))|0;
   HEAP32[(33576)>>2] = $124;
   HEAP32[(33588)>>2] = $$1;
   $125 = $124 | 1;
   $126 = ((($$1)) + 4|0);
   HEAP32[$126>>2] = $125;
   $127 = ($$1|0)==($122|0);
   if (!($127)) {
    return;
   }
   HEAP32[(33584)>>2] = 0;
   HEAP32[(33572)>>2] = 0;
   return;
  }
  $128 = ($10|0)==($122|0);
  if ($128) {
   $129 = HEAP32[(33572)>>2]|0;
   $130 = (($129) + ($$1382))|0;
   HEAP32[(33572)>>2] = $130;
   HEAP32[(33584)>>2] = $112;
   $131 = $130 | 1;
   $132 = ((($$1)) + 4|0);
   HEAP32[$132>>2] = $131;
   $133 = (($112) + ($130)|0);
   HEAP32[$133>>2] = $130;
   return;
  }
  $134 = $115 & -8;
  $135 = (($134) + ($$1382))|0;
  $136 = $115 >>> 3;
  $137 = ($115>>>0)<(256);
  L108: do {
   if ($137) {
    $138 = ((($10)) + 8|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($10)) + 12|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = $136 << 1;
    $143 = (33604 + ($142<<2)|0);
    $144 = ($139|0)==($143|0);
    if (!($144)) {
     $145 = HEAP32[(33580)>>2]|0;
     $146 = ($139>>>0)<($145>>>0);
     if ($146) {
      _abort();
      // unreachable;
     }
     $147 = ((($139)) + 12|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($148|0)==($10|0);
     if (!($149)) {
      _abort();
      // unreachable;
     }
    }
    $150 = ($141|0)==($139|0);
    if ($150) {
     $151 = 1 << $136;
     $152 = $151 ^ -1;
     $153 = HEAP32[8391]|0;
     $154 = $153 & $152;
     HEAP32[8391] = $154;
     break;
    }
    $155 = ($141|0)==($143|0);
    if ($155) {
     $$pre442 = ((($141)) + 8|0);
     $$pre$phi443Z2D = $$pre442;
    } else {
     $156 = HEAP32[(33580)>>2]|0;
     $157 = ($141>>>0)<($156>>>0);
     if ($157) {
      _abort();
      // unreachable;
     }
     $158 = ((($141)) + 8|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==($10|0);
     if ($160) {
      $$pre$phi443Z2D = $158;
     } else {
      _abort();
      // unreachable;
     }
    }
    $161 = ((($139)) + 12|0);
    HEAP32[$161>>2] = $141;
    HEAP32[$$pre$phi443Z2D>>2] = $139;
   } else {
    $162 = ((($10)) + 24|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ((($10)) + 12|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = ($165|0)==($10|0);
    do {
     if ($166) {
      $177 = ((($10)) + 16|0);
      $178 = ((($177)) + 4|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ($179|0)==(0|0);
      if ($180) {
       $181 = HEAP32[$177>>2]|0;
       $182 = ($181|0)==(0|0);
       if ($182) {
        $$3400 = 0;
        break;
       } else {
        $$1398 = $181;$$1402 = $177;
       }
      } else {
       $$1398 = $179;$$1402 = $178;
      }
      while(1) {
       $183 = ((($$1398)) + 20|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($184|0)==(0|0);
       if (!($185)) {
        $$1398 = $184;$$1402 = $183;
        continue;
       }
       $186 = ((($$1398)) + 16|0);
       $187 = HEAP32[$186>>2]|0;
       $188 = ($187|0)==(0|0);
       if ($188) {
        break;
       } else {
        $$1398 = $187;$$1402 = $186;
       }
      }
      $189 = HEAP32[(33580)>>2]|0;
      $190 = ($$1402>>>0)<($189>>>0);
      if ($190) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1402>>2] = 0;
       $$3400 = $$1398;
       break;
      }
     } else {
      $167 = ((($10)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = HEAP32[(33580)>>2]|0;
      $170 = ($168>>>0)<($169>>>0);
      if ($170) {
       _abort();
       // unreachable;
      }
      $171 = ((($168)) + 12|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = ($172|0)==($10|0);
      if (!($173)) {
       _abort();
       // unreachable;
      }
      $174 = ((($165)) + 8|0);
      $175 = HEAP32[$174>>2]|0;
      $176 = ($175|0)==($10|0);
      if ($176) {
       HEAP32[$171>>2] = $165;
       HEAP32[$174>>2] = $168;
       $$3400 = $165;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $191 = ($163|0)==(0|0);
    if (!($191)) {
     $192 = ((($10)) + 28|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = (33868 + ($193<<2)|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = ($10|0)==($195|0);
     do {
      if ($196) {
       HEAP32[$194>>2] = $$3400;
       $cond422 = ($$3400|0)==(0|0);
       if ($cond422) {
        $197 = 1 << $193;
        $198 = $197 ^ -1;
        $199 = HEAP32[(33568)>>2]|0;
        $200 = $199 & $198;
        HEAP32[(33568)>>2] = $200;
        break L108;
       }
      } else {
       $201 = HEAP32[(33580)>>2]|0;
       $202 = ($163>>>0)<($201>>>0);
       if ($202) {
        _abort();
        // unreachable;
       } else {
        $203 = ((($163)) + 16|0);
        $204 = HEAP32[$203>>2]|0;
        $not$ = ($204|0)!=($10|0);
        $$sink5 = $not$&1;
        $205 = (((($163)) + 16|0) + ($$sink5<<2)|0);
        HEAP32[$205>>2] = $$3400;
        $206 = ($$3400|0)==(0|0);
        if ($206) {
         break L108;
        } else {
         break;
        }
       }
      }
     } while(0);
     $207 = HEAP32[(33580)>>2]|0;
     $208 = ($$3400>>>0)<($207>>>0);
     if ($208) {
      _abort();
      // unreachable;
     }
     $209 = ((($$3400)) + 24|0);
     HEAP32[$209>>2] = $163;
     $210 = ((($10)) + 16|0);
     $211 = HEAP32[$210>>2]|0;
     $212 = ($211|0)==(0|0);
     do {
      if (!($212)) {
       $213 = ($211>>>0)<($207>>>0);
       if ($213) {
        _abort();
        // unreachable;
       } else {
        $214 = ((($$3400)) + 16|0);
        HEAP32[$214>>2] = $211;
        $215 = ((($211)) + 24|0);
        HEAP32[$215>>2] = $$3400;
        break;
       }
      }
     } while(0);
     $216 = ((($210)) + 4|0);
     $217 = HEAP32[$216>>2]|0;
     $218 = ($217|0)==(0|0);
     if (!($218)) {
      $219 = HEAP32[(33580)>>2]|0;
      $220 = ($217>>>0)<($219>>>0);
      if ($220) {
       _abort();
       // unreachable;
      } else {
       $221 = ((($$3400)) + 20|0);
       HEAP32[$221>>2] = $217;
       $222 = ((($217)) + 24|0);
       HEAP32[$222>>2] = $$3400;
       break;
      }
     }
    }
   }
  } while(0);
  $223 = $135 | 1;
  $224 = ((($$1)) + 4|0);
  HEAP32[$224>>2] = $223;
  $225 = (($112) + ($135)|0);
  HEAP32[$225>>2] = $135;
  $226 = HEAP32[(33584)>>2]|0;
  $227 = ($$1|0)==($226|0);
  if ($227) {
   HEAP32[(33572)>>2] = $135;
   return;
  } else {
   $$2 = $135;
  }
 } else {
  $228 = $115 & -2;
  HEAP32[$114>>2] = $228;
  $229 = $$1382 | 1;
  $230 = ((($$1)) + 4|0);
  HEAP32[$230>>2] = $229;
  $231 = (($112) + ($$1382)|0);
  HEAP32[$231>>2] = $$1382;
  $$2 = $$1382;
 }
 $232 = $$2 >>> 3;
 $233 = ($$2>>>0)<(256);
 if ($233) {
  $234 = $232 << 1;
  $235 = (33604 + ($234<<2)|0);
  $236 = HEAP32[8391]|0;
  $237 = 1 << $232;
  $238 = $236 & $237;
  $239 = ($238|0)==(0);
  if ($239) {
   $240 = $236 | $237;
   HEAP32[8391] = $240;
   $$pre = ((($235)) + 8|0);
   $$0403 = $235;$$pre$phiZ2D = $$pre;
  } else {
   $241 = ((($235)) + 8|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = HEAP32[(33580)>>2]|0;
   $244 = ($242>>>0)<($243>>>0);
   if ($244) {
    _abort();
    // unreachable;
   } else {
    $$0403 = $242;$$pre$phiZ2D = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $245 = ((($$0403)) + 12|0);
  HEAP32[$245>>2] = $$1;
  $246 = ((($$1)) + 8|0);
  HEAP32[$246>>2] = $$0403;
  $247 = ((($$1)) + 12|0);
  HEAP32[$247>>2] = $235;
  return;
 }
 $248 = $$2 >>> 8;
 $249 = ($248|0)==(0);
 if ($249) {
  $$0396 = 0;
 } else {
  $250 = ($$2>>>0)>(16777215);
  if ($250) {
   $$0396 = 31;
  } else {
   $251 = (($248) + 1048320)|0;
   $252 = $251 >>> 16;
   $253 = $252 & 8;
   $254 = $248 << $253;
   $255 = (($254) + 520192)|0;
   $256 = $255 >>> 16;
   $257 = $256 & 4;
   $258 = $257 | $253;
   $259 = $254 << $257;
   $260 = (($259) + 245760)|0;
   $261 = $260 >>> 16;
   $262 = $261 & 2;
   $263 = $258 | $262;
   $264 = (14 - ($263))|0;
   $265 = $259 << $262;
   $266 = $265 >>> 15;
   $267 = (($264) + ($266))|0;
   $268 = $267 << 1;
   $269 = (($267) + 7)|0;
   $270 = $$2 >>> $269;
   $271 = $270 & 1;
   $272 = $271 | $268;
   $$0396 = $272;
  }
 }
 $273 = (33868 + ($$0396<<2)|0);
 $274 = ((($$1)) + 28|0);
 HEAP32[$274>>2] = $$0396;
 $275 = ((($$1)) + 16|0);
 $276 = ((($$1)) + 20|0);
 HEAP32[$276>>2] = 0;
 HEAP32[$275>>2] = 0;
 $277 = HEAP32[(33568)>>2]|0;
 $278 = 1 << $$0396;
 $279 = $277 & $278;
 $280 = ($279|0)==(0);
 do {
  if ($280) {
   $281 = $277 | $278;
   HEAP32[(33568)>>2] = $281;
   HEAP32[$273>>2] = $$1;
   $282 = ((($$1)) + 24|0);
   HEAP32[$282>>2] = $273;
   $283 = ((($$1)) + 12|0);
   HEAP32[$283>>2] = $$1;
   $284 = ((($$1)) + 8|0);
   HEAP32[$284>>2] = $$1;
  } else {
   $285 = HEAP32[$273>>2]|0;
   $286 = ($$0396|0)==(31);
   $287 = $$0396 >>> 1;
   $288 = (25 - ($287))|0;
   $289 = $286 ? 0 : $288;
   $290 = $$2 << $289;
   $$0383 = $290;$$0384 = $285;
   while(1) {
    $291 = ((($$0384)) + 4|0);
    $292 = HEAP32[$291>>2]|0;
    $293 = $292 & -8;
    $294 = ($293|0)==($$2|0);
    if ($294) {
     label = 124;
     break;
    }
    $295 = $$0383 >>> 31;
    $296 = (((($$0384)) + 16|0) + ($295<<2)|0);
    $297 = $$0383 << 1;
    $298 = HEAP32[$296>>2]|0;
    $299 = ($298|0)==(0|0);
    if ($299) {
     label = 121;
     break;
    } else {
     $$0383 = $297;$$0384 = $298;
    }
   }
   if ((label|0) == 121) {
    $300 = HEAP32[(33580)>>2]|0;
    $301 = ($296>>>0)<($300>>>0);
    if ($301) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$296>>2] = $$1;
     $302 = ((($$1)) + 24|0);
     HEAP32[$302>>2] = $$0384;
     $303 = ((($$1)) + 12|0);
     HEAP32[$303>>2] = $$1;
     $304 = ((($$1)) + 8|0);
     HEAP32[$304>>2] = $$1;
     break;
    }
   }
   else if ((label|0) == 124) {
    $305 = ((($$0384)) + 8|0);
    $306 = HEAP32[$305>>2]|0;
    $307 = HEAP32[(33580)>>2]|0;
    $308 = ($306>>>0)>=($307>>>0);
    $not$437 = ($$0384>>>0)>=($307>>>0);
    $309 = $308 & $not$437;
    if ($309) {
     $310 = ((($306)) + 12|0);
     HEAP32[$310>>2] = $$1;
     HEAP32[$305>>2] = $$1;
     $311 = ((($$1)) + 8|0);
     HEAP32[$311>>2] = $306;
     $312 = ((($$1)) + 12|0);
     HEAP32[$312>>2] = $$0384;
     $313 = ((($$1)) + 24|0);
     HEAP32[$313>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $314 = HEAP32[(33596)>>2]|0;
 $315 = (($314) + -1)|0;
 HEAP32[(33596)>>2] = $315;
 $316 = ($315|0)==(0);
 if ($316) {
  $$0212$in$i = (34020);
 } else {
  return;
 }
 while(1) {
  $$0212$i = HEAP32[$$0212$in$i>>2]|0;
  $317 = ($$0212$i|0)==(0|0);
  $318 = ((($$0212$i)) + 8|0);
  if ($317) {
   break;
  } else {
   $$0212$in$i = $318;
  }
 }
 HEAP32[(33596)>>2] = -1;
 return;
}
function __Znwj($0) {
 $0 = $0|0;
 var $$ = 0, $$lcssa = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0);
 $$ = $1 ? 1 : $0;
 while(1) {
  $2 = (_malloc($$)|0);
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $$lcssa = $2;
   break;
  }
  $4 = (__ZSt15get_new_handlerv()|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$lcssa = 0;
   break;
  }
  FUNCTION_TABLE_v[$4 & 0]();
 }
 return ($$lcssa|0);
}
function __ZdlPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($0);
 return;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $3 = sp;
 $4 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,0)|0);
 if ($4) {
  $$2 = 1;
 } else {
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$2 = 0;
  } else {
   $6 = (___dynamic_cast($1,7552,7536,0)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = ((($3)) + 4|0);
    dest=$8; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$3>>2] = $6;
    $9 = ((($3)) + 8|0);
    HEAP32[$9>>2] = $0;
    $10 = ((($3)) + 12|0);
    HEAP32[$10>>2] = -1;
    $11 = ((($3)) + 48|0);
    HEAP32[$11>>2] = 1;
    $12 = HEAP32[$6>>2]|0;
    $13 = ((($12)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = HEAP32[$2>>2]|0;
    FUNCTION_TABLE_viiii[$14 & 31]($6,$3,$15,1);
    $16 = ((($3)) + 24|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(1);
    if ($18) {
     $19 = ((($3)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     HEAP32[$2>>2] = $20;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$2 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   if ($9) {
    $10 = ((($1)) + 16|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==($2|0);
    $13 = ((($1)) + 32|0);
    if (!($12)) {
     $14 = ((($1)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($2|0);
     if (!($16)) {
      HEAP32[$13>>2] = $3;
      HEAP32[$14>>2] = $2;
      $18 = ((($1)) + 40|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($19) + 1)|0;
      HEAP32[$18>>2] = $20;
      $21 = ((($1)) + 36|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(1);
      if ($23) {
       $24 = ((($1)) + 24|0);
       $25 = HEAP32[$24>>2]|0;
       $26 = ($25|0)==(2);
       if ($26) {
        $27 = ((($1)) + 54|0);
        HEAP8[$27>>0] = 1;
       }
      }
      $28 = ((($1)) + 44|0);
      HEAP32[$28>>2] = 4;
      break;
     }
    }
    $17 = ($3|0)==(1);
    if ($17) {
     HEAP32[$13>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 }
 return;
}
function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==($1|0);
 return ($3|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 $7 = ((($1)) + 36|0);
 $8 = ((($1)) + 24|0);
 do {
  if ($6) {
   HEAP32[$4>>2] = $2;
   HEAP32[$8>>2] = $3;
   HEAP32[$7>>2] = 1;
  } else {
   $9 = ($5|0)==($2|0);
   if (!($9)) {
    $12 = HEAP32[$7>>2]|0;
    $13 = (($12) + 1)|0;
    HEAP32[$7>>2] = $13;
    HEAP32[$8>>2] = 2;
    $14 = ((($1)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $10 = HEAP32[$8>>2]|0;
   $11 = ($10|0)==(2);
   if ($11) {
    HEAP32[$8>>2] = $3;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==($2|0);
 if ($6) {
  $7 = ((($1)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(1);
  if (!($9)) {
   HEAP32[$7>>2] = $3;
  }
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 53|0);
 HEAP8[$5>>0] = 1;
 $6 = ((($1)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($3|0);
 do {
  if ($8) {
   $9 = ((($1)) + 52|0);
   HEAP8[$9>>0] = 1;
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(0|0);
   $13 = ((($1)) + 54|0);
   $14 = ((($1)) + 48|0);
   $15 = ((($1)) + 24|0);
   $16 = ((($1)) + 36|0);
   if ($12) {
    HEAP32[$10>>2] = $2;
    HEAP32[$15>>2] = $4;
    HEAP32[$16>>2] = 1;
    $17 = HEAP32[$14>>2]|0;
    $18 = ($17|0)==(1);
    $19 = ($4|0)==(1);
    $or$cond = $18 & $19;
    if (!($or$cond)) {
     break;
    }
    HEAP8[$13>>0] = 1;
    break;
   }
   $20 = ($11|0)==($2|0);
   if (!($20)) {
    $27 = HEAP32[$16>>2]|0;
    $28 = (($27) + 1)|0;
    HEAP32[$16>>2] = $28;
    HEAP8[$13>>0] = 1;
    break;
   }
   $21 = HEAP32[$15>>2]|0;
   $22 = ($21|0)==(2);
   if ($22) {
    HEAP32[$15>>2] = $4;
    $25 = $4;
   } else {
    $25 = $21;
   }
   $23 = HEAP32[$14>>2]|0;
   $24 = ($23|0)==(1);
   $26 = ($25|0)==(1);
   $or$cond22 = $24 & $26;
   if ($or$cond22) {
    HEAP8[$13>>0] = 1;
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$33 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond28 = 0, $or$cond30 = 0, $or$cond32 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $4 = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + -8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($0) + ($7)|0);
 $9 = ((($5)) + -4|0);
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $2;
 $11 = ((($4)) + 4|0);
 HEAP32[$11>>2] = $0;
 $12 = ((($4)) + 8|0);
 HEAP32[$12>>2] = $1;
 $13 = ((($4)) + 12|0);
 HEAP32[$13>>2] = $3;
 $14 = ((($4)) + 16|0);
 $15 = ((($4)) + 20|0);
 $16 = ((($4)) + 24|0);
 $17 = ((($4)) + 28|0);
 $18 = ((($4)) + 32|0);
 $19 = ((($4)) + 40|0);
 dest=$14; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$14+36>>1]=0|0;HEAP8[$14+38>>0]=0|0;
 $20 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($10,$2,0)|0);
 L1: do {
  if ($20) {
   $21 = ((($4)) + 48|0);
   HEAP32[$21>>2] = 1;
   $22 = HEAP32[$10>>2]|0;
   $23 = ((($22)) + 20|0);
   $24 = HEAP32[$23>>2]|0;
   FUNCTION_TABLE_viiiiii[$24 & 31]($10,$4,$8,$8,1,0);
   $25 = HEAP32[$16>>2]|0;
   $26 = ($25|0)==(1);
   $$ = $26 ? $8 : 0;
   $$0 = $$;
  } else {
   $27 = ((($4)) + 36|0);
   $28 = HEAP32[$10>>2]|0;
   $29 = ((($28)) + 24|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_viiiii[$30 & 15]($10,$4,$8,1,0);
   $31 = HEAP32[$27>>2]|0;
   switch ($31|0) {
   case 0:  {
    $32 = HEAP32[$19>>2]|0;
    $33 = ($32|0)==(1);
    $34 = HEAP32[$17>>2]|0;
    $35 = ($34|0)==(1);
    $or$cond = $33 & $35;
    $36 = HEAP32[$18>>2]|0;
    $37 = ($36|0)==(1);
    $or$cond28 = $or$cond & $37;
    $38 = HEAP32[$15>>2]|0;
    $$33 = $or$cond28 ? $38 : 0;
    $$0 = $$33;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $$0 = 0;
    break L1;
   }
   }
   $39 = HEAP32[$16>>2]|0;
   $40 = ($39|0)==(1);
   if (!($40)) {
    $41 = HEAP32[$19>>2]|0;
    $42 = ($41|0)==(0);
    $43 = HEAP32[$17>>2]|0;
    $44 = ($43|0)==(1);
    $or$cond30 = $42 & $44;
    $45 = HEAP32[$18>>2]|0;
    $46 = ($45|0)==(1);
    $or$cond32 = $or$cond30 & $46;
    if (!($or$cond32)) {
     $$0 = 0;
     break;
    }
   }
   $47 = HEAP32[$14>>2]|0;
   $$0 = $47;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_viiiiii[$13 & 31]($10,$1,$2,$3,$4,$5);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$037$off038 = 0, $$037$off039 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   $10 = ((($0)) + 8|0);
   if (!($9)) {
    $41 = HEAP32[$10>>2]|0;
    $42 = HEAP32[$41>>2]|0;
    $43 = ((($42)) + 24|0);
    $44 = HEAP32[$43>>2]|0;
    FUNCTION_TABLE_viiiii[$44 & 15]($41,$1,$2,$3,$4);
    break;
   }
   $11 = ((($1)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($2|0);
   $14 = ((($1)) + 32|0);
   if (!($13)) {
    $15 = ((($1)) + 20|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==($2|0);
    if (!($17)) {
     HEAP32[$14>>2] = $3;
     $19 = ((($1)) + 44|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(4);
     if ($21) {
      break;
     }
     $22 = ((($1)) + 52|0);
     HEAP8[$22>>0] = 0;
     $23 = ((($1)) + 53|0);
     HEAP8[$23>>0] = 0;
     $24 = HEAP32[$10>>2]|0;
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($25)) + 20|0);
     $27 = HEAP32[$26>>2]|0;
     FUNCTION_TABLE_viiiiii[$27 & 31]($24,$1,$2,$2,1,$4);
     $28 = HEAP8[$23>>0]|0;
     $29 = ($28<<24>>24)==(0);
     if ($29) {
      $$037$off038 = 4;
      label = 11;
     } else {
      $30 = HEAP8[$22>>0]|0;
      $not$ = ($30<<24>>24)==(0);
      if ($not$) {
       $$037$off038 = 3;
       label = 11;
      } else {
       $$037$off039 = 3;
      }
     }
     if ((label|0) == 11) {
      HEAP32[$15>>2] = $2;
      $31 = ((($1)) + 40|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + 1)|0;
      HEAP32[$31>>2] = $33;
      $34 = ((($1)) + 36|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ($35|0)==(1);
      if ($36) {
       $37 = ((($1)) + 24|0);
       $38 = HEAP32[$37>>2]|0;
       $39 = ($38|0)==(2);
       if ($39) {
        $40 = ((($1)) + 54|0);
        HEAP8[$40>>0] = 1;
        $$037$off039 = $$037$off038;
       } else {
        $$037$off039 = $$037$off038;
       }
      } else {
       $$037$off039 = $$037$off038;
      }
     }
     HEAP32[$19>>2] = $$037$off039;
     break;
    }
   }
   $18 = ($3|0)==(1);
   if ($18) {
    HEAP32[$14>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 } else {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 28|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viiii[$11 & 31]($8,$1,$2,$3);
 }
 return;
}
function __ZNSt9type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[8515]|0;HEAP32[8515] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}

  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&1](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&15](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&15](a1|0);
}


function dynCall_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  return FUNCTION_TABLE_iiiiiiiiii[index&1](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0)|0;
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&63](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&3](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&7](a1|0,a2|0,a3|0);
}


function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  FUNCTION_TABLE_viiiiiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&0]();
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&31](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; abort(0);return 0;
}
function b1(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(1);return 0;
}
function b2(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(2);
}
function b3(p0) {
 p0 = p0|0; abort(3);
}
function b4(p0,p1,p2,p3,p4,p5,p6,p7,p8) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; abort(4);return 0;
}
function b5(p0,p1) {
 p0 = p0|0;p1 = p1|0; abort(5);
}
function b6(p0) {
 p0 = p0|0; abort(6);return 0;
}
function b7(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(7);
}
function b8(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(8);
}
function b9() {
 ; abort(9);
}
function b10(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(10);return 0;
}
function b11(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(11);
}
function b12(p0,p1) {
 p0 = p0|0;p1 = p1|0; abort(12);return 0;
}
function b13(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(13);return 0;
}
function b14(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(14);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZN7WelsDec12CWelsDecoder11DecodeFrameEPKhiPPhPiRiS6_];
var FUNCTION_TABLE_iiii = [b1,__ZN7WelsDec12CWelsDecoder9SetOptionE14DECODER_OPTIONPv,__ZN7WelsDec12CWelsDecoder9GetOptionE14DECODER_OPTIONPv,___stdout_write,___stdio_seek,___stdio_write,_sn_write,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZN7WelsDec23WelsDecodeMbCabacISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj,__ZN7WelsDec23WelsDecodeMbCabacPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj,__ZN7WelsDec23WelsDecodeMbCavlcISliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj,__ZN7WelsDec23WelsDecodeMbCavlcPSliceEPNS_21TagWelsDecoderContextEPNS_10TagNalUnitERj,b1,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__Z17DeblockLumaLt4V_cPhiiiPa,__Z17DeblockLumaLt4H_cPhiiiPa,__Z19DeblockChromaEq4V_cPhS_iii,__Z19DeblockChromaEq4H_cPhS_iii,__Z20DeblockChromaLt4V2_cPhiiiPa,__Z20DeblockChromaLt4H2_cPhiiiPa,b2,b2,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_vi = [b3,__ZN10WelsCommon12CMemoryAlignD2Ev,__ZN10WelsCommon12CMemoryAlignD0Ev,__ZN7WelsDec12CWelsDecoderD2Ev,__ZN7WelsDec12CWelsDecoderD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__Z18WelsNonZeroCount_cPa,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iiiiiiiiii = [b4,__ZN7WelsDec12CWelsDecoder13DecodeFrameExEPKhiPhiRiS4_S4_S4_];
var FUNCTION_TABLE_vii = [b5,__ZN7WelsDec33WelsMapNxNNeighToSampleConstrain1EPNS_16TagNeighborAvailEPi,__ZN7WelsDec29WelsMapNxNNeighToSampleNormalEPNS_16TagNeighborAvailEPi,__ZN7WelsDec35WelsMap16x16NeighToSampleConstrain1EPNS_16TagNeighborAvailEPh,__ZN7WelsDec31WelsMap16x16NeighToSampleNormalEPNS_16TagNeighborAvailEPh,__ZN7WelsDec21WelsI16x16LumaPredV_cEPhi,__ZN7WelsDec21WelsI16x16LumaPredH_cEPhi,__ZN7WelsDec22WelsI16x16LumaPredDc_cEPhi,__ZN7WelsDec25WelsI16x16LumaPredPlane_cEPhi,__ZN7WelsDec26WelsI16x16LumaPredDcLeft_cEPhi,__ZN7WelsDec25WelsI16x16LumaPredDcTop_cEPhi,__ZN7WelsDec24WelsI16x16LumaPredDcNA_cEPhi,__ZN7WelsDec19WelsI4x4LumaPredV_cEPhi,__ZN7WelsDec19WelsI4x4LumaPredH_cEPhi,__ZN7WelsDec20WelsI4x4LumaPredDc_cEPhi,__ZN7WelsDec24WelsI4x4LumaPredDcLeft_cEPhi,__ZN7WelsDec23WelsI4x4LumaPredDcTop_cEPhi,__ZN7WelsDec22WelsI4x4LumaPredDcNA_cEPhi,__ZN7WelsDec21WelsI4x4LumaPredDDL_cEPhi,__ZN7WelsDec24WelsI4x4LumaPredDDLTop_cEPhi,__ZN7WelsDec21WelsI4x4LumaPredDDR_cEPhi,__ZN7WelsDec20WelsI4x4LumaPredVL_cEPhi,__ZN7WelsDec23WelsI4x4LumaPredVLTop_cEPhi,__ZN7WelsDec20WelsI4x4LumaPredVR_cEPhi,__ZN7WelsDec20WelsI4x4LumaPredHU_cEPhi,__ZN7WelsDec20WelsI4x4LumaPredHD_cEPhi,__ZN7WelsDec19WelsIChromaPredDc_cEPhi,__ZN7WelsDec18WelsIChromaPredH_cEPhi,__ZN7WelsDec18WelsIChromaPredV_cEPhi
,__ZN7WelsDec22WelsIChromaPredPlane_cEPhi,__ZN7WelsDec23WelsIChromaPredDcLeft_cEPhi,__ZN7WelsDec22WelsIChromaPredDcTop_cEPhi,__ZN7WelsDec21WelsIChromaPredDcNA_cEPhi,__ZN7WelsDec20WelsBlockZero16x16_cEPsi,__ZN7WelsDec18WelsBlockZero8x8_cEPsi,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_ii = [b6,__ZN7WelsDec12CWelsDecoder12UninitializeEv,___stdio_close,b6];
var FUNCTION_TABLE_viii = [b7,_openh264_log,__ZN7WelsDec16WelsDeblockingMbEPNS_10TagDqLayerEPNS_19tagDeblockingFilterEi,__ZN7WelsDec16IdctResAddPred_cEPhiPs,__ZN7WelsDec19IdctResAddPred8x8_cEPhiPs,__ZL15welsStderrTracePviPKc,b7,b7];
var FUNCTION_TABLE_viiiiiiii = [b8,__ZN10WelsCommonL10PixelAvg_cEPhiPKhiS2_iii,__ZN10WelsCommon10McChroma_cEPKhiPhissii,__ZN10WelsCommon8McLuma_cEPKhiPhissii];
var FUNCTION_TABLE_v = [b9];
var FUNCTION_TABLE_iiiii = [b10,__ZN7WelsDec12CWelsDecoder12DecodeParserEPKhiP15TagParserBsInfo];
var FUNCTION_TABLE_viiiiii = [b11,__ZN10WelsCommonL8McCopy_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer01_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer02_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer03_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer10_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer11_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer12_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer13_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer20_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer21_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer22_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer23_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer30_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer31_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer32_cEPKhiPhiii,__ZN10WelsCommonL12McHorVer33_cEPKhiPhiii,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__Z19DeblockChromaLt4V_cPhS_iiiPa,__Z19DeblockChromaLt4H_cPhS_iiiPa,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_iii = [b12,__ZN7WelsDec12CWelsDecoder10InitializeEPK19TagSVCDecodingParam];
var FUNCTION_TABLE_iiiiii = [b13,__ZN7WelsDec12CWelsDecoder18DecodeFrameNoDelayEPKhiPPhP13TagBufferInfo,__ZN7WelsDec12CWelsDecoder12DecodeFrame2EPKhiPPhP13TagBufferInfo,b13];
var FUNCTION_TABLE_viiii = [b14,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZL19ExpandPictureLuma_cPhiii,__ZL21ExpandPictureChroma_cPhiii,__Z15WelsCopy16x16_cPhiS_i,__Z13WelsCopy8x8_cPhiS_i,__ZN7WelsDec31WelsFillCacheConstrain1IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE,__ZN7WelsDec31WelsFillCacheConstrain0IntraNxNEPNS_16TagNeighborAvailEPhPaPNS_10TagDqLayerE,__ZN7WelsDec19WelsI8x8LumaPredV_cEPhibb,__ZN7WelsDec19WelsI8x8LumaPredH_cEPhibb,__ZN7WelsDec20WelsI8x8LumaPredDc_cEPhibb,__ZN7WelsDec24WelsI8x8LumaPredDcLeft_cEPhibb,__ZN7WelsDec23WelsI8x8LumaPredDcTop_cEPhibb,__ZN7WelsDec22WelsI8x8LumaPredDcNA_cEPhibb,__ZN7WelsDec21WelsI8x8LumaPredDDL_cEPhibb,__ZN7WelsDec24WelsI8x8LumaPredDDLTop_cEPhibb,__ZN7WelsDec21WelsI8x8LumaPredDDR_cEPhibb,__ZN7WelsDec20WelsI8x8LumaPredVL_cEPhibb,__ZN7WelsDec23WelsI8x8LumaPredVLTop_cEPhibb,__ZN7WelsDec20WelsI8x8LumaPredVR_cEPhibb,__ZN7WelsDec20WelsI8x8LumaPredHU_cEPhibb,__ZN7WelsDec20WelsI8x8LumaPredHD_cEPhibb,__Z17DeblockLumaEq4V_cPhiii,__Z17DeblockLumaEq4H_cPhiii,__Z20DeblockChromaEq4V2_cPhiii,__Z20DeblockChromaEq4H2_cPhiii,__ZN14welsCodecTrace16StaticCodecTraceEPviPKcPi,b14
,b14,b14,b14];

  return { _strlen: _strlen, _memset: _memset, _decode_h264buffer: _decode_h264buffer, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _llvm_cttz_i32: _llvm_cttz_i32, _sbrk: _sbrk, _memcpy: _memcpy, _llvm_bswap_i32: _llvm_bswap_i32, ___muldi3: ___muldi3, ___uremdi3: ___uremdi3, _i64Subtract: _i64Subtract, ___udivmoddi4: ___udivmoddi4, _i64Add: _i64Add, _emscripten_get_global_libc: _emscripten_get_global_libc, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, ___muldsi3: ___muldsi3, _open_decoder: _open_decoder, _free: _free, _memmove: _memmove, _malloc: _malloc, _close_decoder: _close_decoder, _decode_nal: _decode_nal, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setTempRet0: setTempRet0, getTempRet0: getTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_iiiiiiiiii: dynCall_iiiiiiiiii, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_v: dynCall_v, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var _strlen = Module["_strlen"] = asm["_strlen"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _decode_h264buffer = Module["_decode_h264buffer"] = asm["_decode_h264buffer"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var _open_decoder = Module["_open_decoder"] = asm["_open_decoder"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _close_decoder = Module["_close_decoder"] = asm["_close_decoder"];
var _decode_nal = Module["_decode_nal"] = asm["_decode_nal"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];

Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;





function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



function frame_callback(a,b,c,width,height,stride1,stride2)
{
    var data = new Uint8Array(width*height*3/2);
    var x,y;
    for (y=0;y<height;y++) {
        var ar = Module.HEAP8.subarray(a + y*stride1, a+y*stride1+width);
        data.set(ar, y * width);
    }
    var cbofs=width*height;
    for (y=0;y<height/2;y++) {
        var ar = Module.HEAP8.subarray(b + y*stride2, b+y*stride2+width/2);
        data.set(ar, cbofs + y * width/2);
    }

    var crofs=cbofs + width*height/4;
    for (y=0;y<height/2;y++) {
        var ar = Module.HEAP8.subarray(c + y*stride2, c+y*stride2+width/2);
        data.set(ar, crofs + y * width/2);
    }

    postMessage({'data':data});
}


(function(root){
        console.log("ready to load");
    
        var open_decoder = Module.cwrap('open_decoder', 'number', null);
        var close_decoder = Module.cwrap('close_decoder', null, ['number']);
        var decode_h264buffer = Module.cwrap('decode_h264buffer', 'number', ['number','array','number']);
        var decode_h264nal = Module.cwrap('decode_nal', 'number', ['number','array','number']);

        var h = open_decoder();

        root.addEventListener('message', function(e) {
            var message = e.data;
            switch(message.type) {
                case 'close':
                    close_decoder(h);
                    break;
                case 'frame':
                    if (message.data == null) {
                        decode_h264nal(h, 0, 0);
                    } else {
                        var byteArray = new Uint8Array(message.data);
                        //decode_h264nal(h, byteArray, byteArray.length);
						//decode_h264buffer(h, message.data, message.data.length);
						decode_h264buffer(h, byteArray, byteArray.length);
                    }
            };
        });
}(self));
